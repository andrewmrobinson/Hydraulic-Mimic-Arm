ARM GAS  C:\Users\kevan\AppData\Local\Temp\ccXb7CWJ.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"ADC_SAR_1.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.ADC_SAR_1_CalcGain,"ax",%progbits
  20              		.align	2
  21              		.thumb
  22              		.thumb_func
  23              		.type	ADC_SAR_1_CalcGain, %function
  24              	ADC_SAR_1_CalcGain:
  25              	.LFB12:
  26              		.file 1 "Generated_Source\\PSoC5\\ADC_SAR_1.c"
   1:Generated_Source\PSoC5/ADC_SAR_1.c **** /*******************************************************************************
   2:Generated_Source\PSoC5/ADC_SAR_1.c **** * File Name: ADC_SAR_1.c
   3:Generated_Source\PSoC5/ADC_SAR_1.c **** * Version 3.10
   4:Generated_Source\PSoC5/ADC_SAR_1.c **** *
   5:Generated_Source\PSoC5/ADC_SAR_1.c **** * Description:
   6:Generated_Source\PSoC5/ADC_SAR_1.c **** *  This file provides the source code to the API for the Successive
   7:Generated_Source\PSoC5/ADC_SAR_1.c **** *  approximation ADC Component.
   8:Generated_Source\PSoC5/ADC_SAR_1.c **** *
   9:Generated_Source\PSoC5/ADC_SAR_1.c **** * Note:
  10:Generated_Source\PSoC5/ADC_SAR_1.c **** *
  11:Generated_Source\PSoC5/ADC_SAR_1.c **** ********************************************************************************
  12:Generated_Source\PSoC5/ADC_SAR_1.c **** * Copyright 2008-2015, Cypress Semiconductor Corporation.  All rights reserved.
  13:Generated_Source\PSoC5/ADC_SAR_1.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:Generated_Source\PSoC5/ADC_SAR_1.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:Generated_Source\PSoC5/ADC_SAR_1.c **** * the software package with which this file was provided.
  16:Generated_Source\PSoC5/ADC_SAR_1.c **** *******************************************************************************/
  17:Generated_Source\PSoC5/ADC_SAR_1.c **** 
  18:Generated_Source\PSoC5/ADC_SAR_1.c **** #include "CyLib.h"
  19:Generated_Source\PSoC5/ADC_SAR_1.c **** #include "ADC_SAR_1.h"
  20:Generated_Source\PSoC5/ADC_SAR_1.c **** 
  21:Generated_Source\PSoC5/ADC_SAR_1.c **** #if(ADC_SAR_1_DEFAULT_INTERNAL_CLK)
  22:Generated_Source\PSoC5/ADC_SAR_1.c ****     #include "ADC_SAR_1_theACLK.h"
  23:Generated_Source\PSoC5/ADC_SAR_1.c **** #endif /* End ADC_SAR_1_DEFAULT_INTERNAL_CLK */
  24:Generated_Source\PSoC5/ADC_SAR_1.c **** 
  25:Generated_Source\PSoC5/ADC_SAR_1.c **** 
  26:Generated_Source\PSoC5/ADC_SAR_1.c **** /***************************************
  27:Generated_Source\PSoC5/ADC_SAR_1.c **** * Forward function references
  28:Generated_Source\PSoC5/ADC_SAR_1.c **** ***************************************/
  29:Generated_Source\PSoC5/ADC_SAR_1.c **** static void ADC_SAR_1_CalcGain(uint8 resolution);
  30:Generated_Source\PSoC5/ADC_SAR_1.c **** 
  31:Generated_Source\PSoC5/ADC_SAR_1.c **** 
ARM GAS  C:\Users\kevan\AppData\Local\Temp\ccXb7CWJ.s 			page 2


  32:Generated_Source\PSoC5/ADC_SAR_1.c **** /***************************************
  33:Generated_Source\PSoC5/ADC_SAR_1.c **** * Global data allocation
  34:Generated_Source\PSoC5/ADC_SAR_1.c **** ***************************************/
  35:Generated_Source\PSoC5/ADC_SAR_1.c **** uint8 ADC_SAR_1_initVar = 0u;
  36:Generated_Source\PSoC5/ADC_SAR_1.c **** volatile int16 ADC_SAR_1_offset;
  37:Generated_Source\PSoC5/ADC_SAR_1.c **** volatile int16 ADC_SAR_1_countsPerVolt;     /* Obsolete Gain compensation */
  38:Generated_Source\PSoC5/ADC_SAR_1.c **** volatile int32 ADC_SAR_1_countsPer10Volt;   /* Gain compensation */
  39:Generated_Source\PSoC5/ADC_SAR_1.c **** volatile int16 ADC_SAR_1_shift;
  40:Generated_Source\PSoC5/ADC_SAR_1.c **** 
  41:Generated_Source\PSoC5/ADC_SAR_1.c **** 
  42:Generated_Source\PSoC5/ADC_SAR_1.c **** /*******************************************************************************
  43:Generated_Source\PSoC5/ADC_SAR_1.c **** * Function Name: ADC_SAR_1_Start
  44:Generated_Source\PSoC5/ADC_SAR_1.c **** ********************************************************************************
  45:Generated_Source\PSoC5/ADC_SAR_1.c **** *
  46:Generated_Source\PSoC5/ADC_SAR_1.c **** * Summary:
  47:Generated_Source\PSoC5/ADC_SAR_1.c **** *  This is the preferred method to begin component operation.
  48:Generated_Source\PSoC5/ADC_SAR_1.c **** *  ADC_SAR_1_Start() sets the initVar variable, calls the
  49:Generated_Source\PSoC5/ADC_SAR_1.c **** *  ADC_SAR_1_Init() function, and then calls the
  50:Generated_Source\PSoC5/ADC_SAR_1.c **** *  ADC_SAR_1_Enable() function.
  51:Generated_Source\PSoC5/ADC_SAR_1.c **** *
  52:Generated_Source\PSoC5/ADC_SAR_1.c **** * Parameters:
  53:Generated_Source\PSoC5/ADC_SAR_1.c **** *  None.
  54:Generated_Source\PSoC5/ADC_SAR_1.c **** *
  55:Generated_Source\PSoC5/ADC_SAR_1.c **** * Return:
  56:Generated_Source\PSoC5/ADC_SAR_1.c **** *  None.
  57:Generated_Source\PSoC5/ADC_SAR_1.c **** *
  58:Generated_Source\PSoC5/ADC_SAR_1.c **** * Global variables:
  59:Generated_Source\PSoC5/ADC_SAR_1.c **** *  The ADC_SAR_1_initVar variable is used to indicate when/if initial
  60:Generated_Source\PSoC5/ADC_SAR_1.c **** *  configuration of this component has happened. The variable is initialized to
  61:Generated_Source\PSoC5/ADC_SAR_1.c **** *  zero and set to 1 the first time ADC_Start() is called. This allows for
  62:Generated_Source\PSoC5/ADC_SAR_1.c **** *  component Re-Start without re-initialization in all subsequent calls to the
  63:Generated_Source\PSoC5/ADC_SAR_1.c **** *  ADC_SAR_1_Start() routine.
  64:Generated_Source\PSoC5/ADC_SAR_1.c **** *  If re-initialization of the component is required the variable should be set
  65:Generated_Source\PSoC5/ADC_SAR_1.c **** *  to zero before call of ADC_SAR_1_Start() routine, or the user may call
  66:Generated_Source\PSoC5/ADC_SAR_1.c **** *  ADC_SAR_1_Init() and ADC_SAR_1_Enable() as done in the
  67:Generated_Source\PSoC5/ADC_SAR_1.c **** *  ADC_SAR_1_Start() routine.
  68:Generated_Source\PSoC5/ADC_SAR_1.c **** *
  69:Generated_Source\PSoC5/ADC_SAR_1.c **** * Side Effect:
  70:Generated_Source\PSoC5/ADC_SAR_1.c **** *  If the initVar variable is already set, this function only calls the
  71:Generated_Source\PSoC5/ADC_SAR_1.c **** *  ADC_SAR_1_Enable() function.
  72:Generated_Source\PSoC5/ADC_SAR_1.c **** *
  73:Generated_Source\PSoC5/ADC_SAR_1.c **** *******************************************************************************/
  74:Generated_Source\PSoC5/ADC_SAR_1.c **** void ADC_SAR_1_Start(void)
  75:Generated_Source\PSoC5/ADC_SAR_1.c **** {
  76:Generated_Source\PSoC5/ADC_SAR_1.c **** 
  77:Generated_Source\PSoC5/ADC_SAR_1.c ****     /* If not Initialized then initialize all required hardware and software */
  78:Generated_Source\PSoC5/ADC_SAR_1.c ****     if(ADC_SAR_1_initVar == 0u)
  79:Generated_Source\PSoC5/ADC_SAR_1.c ****     {
  80:Generated_Source\PSoC5/ADC_SAR_1.c ****         ADC_SAR_1_Init();
  81:Generated_Source\PSoC5/ADC_SAR_1.c ****         ADC_SAR_1_initVar = 1u;
  82:Generated_Source\PSoC5/ADC_SAR_1.c ****     }
  83:Generated_Source\PSoC5/ADC_SAR_1.c ****     ADC_SAR_1_Enable();
  84:Generated_Source\PSoC5/ADC_SAR_1.c **** }
  85:Generated_Source\PSoC5/ADC_SAR_1.c **** 
  86:Generated_Source\PSoC5/ADC_SAR_1.c **** 
  87:Generated_Source\PSoC5/ADC_SAR_1.c **** /*******************************************************************************
  88:Generated_Source\PSoC5/ADC_SAR_1.c **** * Function Name: ADC_SAR_1_Init
ARM GAS  C:\Users\kevan\AppData\Local\Temp\ccXb7CWJ.s 			page 3


  89:Generated_Source\PSoC5/ADC_SAR_1.c **** ********************************************************************************
  90:Generated_Source\PSoC5/ADC_SAR_1.c **** *
  91:Generated_Source\PSoC5/ADC_SAR_1.c **** * Summary:
  92:Generated_Source\PSoC5/ADC_SAR_1.c **** *  Initialize component's parameters to the parameters set by user in the
  93:Generated_Source\PSoC5/ADC_SAR_1.c **** *  customizer of the component placed onto schematic. Usually called in
  94:Generated_Source\PSoC5/ADC_SAR_1.c **** *  ADC_SAR_1_Start().
  95:Generated_Source\PSoC5/ADC_SAR_1.c **** *
  96:Generated_Source\PSoC5/ADC_SAR_1.c **** * Parameters:
  97:Generated_Source\PSoC5/ADC_SAR_1.c **** *  None.
  98:Generated_Source\PSoC5/ADC_SAR_1.c **** *
  99:Generated_Source\PSoC5/ADC_SAR_1.c **** * Return:
 100:Generated_Source\PSoC5/ADC_SAR_1.c **** *  None.
 101:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 102:Generated_Source\PSoC5/ADC_SAR_1.c **** * Global variables:
 103:Generated_Source\PSoC5/ADC_SAR_1.c **** *  The ADC_SAR_1_offset variable is initialized to 0.
 104:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 105:Generated_Source\PSoC5/ADC_SAR_1.c **** *******************************************************************************/
 106:Generated_Source\PSoC5/ADC_SAR_1.c **** void ADC_SAR_1_Init(void)
 107:Generated_Source\PSoC5/ADC_SAR_1.c **** {
 108:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 109:Generated_Source\PSoC5/ADC_SAR_1.c ****     /* This is only valid if there is an internal clock */
 110:Generated_Source\PSoC5/ADC_SAR_1.c ****     #if(ADC_SAR_1_DEFAULT_INTERNAL_CLK)
 111:Generated_Source\PSoC5/ADC_SAR_1.c ****         ADC_SAR_1_theACLK_SetMode(CYCLK_DUTY);
 112:Generated_Source\PSoC5/ADC_SAR_1.c ****     #endif /* End ADC_SAR_1_DEFAULT_INTERNAL_CLK */
 113:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 114:Generated_Source\PSoC5/ADC_SAR_1.c ****     #if(ADC_SAR_1_IRQ_REMOVE == 0u)
 115:Generated_Source\PSoC5/ADC_SAR_1.c ****         /* Start and set interrupt vector */
 116:Generated_Source\PSoC5/ADC_SAR_1.c ****         CyIntSetPriority(ADC_SAR_1_INTC_NUMBER, ADC_SAR_1_INTC_PRIOR_NUMBER);
 117:Generated_Source\PSoC5/ADC_SAR_1.c ****         (void)CyIntSetVector(ADC_SAR_1_INTC_NUMBER, &ADC_SAR_1_ISR);
 118:Generated_Source\PSoC5/ADC_SAR_1.c ****     #endif   /* End ADC_SAR_1_IRQ_REMOVE */
 119:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 120:Generated_Source\PSoC5/ADC_SAR_1.c ****     /* Enable IRQ mode*/
 121:Generated_Source\PSoC5/ADC_SAR_1.c ****     ADC_SAR_1_SAR_CSR1_REG |= ADC_SAR_1_SAR_IRQ_MASK_EN | ADC_SAR_1_SAR_IRQ_MODE_EDGE;
 122:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 123:Generated_Source\PSoC5/ADC_SAR_1.c ****     /*Set SAR ADC resolution ADC */
 124:Generated_Source\PSoC5/ADC_SAR_1.c ****     ADC_SAR_1_SetResolution(ADC_SAR_1_DEFAULT_RESOLUTION);
 125:Generated_Source\PSoC5/ADC_SAR_1.c ****     ADC_SAR_1_offset = 0;
 126:Generated_Source\PSoC5/ADC_SAR_1.c **** }
 127:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 128:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 129:Generated_Source\PSoC5/ADC_SAR_1.c **** /*******************************************************************************
 130:Generated_Source\PSoC5/ADC_SAR_1.c **** * Function Name: ADC_SAR_1_Enable
 131:Generated_Source\PSoC5/ADC_SAR_1.c **** ********************************************************************************
 132:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 133:Generated_Source\PSoC5/ADC_SAR_1.c **** * Summary:
 134:Generated_Source\PSoC5/ADC_SAR_1.c **** *  Enables the reference, clock and power for SAR ADC.
 135:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 136:Generated_Source\PSoC5/ADC_SAR_1.c **** * Parameters:
 137:Generated_Source\PSoC5/ADC_SAR_1.c **** *  None.
 138:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 139:Generated_Source\PSoC5/ADC_SAR_1.c **** * Return:
 140:Generated_Source\PSoC5/ADC_SAR_1.c **** *  None.
 141:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 142:Generated_Source\PSoC5/ADC_SAR_1.c **** *******************************************************************************/
 143:Generated_Source\PSoC5/ADC_SAR_1.c **** void ADC_SAR_1_Enable(void)
 144:Generated_Source\PSoC5/ADC_SAR_1.c **** {
 145:Generated_Source\PSoC5/ADC_SAR_1.c ****     uint8 tmpReg;
ARM GAS  C:\Users\kevan\AppData\Local\Temp\ccXb7CWJ.s 			page 4


 146:Generated_Source\PSoC5/ADC_SAR_1.c ****     uint8 enableInterrupts;
 147:Generated_Source\PSoC5/ADC_SAR_1.c ****     enableInterrupts = CyEnterCriticalSection();
 148:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 149:Generated_Source\PSoC5/ADC_SAR_1.c ****     /* Enable the SAR ADC block in Active Power Mode */
 150:Generated_Source\PSoC5/ADC_SAR_1.c ****     ADC_SAR_1_PWRMGR_SAR_REG |= ADC_SAR_1_ACT_PWR_SAR_EN;
 151:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 152:Generated_Source\PSoC5/ADC_SAR_1.c ****      /* Enable the SAR ADC in Standby Power Mode*/
 153:Generated_Source\PSoC5/ADC_SAR_1.c ****     ADC_SAR_1_STBY_PWRMGR_SAR_REG |= ADC_SAR_1_STBY_PWR_SAR_EN;
 154:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 155:Generated_Source\PSoC5/ADC_SAR_1.c ****     /* This is only valid if there is an internal clock */
 156:Generated_Source\PSoC5/ADC_SAR_1.c ****     #if(ADC_SAR_1_DEFAULT_INTERNAL_CLK)
 157:Generated_Source\PSoC5/ADC_SAR_1.c ****         ADC_SAR_1_PWRMGR_CLK_REG |= ADC_SAR_1_ACT_PWR_CLK_EN;
 158:Generated_Source\PSoC5/ADC_SAR_1.c ****         ADC_SAR_1_STBY_PWRMGR_CLK_REG |= ADC_SAR_1_STBY_PWR_CLK_EN;
 159:Generated_Source\PSoC5/ADC_SAR_1.c ****     #endif /* End ADC_SAR_1_DEFAULT_INTERNAL_CLK */
 160:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 161:Generated_Source\PSoC5/ADC_SAR_1.c ****     /* Enable VCM buffer and Enable Int Ref Amp */
 162:Generated_Source\PSoC5/ADC_SAR_1.c ****     tmpReg = ADC_SAR_1_SAR_CSR3_REG;
 163:Generated_Source\PSoC5/ADC_SAR_1.c ****     tmpReg |= ADC_SAR_1_SAR_EN_BUF_VCM_EN;
 164:Generated_Source\PSoC5/ADC_SAR_1.c ****     /* PD_BUF_VREF is OFF in External reference or Vdda reference mode */
 165:Generated_Source\PSoC5/ADC_SAR_1.c ****     #if((ADC_SAR_1_DEFAULT_REFERENCE == ADC_SAR_1__EXT_REF) || \
 166:Generated_Source\PSoC5/ADC_SAR_1.c ****         (ADC_SAR_1_DEFAULT_RANGE == ADC_SAR_1__VNEG_VDDA_DIFF))
 167:Generated_Source\PSoC5/ADC_SAR_1.c ****         tmpReg &= (uint8)~ADC_SAR_1_SAR_EN_BUF_VREF_EN;
 168:Generated_Source\PSoC5/ADC_SAR_1.c ****     #else /* In INTREF or INTREF Bypassed this buffer is ON */
 169:Generated_Source\PSoC5/ADC_SAR_1.c ****         tmpReg |= ADC_SAR_1_SAR_EN_BUF_VREF_EN;
 170:Generated_Source\PSoC5/ADC_SAR_1.c ****     #endif /* ADC_SAR_1_DEFAULT_REFERENCE == ADC_SAR_1__EXT_REF */
 171:Generated_Source\PSoC5/ADC_SAR_1.c ****     ADC_SAR_1_SAR_CSR3_REG = tmpReg;
 172:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 173:Generated_Source\PSoC5/ADC_SAR_1.c ****     /* Set reference for ADC */
 174:Generated_Source\PSoC5/ADC_SAR_1.c ****     #if(ADC_SAR_1_DEFAULT_RANGE == ADC_SAR_1__VNEG_VDDA_DIFF)
 175:Generated_Source\PSoC5/ADC_SAR_1.c ****         #if(ADC_SAR_1_DEFAULT_REFERENCE == ADC_SAR_1__EXT_REF)
 176:Generated_Source\PSoC5/ADC_SAR_1.c ****             ADC_SAR_1_SAR_CSR6_REG = ADC_SAR_1_INT_BYPASS_EXT_VREF; /* S2 */
 177:Generated_Source\PSoC5/ADC_SAR_1.c ****         #else /* Internal Vdda reference or obsolete bypass mode */
 178:Generated_Source\PSoC5/ADC_SAR_1.c ****             ADC_SAR_1_SAR_CSR6_REG = ADC_SAR_1_VDDA_VREF;           /* S7 */
 179:Generated_Source\PSoC5/ADC_SAR_1.c ****         #endif /* ADC_SAR_1_DEFAULT_REFERENCE == ADC_SAR_1__EXT_REF */
 180:Generated_Source\PSoC5/ADC_SAR_1.c ****     #else  /* Reference goes through internal buffer */
 181:Generated_Source\PSoC5/ADC_SAR_1.c ****         #if(ADC_SAR_1_DEFAULT_REFERENCE == ADC_SAR_1__INT_REF_NOT_BYPASSED)
 182:Generated_Source\PSoC5/ADC_SAR_1.c ****             ADC_SAR_1_SAR_CSR6_REG = ADC_SAR_1_INT_VREF;            /* S3 + S4 */
 183:Generated_Source\PSoC5/ADC_SAR_1.c ****         #else /* INTREF Bypassed of External */
 184:Generated_Source\PSoC5/ADC_SAR_1.c ****             ADC_SAR_1_SAR_CSR6_REG = ADC_SAR_1_INT_BYPASS_EXT_VREF; /* S2 */
 185:Generated_Source\PSoC5/ADC_SAR_1.c ****         #endif /* ADC_SAR_1_DEFAULT_REFERENCE == ADC_SAR_1__INT_REF_NOT_BYPASSED */
 186:Generated_Source\PSoC5/ADC_SAR_1.c ****     #endif /* VNEG_VDDA_DIFF */
 187:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 188:Generated_Source\PSoC5/ADC_SAR_1.c ****     /* Low non-overlap delay for sampling clock signals (for 1MSPS) */
 189:Generated_Source\PSoC5/ADC_SAR_1.c ****     #if(ADC_SAR_1_HIGH_POWER_PULSE == 0u) /* MinPulseWidth <= 50 ns */
 190:Generated_Source\PSoC5/ADC_SAR_1.c ****         ADC_SAR_1_SAR_CSR5_REG &= (uint8)~ADC_SAR_1_SAR_DLY_INC;
 191:Generated_Source\PSoC5/ADC_SAR_1.c ****     #else /* Set High non-overlap delay for sampling clock signals (for <500KSPS)*/
 192:Generated_Source\PSoC5/ADC_SAR_1.c ****         ADC_SAR_1_SAR_CSR5_REG |= ADC_SAR_1_SAR_DLY_INC;
 193:Generated_Source\PSoC5/ADC_SAR_1.c ****     #endif /* ADC_SAR_1_HIGH_POWER_PULSE == 0u */
 194:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 195:Generated_Source\PSoC5/ADC_SAR_1.c ****     /* Increase comparator latch enable delay by 20%, 
 196:Generated_Source\PSoC5/ADC_SAR_1.c ****     *  Increase comparator bias current by 30% without impacting delaysDelay 
 197:Generated_Source\PSoC5/ADC_SAR_1.c ****     *  Default for 1MSPS) 
 198:Generated_Source\PSoC5/ADC_SAR_1.c ****     */
 199:Generated_Source\PSoC5/ADC_SAR_1.c ****     #if(ADC_SAR_1_HIGH_POWER_PULSE == 0u)    /* MinPulseWidth <= 50 ns */
 200:Generated_Source\PSoC5/ADC_SAR_1.c ****         ADC_SAR_1_SAR_CSR5_REG |= ADC_SAR_1_SAR_SEL_CSEL_DFT_CHAR;
 201:Generated_Source\PSoC5/ADC_SAR_1.c ****     #else /* for <500ksps */
 202:Generated_Source\PSoC5/ADC_SAR_1.c ****         ADC_SAR_1_SAR_CSR5_REG &= (uint8)~ADC_SAR_1_SAR_SEL_CSEL_DFT_CHAR;
ARM GAS  C:\Users\kevan\AppData\Local\Temp\ccXb7CWJ.s 			page 5


 203:Generated_Source\PSoC5/ADC_SAR_1.c ****     #endif /* ADC_SAR_1_HIGH_POWER_PULSE == 0u */
 204:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 205:Generated_Source\PSoC5/ADC_SAR_1.c ****     /* Set default power and other configurations for control register 0 in multiple lines */
 206:Generated_Source\PSoC5/ADC_SAR_1.c ****     ADC_SAR_1_SAR_CSR0_REG = (uint8)((uint8)ADC_SAR_1_DEFAULT_POWER << ADC_SAR_1_SAR_POWER_SHIFT)
 207:Generated_Source\PSoC5/ADC_SAR_1.c ****     /* SAR_HIZ_CLEAR:   Should not be used for LP */
 208:Generated_Source\PSoC5/ADC_SAR_1.c ****     #if ((CY_PSOC5LP) || (ADC_SAR_1_DEFAULT_REFERENCE != ADC_SAR_1__EXT_REF))
 209:Generated_Source\PSoC5/ADC_SAR_1.c ****         | ADC_SAR_1_SAR_HIZ_CLEAR
 210:Generated_Source\PSoC5/ADC_SAR_1.c ****     #endif /* SAR_HIZ_CLEAR */
 211:Generated_Source\PSoC5/ADC_SAR_1.c ****     /*Set Convertion mode */
 212:Generated_Source\PSoC5/ADC_SAR_1.c ****     #if(ADC_SAR_1_DEFAULT_CONV_MODE != ADC_SAR_1__FREE_RUNNING)      /* If triggered mode */
 213:Generated_Source\PSoC5/ADC_SAR_1.c ****         | ADC_SAR_1_SAR_MX_SOF_UDB           /* source: UDB */
 214:Generated_Source\PSoC5/ADC_SAR_1.c ****         | ADC_SAR_1_SAR_SOF_MODE_EDGE        /* Set edge-sensitive sof source */
 215:Generated_Source\PSoC5/ADC_SAR_1.c ****     #endif /* ADC_SAR_1_DEFAULT_CONV_MODE */
 216:Generated_Source\PSoC5/ADC_SAR_1.c ****     ; /* end of multiple line initialization */
 217:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 218:Generated_Source\PSoC5/ADC_SAR_1.c ****     ADC_SAR_1_SAR_TR0_REG = ADC_SAR_1_SAR_CAP_TRIM_2;
 219:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 220:Generated_Source\PSoC5/ADC_SAR_1.c ****     /* Enable clock for SAR ADC*/
 221:Generated_Source\PSoC5/ADC_SAR_1.c ****     ADC_SAR_1_SAR_CLK_REG |= ADC_SAR_1_SAR_MX_CLK_EN;
 222:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 223:Generated_Source\PSoC5/ADC_SAR_1.c ****     CyDelayUs(10u); /* The block is ready to use 10 us after the enable signal is set high. */
 224:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 225:Generated_Source\PSoC5/ADC_SAR_1.c ****     #if(ADC_SAR_1_IRQ_REMOVE == 0u)
 226:Generated_Source\PSoC5/ADC_SAR_1.c ****         /* Clear a pending interrupt */
 227:Generated_Source\PSoC5/ADC_SAR_1.c ****         CyIntClearPending(ADC_SAR_1_INTC_NUMBER);
 228:Generated_Source\PSoC5/ADC_SAR_1.c ****     #endif   /* End ADC_SAR_1_IRQ_REMOVE */
 229:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 230:Generated_Source\PSoC5/ADC_SAR_1.c ****     CyExitCriticalSection(enableInterrupts);
 231:Generated_Source\PSoC5/ADC_SAR_1.c **** }
 232:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 233:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 234:Generated_Source\PSoC5/ADC_SAR_1.c **** /*******************************************************************************
 235:Generated_Source\PSoC5/ADC_SAR_1.c **** * Function Name: ADC_SAR_1_Stop
 236:Generated_Source\PSoC5/ADC_SAR_1.c **** ********************************************************************************
 237:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 238:Generated_Source\PSoC5/ADC_SAR_1.c **** * Summary:
 239:Generated_Source\PSoC5/ADC_SAR_1.c **** *  Stops ADC conversions and puts the ADC into its lowest power mode.
 240:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 241:Generated_Source\PSoC5/ADC_SAR_1.c **** * Parameters:
 242:Generated_Source\PSoC5/ADC_SAR_1.c **** *  None.
 243:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 244:Generated_Source\PSoC5/ADC_SAR_1.c **** * Return:
 245:Generated_Source\PSoC5/ADC_SAR_1.c **** *  None.
 246:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 247:Generated_Source\PSoC5/ADC_SAR_1.c **** *******************************************************************************/
 248:Generated_Source\PSoC5/ADC_SAR_1.c **** void ADC_SAR_1_Stop(void)
 249:Generated_Source\PSoC5/ADC_SAR_1.c **** {
 250:Generated_Source\PSoC5/ADC_SAR_1.c ****     uint8 enableInterrupts;
 251:Generated_Source\PSoC5/ADC_SAR_1.c ****     enableInterrupts = CyEnterCriticalSection();
 252:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 253:Generated_Source\PSoC5/ADC_SAR_1.c ****     /* Stop all conversions */
 254:Generated_Source\PSoC5/ADC_SAR_1.c ****     ADC_SAR_1_SAR_CSR0_REG &= (uint8)~ADC_SAR_1_SAR_SOF_START_CONV;
 255:Generated_Source\PSoC5/ADC_SAR_1.c ****     /* Disable the SAR ADC block in Active Power Mode */
 256:Generated_Source\PSoC5/ADC_SAR_1.c ****     ADC_SAR_1_PWRMGR_SAR_REG &= (uint8)~ADC_SAR_1_ACT_PWR_SAR_EN;
 257:Generated_Source\PSoC5/ADC_SAR_1.c ****     /* Disable the SAR ADC in Standby Power Mode */
 258:Generated_Source\PSoC5/ADC_SAR_1.c ****     ADC_SAR_1_STBY_PWRMGR_SAR_REG &= (uint8)~ADC_SAR_1_STBY_PWR_SAR_EN;
 259:Generated_Source\PSoC5/ADC_SAR_1.c **** 
ARM GAS  C:\Users\kevan\AppData\Local\Temp\ccXb7CWJ.s 			page 6


 260:Generated_Source\PSoC5/ADC_SAR_1.c ****     /* This is only valid if there is an internal clock */
 261:Generated_Source\PSoC5/ADC_SAR_1.c ****     #if(ADC_SAR_1_DEFAULT_INTERNAL_CLK)
 262:Generated_Source\PSoC5/ADC_SAR_1.c ****         ADC_SAR_1_PWRMGR_CLK_REG &= (uint8)~ADC_SAR_1_ACT_PWR_CLK_EN;
 263:Generated_Source\PSoC5/ADC_SAR_1.c ****         ADC_SAR_1_STBY_PWRMGR_CLK_REG &= (uint8)~ADC_SAR_1_STBY_PWR_CLK_EN;
 264:Generated_Source\PSoC5/ADC_SAR_1.c ****     #endif /* End ADC_SAR_1_DEFAULT_INTERNAL_CLK */
 265:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 266:Generated_Source\PSoC5/ADC_SAR_1.c ****     CyExitCriticalSection(enableInterrupts);
 267:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 268:Generated_Source\PSoC5/ADC_SAR_1.c **** }
 269:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 270:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 271:Generated_Source\PSoC5/ADC_SAR_1.c **** /*******************************************************************************
 272:Generated_Source\PSoC5/ADC_SAR_1.c **** * Function Name: ADC_SAR_1_SetPower
 273:Generated_Source\PSoC5/ADC_SAR_1.c **** ********************************************************************************
 274:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 275:Generated_Source\PSoC5/ADC_SAR_1.c **** * Summary:
 276:Generated_Source\PSoC5/ADC_SAR_1.c **** *  Sets the operational power of the ADC. You should use the higher power
 277:Generated_Source\PSoC5/ADC_SAR_1.c **** *  settings with faster clock speeds.
 278:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 279:Generated_Source\PSoC5/ADC_SAR_1.c **** * Parameters:
 280:Generated_Source\PSoC5/ADC_SAR_1.c **** *  power:  Power setting for ADC
 281:Generated_Source\PSoC5/ADC_SAR_1.c **** *  0 ->    Normal
 282:Generated_Source\PSoC5/ADC_SAR_1.c **** *  1 ->    Medium power
 283:Generated_Source\PSoC5/ADC_SAR_1.c **** *  2 ->    1.25 power
 284:Generated_Source\PSoC5/ADC_SAR_1.c **** *  3 ->    Minimum power.
 285:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 286:Generated_Source\PSoC5/ADC_SAR_1.c **** * Return:
 287:Generated_Source\PSoC5/ADC_SAR_1.c **** *  None.
 288:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 289:Generated_Source\PSoC5/ADC_SAR_1.c **** *******************************************************************************/
 290:Generated_Source\PSoC5/ADC_SAR_1.c **** void ADC_SAR_1_SetPower(uint8 power)
 291:Generated_Source\PSoC5/ADC_SAR_1.c **** {
 292:Generated_Source\PSoC5/ADC_SAR_1.c ****     uint8 tmpReg;
 293:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 294:Generated_Source\PSoC5/ADC_SAR_1.c ****     /* mask off invalid power settings */
 295:Generated_Source\PSoC5/ADC_SAR_1.c ****     power &= ADC_SAR_1_SAR_API_POWER_MASK;
 296:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 297:Generated_Source\PSoC5/ADC_SAR_1.c ****     /* Set Power parameter  */
 298:Generated_Source\PSoC5/ADC_SAR_1.c ****     tmpReg = ADC_SAR_1_SAR_CSR0_REG & (uint8)~ADC_SAR_1_SAR_POWER_MASK;
 299:Generated_Source\PSoC5/ADC_SAR_1.c ****     tmpReg |= (uint8)(power << ADC_SAR_1_SAR_POWER_SHIFT);
 300:Generated_Source\PSoC5/ADC_SAR_1.c ****     ADC_SAR_1_SAR_CSR0_REG = tmpReg;
 301:Generated_Source\PSoC5/ADC_SAR_1.c **** }
 302:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 303:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 304:Generated_Source\PSoC5/ADC_SAR_1.c **** /*******************************************************************************
 305:Generated_Source\PSoC5/ADC_SAR_1.c **** * Function Name: ADC_SAR_1_SetResolution
 306:Generated_Source\PSoC5/ADC_SAR_1.c **** ********************************************************************************
 307:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 308:Generated_Source\PSoC5/ADC_SAR_1.c **** * Summary:
 309:Generated_Source\PSoC5/ADC_SAR_1.c **** *  Sets the Relution of the SAR.
 310:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 311:Generated_Source\PSoC5/ADC_SAR_1.c **** * Parameters:
 312:Generated_Source\PSoC5/ADC_SAR_1.c **** *  resolution:
 313:Generated_Source\PSoC5/ADC_SAR_1.c **** *  12 ->    RES12
 314:Generated_Source\PSoC5/ADC_SAR_1.c **** *  10 ->    RES10
 315:Generated_Source\PSoC5/ADC_SAR_1.c **** *  8  ->    RES8
 316:Generated_Source\PSoC5/ADC_SAR_1.c **** *
ARM GAS  C:\Users\kevan\AppData\Local\Temp\ccXb7CWJ.s 			page 7


 317:Generated_Source\PSoC5/ADC_SAR_1.c **** * Return:
 318:Generated_Source\PSoC5/ADC_SAR_1.c **** *  None.
 319:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 320:Generated_Source\PSoC5/ADC_SAR_1.c **** * Side Effects:
 321:Generated_Source\PSoC5/ADC_SAR_1.c **** *  The ADC resolution cannot be changed during a conversion cycle. The
 322:Generated_Source\PSoC5/ADC_SAR_1.c **** *  recommended best practice is to stop conversions with
 323:Generated_Source\PSoC5/ADC_SAR_1.c **** *  ADC_StopConvert(), change the resolution, then restart the
 324:Generated_Source\PSoC5/ADC_SAR_1.c **** *  conversions with ADC_StartConvert().
 325:Generated_Source\PSoC5/ADC_SAR_1.c **** *  If you decide not to stop conversions before calling this API, you
 326:Generated_Source\PSoC5/ADC_SAR_1.c **** *  should use ADC_IsEndConversion() to wait until conversion is complete
 327:Generated_Source\PSoC5/ADC_SAR_1.c **** *  before changing the resolution.
 328:Generated_Source\PSoC5/ADC_SAR_1.c **** *  If you call ADC_SetResolution() during a conversion, the resolution will
 329:Generated_Source\PSoC5/ADC_SAR_1.c **** *  not be changed until the current conversion is complete. Data will not be
 330:Generated_Source\PSoC5/ADC_SAR_1.c **** *  available in the new resolution for another 6 + "New Resolution(in bits)"
 331:Generated_Source\PSoC5/ADC_SAR_1.c **** *  clock cycles.
 332:Generated_Source\PSoC5/ADC_SAR_1.c **** *  You may need add a delay of this number of clock cycles after
 333:Generated_Source\PSoC5/ADC_SAR_1.c **** *  ADC_SetResolution() is called before data is valid again.
 334:Generated_Source\PSoC5/ADC_SAR_1.c **** *  Affects ADC_CountsTo_Volts(), ADC_CountsTo_mVolts(), and
 335:Generated_Source\PSoC5/ADC_SAR_1.c **** *  ADC_CountsTo_uVolts() by calculating the correct conversion between ADC
 336:Generated_Source\PSoC5/ADC_SAR_1.c **** *  counts and the applied input voltage. Calculation depends on resolution,
 337:Generated_Source\PSoC5/ADC_SAR_1.c **** *  input range, and voltage reference.
 338:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 339:Generated_Source\PSoC5/ADC_SAR_1.c **** *******************************************************************************/
 340:Generated_Source\PSoC5/ADC_SAR_1.c **** void ADC_SAR_1_SetResolution(uint8 resolution)
 341:Generated_Source\PSoC5/ADC_SAR_1.c **** {
 342:Generated_Source\PSoC5/ADC_SAR_1.c ****     uint8 tmpReg;
 343:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 344:Generated_Source\PSoC5/ADC_SAR_1.c ****     /* Set SAR ADC resolution and sample width: 18 conversion cycles at 12bits + 1 gap */
 345:Generated_Source\PSoC5/ADC_SAR_1.c ****     switch (resolution)
 346:Generated_Source\PSoC5/ADC_SAR_1.c ****     {
 347:Generated_Source\PSoC5/ADC_SAR_1.c ****         case (uint8)ADC_SAR_1__BITS_12:
 348:Generated_Source\PSoC5/ADC_SAR_1.c ****             tmpReg = ADC_SAR_1_SAR_RESOLUTION_12BIT | ADC_SAR_1_SAR_SAMPLE_WIDTH;
 349:Generated_Source\PSoC5/ADC_SAR_1.c ****             break;
 350:Generated_Source\PSoC5/ADC_SAR_1.c ****         case (uint8)ADC_SAR_1__BITS_10:
 351:Generated_Source\PSoC5/ADC_SAR_1.c ****             tmpReg = ADC_SAR_1_SAR_RESOLUTION_10BIT | ADC_SAR_1_SAR_SAMPLE_WIDTH;
 352:Generated_Source\PSoC5/ADC_SAR_1.c ****             break;
 353:Generated_Source\PSoC5/ADC_SAR_1.c ****         case (uint8)ADC_SAR_1__BITS_8:
 354:Generated_Source\PSoC5/ADC_SAR_1.c ****             tmpReg = ADC_SAR_1_SAR_RESOLUTION_8BIT | ADC_SAR_1_SAR_SAMPLE_WIDTH;
 355:Generated_Source\PSoC5/ADC_SAR_1.c ****             break;
 356:Generated_Source\PSoC5/ADC_SAR_1.c ****         default:
 357:Generated_Source\PSoC5/ADC_SAR_1.c ****             tmpReg = ADC_SAR_1_SAR_RESOLUTION_12BIT | ADC_SAR_1_SAR_SAMPLE_WIDTH;
 358:Generated_Source\PSoC5/ADC_SAR_1.c ****             /* Halt CPU in debug mode if resolution is out of valid range */
 359:Generated_Source\PSoC5/ADC_SAR_1.c ****             CYASSERT(0u != 0u);
 360:Generated_Source\PSoC5/ADC_SAR_1.c ****             break;
 361:Generated_Source\PSoC5/ADC_SAR_1.c ****     }
 362:Generated_Source\PSoC5/ADC_SAR_1.c ****     ADC_SAR_1_SAR_CSR2_REG = tmpReg;
 363:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 364:Generated_Source\PSoC5/ADC_SAR_1.c ****      /* Calculate gain for convert counts to volts */
 365:Generated_Source\PSoC5/ADC_SAR_1.c ****     ADC_SAR_1_CalcGain(resolution);
 366:Generated_Source\PSoC5/ADC_SAR_1.c **** }
 367:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 368:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 369:Generated_Source\PSoC5/ADC_SAR_1.c **** #if(ADC_SAR_1_DEFAULT_CONV_MODE != ADC_SAR_1__HARDWARE_TRIGGER)
 370:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 371:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 372:Generated_Source\PSoC5/ADC_SAR_1.c ****     /*******************************************************************************
 373:Generated_Source\PSoC5/ADC_SAR_1.c ****     * Function Name: ADC_SAR_1_StartConvert
ARM GAS  C:\Users\kevan\AppData\Local\Temp\ccXb7CWJ.s 			page 8


 374:Generated_Source\PSoC5/ADC_SAR_1.c ****     ********************************************************************************
 375:Generated_Source\PSoC5/ADC_SAR_1.c ****     *
 376:Generated_Source\PSoC5/ADC_SAR_1.c ****     * Summary:
 377:Generated_Source\PSoC5/ADC_SAR_1.c ****     *  Forces the ADC to initiate a conversion. In free-running mode, the ADC runs
 378:Generated_Source\PSoC5/ADC_SAR_1.c ****     *  continuously. In software trigger mode, the function also acts as a software
 379:Generated_Source\PSoC5/ADC_SAR_1.c ****     *  version of the SOC and every conversion must be triggered by
 380:Generated_Source\PSoC5/ADC_SAR_1.c ****     *  ADC_SAR_1_StartConvert(). This function is not available when the
 381:Generated_Source\PSoC5/ADC_SAR_1.c ****     *  Hardware Trigger sample mode is selected.
 382:Generated_Source\PSoC5/ADC_SAR_1.c ****     *
 383:Generated_Source\PSoC5/ADC_SAR_1.c ****     * Parameters:
 384:Generated_Source\PSoC5/ADC_SAR_1.c ****     *  None.
 385:Generated_Source\PSoC5/ADC_SAR_1.c ****     *
 386:Generated_Source\PSoC5/ADC_SAR_1.c ****     * Return:
 387:Generated_Source\PSoC5/ADC_SAR_1.c ****     *  None.
 388:Generated_Source\PSoC5/ADC_SAR_1.c ****     *
 389:Generated_Source\PSoC5/ADC_SAR_1.c ****     * Theory:
 390:Generated_Source\PSoC5/ADC_SAR_1.c ****     *  Forces the ADC to initiate a conversion. In Free Running mode, the ADC will
 391:Generated_Source\PSoC5/ADC_SAR_1.c ****     *  run continuously. In a software trigger mode the function also acts as a
 392:Generated_Source\PSoC5/ADC_SAR_1.c ****     *  software version of the SOC. Here every conversion has to be triggered by
 393:Generated_Source\PSoC5/ADC_SAR_1.c ****     *  the routine. This writes into the SOC bit in SAR_CTRL reg.
 394:Generated_Source\PSoC5/ADC_SAR_1.c ****     *
 395:Generated_Source\PSoC5/ADC_SAR_1.c ****     * Side Effects:
 396:Generated_Source\PSoC5/ADC_SAR_1.c ****     *  In a software trigger mode the function switches source for SOF from the
 397:Generated_Source\PSoC5/ADC_SAR_1.c ****     *  external pin to the internal SOF generation. Application should not call
 398:Generated_Source\PSoC5/ADC_SAR_1.c ****     *  StartConvert if external source used for SOF.
 399:Generated_Source\PSoC5/ADC_SAR_1.c ****     *
 400:Generated_Source\PSoC5/ADC_SAR_1.c ****     *******************************************************************************/
 401:Generated_Source\PSoC5/ADC_SAR_1.c ****     void ADC_SAR_1_StartConvert(void)
 402:Generated_Source\PSoC5/ADC_SAR_1.c ****     {
 403:Generated_Source\PSoC5/ADC_SAR_1.c ****         #if(ADC_SAR_1_DEFAULT_CONV_MODE != ADC_SAR_1__FREE_RUNNING)  /* If software triggered mode 
 404:Generated_Source\PSoC5/ADC_SAR_1.c ****             ADC_SAR_1_SAR_CSR0_REG &= (uint8)~ADC_SAR_1_SAR_MX_SOF_UDB;   /* source: SOF bit */
 405:Generated_Source\PSoC5/ADC_SAR_1.c ****         #endif /* End ADC_SAR_1_DEFAULT_CONV_MODE */
 406:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 407:Generated_Source\PSoC5/ADC_SAR_1.c ****         /* Start the conversion */
 408:Generated_Source\PSoC5/ADC_SAR_1.c ****         ADC_SAR_1_SAR_CSR0_REG |= ADC_SAR_1_SAR_SOF_START_CONV;
 409:Generated_Source\PSoC5/ADC_SAR_1.c ****     }
 410:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 411:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 412:Generated_Source\PSoC5/ADC_SAR_1.c ****     /*******************************************************************************
 413:Generated_Source\PSoC5/ADC_SAR_1.c ****     * Function Name: ADC_SAR_1_StopConvert
 414:Generated_Source\PSoC5/ADC_SAR_1.c ****     ********************************************************************************
 415:Generated_Source\PSoC5/ADC_SAR_1.c ****     *
 416:Generated_Source\PSoC5/ADC_SAR_1.c ****     * Summary:
 417:Generated_Source\PSoC5/ADC_SAR_1.c ****     *  Forces the ADC to stop conversions. If a conversion is currently executing,
 418:Generated_Source\PSoC5/ADC_SAR_1.c ****     *  that conversion will complete, but no further conversions will occur. This
 419:Generated_Source\PSoC5/ADC_SAR_1.c ****     *  function is not available when the Hardware Trigger sample mode is selected.
 420:Generated_Source\PSoC5/ADC_SAR_1.c ****     *
 421:Generated_Source\PSoC5/ADC_SAR_1.c ****     * Parameters:
 422:Generated_Source\PSoC5/ADC_SAR_1.c ****     *  None.
 423:Generated_Source\PSoC5/ADC_SAR_1.c ****     *
 424:Generated_Source\PSoC5/ADC_SAR_1.c ****     * Return:
 425:Generated_Source\PSoC5/ADC_SAR_1.c ****     *  None.
 426:Generated_Source\PSoC5/ADC_SAR_1.c ****     *
 427:Generated_Source\PSoC5/ADC_SAR_1.c ****     * Theory:
 428:Generated_Source\PSoC5/ADC_SAR_1.c ****     *  Stops ADC conversion in Free Running mode.
 429:Generated_Source\PSoC5/ADC_SAR_1.c ****     *
 430:Generated_Source\PSoC5/ADC_SAR_1.c ****     * Side Effects:
ARM GAS  C:\Users\kevan\AppData\Local\Temp\ccXb7CWJ.s 			page 9


 431:Generated_Source\PSoC5/ADC_SAR_1.c ****     *  In Software Trigger sample mode, this function sets a software version of the
 432:Generated_Source\PSoC5/ADC_SAR_1.c ****     *  SOC to low level and switches the SOC source to hardware SOC input.
 433:Generated_Source\PSoC5/ADC_SAR_1.c ****     *
 434:Generated_Source\PSoC5/ADC_SAR_1.c ****     *******************************************************************************/
 435:Generated_Source\PSoC5/ADC_SAR_1.c ****     void ADC_SAR_1_StopConvert(void)
 436:Generated_Source\PSoC5/ADC_SAR_1.c ****     {
 437:Generated_Source\PSoC5/ADC_SAR_1.c ****         /* Stop all conversions */
 438:Generated_Source\PSoC5/ADC_SAR_1.c ****         ADC_SAR_1_SAR_CSR0_REG &= (uint8)~ADC_SAR_1_SAR_SOF_START_CONV;
 439:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 440:Generated_Source\PSoC5/ADC_SAR_1.c ****         #if(ADC_SAR_1_DEFAULT_CONV_MODE != ADC_SAR_1__FREE_RUNNING)  /* If software triggered mode 
 441:Generated_Source\PSoC5/ADC_SAR_1.c ****             /* Return source to UDB for hardware SOF signal */
 442:Generated_Source\PSoC5/ADC_SAR_1.c ****             ADC_SAR_1_SAR_CSR0_REG |= ADC_SAR_1_SAR_MX_SOF_UDB;    /* source: UDB */
 443:Generated_Source\PSoC5/ADC_SAR_1.c ****         #endif /* End ADC_SAR_1_DEFAULT_CONV_MODE */
 444:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 445:Generated_Source\PSoC5/ADC_SAR_1.c ****     }
 446:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 447:Generated_Source\PSoC5/ADC_SAR_1.c **** #endif /* End ADC_SAR_1_DEFAULT_CONV_MODE != ADC_SAR_1__HARDWARE_TRIGGER */
 448:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 449:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 450:Generated_Source\PSoC5/ADC_SAR_1.c **** /*******************************************************************************
 451:Generated_Source\PSoC5/ADC_SAR_1.c **** * Function Name: ADC_SAR_1_IsEndConversion
 452:Generated_Source\PSoC5/ADC_SAR_1.c **** ********************************************************************************
 453:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 454:Generated_Source\PSoC5/ADC_SAR_1.c **** * Summary:
 455:Generated_Source\PSoC5/ADC_SAR_1.c **** *  Immediately returns the status of the conversion or does not return
 456:Generated_Source\PSoC5/ADC_SAR_1.c **** *  (blocking) until the conversion completes, depending on the retMode
 457:Generated_Source\PSoC5/ADC_SAR_1.c **** *  parameter.
 458:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 459:Generated_Source\PSoC5/ADC_SAR_1.c **** * Parameters:
 460:Generated_Source\PSoC5/ADC_SAR_1.c **** *  retMode:  Check conversion return mode.
 461:Generated_Source\PSoC5/ADC_SAR_1.c **** *   ADC_SAR_1_RETURN_STATUS: Immediately returns the status. If the
 462:Generated_Source\PSoC5/ADC_SAR_1.c **** *     value returned is zero, the conversion is not complete, and this function
 463:Generated_Source\PSoC5/ADC_SAR_1.c **** *     should be retried until a nonzero result is returned.
 464:Generated_Source\PSoC5/ADC_SAR_1.c **** *   ADC_SAR_1_WAIT_FOR_RESULT: Does not return a result until the ADC
 465:Generated_Source\PSoC5/ADC_SAR_1.c **** *     conversion is complete.
 466:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 467:Generated_Source\PSoC5/ADC_SAR_1.c **** * Return:
 468:Generated_Source\PSoC5/ADC_SAR_1.c **** *  (uint8)  0 =>  The ADC is still calculating the last result.
 469:Generated_Source\PSoC5/ADC_SAR_1.c **** *           1 =>  The last conversion is complete.
 470:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 471:Generated_Source\PSoC5/ADC_SAR_1.c **** * Side Effects:
 472:Generated_Source\PSoC5/ADC_SAR_1.c **** *  This function reads the end of conversion status, which is cleared on read.
 473:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 474:Generated_Source\PSoC5/ADC_SAR_1.c **** *******************************************************************************/
 475:Generated_Source\PSoC5/ADC_SAR_1.c **** uint8 ADC_SAR_1_IsEndConversion(uint8 retMode)
 476:Generated_Source\PSoC5/ADC_SAR_1.c **** {
 477:Generated_Source\PSoC5/ADC_SAR_1.c ****     uint8 status;
 478:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 479:Generated_Source\PSoC5/ADC_SAR_1.c ****     do
 480:Generated_Source\PSoC5/ADC_SAR_1.c ****     {
 481:Generated_Source\PSoC5/ADC_SAR_1.c ****         status = ADC_SAR_1_SAR_CSR1_REG & ADC_SAR_1_SAR_EOF_1;
 482:Generated_Source\PSoC5/ADC_SAR_1.c ****     } while ((status != ADC_SAR_1_SAR_EOF_1) && (retMode == ADC_SAR_1_WAIT_FOR_RESULT));
 483:Generated_Source\PSoC5/ADC_SAR_1.c ****     /* If convertion complete, wait until EOF bit released */
 484:Generated_Source\PSoC5/ADC_SAR_1.c ****     if(status == ADC_SAR_1_SAR_EOF_1)
 485:Generated_Source\PSoC5/ADC_SAR_1.c ****     {
 486:Generated_Source\PSoC5/ADC_SAR_1.c ****         /* wait one ADC clock to let the EOC status bit release */
 487:Generated_Source\PSoC5/ADC_SAR_1.c ****         CyDelayUs(1u);
ARM GAS  C:\Users\kevan\AppData\Local\Temp\ccXb7CWJ.s 			page 10


 488:Generated_Source\PSoC5/ADC_SAR_1.c ****         /* Do the unconditional read operation of the CSR1 register to make sure the EOC bit has be
 489:Generated_Source\PSoC5/ADC_SAR_1.c ****         CY_GET_REG8(ADC_SAR_1_SAR_CSR1_PTR);
 490:Generated_Source\PSoC5/ADC_SAR_1.c ****     }
 491:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 492:Generated_Source\PSoC5/ADC_SAR_1.c ****     return(status);
 493:Generated_Source\PSoC5/ADC_SAR_1.c **** }
 494:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 495:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 496:Generated_Source\PSoC5/ADC_SAR_1.c **** /*******************************************************************************
 497:Generated_Source\PSoC5/ADC_SAR_1.c **** * Function Name: ADC_SAR_1_GetResult8
 498:Generated_Source\PSoC5/ADC_SAR_1.c **** ********************************************************************************
 499:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 500:Generated_Source\PSoC5/ADC_SAR_1.c **** * Summary:
 501:Generated_Source\PSoC5/ADC_SAR_1.c **** *  Returns the result of an 8-bit conversion. If the resolution is set greater
 502:Generated_Source\PSoC5/ADC_SAR_1.c **** *  than 8 bits, the function returns the LSB of the result.
 503:Generated_Source\PSoC5/ADC_SAR_1.c **** *  ADC_SAR_1_IsEndConversion() should be called to verify that the data
 504:Generated_Source\PSoC5/ADC_SAR_1.c **** *   sample is ready.
 505:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 506:Generated_Source\PSoC5/ADC_SAR_1.c **** * Parameters:
 507:Generated_Source\PSoC5/ADC_SAR_1.c **** *  None.
 508:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 509:Generated_Source\PSoC5/ADC_SAR_1.c **** * Return:
 510:Generated_Source\PSoC5/ADC_SAR_1.c **** *  The LSB of the last ADC conversion.
 511:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 512:Generated_Source\PSoC5/ADC_SAR_1.c **** * Global Variables:
 513:Generated_Source\PSoC5/ADC_SAR_1.c **** *  ADC_SAR_1_shift - used to convert the ADC counts to the 2s
 514:Generated_Source\PSoC5/ADC_SAR_1.c **** *  compliment form.
 515:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 516:Generated_Source\PSoC5/ADC_SAR_1.c **** * Side Effects:
 517:Generated_Source\PSoC5/ADC_SAR_1.c **** *  Converts the ADC counts to the 2s complement form.
 518:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 519:Generated_Source\PSoC5/ADC_SAR_1.c **** *******************************************************************************/
 520:Generated_Source\PSoC5/ADC_SAR_1.c **** int8 ADC_SAR_1_GetResult8( void )
 521:Generated_Source\PSoC5/ADC_SAR_1.c **** {
 522:Generated_Source\PSoC5/ADC_SAR_1.c ****     return( (int8)ADC_SAR_1_SAR_WRK0_REG - (int8)ADC_SAR_1_shift);
 523:Generated_Source\PSoC5/ADC_SAR_1.c **** }
 524:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 525:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 526:Generated_Source\PSoC5/ADC_SAR_1.c **** /*******************************************************************************
 527:Generated_Source\PSoC5/ADC_SAR_1.c **** * Function Name: ADC_SAR_1_GetResult16
 528:Generated_Source\PSoC5/ADC_SAR_1.c **** ********************************************************************************
 529:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 530:Generated_Source\PSoC5/ADC_SAR_1.c **** * Summary:
 531:Generated_Source\PSoC5/ADC_SAR_1.c **** *  Returns a 16-bit result for a conversion with a result that has a resolution
 532:Generated_Source\PSoC5/ADC_SAR_1.c **** *  of 8 to 12 bits.
 533:Generated_Source\PSoC5/ADC_SAR_1.c **** *  ADC_SAR_1_IsEndConversion() should be called to verify that the data
 534:Generated_Source\PSoC5/ADC_SAR_1.c **** *   sample is ready
 535:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 536:Generated_Source\PSoC5/ADC_SAR_1.c **** * Parameters:
 537:Generated_Source\PSoC5/ADC_SAR_1.c **** *  None.
 538:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 539:Generated_Source\PSoC5/ADC_SAR_1.c **** * Return:
 540:Generated_Source\PSoC5/ADC_SAR_1.c **** *  The 16-bit result of the last ADC conversion
 541:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 542:Generated_Source\PSoC5/ADC_SAR_1.c **** * Global Variables:
 543:Generated_Source\PSoC5/ADC_SAR_1.c **** *  ADC_SAR_1_shift - used to convert the ADC counts to the 2s
 544:Generated_Source\PSoC5/ADC_SAR_1.c **** *  compliment form.
ARM GAS  C:\Users\kevan\AppData\Local\Temp\ccXb7CWJ.s 			page 11


 545:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 546:Generated_Source\PSoC5/ADC_SAR_1.c **** * Side Effects:
 547:Generated_Source\PSoC5/ADC_SAR_1.c **** *  Converts the ADC counts to the 2s complement form.
 548:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 549:Generated_Source\PSoC5/ADC_SAR_1.c **** *******************************************************************************/
 550:Generated_Source\PSoC5/ADC_SAR_1.c **** int16 ADC_SAR_1_GetResult16( void )
 551:Generated_Source\PSoC5/ADC_SAR_1.c **** {
 552:Generated_Source\PSoC5/ADC_SAR_1.c ****     uint16 res;
 553:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 554:Generated_Source\PSoC5/ADC_SAR_1.c ****     res = CY_GET_REG16(ADC_SAR_1_SAR_WRK_PTR);
 555:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 556:Generated_Source\PSoC5/ADC_SAR_1.c ****     return( (int16)res - ADC_SAR_1_shift );
 557:Generated_Source\PSoC5/ADC_SAR_1.c **** }
 558:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 559:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 560:Generated_Source\PSoC5/ADC_SAR_1.c **** /*******************************************************************************
 561:Generated_Source\PSoC5/ADC_SAR_1.c **** * Function Name: ADC_SAR_1_SetOffset
 562:Generated_Source\PSoC5/ADC_SAR_1.c **** ********************************************************************************
 563:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 564:Generated_Source\PSoC5/ADC_SAR_1.c **** * Summary:
 565:Generated_Source\PSoC5/ADC_SAR_1.c **** *  Sets the ADC offset, which is used by ADC_SAR_1_CountsTo_Volts(),
 566:Generated_Source\PSoC5/ADC_SAR_1.c **** *  ADC_SAR_1_CountsTo_mVolts(), and ADC_SAR_1_CountsTo_uVolts()
 567:Generated_Source\PSoC5/ADC_SAR_1.c **** *  to subtract the offset from the given reading before calculating the voltage
 568:Generated_Source\PSoC5/ADC_SAR_1.c **** *  conversion.
 569:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 570:Generated_Source\PSoC5/ADC_SAR_1.c **** * Parameters:
 571:Generated_Source\PSoC5/ADC_SAR_1.c **** *  int16: This value is measured when the inputs are shorted or connected to
 572:Generated_Source\PSoC5/ADC_SAR_1.c ****    the same input voltage.
 573:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 574:Generated_Source\PSoC5/ADC_SAR_1.c **** * Return:
 575:Generated_Source\PSoC5/ADC_SAR_1.c **** *  None.
 576:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 577:Generated_Source\PSoC5/ADC_SAR_1.c **** * Global Variables:
 578:Generated_Source\PSoC5/ADC_SAR_1.c **** *  The ADC_SAR_1_offset variable modified. This variable is used for
 579:Generated_Source\PSoC5/ADC_SAR_1.c **** *  offset calibration purpose.
 580:Generated_Source\PSoC5/ADC_SAR_1.c **** *  Affects the ADC_SAR_1_CountsTo_Volts,
 581:Generated_Source\PSoC5/ADC_SAR_1.c **** *  ADC_SAR_1_CountsTo_mVolts, ADC_SAR_1_CountsTo_uVolts functions
 582:Generated_Source\PSoC5/ADC_SAR_1.c **** *  by subtracting the given offset.
 583:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 584:Generated_Source\PSoC5/ADC_SAR_1.c **** *******************************************************************************/
 585:Generated_Source\PSoC5/ADC_SAR_1.c **** void ADC_SAR_1_SetOffset(int16 offset)
 586:Generated_Source\PSoC5/ADC_SAR_1.c **** {
 587:Generated_Source\PSoC5/ADC_SAR_1.c ****     ADC_SAR_1_offset = offset;
 588:Generated_Source\PSoC5/ADC_SAR_1.c **** }
 589:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 590:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 591:Generated_Source\PSoC5/ADC_SAR_1.c **** /*******************************************************************************
 592:Generated_Source\PSoC5/ADC_SAR_1.c **** * Function Name: ADC_SAR_1_CalcGain
 593:Generated_Source\PSoC5/ADC_SAR_1.c **** ********************************************************************************
 594:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 595:Generated_Source\PSoC5/ADC_SAR_1.c **** * Summary:
 596:Generated_Source\PSoC5/ADC_SAR_1.c **** *  This function calculates the ADC gain in counts per 10 volt.
 597:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 598:Generated_Source\PSoC5/ADC_SAR_1.c **** * Parameters:
 599:Generated_Source\PSoC5/ADC_SAR_1.c **** *  uint8: resolution
 600:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 601:Generated_Source\PSoC5/ADC_SAR_1.c **** * Return:
ARM GAS  C:\Users\kevan\AppData\Local\Temp\ccXb7CWJ.s 			page 12


 602:Generated_Source\PSoC5/ADC_SAR_1.c **** *  None.
 603:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 604:Generated_Source\PSoC5/ADC_SAR_1.c **** * Global Variables:
 605:Generated_Source\PSoC5/ADC_SAR_1.c **** *  ADC_SAR_1_shift variable initialized. This variable is used to
 606:Generated_Source\PSoC5/ADC_SAR_1.c **** *  convert the ADC counts to the 2s compliment form.
 607:Generated_Source\PSoC5/ADC_SAR_1.c **** *  ADC_SAR_1_countsPer10Volt variable initialized. This variable is used
 608:Generated_Source\PSoC5/ADC_SAR_1.c **** *  for gain calibration purpose.
 609:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 610:Generated_Source\PSoC5/ADC_SAR_1.c **** *******************************************************************************/
 611:Generated_Source\PSoC5/ADC_SAR_1.c **** static void ADC_SAR_1_CalcGain( uint8 resolution )
 612:Generated_Source\PSoC5/ADC_SAR_1.c **** {
  27              		.loc 1 612 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              	.LVL0:
  32 0000 08B5     		push	{r3, lr}
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 3, -8
  35              		.cfi_offset 14, -4
 613:Generated_Source\PSoC5/ADC_SAR_1.c ****     int32 counts;
 614:Generated_Source\PSoC5/ADC_SAR_1.c ****     #if(!((ADC_SAR_1_DEFAULT_RANGE == ADC_SAR_1__VSS_TO_VREF) || \
 615:Generated_Source\PSoC5/ADC_SAR_1.c ****          (ADC_SAR_1_DEFAULT_RANGE == ADC_SAR_1__VSSA_TO_VDDA) || \
 616:Generated_Source\PSoC5/ADC_SAR_1.c ****          (ADC_SAR_1_DEFAULT_RANGE == ADC_SAR_1__VSSA_TO_VDAC)) )
 617:Generated_Source\PSoC5/ADC_SAR_1.c ****         uint16 diff_zero;
 618:Generated_Source\PSoC5/ADC_SAR_1.c ****     #endif /* End ADC_SAR_1_DEFAULT_RANGE */
 619:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 620:Generated_Source\PSoC5/ADC_SAR_1.c ****     switch (resolution)
  36              		.loc 1 620 0
  37 0002 0A28     		cmp	r0, #10
  38 0004 0FD0     		beq	.L6
  39 0006 0C28     		cmp	r0, #12
  40 0008 02D0     		beq	.L4
  41 000a 0828     		cmp	r0, #8
  42 000c 06D1     		bne	.L7
  43 000e 02E0     		b	.L5
  44              	.L4:
 621:Generated_Source\PSoC5/ADC_SAR_1.c ****     {
 622:Generated_Source\PSoC5/ADC_SAR_1.c ****         case (uint8)ADC_SAR_1__BITS_12:
 623:Generated_Source\PSoC5/ADC_SAR_1.c ****             counts = (int32)ADC_SAR_1_SAR_WRK_MAX_12BIT;
  45              		.loc 1 623 0
  46 0010 4FF48052 		mov	r2, #4096
  47 0014 09E0     		b	.L3
  48              	.L5:
  49              	.LVL1:
 624:Generated_Source\PSoC5/ADC_SAR_1.c ****             #if(!((ADC_SAR_1_DEFAULT_RANGE == ADC_SAR_1__VSS_TO_VREF) || \
 625:Generated_Source\PSoC5/ADC_SAR_1.c ****                  (ADC_SAR_1_DEFAULT_RANGE == ADC_SAR_1__VSSA_TO_VDDA) || \
 626:Generated_Source\PSoC5/ADC_SAR_1.c ****                  (ADC_SAR_1_DEFAULT_RANGE == ADC_SAR_1__VSSA_TO_VDAC)) )
 627:Generated_Source\PSoC5/ADC_SAR_1.c ****                 diff_zero = ADC_SAR_1_SAR_DIFF_SHIFT;
 628:Generated_Source\PSoC5/ADC_SAR_1.c ****             #endif /* End ADC_SAR_1_DEFAULT_RANGE */
 629:Generated_Source\PSoC5/ADC_SAR_1.c ****             break;
 630:Generated_Source\PSoC5/ADC_SAR_1.c ****         case (uint8)ADC_SAR_1__BITS_10:
 631:Generated_Source\PSoC5/ADC_SAR_1.c ****             counts = (int32)ADC_SAR_1_SAR_WRK_MAX_10BIT;
 632:Generated_Source\PSoC5/ADC_SAR_1.c ****             #if(!((ADC_SAR_1_DEFAULT_RANGE == ADC_SAR_1__VSS_TO_VREF) || \
 633:Generated_Source\PSoC5/ADC_SAR_1.c ****                  (ADC_SAR_1_DEFAULT_RANGE == ADC_SAR_1__VSSA_TO_VDDA) || \
 634:Generated_Source\PSoC5/ADC_SAR_1.c ****                  (ADC_SAR_1_DEFAULT_RANGE == ADC_SAR_1__VSSA_TO_VDAC)) )
 635:Generated_Source\PSoC5/ADC_SAR_1.c ****                 diff_zero = ADC_SAR_1_SAR_DIFF_SHIFT >> 2u;
ARM GAS  C:\Users\kevan\AppData\Local\Temp\ccXb7CWJ.s 			page 13


 636:Generated_Source\PSoC5/ADC_SAR_1.c ****             #endif /* End ADC_SAR_1_DEFAULT_RANGE */
 637:Generated_Source\PSoC5/ADC_SAR_1.c ****             break;
 638:Generated_Source\PSoC5/ADC_SAR_1.c ****         case (uint8)ADC_SAR_1__BITS_8:
 639:Generated_Source\PSoC5/ADC_SAR_1.c ****             counts = (int32)ADC_SAR_1_SAR_WRK_MAX_8BIT;
  50              		.loc 1 639 0
  51 0016 4FF48072 		mov	r2, #256
 640:Generated_Source\PSoC5/ADC_SAR_1.c ****             #if(!((ADC_SAR_1_DEFAULT_RANGE == ADC_SAR_1__VSS_TO_VREF) || \
 641:Generated_Source\PSoC5/ADC_SAR_1.c ****                  (ADC_SAR_1_DEFAULT_RANGE == ADC_SAR_1__VSSA_TO_VDDA) || \
 642:Generated_Source\PSoC5/ADC_SAR_1.c ****                  (ADC_SAR_1_DEFAULT_RANGE == ADC_SAR_1__VSSA_TO_VDAC)) )
 643:Generated_Source\PSoC5/ADC_SAR_1.c ****                 diff_zero = ADC_SAR_1_SAR_DIFF_SHIFT >> 4u;
 644:Generated_Source\PSoC5/ADC_SAR_1.c ****             #endif /* End ADC_SAR_1_DEFAULT_RANGE */
 645:Generated_Source\PSoC5/ADC_SAR_1.c ****             break;
  52              		.loc 1 645 0
  53 001a 06E0     		b	.L3
  54              	.LVL2:
  55              	.L7:
 646:Generated_Source\PSoC5/ADC_SAR_1.c ****         default: /* Halt CPU in debug mode if resolution is out of valid range */
 647:Generated_Source\PSoC5/ADC_SAR_1.c ****             counts = 0;
 648:Generated_Source\PSoC5/ADC_SAR_1.c ****             #if(!((ADC_SAR_1_DEFAULT_RANGE == ADC_SAR_1__VSS_TO_VREF) || \
 649:Generated_Source\PSoC5/ADC_SAR_1.c ****                  (ADC_SAR_1_DEFAULT_RANGE == ADC_SAR_1__VSSA_TO_VDDA) || \
 650:Generated_Source\PSoC5/ADC_SAR_1.c ****                  (ADC_SAR_1_DEFAULT_RANGE == ADC_SAR_1__VSSA_TO_VDAC)) )
 651:Generated_Source\PSoC5/ADC_SAR_1.c ****                 diff_zero = 0u;
 652:Generated_Source\PSoC5/ADC_SAR_1.c ****             #endif /* End ADC_SAR_1_DEFAULT_RANGE */
 653:Generated_Source\PSoC5/ADC_SAR_1.c ****             CYASSERT(0u != 0u);
  56              		.loc 1 653 0
  57 001c 0020     		movs	r0, #0
  58              	.LVL3:
  59 001e FFF7FEFF 		bl	CyHalt
  60              	.LVL4:
 647:Generated_Source\PSoC5/ADC_SAR_1.c ****             #if(!((ADC_SAR_1_DEFAULT_RANGE == ADC_SAR_1__VSS_TO_VREF) || \
  61              		.loc 1 647 0
  62 0022 0022     		movs	r2, #0
  63 0024 01E0     		b	.L3
  64              	.LVL5:
  65              	.L6:
 631:Generated_Source\PSoC5/ADC_SAR_1.c ****             #if(!((ADC_SAR_1_DEFAULT_RANGE == ADC_SAR_1__VSS_TO_VREF) || \
  66              		.loc 1 631 0
  67 0026 4FF48062 		mov	r2, #1024
  68              	.LVL6:
  69              	.L3:
 654:Generated_Source\PSoC5/ADC_SAR_1.c ****             break;
 655:Generated_Source\PSoC5/ADC_SAR_1.c ****     }
 656:Generated_Source\PSoC5/ADC_SAR_1.c ****     ADC_SAR_1_countsPerVolt = 0; /* Clear obsolete variable */
  70              		.loc 1 656 0
  71 002a 0021     		movs	r1, #0
  72 002c 094B     		ldr	r3, .L9
  73 002e 1980     		strh	r1, [r3]	@ movhi
 657:Generated_Source\PSoC5/ADC_SAR_1.c ****     /* Calculate gain in counts per 10 volts with rounding */
 658:Generated_Source\PSoC5/ADC_SAR_1.c ****     ADC_SAR_1_countsPer10Volt = (((counts * ADC_SAR_1_10MV_COUNTS) +
  74              		.loc 1 658 0
  75 0030 42F21073 		movw	r3, #10000
  76 0034 03FB02F3 		mul	r3, r3, r2
  77 0038 03F6C413 		addw	r3, r3, #2500
 659:Generated_Source\PSoC5/ADC_SAR_1.c ****                         ADC_SAR_1_DEFAULT_REF_VOLTAGE_MV) / (ADC_SAR_1_DEFAULT_REF_VOLTAGE_MV * 2))
  78              		.loc 1 659 0
  79 003c 064A     		ldr	r2, .L9+4
  80              	.LVL7:
ARM GAS  C:\Users\kevan\AppData\Local\Temp\ccXb7CWJ.s 			page 14


  81 003e 82FB0302 		smull	r0, r2, r2, r3
  82 0042 DB17     		asrs	r3, r3, #31
  83 0044 C3EBE223 		rsb	r3, r3, r2, asr #11
 658:Generated_Source\PSoC5/ADC_SAR_1.c ****                         ADC_SAR_1_DEFAULT_REF_VOLTAGE_MV) / (ADC_SAR_1_DEFAULT_REF_VOLTAGE_MV * 2))
  84              		.loc 1 658 0
  85 0048 044A     		ldr	r2, .L9+8
  86 004a 1360     		str	r3, [r2]
 660:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 661:Generated_Source\PSoC5/ADC_SAR_1.c ****     #if( (ADC_SAR_1_DEFAULT_RANGE == ADC_SAR_1__VSS_TO_VREF) || \
 662:Generated_Source\PSoC5/ADC_SAR_1.c ****          (ADC_SAR_1_DEFAULT_RANGE == ADC_SAR_1__VSSA_TO_VDDA) || \
 663:Generated_Source\PSoC5/ADC_SAR_1.c ****          (ADC_SAR_1_DEFAULT_RANGE == ADC_SAR_1__VSSA_TO_VDAC) )
 664:Generated_Source\PSoC5/ADC_SAR_1.c ****         ADC_SAR_1_shift = 0;
  87              		.loc 1 664 0
  88 004c 044B     		ldr	r3, .L9+12
  89 004e 1980     		strh	r1, [r3]	@ movhi
  90 0050 08BD     		pop	{r3, pc}
  91              	.L10:
  92 0052 00BF     		.align	2
  93              	.L9:
  94 0054 00000000 		.word	ADC_SAR_1_countsPerVolt
  95 0058 AD8BDB68 		.word	1759218605
  96 005c 00000000 		.word	ADC_SAR_1_countsPer10Volt
  97 0060 00000000 		.word	ADC_SAR_1_shift
  98              		.cfi_endproc
  99              	.LFE12:
 100              		.size	ADC_SAR_1_CalcGain, .-ADC_SAR_1_CalcGain
 101              		.section	.text.ADC_SAR_1_Enable,"ax",%progbits
 102              		.align	2
 103              		.global	ADC_SAR_1_Enable
 104              		.thumb
 105              		.thumb_func
 106              		.type	ADC_SAR_1_Enable, %function
 107              	ADC_SAR_1_Enable:
 108              	.LFB2:
 144:Generated_Source\PSoC5/ADC_SAR_1.c ****     uint8 tmpReg;
 109              		.loc 1 144 0
 110              		.cfi_startproc
 111              		@ args = 0, pretend = 0, frame = 0
 112              		@ frame_needed = 0, uses_anonymous_args = 0
 113 0000 10B5     		push	{r4, lr}
 114              		.cfi_def_cfa_offset 8
 115              		.cfi_offset 4, -8
 116              		.cfi_offset 14, -4
 147:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 117              		.loc 1 147 0
 118 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 119              	.LVL8:
 120 0006 0446     		mov	r4, r0
 121              	.LVL9:
 150:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 122              		.loc 1 150 0
 123 0008 1E4A     		ldr	r2, .L13
 124 000a 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 125 000c 43F00103 		orr	r3, r3, #1
 126 0010 1370     		strb	r3, [r2]
 153:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 127              		.loc 1 153 0
ARM GAS  C:\Users\kevan\AppData\Local\Temp\ccXb7CWJ.s 			page 15


 128 0012 1032     		adds	r2, r2, #16
 129 0014 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 130 0016 43F00103 		orr	r3, r3, #1
 131 001a 1370     		strb	r3, [r2]
 157:Generated_Source\PSoC5/ADC_SAR_1.c ****         ADC_SAR_1_STBY_PWRMGR_CLK_REG |= ADC_SAR_1_STBY_PWR_CLK_EN;
 132              		.loc 1 157 0
 133 001c 1A3A     		subs	r2, r2, #26
 134 001e 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 135 0020 43F00203 		orr	r3, r3, #2
 136 0024 1370     		strb	r3, [r2]
 158:Generated_Source\PSoC5/ADC_SAR_1.c ****     #endif /* End ADC_SAR_1_DEFAULT_INTERNAL_CLK */
 137              		.loc 1 158 0
 138 0026 1032     		adds	r2, r2, #16
 139 0028 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 140 002a 43F00203 		orr	r3, r3, #2
 141 002e 1370     		strb	r3, [r2]
 162:Generated_Source\PSoC5/ADC_SAR_1.c ****     tmpReg |= ADC_SAR_1_SAR_EN_BUF_VCM_EN;
 142              		.loc 1 162 0
 143 0030 02F5AA52 		add	r2, r2, #5440
 144 0034 1232     		adds	r2, r2, #18
 145 0036 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 146              	.LVL10:
 169:Generated_Source\PSoC5/ADC_SAR_1.c ****     #endif /* ADC_SAR_1_DEFAULT_REFERENCE == ADC_SAR_1__EXT_REF */
 147              		.loc 1 169 0
 148 0038 43F00303 		orr	r3, r3, #3
 149              	.LVL11:
 171:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 150              		.loc 1 171 0
 151 003c 1370     		strb	r3, [r2]
 184:Generated_Source\PSoC5/ADC_SAR_1.c ****         #endif /* ADC_SAR_1_DEFAULT_REFERENCE == ADC_SAR_1__INT_REF_NOT_BYPASSED */
 152              		.loc 1 184 0
 153 003e 0422     		movs	r2, #4
 154 0040 114B     		ldr	r3, .L13+4
 155              	.LVL12:
 156 0042 1A70     		strb	r2, [r3]
 157              	.LVL13:
 192:Generated_Source\PSoC5/ADC_SAR_1.c ****     #endif /* ADC_SAR_1_HIGH_POWER_PULSE == 0u */
 158              		.loc 1 192 0
 159 0044 013B     		subs	r3, r3, #1
 160 0046 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 161 0048 42F04002 		orr	r2, r2, #64
 162 004c 1A70     		strb	r2, [r3]
 202:Generated_Source\PSoC5/ADC_SAR_1.c ****     #endif /* ADC_SAR_1_HIGH_POWER_PULSE == 0u */
 163              		.loc 1 202 0
 164 004e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 165 0050 02F0FC02 		and	r2, r2, #252
 166 0054 1A70     		strb	r2, [r3]
 206:Generated_Source\PSoC5/ADC_SAR_1.c ****     /* SAR_HIZ_CLEAR:   Should not be used for LP */
 167              		.loc 1 206 0
 168 0056 CE22     		movs	r2, #206
 169 0058 053B     		subs	r3, r3, #5
 170 005a 1A70     		strb	r2, [r3]
 218:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 171              		.loc 1 218 0
 172 005c 0222     		movs	r2, #2
 173 005e A3F59753 		sub	r3, r3, #4832
 174 0062 0C3B     		subs	r3, r3, #12
ARM GAS  C:\Users\kevan\AppData\Local\Temp\ccXb7CWJ.s 			page 16


 175 0064 1A70     		strb	r2, [r3]
 221:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 176              		.loc 1 221 0
 177 0066 094A     		ldr	r2, .L13+8
 178 0068 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 179 006a 43F00803 		orr	r3, r3, #8
 180 006e 1370     		strb	r3, [r2]
 223:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 181              		.loc 1 223 0
 182 0070 0A20     		movs	r0, #10
 183 0072 FFF7FEFF 		bl	CyDelayUs
 184              	.LVL14:
 227:Generated_Source\PSoC5/ADC_SAR_1.c ****     #endif   /* End ADC_SAR_1_IRQ_REMOVE */
 185              		.loc 1 227 0
 186 0076 0122     		movs	r2, #1
 187 0078 054B     		ldr	r3, .L13+12
 188 007a 1A60     		str	r2, [r3]
 230:Generated_Source\PSoC5/ADC_SAR_1.c **** }
 189              		.loc 1 230 0
 190 007c 2046     		mov	r0, r4
 191 007e FFF7FEFF 		bl	CyExitCriticalSection
 192              	.LVL15:
 193 0082 10BD     		pop	{r4, pc}
 194              	.LVL16:
 195              	.L14:
 196              		.align	2
 197              	.L13:
 198 0084 AB430040 		.word	1073759147
 199 0088 06590040 		.word	1073764614
 200 008c 275B0040 		.word	1073765159
 201 0090 80E200E0 		.word	-536812928
 202              		.cfi_endproc
 203              	.LFE2:
 204              		.size	ADC_SAR_1_Enable, .-ADC_SAR_1_Enable
 205              		.section	.text.ADC_SAR_1_Stop,"ax",%progbits
 206              		.align	2
 207              		.global	ADC_SAR_1_Stop
 208              		.thumb
 209              		.thumb_func
 210              		.type	ADC_SAR_1_Stop, %function
 211              	ADC_SAR_1_Stop:
 212              	.LFB3:
 249:Generated_Source\PSoC5/ADC_SAR_1.c ****     uint8 enableInterrupts;
 213              		.loc 1 249 0
 214              		.cfi_startproc
 215              		@ args = 0, pretend = 0, frame = 0
 216              		@ frame_needed = 0, uses_anonymous_args = 0
 217 0000 08B5     		push	{r3, lr}
 218              		.cfi_def_cfa_offset 8
 219              		.cfi_offset 3, -8
 220              		.cfi_offset 14, -4
 251:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 221              		.loc 1 251 0
 222 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 223              	.LVL17:
 254:Generated_Source\PSoC5/ADC_SAR_1.c ****     /* Disable the SAR ADC block in Active Power Mode */
 224              		.loc 1 254 0
ARM GAS  C:\Users\kevan\AppData\Local\Temp\ccXb7CWJ.s 			page 17


 225 0006 0F4A     		ldr	r2, .L17
 226 0008 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 227 000a 03F0FE03 		and	r3, r3, #254
 228 000e 1370     		strb	r3, [r2]
 256:Generated_Source\PSoC5/ADC_SAR_1.c ****     /* Disable the SAR ADC in Standby Power Mode */
 229              		.loc 1 256 0
 230 0010 A2F5AA52 		sub	r2, r2, #5440
 231 0014 153A     		subs	r2, r2, #21
 232 0016 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 233 0018 03F0FE03 		and	r3, r3, #254
 234 001c 1370     		strb	r3, [r2]
 258:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 235              		.loc 1 258 0
 236 001e 1032     		adds	r2, r2, #16
 237 0020 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 238 0022 03F0FE03 		and	r3, r3, #254
 239 0026 1370     		strb	r3, [r2]
 262:Generated_Source\PSoC5/ADC_SAR_1.c ****         ADC_SAR_1_STBY_PWRMGR_CLK_REG &= (uint8)~ADC_SAR_1_STBY_PWR_CLK_EN;
 240              		.loc 1 262 0
 241 0028 1A3A     		subs	r2, r2, #26
 242 002a 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 243 002c 03F0FD03 		and	r3, r3, #253
 244 0030 1370     		strb	r3, [r2]
 263:Generated_Source\PSoC5/ADC_SAR_1.c ****     #endif /* End ADC_SAR_1_DEFAULT_INTERNAL_CLK */
 245              		.loc 1 263 0
 246 0032 1032     		adds	r2, r2, #16
 247 0034 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 248 0036 03F0FD03 		and	r3, r3, #253
 249 003a 1370     		strb	r3, [r2]
 266:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 250              		.loc 1 266 0
 251 003c FFF7FEFF 		bl	CyExitCriticalSection
 252              	.LVL18:
 253 0040 08BD     		pop	{r3, pc}
 254              	.L18:
 255 0042 00BF     		.align	2
 256              	.L17:
 257 0044 00590040 		.word	1073764608
 258              		.cfi_endproc
 259              	.LFE3:
 260              		.size	ADC_SAR_1_Stop, .-ADC_SAR_1_Stop
 261              		.section	.text.ADC_SAR_1_SetPower,"ax",%progbits
 262              		.align	2
 263              		.global	ADC_SAR_1_SetPower
 264              		.thumb
 265              		.thumb_func
 266              		.type	ADC_SAR_1_SetPower, %function
 267              	ADC_SAR_1_SetPower:
 268              	.LFB4:
 291:Generated_Source\PSoC5/ADC_SAR_1.c ****     uint8 tmpReg;
 269              		.loc 1 291 0
 270              		.cfi_startproc
 271              		@ args = 0, pretend = 0, frame = 0
 272              		@ frame_needed = 0, uses_anonymous_args = 0
 273              		@ link register save eliminated.
 274              	.LVL19:
 298:Generated_Source\PSoC5/ADC_SAR_1.c ****     tmpReg |= (uint8)(power << ADC_SAR_1_SAR_POWER_SHIFT);
ARM GAS  C:\Users\kevan\AppData\Local\Temp\ccXb7CWJ.s 			page 18


 275              		.loc 1 298 0
 276 0000 044A     		ldr	r2, .L20
 277 0002 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 278 0004 03F03F03 		and	r3, r3, #63
 279              	.LVL20:
 299:Generated_Source\PSoC5/ADC_SAR_1.c ****     ADC_SAR_1_SAR_CSR0_REG = tmpReg;
 280              		.loc 1 299 0
 281 0008 43EA8010 		orr	r0, r3, r0, lsl #6
 282              	.LVL21:
 283 000c C0B2     		uxtb	r0, r0
 284              	.LVL22:
 300:Generated_Source\PSoC5/ADC_SAR_1.c **** }
 285              		.loc 1 300 0
 286 000e 1070     		strb	r0, [r2]
 287 0010 7047     		bx	lr
 288              	.L21:
 289 0012 00BF     		.align	2
 290              	.L20:
 291 0014 00590040 		.word	1073764608
 292              		.cfi_endproc
 293              	.LFE4:
 294              		.size	ADC_SAR_1_SetPower, .-ADC_SAR_1_SetPower
 295              		.section	.text.ADC_SAR_1_SetResolution,"ax",%progbits
 296              		.align	2
 297              		.global	ADC_SAR_1_SetResolution
 298              		.thumb
 299              		.thumb_func
 300              		.type	ADC_SAR_1_SetResolution, %function
 301              	ADC_SAR_1_SetResolution:
 302              	.LFB5:
 341:Generated_Source\PSoC5/ADC_SAR_1.c ****     uint8 tmpReg;
 303              		.loc 1 341 0
 304              		.cfi_startproc
 305              		@ args = 0, pretend = 0, frame = 0
 306              		@ frame_needed = 0, uses_anonymous_args = 0
 307              	.LVL23:
 308 0000 10B5     		push	{r4, lr}
 309              		.cfi_def_cfa_offset 8
 310              		.cfi_offset 4, -8
 311              		.cfi_offset 14, -4
 312 0002 0446     		mov	r4, r0
 345:Generated_Source\PSoC5/ADC_SAR_1.c ****     {
 313              		.loc 1 345 0
 314 0004 0A28     		cmp	r0, #10
 315 0006 0DD0     		beq	.L27
 316 0008 0C28     		cmp	r0, #12
 317 000a 02D0     		beq	.L25
 318 000c 0828     		cmp	r0, #8
 319 000e 04D1     		bne	.L28
 320 0010 01E0     		b	.L26
 321              	.L25:
 348:Generated_Source\PSoC5/ADC_SAR_1.c ****             break;
 322              		.loc 1 348 0
 323 0012 C422     		movs	r2, #196
 324 0014 07E0     		b	.L24
 325              	.L26:
 326              	.LVL24:
ARM GAS  C:\Users\kevan\AppData\Local\Temp\ccXb7CWJ.s 			page 19


 354:Generated_Source\PSoC5/ADC_SAR_1.c ****             break;
 327              		.loc 1 354 0
 328 0016 4422     		movs	r2, #68
 355:Generated_Source\PSoC5/ADC_SAR_1.c ****         default:
 329              		.loc 1 355 0
 330 0018 05E0     		b	.L24
 331              	.LVL25:
 332              	.L28:
 359:Generated_Source\PSoC5/ADC_SAR_1.c ****             break;
 333              		.loc 1 359 0
 334 001a 0020     		movs	r0, #0
 335              	.LVL26:
 336 001c FFF7FEFF 		bl	CyHalt
 337              	.LVL27:
 357:Generated_Source\PSoC5/ADC_SAR_1.c ****             /* Halt CPU in debug mode if resolution is out of valid range */
 338              		.loc 1 357 0
 339 0020 C422     		movs	r2, #196
 340 0022 00E0     		b	.L24
 341              	.LVL28:
 342              	.L27:
 351:Generated_Source\PSoC5/ADC_SAR_1.c ****             break;
 343              		.loc 1 351 0
 344 0024 8422     		movs	r2, #132
 345              	.LVL29:
 346              	.L24:
 362:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 347              		.loc 1 362 0
 348 0026 034B     		ldr	r3, .L30
 349 0028 1A70     		strb	r2, [r3]
 365:Generated_Source\PSoC5/ADC_SAR_1.c **** }
 350              		.loc 1 365 0
 351 002a 2046     		mov	r0, r4
 352 002c FFF7FEFF 		bl	ADC_SAR_1_CalcGain
 353              	.LVL30:
 354 0030 10BD     		pop	{r4, pc}
 355              	.L31:
 356 0032 00BF     		.align	2
 357              	.L30:
 358 0034 02590040 		.word	1073764610
 359              		.cfi_endproc
 360              	.LFE5:
 361              		.size	ADC_SAR_1_SetResolution, .-ADC_SAR_1_SetResolution
 362              		.section	.text.ADC_SAR_1_Init,"ax",%progbits
 363              		.align	2
 364              		.global	ADC_SAR_1_Init
 365              		.thumb
 366              		.thumb_func
 367              		.type	ADC_SAR_1_Init, %function
 368              	ADC_SAR_1_Init:
 369              	.LFB1:
 107:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 370              		.loc 1 107 0
 371              		.cfi_startproc
 372              		@ args = 0, pretend = 0, frame = 0
 373              		@ frame_needed = 0, uses_anonymous_args = 0
 374 0000 08B5     		push	{r3, lr}
 375              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\kevan\AppData\Local\Temp\ccXb7CWJ.s 			page 20


 376              		.cfi_offset 3, -8
 377              		.cfi_offset 14, -4
 111:Generated_Source\PSoC5/ADC_SAR_1.c ****     #endif /* End ADC_SAR_1_DEFAULT_INTERNAL_CLK */
 378              		.loc 1 111 0
 379 0002 1020     		movs	r0, #16
 380 0004 FFF7FEFF 		bl	ADC_SAR_1_theACLK_SetModeRegister
 381              	.LVL31:
 116:Generated_Source\PSoC5/ADC_SAR_1.c ****         (void)CyIntSetVector(ADC_SAR_1_INTC_NUMBER, &ADC_SAR_1_ISR);
 382              		.loc 1 116 0
 383 0008 0721     		movs	r1, #7
 384 000a 0020     		movs	r0, #0
 385 000c FFF7FEFF 		bl	CyIntSetPriority
 386              	.LVL32:
 117:Generated_Source\PSoC5/ADC_SAR_1.c ****     #endif   /* End ADC_SAR_1_IRQ_REMOVE */
 387              		.loc 1 117 0
 388 0010 0749     		ldr	r1, .L34
 389 0012 0020     		movs	r0, #0
 390 0014 FFF7FEFF 		bl	CyIntSetVector
 391              	.LVL33:
 121:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 392              		.loc 1 121 0
 393 0018 064A     		ldr	r2, .L34+4
 394 001a 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 395 001c 43F00603 		orr	r3, r3, #6
 396 0020 1370     		strb	r3, [r2]
 124:Generated_Source\PSoC5/ADC_SAR_1.c ****     ADC_SAR_1_offset = 0;
 397              		.loc 1 124 0
 398 0022 0C20     		movs	r0, #12
 399 0024 FFF7FEFF 		bl	ADC_SAR_1_SetResolution
 400              	.LVL34:
 125:Generated_Source\PSoC5/ADC_SAR_1.c **** }
 401              		.loc 1 125 0
 402 0028 0022     		movs	r2, #0
 403 002a 034B     		ldr	r3, .L34+8
 404 002c 1A80     		strh	r2, [r3]	@ movhi
 405 002e 08BD     		pop	{r3, pc}
 406              	.L35:
 407              		.align	2
 408              	.L34:
 409 0030 00000000 		.word	ADC_SAR_1_ISR
 410 0034 01590040 		.word	1073764609
 411 0038 00000000 		.word	ADC_SAR_1_offset
 412              		.cfi_endproc
 413              	.LFE1:
 414              		.size	ADC_SAR_1_Init, .-ADC_SAR_1_Init
 415              		.section	.text.ADC_SAR_1_Start,"ax",%progbits
 416              		.align	2
 417              		.global	ADC_SAR_1_Start
 418              		.thumb
 419              		.thumb_func
 420              		.type	ADC_SAR_1_Start, %function
 421              	ADC_SAR_1_Start:
 422              	.LFB0:
  75:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 423              		.loc 1 75 0
 424              		.cfi_startproc
 425              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\kevan\AppData\Local\Temp\ccXb7CWJ.s 			page 21


 426              		@ frame_needed = 0, uses_anonymous_args = 0
 427 0000 08B5     		push	{r3, lr}
 428              		.cfi_def_cfa_offset 8
 429              		.cfi_offset 3, -8
 430              		.cfi_offset 14, -4
  78:Generated_Source\PSoC5/ADC_SAR_1.c ****     {
 431              		.loc 1 78 0
 432 0002 054B     		ldr	r3, .L39
 433 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 434 0006 23B9     		cbnz	r3, .L37
  80:Generated_Source\PSoC5/ADC_SAR_1.c ****         ADC_SAR_1_initVar = 1u;
 435              		.loc 1 80 0
 436 0008 FFF7FEFF 		bl	ADC_SAR_1_Init
 437              	.LVL35:
  81:Generated_Source\PSoC5/ADC_SAR_1.c ****     }
 438              		.loc 1 81 0
 439 000c 0122     		movs	r2, #1
 440 000e 024B     		ldr	r3, .L39
 441 0010 1A70     		strb	r2, [r3]
 442              	.L37:
  83:Generated_Source\PSoC5/ADC_SAR_1.c **** }
 443              		.loc 1 83 0
 444 0012 FFF7FEFF 		bl	ADC_SAR_1_Enable
 445              	.LVL36:
 446 0016 08BD     		pop	{r3, pc}
 447              	.L40:
 448              		.align	2
 449              	.L39:
 450 0018 00000000 		.word	.LANCHOR0
 451              		.cfi_endproc
 452              	.LFE0:
 453              		.size	ADC_SAR_1_Start, .-ADC_SAR_1_Start
 454              		.section	.text.ADC_SAR_1_StartConvert,"ax",%progbits
 455              		.align	2
 456              		.global	ADC_SAR_1_StartConvert
 457              		.thumb
 458              		.thumb_func
 459              		.type	ADC_SAR_1_StartConvert, %function
 460              	ADC_SAR_1_StartConvert:
 461              	.LFB6:
 402:Generated_Source\PSoC5/ADC_SAR_1.c ****         #if(ADC_SAR_1_DEFAULT_CONV_MODE != ADC_SAR_1__FREE_RUNNING)  /* If software triggered mode 
 462              		.loc 1 402 0
 463              		.cfi_startproc
 464              		@ args = 0, pretend = 0, frame = 0
 465              		@ frame_needed = 0, uses_anonymous_args = 0
 466              		@ link register save eliminated.
 404:Generated_Source\PSoC5/ADC_SAR_1.c ****         #endif /* End ADC_SAR_1_DEFAULT_CONV_MODE */
 467              		.loc 1 404 0
 468 0000 044B     		ldr	r3, .L42
 469 0002 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 470 0004 02F0FB02 		and	r2, r2, #251
 471 0008 1A70     		strb	r2, [r3]
 408:Generated_Source\PSoC5/ADC_SAR_1.c ****     }
 472              		.loc 1 408 0
 473 000a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 474 000c 42F00102 		orr	r2, r2, #1
 475 0010 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\kevan\AppData\Local\Temp\ccXb7CWJ.s 			page 22


 476 0012 7047     		bx	lr
 477              	.L43:
 478              		.align	2
 479              	.L42:
 480 0014 00590040 		.word	1073764608
 481              		.cfi_endproc
 482              	.LFE6:
 483              		.size	ADC_SAR_1_StartConvert, .-ADC_SAR_1_StartConvert
 484              		.section	.text.ADC_SAR_1_StopConvert,"ax",%progbits
 485              		.align	2
 486              		.global	ADC_SAR_1_StopConvert
 487              		.thumb
 488              		.thumb_func
 489              		.type	ADC_SAR_1_StopConvert, %function
 490              	ADC_SAR_1_StopConvert:
 491              	.LFB7:
 436:Generated_Source\PSoC5/ADC_SAR_1.c ****         /* Stop all conversions */
 492              		.loc 1 436 0
 493              		.cfi_startproc
 494              		@ args = 0, pretend = 0, frame = 0
 495              		@ frame_needed = 0, uses_anonymous_args = 0
 496              		@ link register save eliminated.
 438:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 497              		.loc 1 438 0
 498 0000 044B     		ldr	r3, .L45
 499 0002 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 500 0004 02F0FE02 		and	r2, r2, #254
 501 0008 1A70     		strb	r2, [r3]
 442:Generated_Source\PSoC5/ADC_SAR_1.c ****         #endif /* End ADC_SAR_1_DEFAULT_CONV_MODE */
 502              		.loc 1 442 0
 503 000a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 504 000c 42F00402 		orr	r2, r2, #4
 505 0010 1A70     		strb	r2, [r3]
 506 0012 7047     		bx	lr
 507              	.L46:
 508              		.align	2
 509              	.L45:
 510 0014 00590040 		.word	1073764608
 511              		.cfi_endproc
 512              	.LFE7:
 513              		.size	ADC_SAR_1_StopConvert, .-ADC_SAR_1_StopConvert
 514              		.section	.text.ADC_SAR_1_IsEndConversion,"ax",%progbits
 515              		.align	2
 516              		.global	ADC_SAR_1_IsEndConversion
 517              		.thumb
 518              		.thumb_func
 519              		.type	ADC_SAR_1_IsEndConversion, %function
 520              	ADC_SAR_1_IsEndConversion:
 521              	.LFB8:
 476:Generated_Source\PSoC5/ADC_SAR_1.c ****     uint8 status;
 522              		.loc 1 476 0
 523              		.cfi_startproc
 524              		@ args = 0, pretend = 0, frame = 0
 525              		@ frame_needed = 0, uses_anonymous_args = 0
 526              	.LVL37:
 527 0000 10B5     		push	{r4, lr}
 528              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\kevan\AppData\Local\Temp\ccXb7CWJ.s 			page 23


 529              		.cfi_offset 4, -8
 530              		.cfi_offset 14, -4
 531              	.L49:
 481:Generated_Source\PSoC5/ADC_SAR_1.c ****     } while ((status != ADC_SAR_1_SAR_EOF_1) && (retMode == ADC_SAR_1_WAIT_FOR_RESULT));
 532              		.loc 1 481 0 discriminator 2
 533 0002 074B     		ldr	r3, .L52
 534 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 535              	.LVL38:
 482:Generated_Source\PSoC5/ADC_SAR_1.c ****     /* If convertion complete, wait until EOF bit released */
 536              		.loc 1 482 0 discriminator 2
 537 0006 13F00104 		ands	r4, r3, #1
 538 000a 01D1     		bne	.L48
 482:Generated_Source\PSoC5/ADC_SAR_1.c ****     /* If convertion complete, wait until EOF bit released */
 539              		.loc 1 482 0 is_stmt 0 discriminator 1
 540 000c 0028     		cmp	r0, #0
 541 000e F8D0     		beq	.L49
 542              	.L48:
 484:Generated_Source\PSoC5/ADC_SAR_1.c ****     {
 543              		.loc 1 484 0 is_stmt 1
 544 0010 24B1     		cbz	r4, .L50
 487:Generated_Source\PSoC5/ADC_SAR_1.c ****         /* Do the unconditional read operation of the CSR1 register to make sure the EOC bit has be
 545              		.loc 1 487 0
 546 0012 0120     		movs	r0, #1
 547              	.LVL39:
 548 0014 FFF7FEFF 		bl	CyDelayUs
 549              	.LVL40:
 489:Generated_Source\PSoC5/ADC_SAR_1.c ****     }
 550              		.loc 1 489 0
 551 0018 014B     		ldr	r3, .L52
 552 001a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 553              	.L50:
 493:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 554              		.loc 1 493 0
 555 001c 2046     		mov	r0, r4
 556 001e 10BD     		pop	{r4, pc}
 557              	.L53:
 558              		.align	2
 559              	.L52:
 560 0020 01590040 		.word	1073764609
 561              		.cfi_endproc
 562              	.LFE8:
 563              		.size	ADC_SAR_1_IsEndConversion, .-ADC_SAR_1_IsEndConversion
 564              		.section	.text.ADC_SAR_1_GetResult8,"ax",%progbits
 565              		.align	2
 566              		.global	ADC_SAR_1_GetResult8
 567              		.thumb
 568              		.thumb_func
 569              		.type	ADC_SAR_1_GetResult8, %function
 570              	ADC_SAR_1_GetResult8:
 571              	.LFB9:
 521:Generated_Source\PSoC5/ADC_SAR_1.c ****     return( (int8)ADC_SAR_1_SAR_WRK0_REG - (int8)ADC_SAR_1_shift);
 572              		.loc 1 521 0
 573              		.cfi_startproc
 574              		@ args = 0, pretend = 0, frame = 0
 575              		@ frame_needed = 0, uses_anonymous_args = 0
 576              		@ link register save eliminated.
 522:Generated_Source\PSoC5/ADC_SAR_1.c **** }
ARM GAS  C:\Users\kevan\AppData\Local\Temp\ccXb7CWJ.s 			page 24


 577              		.loc 1 522 0
 578 0000 034B     		ldr	r3, .L55
 579 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 580 0004 034A     		ldr	r2, .L55+4
 581 0006 1088     		ldrh	r0, [r2]
 582 0008 00B2     		sxth	r0, r0
 583 000a 181A     		subs	r0, r3, r0
 523:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 584              		.loc 1 523 0
 585 000c 40B2     		sxtb	r0, r0
 586 000e 7047     		bx	lr
 587              	.L56:
 588              		.align	2
 589              	.L55:
 590 0010 A05B0040 		.word	1073765280
 591 0014 00000000 		.word	ADC_SAR_1_shift
 592              		.cfi_endproc
 593              	.LFE9:
 594              		.size	ADC_SAR_1_GetResult8, .-ADC_SAR_1_GetResult8
 595              		.section	.text.ADC_SAR_1_GetResult16,"ax",%progbits
 596              		.align	2
 597              		.global	ADC_SAR_1_GetResult16
 598              		.thumb
 599              		.thumb_func
 600              		.type	ADC_SAR_1_GetResult16, %function
 601              	ADC_SAR_1_GetResult16:
 602              	.LFB10:
 551:Generated_Source\PSoC5/ADC_SAR_1.c ****     uint16 res;
 603              		.loc 1 551 0
 604              		.cfi_startproc
 605              		@ args = 0, pretend = 0, frame = 0
 606              		@ frame_needed = 0, uses_anonymous_args = 0
 607              		@ link register save eliminated.
 554:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 608              		.loc 1 554 0
 609 0000 034B     		ldr	r3, .L58
 610 0002 1888     		ldrh	r0, [r3]
 611 0004 80B2     		uxth	r0, r0
 612              	.LVL41:
 556:Generated_Source\PSoC5/ADC_SAR_1.c **** }
 613              		.loc 1 556 0
 614 0006 034B     		ldr	r3, .L58+4
 615 0008 1B88     		ldrh	r3, [r3]
 616 000a C01A     		subs	r0, r0, r3
 617              	.LVL42:
 557:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 618              		.loc 1 557 0
 619 000c 00B2     		sxth	r0, r0
 620 000e 7047     		bx	lr
 621              	.L59:
 622              		.align	2
 623              	.L58:
 624 0010 A05B0040 		.word	1073765280
 625 0014 00000000 		.word	ADC_SAR_1_shift
 626              		.cfi_endproc
 627              	.LFE10:
 628              		.size	ADC_SAR_1_GetResult16, .-ADC_SAR_1_GetResult16
ARM GAS  C:\Users\kevan\AppData\Local\Temp\ccXb7CWJ.s 			page 25


 629              		.section	.text.ADC_SAR_1_SetOffset,"ax",%progbits
 630              		.align	2
 631              		.global	ADC_SAR_1_SetOffset
 632              		.thumb
 633              		.thumb_func
 634              		.type	ADC_SAR_1_SetOffset, %function
 635              	ADC_SAR_1_SetOffset:
 636              	.LFB11:
 586:Generated_Source\PSoC5/ADC_SAR_1.c ****     ADC_SAR_1_offset = offset;
 637              		.loc 1 586 0
 638              		.cfi_startproc
 639              		@ args = 0, pretend = 0, frame = 0
 640              		@ frame_needed = 0, uses_anonymous_args = 0
 641              		@ link register save eliminated.
 642              	.LVL43:
 587:Generated_Source\PSoC5/ADC_SAR_1.c **** }
 643              		.loc 1 587 0
 644 0000 014B     		ldr	r3, .L61
 645 0002 1880     		strh	r0, [r3]	@ movhi
 646 0004 7047     		bx	lr
 647              	.L62:
 648 0006 00BF     		.align	2
 649              	.L61:
 650 0008 00000000 		.word	ADC_SAR_1_offset
 651              		.cfi_endproc
 652              	.LFE11:
 653              		.size	ADC_SAR_1_SetOffset, .-ADC_SAR_1_SetOffset
 654              		.section	.text.ADC_SAR_1_SetGain,"ax",%progbits
 655              		.align	2
 656              		.global	ADC_SAR_1_SetGain
 657              		.thumb
 658              		.thumb_func
 659              		.type	ADC_SAR_1_SetGain, %function
 660              	ADC_SAR_1_SetGain:
 661              	.LFB13:
 665:Generated_Source\PSoC5/ADC_SAR_1.c ****     #else
 666:Generated_Source\PSoC5/ADC_SAR_1.c ****         ADC_SAR_1_shift = diff_zero;
 667:Generated_Source\PSoC5/ADC_SAR_1.c ****     #endif /* End ADC_SAR_1_DEFAULT_RANGE */
 668:Generated_Source\PSoC5/ADC_SAR_1.c **** }
 669:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 670:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 671:Generated_Source\PSoC5/ADC_SAR_1.c **** /*******************************************************************************
 672:Generated_Source\PSoC5/ADC_SAR_1.c **** * Function Name: ADC_SAR_1_SetGain
 673:Generated_Source\PSoC5/ADC_SAR_1.c **** ********************************************************************************
 674:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 675:Generated_Source\PSoC5/ADC_SAR_1.c **** * Summary:
 676:Generated_Source\PSoC5/ADC_SAR_1.c **** *  Sets the ADC gain in counts per volt for the voltage conversion functions
 677:Generated_Source\PSoC5/ADC_SAR_1.c **** *  that follow. This value is set by default by the reference and input range
 678:Generated_Source\PSoC5/ADC_SAR_1.c **** *  settings. It should only be used to further calibrate the ADC with a known
 679:Generated_Source\PSoC5/ADC_SAR_1.c **** *  input or if the ADC is using an external reference.
 680:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 681:Generated_Source\PSoC5/ADC_SAR_1.c **** * Parameters:
 682:Generated_Source\PSoC5/ADC_SAR_1.c **** *  int16 adcGain counts per volt
 683:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 684:Generated_Source\PSoC5/ADC_SAR_1.c **** * Return:
 685:Generated_Source\PSoC5/ADC_SAR_1.c **** *  None.
 686:Generated_Source\PSoC5/ADC_SAR_1.c **** *
ARM GAS  C:\Users\kevan\AppData\Local\Temp\ccXb7CWJ.s 			page 26


 687:Generated_Source\PSoC5/ADC_SAR_1.c **** * Global Variables:
 688:Generated_Source\PSoC5/ADC_SAR_1.c **** *  ADC_SAR_1_countsPer10Volt variable modified. This variable is used
 689:Generated_Source\PSoC5/ADC_SAR_1.c **** *  for gain calibration purpose.
 690:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 691:Generated_Source\PSoC5/ADC_SAR_1.c **** *******************************************************************************/
 692:Generated_Source\PSoC5/ADC_SAR_1.c **** void ADC_SAR_1_SetGain(int16 adcGain)
 693:Generated_Source\PSoC5/ADC_SAR_1.c **** {
 662              		.loc 1 693 0
 663              		.cfi_startproc
 664              		@ args = 0, pretend = 0, frame = 0
 665              		@ frame_needed = 0, uses_anonymous_args = 0
 666              		@ link register save eliminated.
 667              	.LVL44:
 694:Generated_Source\PSoC5/ADC_SAR_1.c ****     ADC_SAR_1_countsPer10Volt = (int32)adcGain * 10;
 668              		.loc 1 694 0
 669 0000 00EB8000 		add	r0, r0, r0, lsl #2
 670              	.LVL45:
 671 0004 4300     		lsls	r3, r0, #1
 672 0006 014A     		ldr	r2, .L64
 673 0008 1360     		str	r3, [r2]
 674 000a 7047     		bx	lr
 675              	.L65:
 676              		.align	2
 677              	.L64:
 678 000c 00000000 		.word	ADC_SAR_1_countsPer10Volt
 679              		.cfi_endproc
 680              	.LFE13:
 681              		.size	ADC_SAR_1_SetGain, .-ADC_SAR_1_SetGain
 682              		.section	.text.ADC_SAR_1_SetScaledGain,"ax",%progbits
 683              		.align	2
 684              		.global	ADC_SAR_1_SetScaledGain
 685              		.thumb
 686              		.thumb_func
 687              		.type	ADC_SAR_1_SetScaledGain, %function
 688              	ADC_SAR_1_SetScaledGain:
 689              	.LFB14:
 695:Generated_Source\PSoC5/ADC_SAR_1.c **** }
 696:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 697:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 698:Generated_Source\PSoC5/ADC_SAR_1.c **** /*******************************************************************************
 699:Generated_Source\PSoC5/ADC_SAR_1.c **** * Function Name: ADC_SAR_1_SetScaledGain
 700:Generated_Source\PSoC5/ADC_SAR_1.c **** ********************************************************************************
 701:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 702:Generated_Source\PSoC5/ADC_SAR_1.c **** * Summary:
 703:Generated_Source\PSoC5/ADC_SAR_1.c **** *  Sets the ADC gain in counts per 10 volt for the voltage conversion functions
 704:Generated_Source\PSoC5/ADC_SAR_1.c **** *  that follow. This value is set by default by the reference and input range
 705:Generated_Source\PSoC5/ADC_SAR_1.c **** *  settings. It should only be used to further calibrate the ADC with a known
 706:Generated_Source\PSoC5/ADC_SAR_1.c **** *  input or if the ADC is using an external reference.
 707:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 708:Generated_Source\PSoC5/ADC_SAR_1.c **** * Parameters:
 709:Generated_Source\PSoC5/ADC_SAR_1.c **** *  int32 adcGain  counts per 10 volt
 710:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 711:Generated_Source\PSoC5/ADC_SAR_1.c **** * Return:
 712:Generated_Source\PSoC5/ADC_SAR_1.c **** *  None.
 713:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 714:Generated_Source\PSoC5/ADC_SAR_1.c **** * Global Variables:
 715:Generated_Source\PSoC5/ADC_SAR_1.c **** *  ADC_SAR_1_countsPer10Volt variable modified. This variable is used
ARM GAS  C:\Users\kevan\AppData\Local\Temp\ccXb7CWJ.s 			page 27


 716:Generated_Source\PSoC5/ADC_SAR_1.c **** *  for gain calibration purpose.
 717:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 718:Generated_Source\PSoC5/ADC_SAR_1.c **** *******************************************************************************/
 719:Generated_Source\PSoC5/ADC_SAR_1.c **** void ADC_SAR_1_SetScaledGain(int32 adcGain)
 720:Generated_Source\PSoC5/ADC_SAR_1.c **** {
 690              		.loc 1 720 0
 691              		.cfi_startproc
 692              		@ args = 0, pretend = 0, frame = 0
 693              		@ frame_needed = 0, uses_anonymous_args = 0
 694              		@ link register save eliminated.
 695              	.LVL46:
 721:Generated_Source\PSoC5/ADC_SAR_1.c ****     ADC_SAR_1_countsPer10Volt = adcGain;
 696              		.loc 1 721 0
 697 0000 014B     		ldr	r3, .L67
 698 0002 1860     		str	r0, [r3]
 699 0004 7047     		bx	lr
 700              	.L68:
 701 0006 00BF     		.align	2
 702              	.L67:
 703 0008 00000000 		.word	ADC_SAR_1_countsPer10Volt
 704              		.cfi_endproc
 705              	.LFE14:
 706              		.size	ADC_SAR_1_SetScaledGain, .-ADC_SAR_1_SetScaledGain
 707              		.section	.text.ADC_SAR_1_CountsTo_mVolts,"ax",%progbits
 708              		.align	2
 709              		.global	ADC_SAR_1_CountsTo_mVolts
 710              		.thumb
 711              		.thumb_func
 712              		.type	ADC_SAR_1_CountsTo_mVolts, %function
 713              	ADC_SAR_1_CountsTo_mVolts:
 714              	.LFB15:
 722:Generated_Source\PSoC5/ADC_SAR_1.c **** }
 723:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 724:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 725:Generated_Source\PSoC5/ADC_SAR_1.c **** /*******************************************************************************
 726:Generated_Source\PSoC5/ADC_SAR_1.c **** * Function Name: ADC_SAR_1_CountsTo_mVolts
 727:Generated_Source\PSoC5/ADC_SAR_1.c **** ********************************************************************************
 728:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 729:Generated_Source\PSoC5/ADC_SAR_1.c **** * Summary:
 730:Generated_Source\PSoC5/ADC_SAR_1.c **** *  Converts the ADC output to millivolts as a 16-bit integer.
 731:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 732:Generated_Source\PSoC5/ADC_SAR_1.c **** * Parameters:
 733:Generated_Source\PSoC5/ADC_SAR_1.c **** *  int16 adcCounts:  Result from the ADC conversion
 734:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 735:Generated_Source\PSoC5/ADC_SAR_1.c **** * Return:
 736:Generated_Source\PSoC5/ADC_SAR_1.c **** *  int16 Result in mVolts
 737:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 738:Generated_Source\PSoC5/ADC_SAR_1.c **** * Global Variables:
 739:Generated_Source\PSoC5/ADC_SAR_1.c **** *  ADC_SAR_1_offset variable used.
 740:Generated_Source\PSoC5/ADC_SAR_1.c **** *  ADC_SAR_1_countsPer10Volt variable used.
 741:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 742:Generated_Source\PSoC5/ADC_SAR_1.c **** *******************************************************************************/
 743:Generated_Source\PSoC5/ADC_SAR_1.c **** int16 ADC_SAR_1_CountsTo_mVolts(int16 adcCounts)
 744:Generated_Source\PSoC5/ADC_SAR_1.c **** {
 715              		.loc 1 744 0
 716              		.cfi_startproc
 717              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\kevan\AppData\Local\Temp\ccXb7CWJ.s 			page 28


 718              		@ frame_needed = 0, uses_anonymous_args = 0
 719              		@ link register save eliminated.
 720              	.LVL47:
 721 0000 10B4     		push	{r4}
 722              		.cfi_def_cfa_offset 4
 723              		.cfi_offset 4, -4
 745:Generated_Source\PSoC5/ADC_SAR_1.c ****     int16 mVolts;
 746:Generated_Source\PSoC5/ADC_SAR_1.c ****     int32 countsPer10Volt;
 747:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 748:Generated_Source\PSoC5/ADC_SAR_1.c ****     if(ADC_SAR_1_countsPerVolt != 0)
 724              		.loc 1 748 0
 725 0002 124B     		ldr	r3, .L75
 726 0004 1B88     		ldrh	r3, [r3]
 727 0006 1BB2     		sxth	r3, r3
 728 0008 33B1     		cbz	r3, .L70
 749:Generated_Source\PSoC5/ADC_SAR_1.c ****     {   /* Support obsolete method */
 750:Generated_Source\PSoC5/ADC_SAR_1.c ****         countsPer10Volt = (int32)ADC_SAR_1_countsPerVolt * 10;
 729              		.loc 1 750 0
 730 000a 104B     		ldr	r3, .L75
 731 000c 1B88     		ldrh	r3, [r3]
 732 000e 1BB2     		sxth	r3, r3
 733 0010 03EB8303 		add	r3, r3, r3, lsl #2
 734 0014 5C00     		lsls	r4, r3, #1
 735              	.LVL48:
 736 0016 01E0     		b	.L71
 737              	.LVL49:
 738              	.L70:
 751:Generated_Source\PSoC5/ADC_SAR_1.c ****     }
 752:Generated_Source\PSoC5/ADC_SAR_1.c ****     else
 753:Generated_Source\PSoC5/ADC_SAR_1.c ****     {
 754:Generated_Source\PSoC5/ADC_SAR_1.c ****         countsPer10Volt = ADC_SAR_1_countsPer10Volt;
 739              		.loc 1 754 0
 740 0018 0D4B     		ldr	r3, .L75+4
 741 001a 1C68     		ldr	r4, [r3]
 742              	.LVL50:
 743              	.L71:
 755:Generated_Source\PSoC5/ADC_SAR_1.c ****     }
 756:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 757:Generated_Source\PSoC5/ADC_SAR_1.c ****     /* Subtract ADC offset */
 758:Generated_Source\PSoC5/ADC_SAR_1.c ****     adcCounts -= ADC_SAR_1_offset;
 744              		.loc 1 758 0
 745 001c 0D4B     		ldr	r3, .L75+8
 746 001e 1988     		ldrh	r1, [r3]
 747 0020 411A     		subs	r1, r0, r1
 748 0022 09B2     		sxth	r1, r1
 749              	.LVL51:
 759:Generated_Source\PSoC5/ADC_SAR_1.c ****     /* Convert to millivolts with rounding */
 760:Generated_Source\PSoC5/ADC_SAR_1.c ****     mVolts = (int16)( (( (int32)adcCounts * ADC_SAR_1_10MV_COUNTS ) + ( (adcCounts > 0) ?
 750              		.loc 1 760 0
 751 0024 42F21073 		movw	r3, #10000
 752 0028 03FB01F2 		mul	r2, r3, r1
 761:Generated_Source\PSoC5/ADC_SAR_1.c ****                        (countsPer10Volt / 2) : (-(countsPer10Volt / 2)) )) / countsPer10Volt);
 753              		.loc 1 761 0
 754 002c 0029     		cmp	r1, #0
 755 002e 03DD     		ble	.L72
 756              		.loc 1 761 0 is_stmt 0 discriminator 1
 757 0030 04EBD470 		add	r0, r4, r4, lsr #31
ARM GAS  C:\Users\kevan\AppData\Local\Temp\ccXb7CWJ.s 			page 29


 758 0034 4010     		asrs	r0, r0, #1
 759 0036 03E0     		b	.L73
 760              	.L72:
 761              		.loc 1 761 0 discriminator 2
 762 0038 04EBD470 		add	r0, r4, r4, lsr #31
 763 003c 4010     		asrs	r0, r0, #1
 764 003e 4042     		negs	r0, r0
 765              	.L73:
 760:Generated_Source\PSoC5/ADC_SAR_1.c ****                        (countsPer10Volt / 2) : (-(countsPer10Volt / 2)) )) / countsPer10Volt);
 766              		.loc 1 760 0 is_stmt 1
 767 0040 8318     		adds	r3, r0, r2
 768              		.loc 1 761 0
 769 0042 93FBF4F0 		sdiv	r0, r3, r4
 770              	.LVL52:
 762:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 763:Generated_Source\PSoC5/ADC_SAR_1.c ****     return( mVolts );
 764:Generated_Source\PSoC5/ADC_SAR_1.c **** }
 771              		.loc 1 764 0
 772 0046 00B2     		sxth	r0, r0
 773 0048 10BC     		pop	{r4}
 774              		.cfi_restore 4
 775              		.cfi_def_cfa_offset 0
 776              	.LVL53:
 777 004a 7047     		bx	lr
 778              	.L76:
 779              		.align	2
 780              	.L75:
 781 004c 00000000 		.word	ADC_SAR_1_countsPerVolt
 782 0050 00000000 		.word	ADC_SAR_1_countsPer10Volt
 783 0054 00000000 		.word	ADC_SAR_1_offset
 784              		.cfi_endproc
 785              	.LFE15:
 786              		.size	ADC_SAR_1_CountsTo_mVolts, .-ADC_SAR_1_CountsTo_mVolts
 787              		.global	__aeabi_ldivmod
 788              		.section	.text.ADC_SAR_1_CountsTo_uVolts,"ax",%progbits
 789              		.align	2
 790              		.global	ADC_SAR_1_CountsTo_uVolts
 791              		.thumb
 792              		.thumb_func
 793              		.type	ADC_SAR_1_CountsTo_uVolts, %function
 794              	ADC_SAR_1_CountsTo_uVolts:
 795              	.LFB16:
 765:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 766:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 767:Generated_Source\PSoC5/ADC_SAR_1.c **** /*******************************************************************************
 768:Generated_Source\PSoC5/ADC_SAR_1.c **** * Function Name: ADC_SAR_1_CountsTo_uVolts
 769:Generated_Source\PSoC5/ADC_SAR_1.c **** ********************************************************************************
 770:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 771:Generated_Source\PSoC5/ADC_SAR_1.c **** * Summary:
 772:Generated_Source\PSoC5/ADC_SAR_1.c **** *  Converts the ADC output to microvolts as a 32-bit integer.
 773:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 774:Generated_Source\PSoC5/ADC_SAR_1.c **** * Parameters:
 775:Generated_Source\PSoC5/ADC_SAR_1.c **** *  int16 adcCounts: Result from the ADC conversion
 776:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 777:Generated_Source\PSoC5/ADC_SAR_1.c **** * Return:
 778:Generated_Source\PSoC5/ADC_SAR_1.c **** *  int32 Result in micro Volts
 779:Generated_Source\PSoC5/ADC_SAR_1.c **** *
ARM GAS  C:\Users\kevan\AppData\Local\Temp\ccXb7CWJ.s 			page 30


 780:Generated_Source\PSoC5/ADC_SAR_1.c **** * Global Variables:
 781:Generated_Source\PSoC5/ADC_SAR_1.c **** *  ADC_SAR_1_offset variable used.
 782:Generated_Source\PSoC5/ADC_SAR_1.c **** *  ADC_SAR_1_countsPer10Volt used to convert ADC counts to uVolts.
 783:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 784:Generated_Source\PSoC5/ADC_SAR_1.c **** *******************************************************************************/
 785:Generated_Source\PSoC5/ADC_SAR_1.c **** int32 ADC_SAR_1_CountsTo_uVolts(int16 adcCounts)
 786:Generated_Source\PSoC5/ADC_SAR_1.c **** {
 796              		.loc 1 786 0
 797              		.cfi_startproc
 798              		@ args = 0, pretend = 0, frame = 0
 799              		@ frame_needed = 0, uses_anonymous_args = 0
 800              	.LVL54:
 801 0000 38B5     		push	{r3, r4, r5, lr}
 802              		.cfi_def_cfa_offset 16
 803              		.cfi_offset 3, -16
 804              		.cfi_offset 4, -12
 805              		.cfi_offset 5, -8
 806              		.cfi_offset 14, -4
 787:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 788:Generated_Source\PSoC5/ADC_SAR_1.c ****     int64 uVolts;
 789:Generated_Source\PSoC5/ADC_SAR_1.c ****     int32 countsPer10Volt;
 790:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 791:Generated_Source\PSoC5/ADC_SAR_1.c ****     if(ADC_SAR_1_countsPerVolt != 0)
 807              		.loc 1 791 0
 808 0002 0D4B     		ldr	r3, .L81
 809 0004 1B88     		ldrh	r3, [r3]
 810 0006 1BB2     		sxth	r3, r3
 811 0008 33B1     		cbz	r3, .L78
 792:Generated_Source\PSoC5/ADC_SAR_1.c ****     {   /* Support obsolete method */
 793:Generated_Source\PSoC5/ADC_SAR_1.c ****         countsPer10Volt = (int32)ADC_SAR_1_countsPerVolt * 10;
 812              		.loc 1 793 0
 813 000a 0B4B     		ldr	r3, .L81
 814 000c 1B88     		ldrh	r3, [r3]
 815 000e 1BB2     		sxth	r3, r3
 816 0010 03EB8303 		add	r3, r3, r3, lsl #2
 817 0014 5A00     		lsls	r2, r3, #1
 818              	.LVL55:
 819 0016 01E0     		b	.L79
 820              	.LVL56:
 821              	.L78:
 794:Generated_Source\PSoC5/ADC_SAR_1.c ****     }
 795:Generated_Source\PSoC5/ADC_SAR_1.c ****     else
 796:Generated_Source\PSoC5/ADC_SAR_1.c ****     {
 797:Generated_Source\PSoC5/ADC_SAR_1.c ****         countsPer10Volt = ADC_SAR_1_countsPer10Volt;
 822              		.loc 1 797 0
 823 0018 084B     		ldr	r3, .L81+4
 824 001a 1A68     		ldr	r2, [r3]
 825              	.LVL57:
 826              	.L79:
 798:Generated_Source\PSoC5/ADC_SAR_1.c ****     }
 799:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 800:Generated_Source\PSoC5/ADC_SAR_1.c ****     /* Subtract ADC offset */
 801:Generated_Source\PSoC5/ADC_SAR_1.c ****     adcCounts -= ADC_SAR_1_offset;
 827              		.loc 1 801 0
 828 001c 084B     		ldr	r3, .L81+8
 829 001e 1C88     		ldrh	r4, [r3]
 830 0020 041B     		subs	r4, r0, r4
ARM GAS  C:\Users\kevan\AppData\Local\Temp\ccXb7CWJ.s 			page 31


 831              	.LVL58:
 802:Generated_Source\PSoC5/ADC_SAR_1.c ****     /* To convert adcCounts to microVolts it is required to be multiplied
 803:Generated_Source\PSoC5/ADC_SAR_1.c ****     *  on 10 million and later divide on gain in counts per 10V.
 804:Generated_Source\PSoC5/ADC_SAR_1.c ****     */
 805:Generated_Source\PSoC5/ADC_SAR_1.c ****     uVolts = (( (int64)adcCounts * ADC_SAR_1_10UV_COUNTS ) / countsPer10Volt);
 832              		.loc 1 805 0
 833 0022 24B2     		sxth	r4, r4
 834 0024 E517     		asrs	r5, r4, #31
 835 0026 074B     		ldr	r3, .L81+12
 836 0028 A4FB0301 		umull	r0, r1, r4, r3
 837 002c 03FB0511 		mla	r1, r3, r5, r1
 838 0030 D317     		asrs	r3, r2, #31
 839 0032 FFF7FEFF 		bl	__aeabi_ldivmod
 840              	.LVL59:
 806:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 807:Generated_Source\PSoC5/ADC_SAR_1.c ****     return((int32) uVolts );
 808:Generated_Source\PSoC5/ADC_SAR_1.c **** }
 841              		.loc 1 808 0
 842 0036 38BD     		pop	{r3, r4, r5, pc}
 843              	.LVL60:
 844              	.L82:
 845              		.align	2
 846              	.L81:
 847 0038 00000000 		.word	ADC_SAR_1_countsPerVolt
 848 003c 00000000 		.word	ADC_SAR_1_countsPer10Volt
 849 0040 00000000 		.word	ADC_SAR_1_offset
 850 0044 80969800 		.word	10000000
 851              		.cfi_endproc
 852              	.LFE16:
 853              		.size	ADC_SAR_1_CountsTo_uVolts, .-ADC_SAR_1_CountsTo_uVolts
 854              		.global	__aeabi_i2f
 855              		.global	__aeabi_fmul
 856              		.global	__aeabi_fdiv
 857              		.section	.text.ADC_SAR_1_CountsTo_Volts,"ax",%progbits
 858              		.align	2
 859              		.global	ADC_SAR_1_CountsTo_Volts
 860              		.thumb
 861              		.thumb_func
 862              		.type	ADC_SAR_1_CountsTo_Volts, %function
 863              	ADC_SAR_1_CountsTo_Volts:
 864              	.LFB17:
 809:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 810:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 811:Generated_Source\PSoC5/ADC_SAR_1.c **** /*******************************************************************************
 812:Generated_Source\PSoC5/ADC_SAR_1.c **** * Function Name: ADC_SAR_1_CountsTo_Volts
 813:Generated_Source\PSoC5/ADC_SAR_1.c **** ********************************************************************************
 814:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 815:Generated_Source\PSoC5/ADC_SAR_1.c **** * Summary:
 816:Generated_Source\PSoC5/ADC_SAR_1.c **** *  Converts the ADC output to volts as a floating-point number.
 817:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 818:Generated_Source\PSoC5/ADC_SAR_1.c **** * Parameters:
 819:Generated_Source\PSoC5/ADC_SAR_1.c **** *  int16 adcCounts: Result from the ADC conversion
 820:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 821:Generated_Source\PSoC5/ADC_SAR_1.c **** * Return:
 822:Generated_Source\PSoC5/ADC_SAR_1.c **** *  float Result in Volts
 823:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 824:Generated_Source\PSoC5/ADC_SAR_1.c **** * Global Variables:
ARM GAS  C:\Users\kevan\AppData\Local\Temp\ccXb7CWJ.s 			page 32


 825:Generated_Source\PSoC5/ADC_SAR_1.c **** *  ADC_SAR_1_offset variable used.
 826:Generated_Source\PSoC5/ADC_SAR_1.c **** *  ADC_SAR_1_countsPer10Volt used to convert ADC counts to Volts.
 827:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 828:Generated_Source\PSoC5/ADC_SAR_1.c **** *******************************************************************************/
 829:Generated_Source\PSoC5/ADC_SAR_1.c **** float32 ADC_SAR_1_CountsTo_Volts(int16 adcCounts)
 830:Generated_Source\PSoC5/ADC_SAR_1.c **** {
 865              		.loc 1 830 0
 866              		.cfi_startproc
 867              		@ args = 0, pretend = 0, frame = 0
 868              		@ frame_needed = 0, uses_anonymous_args = 0
 869              	.LVL61:
 870 0000 38B5     		push	{r3, r4, r5, lr}
 871              		.cfi_def_cfa_offset 16
 872              		.cfi_offset 3, -16
 873              		.cfi_offset 4, -12
 874              		.cfi_offset 5, -8
 875              		.cfi_offset 14, -4
 831:Generated_Source\PSoC5/ADC_SAR_1.c ****     float32 volts;
 832:Generated_Source\PSoC5/ADC_SAR_1.c ****     int32 countsPer10Volt;
 833:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 834:Generated_Source\PSoC5/ADC_SAR_1.c ****     if(ADC_SAR_1_countsPerVolt != 0)
 876              		.loc 1 834 0
 877 0002 0F4B     		ldr	r3, .L87
 878 0004 1B88     		ldrh	r3, [r3]
 879 0006 1BB2     		sxth	r3, r3
 880 0008 33B1     		cbz	r3, .L84
 835:Generated_Source\PSoC5/ADC_SAR_1.c ****     {   /* Support obsolete method */
 836:Generated_Source\PSoC5/ADC_SAR_1.c ****         countsPer10Volt = (int32)ADC_SAR_1_countsPerVolt * 10;
 881              		.loc 1 836 0
 882 000a 0D4B     		ldr	r3, .L87
 883 000c 1B88     		ldrh	r3, [r3]
 884 000e 1BB2     		sxth	r3, r3
 885 0010 03EB8303 		add	r3, r3, r3, lsl #2
 886 0014 5C00     		lsls	r4, r3, #1
 887              	.LVL62:
 888 0016 01E0     		b	.L85
 889              	.LVL63:
 890              	.L84:
 837:Generated_Source\PSoC5/ADC_SAR_1.c ****     }
 838:Generated_Source\PSoC5/ADC_SAR_1.c ****     else
 839:Generated_Source\PSoC5/ADC_SAR_1.c ****     {
 840:Generated_Source\PSoC5/ADC_SAR_1.c ****         countsPer10Volt = ADC_SAR_1_countsPer10Volt;
 891              		.loc 1 840 0
 892 0018 0A4B     		ldr	r3, .L87+4
 893 001a 1C68     		ldr	r4, [r3]
 894              	.LVL64:
 895              	.L85:
 841:Generated_Source\PSoC5/ADC_SAR_1.c ****     }
 842:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 843:Generated_Source\PSoC5/ADC_SAR_1.c ****     /* Subtract ADC offset */
 844:Generated_Source\PSoC5/ADC_SAR_1.c ****     adcCounts -= ADC_SAR_1_offset;
 896              		.loc 1 844 0
 897 001c 0A4B     		ldr	r3, .L87+8
 898 001e 1B88     		ldrh	r3, [r3]
 899 0020 C01A     		subs	r0, r0, r3
 900              	.LVL65:
 845:Generated_Source\PSoC5/ADC_SAR_1.c **** 
ARM GAS  C:\Users\kevan\AppData\Local\Temp\ccXb7CWJ.s 			page 33


 846:Generated_Source\PSoC5/ADC_SAR_1.c ****     volts = ((float32)adcCounts * ADC_SAR_1_10V_COUNTS) / (float32)countsPer10Volt;
 901              		.loc 1 846 0
 902 0022 00B2     		sxth	r0, r0
 903 0024 FFF7FEFF 		bl	__aeabi_i2f
 904              	.LVL66:
 905 0028 0849     		ldr	r1, .L87+12
 906 002a FFF7FEFF 		bl	__aeabi_fmul
 907              	.LVL67:
 908 002e 0546     		mov	r5, r0
 909 0030 2046     		mov	r0, r4
 910 0032 FFF7FEFF 		bl	__aeabi_i2f
 911              	.LVL68:
 912 0036 0146     		mov	r1, r0
 913 0038 2846     		mov	r0, r5
 914 003a FFF7FEFF 		bl	__aeabi_fdiv
 915              	.LVL69:
 847:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 848:Generated_Source\PSoC5/ADC_SAR_1.c ****     return( volts );
 849:Generated_Source\PSoC5/ADC_SAR_1.c **** }
 916              		.loc 1 849 0
 917 003e 38BD     		pop	{r3, r4, r5, pc}
 918              	.LVL70:
 919              	.L88:
 920              		.align	2
 921              	.L87:
 922 0040 00000000 		.word	ADC_SAR_1_countsPerVolt
 923 0044 00000000 		.word	ADC_SAR_1_countsPer10Volt
 924 0048 00000000 		.word	ADC_SAR_1_offset
 925 004c 00002041 		.word	1092616192
 926              		.cfi_endproc
 927              	.LFE17:
 928              		.size	ADC_SAR_1_CountsTo_Volts, .-ADC_SAR_1_CountsTo_Volts
 929              		.comm	ADC_SAR_1_shift,2,2
 930              		.comm	ADC_SAR_1_countsPer10Volt,4,4
 931              		.comm	ADC_SAR_1_countsPerVolt,2,2
 932              		.comm	ADC_SAR_1_offset,2,2
 933              		.global	ADC_SAR_1_initVar
 934              		.bss
 935              		.set	.LANCHOR0,. + 0
 936              		.type	ADC_SAR_1_initVar, %object
 937              		.size	ADC_SAR_1_initVar, 1
 938              	ADC_SAR_1_initVar:
 939 0000 00       		.space	1
 940              		.text
 941              	.Letext0:
 942              		.file 2 "Generated_Source\\PSoC5\\cytypes.h"
 943              		.file 3 "Generated_Source\\PSoC5\\CyLib.h"
 944              		.file 4 "Generated_Source\\PSoC5\\ADC_SAR_1_theACLK.h"
 945              		.section	.debug_info,"",%progbits
 946              	.Ldebug_info0:
 947 0000 BC050000 		.4byte	0x5bc
 948 0004 0400     		.2byte	0x4
 949 0006 00000000 		.4byte	.Ldebug_abbrev0
 950 000a 04       		.byte	0x4
 951 000b 01       		.uleb128 0x1
 952 000c B0020000 		.4byte	.LASF66
 953 0010 0C       		.byte	0xc
ARM GAS  C:\Users\kevan\AppData\Local\Temp\ccXb7CWJ.s 			page 34


 954 0011 5F030000 		.4byte	.LASF67
 955 0015 6C040000 		.4byte	.LASF68
 956 0019 00000000 		.4byte	.Ldebug_ranges0+0
 957 001d 00000000 		.4byte	0
 958 0021 00000000 		.4byte	.Ldebug_line0
 959 0025 02       		.uleb128 0x2
 960 0026 04       		.byte	0x4
 961 0027 05       		.byte	0x5
 962 0028 696E7400 		.ascii	"int\000"
 963 002c 03       		.uleb128 0x3
 964 002d 04       		.byte	0x4
 965 002e 07       		.byte	0x7
 966 002f E8000000 		.4byte	.LASF0
 967 0033 03       		.uleb128 0x3
 968 0034 08       		.byte	0x8
 969 0035 05       		.byte	0x5
 970 0036 63000000 		.4byte	.LASF1
 971 003a 03       		.uleb128 0x3
 972 003b 08       		.byte	0x8
 973 003c 04       		.byte	0x4
 974 003d 88010000 		.4byte	.LASF2
 975 0041 03       		.uleb128 0x3
 976 0042 01       		.byte	0x1
 977 0043 06       		.byte	0x6
 978 0044 71000000 		.4byte	.LASF3
 979 0048 03       		.uleb128 0x3
 980 0049 01       		.byte	0x1
 981 004a 08       		.byte	0x8
 982 004b 4D020000 		.4byte	.LASF4
 983 004f 03       		.uleb128 0x3
 984 0050 02       		.byte	0x2
 985 0051 05       		.byte	0x5
 986 0052 75020000 		.4byte	.LASF5
 987 0056 03       		.uleb128 0x3
 988 0057 02       		.byte	0x2
 989 0058 07       		.byte	0x7
 990 0059 2B010000 		.4byte	.LASF6
 991 005d 03       		.uleb128 0x3
 992 005e 04       		.byte	0x4
 993 005f 05       		.byte	0x5
 994 0060 83000000 		.4byte	.LASF7
 995 0064 03       		.uleb128 0x3
 996 0065 04       		.byte	0x4
 997 0066 07       		.byte	0x7
 998 0067 FC000000 		.4byte	.LASF8
 999 006b 03       		.uleb128 0x3
 1000 006c 08       		.byte	0x8
 1001 006d 07       		.byte	0x7
 1002 006e 4C000000 		.4byte	.LASF9
 1003 0072 03       		.uleb128 0x3
 1004 0073 04       		.byte	0x4
 1005 0074 07       		.byte	0x7
 1006 0075 7F010000 		.4byte	.LASF10
 1007 0079 03       		.uleb128 0x3
 1008 007a 01       		.byte	0x1
 1009 007b 08       		.byte	0x8
 1010 007c 82030000 		.4byte	.LASF11
ARM GAS  C:\Users\kevan\AppData\Local\Temp\ccXb7CWJ.s 			page 35


 1011 0080 04       		.uleb128 0x4
 1012 0081 A3000000 		.4byte	.LASF12
 1013 0085 02       		.byte	0x2
 1014 0086 9201     		.2byte	0x192
 1015 0088 48000000 		.4byte	0x48
 1016 008c 04       		.uleb128 0x4
 1017 008d 00000000 		.4byte	.LASF13
 1018 0091 02       		.byte	0x2
 1019 0092 9301     		.2byte	0x193
 1020 0094 56000000 		.4byte	0x56
 1021 0098 04       		.uleb128 0x4
 1022 0099 BA000000 		.4byte	.LASF14
 1023 009d 02       		.byte	0x2
 1024 009e 9401     		.2byte	0x194
 1025 00a0 64000000 		.4byte	0x64
 1026 00a4 04       		.uleb128 0x4
 1027 00a5 4D010000 		.4byte	.LASF15
 1028 00a9 02       		.byte	0x2
 1029 00aa 9501     		.2byte	0x195
 1030 00ac 41000000 		.4byte	0x41
 1031 00b0 04       		.uleb128 0x4
 1032 00b1 1E040000 		.4byte	.LASF16
 1033 00b5 02       		.byte	0x2
 1034 00b6 9601     		.2byte	0x196
 1035 00b8 4F000000 		.4byte	0x4f
 1036 00bc 04       		.uleb128 0x4
 1037 00bd 7D000000 		.4byte	.LASF17
 1038 00c1 02       		.byte	0x2
 1039 00c2 9701     		.2byte	0x197
 1040 00c4 5D000000 		.4byte	0x5d
 1041 00c8 04       		.uleb128 0x4
 1042 00c9 77010000 		.4byte	.LASF18
 1043 00cd 02       		.byte	0x2
 1044 00ce 9801     		.2byte	0x198
 1045 00d0 D4000000 		.4byte	0xd4
 1046 00d4 03       		.uleb128 0x3
 1047 00d5 04       		.byte	0x4
 1048 00d6 04       		.byte	0x4
 1049 00d7 23020000 		.4byte	.LASF19
 1050 00db 03       		.uleb128 0x3
 1051 00dc 08       		.byte	0x8
 1052 00dd 04       		.byte	0x4
 1053 00de B3000000 		.4byte	.LASF20
 1054 00e2 04       		.uleb128 0x4
 1055 00e3 F8010000 		.4byte	.LASF21
 1056 00e7 02       		.byte	0x2
 1057 00e8 9D01     		.2byte	0x19d
 1058 00ea 33000000 		.4byte	0x33
 1059 00ee 04       		.uleb128 0x4
 1060 00ef 41020000 		.4byte	.LASF22
 1061 00f3 02       		.byte	0x2
 1062 00f4 3C02     		.2byte	0x23c
 1063 00f6 FA000000 		.4byte	0xfa
 1064 00fa 05       		.uleb128 0x5
 1065 00fb 80000000 		.4byte	0x80
 1066 00ff 04       		.uleb128 0x4
 1067 0100 9D000000 		.4byte	.LASF23
ARM GAS  C:\Users\kevan\AppData\Local\Temp\ccXb7CWJ.s 			page 36


 1068 0104 02       		.byte	0x2
 1069 0105 3D02     		.2byte	0x23d
 1070 0107 0B010000 		.4byte	0x10b
 1071 010b 05       		.uleb128 0x5
 1072 010c 8C000000 		.4byte	0x8c
 1073 0110 04       		.uleb128 0x4
 1074 0111 59010000 		.4byte	.LASF24
 1075 0115 02       		.byte	0x2
 1076 0116 3E02     		.2byte	0x23e
 1077 0118 1C010000 		.4byte	0x11c
 1078 011c 05       		.uleb128 0x5
 1079 011d 98000000 		.4byte	0x98
 1080 0121 06       		.uleb128 0x6
 1081 0122 39000000 		.4byte	.LASF69
 1082 0126 01       		.byte	0x1
 1083 0127 6302     		.2byte	0x263
 1084 0129 00000000 		.4byte	.LFB12
 1085 012d 64000000 		.4byte	.LFE12-.LFB12
 1086 0131 01       		.uleb128 0x1
 1087 0132 9C       		.byte	0x9c
 1088 0133 67010000 		.4byte	0x167
 1089 0137 07       		.uleb128 0x7
 1090 0138 54030000 		.4byte	.LASF31
 1091 013c 01       		.byte	0x1
 1092 013d 6302     		.2byte	0x263
 1093 013f 80000000 		.4byte	0x80
 1094 0143 00000000 		.4byte	.LLST0
 1095 0147 08       		.uleb128 0x8
 1096 0148 32000000 		.4byte	.LASF25
 1097 014c 01       		.byte	0x1
 1098 014d 6502     		.2byte	0x265
 1099 014f BC000000 		.4byte	0xbc
 1100 0153 3A000000 		.4byte	.LLST1
 1101 0157 09       		.uleb128 0x9
 1102 0158 22000000 		.4byte	.LVL4
 1103 015c 72050000 		.4byte	0x572
 1104 0160 0A       		.uleb128 0xa
 1105 0161 01       		.uleb128 0x1
 1106 0162 50       		.byte	0x50
 1107 0163 01       		.uleb128 0x1
 1108 0164 30       		.byte	0x30
 1109 0165 00       		.byte	0
 1110 0166 00       		.byte	0
 1111 0167 0B       		.uleb128 0xb
 1112 0168 87020000 		.4byte	.LASF28
 1113 016c 01       		.byte	0x1
 1114 016d 8F       		.byte	0x8f
 1115 016e 00000000 		.4byte	.LFB2
 1116 0172 94000000 		.4byte	.LFE2-.LFB2
 1117 0176 01       		.uleb128 0x1
 1118 0177 9C       		.byte	0x9c
 1119 0178 C7010000 		.4byte	0x1c7
 1120 017c 0C       		.uleb128 0xc
 1121 017d 55040000 		.4byte	.LASF26
 1122 0181 01       		.byte	0x1
 1123 0182 91       		.byte	0x91
 1124 0183 80000000 		.4byte	0x80
ARM GAS  C:\Users\kevan\AppData\Local\Temp\ccXb7CWJ.s 			page 37


 1125 0187 67000000 		.4byte	.LLST2
 1126 018b 0C       		.uleb128 0xc
 1127 018c C7030000 		.4byte	.LASF27
 1128 0190 01       		.byte	0x1
 1129 0191 92       		.byte	0x92
 1130 0192 80000000 		.4byte	0x80
 1131 0196 98000000 		.4byte	.LLST3
 1132 019a 0D       		.uleb128 0xd
 1133 019b 06000000 		.4byte	.LVL8
 1134 019f 7D050000 		.4byte	0x57d
 1135 01a3 0E       		.uleb128 0xe
 1136 01a4 76000000 		.4byte	.LVL14
 1137 01a8 88050000 		.4byte	0x588
 1138 01ac B6010000 		.4byte	0x1b6
 1139 01b0 0A       		.uleb128 0xa
 1140 01b1 01       		.uleb128 0x1
 1141 01b2 50       		.byte	0x50
 1142 01b3 01       		.uleb128 0x1
 1143 01b4 3A       		.byte	0x3a
 1144 01b5 00       		.byte	0
 1145 01b6 09       		.uleb128 0x9
 1146 01b7 82000000 		.4byte	.LVL15
 1147 01bb 93050000 		.4byte	0x593
 1148 01bf 0A       		.uleb128 0xa
 1149 01c0 01       		.uleb128 0x1
 1150 01c1 50       		.byte	0x50
 1151 01c2 02       		.uleb128 0x2
 1152 01c3 74       		.byte	0x74
 1153 01c4 00       		.sleb128 0
 1154 01c5 00       		.byte	0
 1155 01c6 00       		.byte	0
 1156 01c7 0B       		.uleb128 0xb
 1157 01c8 B7040000 		.4byte	.LASF29
 1158 01cc 01       		.byte	0x1
 1159 01cd F8       		.byte	0xf8
 1160 01ce 00000000 		.4byte	.LFB3
 1161 01d2 48000000 		.4byte	.LFE3-.LFB3
 1162 01d6 01       		.uleb128 0x1
 1163 01d7 9C       		.byte	0x9c
 1164 01d8 FE010000 		.4byte	0x1fe
 1165 01dc 0C       		.uleb128 0xc
 1166 01dd C7030000 		.4byte	.LASF27
 1167 01e1 01       		.byte	0x1
 1168 01e2 FA       		.byte	0xfa
 1169 01e3 80000000 		.4byte	0x80
 1170 01e7 AB000000 		.4byte	.LLST4
 1171 01eb 0D       		.uleb128 0xd
 1172 01ec 06000000 		.4byte	.LVL17
 1173 01f0 7D050000 		.4byte	0x57d
 1174 01f4 0D       		.uleb128 0xd
 1175 01f5 40000000 		.4byte	.LVL18
 1176 01f9 93050000 		.4byte	0x593
 1177 01fd 00       		.byte	0
 1178 01fe 0F       		.uleb128 0xf
 1179 01ff F9030000 		.4byte	.LASF30
 1180 0203 01       		.byte	0x1
 1181 0204 2201     		.2byte	0x122
ARM GAS  C:\Users\kevan\AppData\Local\Temp\ccXb7CWJ.s 			page 38


 1182 0206 00000000 		.4byte	.LFB4
 1183 020a 18000000 		.4byte	.LFE4-.LFB4
 1184 020e 01       		.uleb128 0x1
 1185 020f 9C       		.byte	0x9c
 1186 0210 35020000 		.4byte	0x235
 1187 0214 07       		.uleb128 0x7
 1188 0215 3B020000 		.4byte	.LASF32
 1189 0219 01       		.byte	0x1
 1190 021a 2201     		.2byte	0x122
 1191 021c 80000000 		.4byte	0x80
 1192 0220 BE000000 		.4byte	.LLST5
 1193 0224 08       		.uleb128 0x8
 1194 0225 55040000 		.4byte	.LASF26
 1195 0229 01       		.byte	0x1
 1196 022a 2401     		.2byte	0x124
 1197 022c 80000000 		.4byte	0x80
 1198 0230 F0000000 		.4byte	.LLST6
 1199 0234 00       		.byte	0
 1200 0235 0F       		.uleb128 0xf
 1201 0236 94010000 		.4byte	.LASF33
 1202 023a 01       		.byte	0x1
 1203 023b 5401     		.2byte	0x154
 1204 023d 00000000 		.4byte	.LFB5
 1205 0241 38000000 		.4byte	.LFE5-.LFB5
 1206 0245 01       		.uleb128 0x1
 1207 0246 9C       		.byte	0x9c
 1208 0247 8F020000 		.4byte	0x28f
 1209 024b 07       		.uleb128 0x7
 1210 024c 54030000 		.4byte	.LASF31
 1211 0250 01       		.byte	0x1
 1212 0251 5401     		.2byte	0x154
 1213 0253 80000000 		.4byte	0x80
 1214 0257 0E010000 		.4byte	.LLST7
 1215 025b 08       		.uleb128 0x8
 1216 025c 55040000 		.4byte	.LASF26
 1217 0260 01       		.byte	0x1
 1218 0261 5601     		.2byte	0x156
 1219 0263 80000000 		.4byte	0x80
 1220 0267 48010000 		.4byte	.LLST8
 1221 026b 0E       		.uleb128 0xe
 1222 026c 20000000 		.4byte	.LVL27
 1223 0270 72050000 		.4byte	0x572
 1224 0274 7E020000 		.4byte	0x27e
 1225 0278 0A       		.uleb128 0xa
 1226 0279 01       		.uleb128 0x1
 1227 027a 50       		.byte	0x50
 1228 027b 01       		.uleb128 0x1
 1229 027c 30       		.byte	0x30
 1230 027d 00       		.byte	0
 1231 027e 09       		.uleb128 0x9
 1232 027f 30000000 		.4byte	.LVL30
 1233 0283 21010000 		.4byte	0x121
 1234 0287 0A       		.uleb128 0xa
 1235 0288 01       		.uleb128 0x1
 1236 0289 50       		.byte	0x50
 1237 028a 02       		.uleb128 0x2
 1238 028b 74       		.byte	0x74
ARM GAS  C:\Users\kevan\AppData\Local\Temp\ccXb7CWJ.s 			page 39


 1239 028c 00       		.sleb128 0
 1240 028d 00       		.byte	0
 1241 028e 00       		.byte	0
 1242 028f 0B       		.uleb128 0xb
 1243 0290 3E010000 		.4byte	.LASF34
 1244 0294 01       		.byte	0x1
 1245 0295 6A       		.byte	0x6a
 1246 0296 00000000 		.4byte	.LFB1
 1247 029a 3C000000 		.4byte	.LFE1-.LFB1
 1248 029e 01       		.uleb128 0x1
 1249 029f 9C       		.byte	0x9c
 1250 02a0 F2020000 		.4byte	0x2f2
 1251 02a4 0E       		.uleb128 0xe
 1252 02a5 08000000 		.4byte	.LVL31
 1253 02a9 9E050000 		.4byte	0x59e
 1254 02ad B7020000 		.4byte	0x2b7
 1255 02b1 0A       		.uleb128 0xa
 1256 02b2 01       		.uleb128 0x1
 1257 02b3 50       		.byte	0x50
 1258 02b4 01       		.uleb128 0x1
 1259 02b5 40       		.byte	0x40
 1260 02b6 00       		.byte	0
 1261 02b7 0E       		.uleb128 0xe
 1262 02b8 10000000 		.4byte	.LVL32
 1263 02bc A9050000 		.4byte	0x5a9
 1264 02c0 CF020000 		.4byte	0x2cf
 1265 02c4 0A       		.uleb128 0xa
 1266 02c5 01       		.uleb128 0x1
 1267 02c6 50       		.byte	0x50
 1268 02c7 01       		.uleb128 0x1
 1269 02c8 30       		.byte	0x30
 1270 02c9 0A       		.uleb128 0xa
 1271 02ca 01       		.uleb128 0x1
 1272 02cb 51       		.byte	0x51
 1273 02cc 01       		.uleb128 0x1
 1274 02cd 37       		.byte	0x37
 1275 02ce 00       		.byte	0
 1276 02cf 0E       		.uleb128 0xe
 1277 02d0 18000000 		.4byte	.LVL33
 1278 02d4 B4050000 		.4byte	0x5b4
 1279 02d8 E2020000 		.4byte	0x2e2
 1280 02dc 0A       		.uleb128 0xa
 1281 02dd 01       		.uleb128 0x1
 1282 02de 50       		.byte	0x50
 1283 02df 01       		.uleb128 0x1
 1284 02e0 30       		.byte	0x30
 1285 02e1 00       		.byte	0
 1286 02e2 09       		.uleb128 0x9
 1287 02e3 28000000 		.4byte	.LVL34
 1288 02e7 35020000 		.4byte	0x235
 1289 02eb 0A       		.uleb128 0xa
 1290 02ec 01       		.uleb128 0x1
 1291 02ed 50       		.byte	0x50
 1292 02ee 01       		.uleb128 0x1
 1293 02ef 3C       		.byte	0x3c
 1294 02f0 00       		.byte	0
 1295 02f1 00       		.byte	0
ARM GAS  C:\Users\kevan\AppData\Local\Temp\ccXb7CWJ.s 			page 40


 1296 02f2 0B       		.uleb128 0xb
 1297 02f3 E8010000 		.4byte	.LASF35
 1298 02f7 01       		.byte	0x1
 1299 02f8 4A       		.byte	0x4a
 1300 02f9 00000000 		.4byte	.LFB0
 1301 02fd 1C000000 		.4byte	.LFE0-.LFB0
 1302 0301 01       		.uleb128 0x1
 1303 0302 9C       		.byte	0x9c
 1304 0303 1A030000 		.4byte	0x31a
 1305 0307 0D       		.uleb128 0xd
 1306 0308 0C000000 		.4byte	.LVL35
 1307 030c 8F020000 		.4byte	0x28f
 1308 0310 0D       		.uleb128 0xd
 1309 0311 16000000 		.4byte	.LVL36
 1310 0315 67010000 		.4byte	0x167
 1311 0319 00       		.byte	0
 1312 031a 10       		.uleb128 0x10
 1313 031b 3E040000 		.4byte	.LASF36
 1314 031f 01       		.byte	0x1
 1315 0320 9101     		.2byte	0x191
 1316 0322 00000000 		.4byte	.LFB6
 1317 0326 18000000 		.4byte	.LFE6-.LFB6
 1318 032a 01       		.uleb128 0x1
 1319 032b 9C       		.byte	0x9c
 1320 032c 10       		.uleb128 0x10
 1321 032d A7030000 		.4byte	.LASF37
 1322 0331 01       		.byte	0x1
 1323 0332 B301     		.2byte	0x1b3
 1324 0334 00000000 		.4byte	.LFB7
 1325 0338 18000000 		.4byte	.LFE7-.LFB7
 1326 033c 01       		.uleb128 0x1
 1327 033d 9C       		.byte	0x9c
 1328 033e 11       		.uleb128 0x11
 1329 033f DF030000 		.4byte	.LASF40
 1330 0343 01       		.byte	0x1
 1331 0344 DB01     		.2byte	0x1db
 1332 0346 80000000 		.4byte	0x80
 1333 034a 00000000 		.4byte	.LFB8
 1334 034e 24000000 		.4byte	.LFE8-.LFB8
 1335 0352 01       		.uleb128 0x1
 1336 0353 9C       		.byte	0x9c
 1337 0354 88030000 		.4byte	0x388
 1338 0358 07       		.uleb128 0x7
 1339 0359 E0000000 		.4byte	.LASF38
 1340 035d 01       		.byte	0x1
 1341 035e DB01     		.2byte	0x1db
 1342 0360 80000000 		.4byte	0x80
 1343 0364 75010000 		.4byte	.LLST9
 1344 0368 08       		.uleb128 0x8
 1345 0369 D8030000 		.4byte	.LASF39
 1346 036d 01       		.byte	0x1
 1347 036e DD01     		.2byte	0x1dd
 1348 0370 80000000 		.4byte	0x80
 1349 0374 96010000 		.4byte	.LLST10
 1350 0378 09       		.uleb128 0x9
 1351 0379 18000000 		.4byte	.LVL40
 1352 037d 88050000 		.4byte	0x588
ARM GAS  C:\Users\kevan\AppData\Local\Temp\ccXb7CWJ.s 			page 41


 1353 0381 0A       		.uleb128 0xa
 1354 0382 01       		.uleb128 0x1
 1355 0383 50       		.byte	0x50
 1356 0384 01       		.uleb128 0x1
 1357 0385 31       		.byte	0x31
 1358 0386 00       		.byte	0
 1359 0387 00       		.byte	0
 1360 0388 12       		.uleb128 0x12
 1361 0389 07000000 		.4byte	.LASF70
 1362 038d 01       		.byte	0x1
 1363 038e 0802     		.2byte	0x208
 1364 0390 A4000000 		.4byte	0xa4
 1365 0394 00000000 		.4byte	.LFB9
 1366 0398 18000000 		.4byte	.LFE9-.LFB9
 1367 039c 01       		.uleb128 0x1
 1368 039d 9C       		.byte	0x9c
 1369 039e 11       		.uleb128 0x11
 1370 039f 3E030000 		.4byte	.LASF41
 1371 03a3 01       		.byte	0x1
 1372 03a4 2602     		.2byte	0x226
 1373 03a6 B0000000 		.4byte	0xb0
 1374 03aa 00000000 		.4byte	.LFB10
 1375 03ae 18000000 		.4byte	.LFE10-.LFB10
 1376 03b2 01       		.uleb128 0x1
 1377 03b3 9C       		.byte	0x9c
 1378 03b4 C9030000 		.4byte	0x3c9
 1379 03b8 13       		.uleb128 0x13
 1380 03b9 72657300 		.ascii	"res\000"
 1381 03bd 01       		.byte	0x1
 1382 03be 2802     		.2byte	0x228
 1383 03c0 8C000000 		.4byte	0x8c
 1384 03c4 AD010000 		.4byte	.LLST11
 1385 03c8 00       		.byte	0
 1386 03c9 0F       		.uleb128 0xf
 1387 03ca FE010000 		.4byte	.LASF42
 1388 03ce 01       		.byte	0x1
 1389 03cf 4902     		.2byte	0x249
 1390 03d1 00000000 		.4byte	.LFB11
 1391 03d5 0C000000 		.4byte	.LFE11-.LFB11
 1392 03d9 01       		.uleb128 0x1
 1393 03da 9C       		.byte	0x9c
 1394 03db EE030000 		.4byte	0x3ee
 1395 03df 14       		.uleb128 0x14
 1396 03e0 A0030000 		.4byte	.LASF43
 1397 03e4 01       		.byte	0x1
 1398 03e5 4902     		.2byte	0x249
 1399 03e7 B0000000 		.4byte	0xb0
 1400 03eb 01       		.uleb128 0x1
 1401 03ec 50       		.byte	0x50
 1402 03ed 00       		.byte	0
 1403 03ee 0F       		.uleb128 0xf
 1404 03ef 0C040000 		.4byte	.LASF44
 1405 03f3 01       		.byte	0x1
 1406 03f4 B402     		.2byte	0x2b4
 1407 03f6 00000000 		.4byte	.LFB13
 1408 03fa 10000000 		.4byte	.LFE13-.LFB13
 1409 03fe 01       		.uleb128 0x1
ARM GAS  C:\Users\kevan\AppData\Local\Temp\ccXb7CWJ.s 			page 42


 1410 03ff 9C       		.byte	0x9c
 1411 0400 15040000 		.4byte	0x415
 1412 0404 07       		.uleb128 0x7
 1413 0405 7F020000 		.4byte	.LASF45
 1414 0409 01       		.byte	0x1
 1415 040a B402     		.2byte	0x2b4
 1416 040c B0000000 		.4byte	0xb0
 1417 0410 C0010000 		.4byte	.LLST12
 1418 0414 00       		.byte	0
 1419 0415 0F       		.uleb128 0xf
 1420 0416 98020000 		.4byte	.LASF46
 1421 041a 01       		.byte	0x1
 1422 041b CF02     		.2byte	0x2cf
 1423 041d 00000000 		.4byte	.LFB14
 1424 0421 0C000000 		.4byte	.LFE14-.LFB14
 1425 0425 01       		.uleb128 0x1
 1426 0426 9C       		.byte	0x9c
 1427 0427 3A040000 		.4byte	0x43a
 1428 042b 14       		.uleb128 0x14
 1429 042c 7F020000 		.4byte	.LASF45
 1430 0430 01       		.byte	0x1
 1431 0431 CF02     		.2byte	0x2cf
 1432 0433 BC000000 		.4byte	0xbc
 1433 0437 01       		.uleb128 0x1
 1434 0438 50       		.byte	0x50
 1435 0439 00       		.byte	0
 1436 043a 11       		.uleb128 0x11
 1437 043b 5B020000 		.4byte	.LASF47
 1438 043f 01       		.byte	0x1
 1439 0440 E702     		.2byte	0x2e7
 1440 0442 B0000000 		.4byte	0xb0
 1441 0446 00000000 		.4byte	.LFB15
 1442 044a 58000000 		.4byte	.LFE15-.LFB15
 1443 044e 01       		.uleb128 0x1
 1444 044f 9C       		.byte	0x9c
 1445 0450 83040000 		.4byte	0x483
 1446 0454 07       		.uleb128 0x7
 1447 0455 BD030000 		.4byte	.LASF48
 1448 0459 01       		.byte	0x1
 1449 045a E702     		.2byte	0x2e7
 1450 045c B0000000 		.4byte	0xb0
 1451 0460 E1010000 		.4byte	.LLST13
 1452 0464 15       		.uleb128 0x15
 1453 0465 52010000 		.4byte	.LASF49
 1454 0469 01       		.byte	0x1
 1455 046a E902     		.2byte	0x2e9
 1456 046c B0000000 		.4byte	0xb0
 1457 0470 01       		.uleb128 0x1
 1458 0471 50       		.byte	0x50
 1459 0472 08       		.uleb128 0x8
 1460 0473 C1000000 		.4byte	.LASF50
 1461 0477 01       		.byte	0x1
 1462 0478 EA02     		.2byte	0x2ea
 1463 047a BC000000 		.4byte	0xbc
 1464 047e FF010000 		.4byte	.LLST14
 1465 0482 00       		.byte	0
 1466 0483 16       		.uleb128 0x16
ARM GAS  C:\Users\kevan\AppData\Local\Temp\ccXb7CWJ.s 			page 43


 1467 0484 AC010000 		.4byte	.LASF51
 1468 0488 01       		.byte	0x1
 1469 0489 1103     		.2byte	0x311
 1470 048b BC000000 		.4byte	0xbc
 1471 048f 00000000 		.4byte	.LFB16
 1472 0493 48000000 		.4byte	.LFE16-.LFB16
 1473 0497 01       		.uleb128 0x1
 1474 0498 9C       		.byte	0x9c
 1475 0499 CA040000 		.4byte	0x4ca
 1476 049d 07       		.uleb128 0x7
 1477 049e BD030000 		.4byte	.LASF48
 1478 04a2 01       		.byte	0x1
 1479 04a3 1103     		.2byte	0x311
 1480 04a5 B0000000 		.4byte	0xb0
 1481 04a9 1D020000 		.4byte	.LLST15
 1482 04ad 17       		.uleb128 0x17
 1483 04ae F5000000 		.4byte	.LASF71
 1484 04b2 01       		.byte	0x1
 1485 04b3 1403     		.2byte	0x314
 1486 04b5 E2000000 		.4byte	0xe2
 1487 04b9 08       		.uleb128 0x8
 1488 04ba C1000000 		.4byte	.LASF50
 1489 04be 01       		.byte	0x1
 1490 04bf 1503     		.2byte	0x315
 1491 04c1 BC000000 		.4byte	0xbc
 1492 04c5 3B020000 		.4byte	.LLST16
 1493 04c9 00       		.byte	0
 1494 04ca 16       		.uleb128 0x16
 1495 04cb 87030000 		.4byte	.LASF52
 1496 04cf 01       		.byte	0x1
 1497 04d0 3D03     		.2byte	0x33d
 1498 04d2 C8000000 		.4byte	0xc8
 1499 04d6 00000000 		.4byte	.LFB17
 1500 04da 50000000 		.4byte	.LFE17-.LFB17
 1501 04de 01       		.uleb128 0x1
 1502 04df 9C       		.byte	0x9c
 1503 04e0 13050000 		.4byte	0x513
 1504 04e4 07       		.uleb128 0x7
 1505 04e5 BD030000 		.4byte	.LASF48
 1506 04e9 01       		.byte	0x1
 1507 04ea 3D03     		.2byte	0x33d
 1508 04ec B0000000 		.4byte	0xb0
 1509 04f0 59020000 		.4byte	.LLST17
 1510 04f4 15       		.uleb128 0x15
 1511 04f5 0E010000 		.4byte	.LASF53
 1512 04f9 01       		.byte	0x1
 1513 04fa 3F03     		.2byte	0x33f
 1514 04fc C8000000 		.4byte	0xc8
 1515 0500 01       		.uleb128 0x1
 1516 0501 50       		.byte	0x50
 1517 0502 08       		.uleb128 0x8
 1518 0503 C1000000 		.4byte	.LASF50
 1519 0507 01       		.byte	0x1
 1520 0508 4003     		.2byte	0x340
 1521 050a BC000000 		.4byte	0xbc
 1522 050e 77020000 		.4byte	.LLST18
 1523 0512 00       		.byte	0
ARM GAS  C:\Users\kevan\AppData\Local\Temp\ccXb7CWJ.s 			page 44


 1524 0513 18       		.uleb128 0x18
 1525 0514 29020000 		.4byte	.LASF54
 1526 0518 01       		.byte	0x1
 1527 0519 23       		.byte	0x23
 1528 051a 80000000 		.4byte	0x80
 1529 051e 05       		.uleb128 0x5
 1530 051f 03       		.byte	0x3
 1531 0520 00000000 		.4byte	ADC_SAR_1_initVar
 1532 0524 18       		.uleb128 0x18
 1533 0525 8C000000 		.4byte	.LASF55
 1534 0529 01       		.byte	0x1
 1535 052a 24       		.byte	0x24
 1536 052b 35050000 		.4byte	0x535
 1537 052f 05       		.uleb128 0x5
 1538 0530 03       		.byte	0x3
 1539 0531 00000000 		.4byte	ADC_SAR_1_offset
 1540 0535 05       		.uleb128 0x5
 1541 0536 B0000000 		.4byte	0xb0
 1542 053a 18       		.uleb128 0x18
 1543 053b 5F010000 		.4byte	.LASF56
 1544 053f 01       		.byte	0x1
 1545 0540 25       		.byte	0x25
 1546 0541 35050000 		.4byte	0x535
 1547 0545 05       		.uleb128 0x5
 1548 0546 03       		.byte	0x3
 1549 0547 00000000 		.4byte	ADC_SAR_1_countsPerVolt
 1550 054b 18       		.uleb128 0x18
 1551 054c 24040000 		.4byte	.LASF57
 1552 0550 01       		.byte	0x1
 1553 0551 26       		.byte	0x26
 1554 0552 5C050000 		.4byte	0x55c
 1555 0556 05       		.uleb128 0x5
 1556 0557 03       		.byte	0x3
 1557 0558 00000000 		.4byte	ADC_SAR_1_countsPer10Volt
 1558 055c 05       		.uleb128 0x5
 1559 055d BC000000 		.4byte	0xbc
 1560 0561 18       		.uleb128 0x18
 1561 0562 5C040000 		.4byte	.LASF58
 1562 0566 01       		.byte	0x1
 1563 0567 27       		.byte	0x27
 1564 0568 35050000 		.4byte	0x535
 1565 056c 05       		.uleb128 0x5
 1566 056d 03       		.byte	0x3
 1567 056e 00000000 		.4byte	ADC_SAR_1_shift
 1568 0572 19       		.uleb128 0x19
 1569 0573 46020000 		.4byte	.LASF59
 1570 0577 46020000 		.4byte	.LASF59
 1571 057b 03       		.byte	0x3
 1572 057c 7F       		.byte	0x7f
 1573 057d 19       		.uleb128 0x19
 1574 057e 14010000 		.4byte	.LASF60
 1575 0582 14010000 		.4byte	.LASF60
 1576 0586 03       		.byte	0x3
 1577 0587 7D       		.byte	0x7d
 1578 0588 19       		.uleb128 0x19
 1579 0589 A9000000 		.4byte	.LASF61
 1580 058d A9000000 		.4byte	.LASF61
ARM GAS  C:\Users\kevan\AppData\Local\Temp\ccXb7CWJ.s 			page 45


 1581 0591 03       		.byte	0x3
 1582 0592 77       		.byte	0x77
 1583 0593 19       		.uleb128 0x19
 1584 0594 1C000000 		.4byte	.LASF62
 1585 0598 1C000000 		.4byte	.LASF62
 1586 059c 03       		.byte	0x3
 1587 059d 7E       		.byte	0x7e
 1588 059e 19       		.uleb128 0x19
 1589 059f C6010000 		.4byte	.LASF63
 1590 05a3 C6010000 		.4byte	.LASF63
 1591 05a7 04       		.byte	0x4
 1592 05a8 32       		.byte	0x32
 1593 05a9 19       		.uleb128 0x19
 1594 05aa 12020000 		.4byte	.LASF64
 1595 05ae 12020000 		.4byte	.LASF64
 1596 05b2 03       		.byte	0x3
 1597 05b3 8B       		.byte	0x8b
 1598 05b4 19       		.uleb128 0x19
 1599 05b5 D1000000 		.4byte	.LASF65
 1600 05b9 D1000000 		.4byte	.LASF65
 1601 05bd 03       		.byte	0x3
 1602 05be 88       		.byte	0x88
 1603 05bf 00       		.byte	0
 1604              		.section	.debug_abbrev,"",%progbits
 1605              	.Ldebug_abbrev0:
 1606 0000 01       		.uleb128 0x1
 1607 0001 11       		.uleb128 0x11
 1608 0002 01       		.byte	0x1
 1609 0003 25       		.uleb128 0x25
 1610 0004 0E       		.uleb128 0xe
 1611 0005 13       		.uleb128 0x13
 1612 0006 0B       		.uleb128 0xb
 1613 0007 03       		.uleb128 0x3
 1614 0008 0E       		.uleb128 0xe
 1615 0009 1B       		.uleb128 0x1b
 1616 000a 0E       		.uleb128 0xe
 1617 000b 55       		.uleb128 0x55
 1618 000c 17       		.uleb128 0x17
 1619 000d 11       		.uleb128 0x11
 1620 000e 01       		.uleb128 0x1
 1621 000f 10       		.uleb128 0x10
 1622 0010 17       		.uleb128 0x17
 1623 0011 00       		.byte	0
 1624 0012 00       		.byte	0
 1625 0013 02       		.uleb128 0x2
 1626 0014 24       		.uleb128 0x24
 1627 0015 00       		.byte	0
 1628 0016 0B       		.uleb128 0xb
 1629 0017 0B       		.uleb128 0xb
 1630 0018 3E       		.uleb128 0x3e
 1631 0019 0B       		.uleb128 0xb
 1632 001a 03       		.uleb128 0x3
 1633 001b 08       		.uleb128 0x8
 1634 001c 00       		.byte	0
 1635 001d 00       		.byte	0
 1636 001e 03       		.uleb128 0x3
 1637 001f 24       		.uleb128 0x24
ARM GAS  C:\Users\kevan\AppData\Local\Temp\ccXb7CWJ.s 			page 46


 1638 0020 00       		.byte	0
 1639 0021 0B       		.uleb128 0xb
 1640 0022 0B       		.uleb128 0xb
 1641 0023 3E       		.uleb128 0x3e
 1642 0024 0B       		.uleb128 0xb
 1643 0025 03       		.uleb128 0x3
 1644 0026 0E       		.uleb128 0xe
 1645 0027 00       		.byte	0
 1646 0028 00       		.byte	0
 1647 0029 04       		.uleb128 0x4
 1648 002a 16       		.uleb128 0x16
 1649 002b 00       		.byte	0
 1650 002c 03       		.uleb128 0x3
 1651 002d 0E       		.uleb128 0xe
 1652 002e 3A       		.uleb128 0x3a
 1653 002f 0B       		.uleb128 0xb
 1654 0030 3B       		.uleb128 0x3b
 1655 0031 05       		.uleb128 0x5
 1656 0032 49       		.uleb128 0x49
 1657 0033 13       		.uleb128 0x13
 1658 0034 00       		.byte	0
 1659 0035 00       		.byte	0
 1660 0036 05       		.uleb128 0x5
 1661 0037 35       		.uleb128 0x35
 1662 0038 00       		.byte	0
 1663 0039 49       		.uleb128 0x49
 1664 003a 13       		.uleb128 0x13
 1665 003b 00       		.byte	0
 1666 003c 00       		.byte	0
 1667 003d 06       		.uleb128 0x6
 1668 003e 2E       		.uleb128 0x2e
 1669 003f 01       		.byte	0x1
 1670 0040 03       		.uleb128 0x3
 1671 0041 0E       		.uleb128 0xe
 1672 0042 3A       		.uleb128 0x3a
 1673 0043 0B       		.uleb128 0xb
 1674 0044 3B       		.uleb128 0x3b
 1675 0045 05       		.uleb128 0x5
 1676 0046 27       		.uleb128 0x27
 1677 0047 19       		.uleb128 0x19
 1678 0048 11       		.uleb128 0x11
 1679 0049 01       		.uleb128 0x1
 1680 004a 12       		.uleb128 0x12
 1681 004b 06       		.uleb128 0x6
 1682 004c 40       		.uleb128 0x40
 1683 004d 18       		.uleb128 0x18
 1684 004e 9742     		.uleb128 0x2117
 1685 0050 19       		.uleb128 0x19
 1686 0051 01       		.uleb128 0x1
 1687 0052 13       		.uleb128 0x13
 1688 0053 00       		.byte	0
 1689 0054 00       		.byte	0
 1690 0055 07       		.uleb128 0x7
 1691 0056 05       		.uleb128 0x5
 1692 0057 00       		.byte	0
 1693 0058 03       		.uleb128 0x3
 1694 0059 0E       		.uleb128 0xe
ARM GAS  C:\Users\kevan\AppData\Local\Temp\ccXb7CWJ.s 			page 47


 1695 005a 3A       		.uleb128 0x3a
 1696 005b 0B       		.uleb128 0xb
 1697 005c 3B       		.uleb128 0x3b
 1698 005d 05       		.uleb128 0x5
 1699 005e 49       		.uleb128 0x49
 1700 005f 13       		.uleb128 0x13
 1701 0060 02       		.uleb128 0x2
 1702 0061 17       		.uleb128 0x17
 1703 0062 00       		.byte	0
 1704 0063 00       		.byte	0
 1705 0064 08       		.uleb128 0x8
 1706 0065 34       		.uleb128 0x34
 1707 0066 00       		.byte	0
 1708 0067 03       		.uleb128 0x3
 1709 0068 0E       		.uleb128 0xe
 1710 0069 3A       		.uleb128 0x3a
 1711 006a 0B       		.uleb128 0xb
 1712 006b 3B       		.uleb128 0x3b
 1713 006c 05       		.uleb128 0x5
 1714 006d 49       		.uleb128 0x49
 1715 006e 13       		.uleb128 0x13
 1716 006f 02       		.uleb128 0x2
 1717 0070 17       		.uleb128 0x17
 1718 0071 00       		.byte	0
 1719 0072 00       		.byte	0
 1720 0073 09       		.uleb128 0x9
 1721 0074 898201   		.uleb128 0x4109
 1722 0077 01       		.byte	0x1
 1723 0078 11       		.uleb128 0x11
 1724 0079 01       		.uleb128 0x1
 1725 007a 31       		.uleb128 0x31
 1726 007b 13       		.uleb128 0x13
 1727 007c 00       		.byte	0
 1728 007d 00       		.byte	0
 1729 007e 0A       		.uleb128 0xa
 1730 007f 8A8201   		.uleb128 0x410a
 1731 0082 00       		.byte	0
 1732 0083 02       		.uleb128 0x2
 1733 0084 18       		.uleb128 0x18
 1734 0085 9142     		.uleb128 0x2111
 1735 0087 18       		.uleb128 0x18
 1736 0088 00       		.byte	0
 1737 0089 00       		.byte	0
 1738 008a 0B       		.uleb128 0xb
 1739 008b 2E       		.uleb128 0x2e
 1740 008c 01       		.byte	0x1
 1741 008d 3F       		.uleb128 0x3f
 1742 008e 19       		.uleb128 0x19
 1743 008f 03       		.uleb128 0x3
 1744 0090 0E       		.uleb128 0xe
 1745 0091 3A       		.uleb128 0x3a
 1746 0092 0B       		.uleb128 0xb
 1747 0093 3B       		.uleb128 0x3b
 1748 0094 0B       		.uleb128 0xb
 1749 0095 27       		.uleb128 0x27
 1750 0096 19       		.uleb128 0x19
 1751 0097 11       		.uleb128 0x11
ARM GAS  C:\Users\kevan\AppData\Local\Temp\ccXb7CWJ.s 			page 48


 1752 0098 01       		.uleb128 0x1
 1753 0099 12       		.uleb128 0x12
 1754 009a 06       		.uleb128 0x6
 1755 009b 40       		.uleb128 0x40
 1756 009c 18       		.uleb128 0x18
 1757 009d 9742     		.uleb128 0x2117
 1758 009f 19       		.uleb128 0x19
 1759 00a0 01       		.uleb128 0x1
 1760 00a1 13       		.uleb128 0x13
 1761 00a2 00       		.byte	0
 1762 00a3 00       		.byte	0
 1763 00a4 0C       		.uleb128 0xc
 1764 00a5 34       		.uleb128 0x34
 1765 00a6 00       		.byte	0
 1766 00a7 03       		.uleb128 0x3
 1767 00a8 0E       		.uleb128 0xe
 1768 00a9 3A       		.uleb128 0x3a
 1769 00aa 0B       		.uleb128 0xb
 1770 00ab 3B       		.uleb128 0x3b
 1771 00ac 0B       		.uleb128 0xb
 1772 00ad 49       		.uleb128 0x49
 1773 00ae 13       		.uleb128 0x13
 1774 00af 02       		.uleb128 0x2
 1775 00b0 17       		.uleb128 0x17
 1776 00b1 00       		.byte	0
 1777 00b2 00       		.byte	0
 1778 00b3 0D       		.uleb128 0xd
 1779 00b4 898201   		.uleb128 0x4109
 1780 00b7 00       		.byte	0
 1781 00b8 11       		.uleb128 0x11
 1782 00b9 01       		.uleb128 0x1
 1783 00ba 31       		.uleb128 0x31
 1784 00bb 13       		.uleb128 0x13
 1785 00bc 00       		.byte	0
 1786 00bd 00       		.byte	0
 1787 00be 0E       		.uleb128 0xe
 1788 00bf 898201   		.uleb128 0x4109
 1789 00c2 01       		.byte	0x1
 1790 00c3 11       		.uleb128 0x11
 1791 00c4 01       		.uleb128 0x1
 1792 00c5 31       		.uleb128 0x31
 1793 00c6 13       		.uleb128 0x13
 1794 00c7 01       		.uleb128 0x1
 1795 00c8 13       		.uleb128 0x13
 1796 00c9 00       		.byte	0
 1797 00ca 00       		.byte	0
 1798 00cb 0F       		.uleb128 0xf
 1799 00cc 2E       		.uleb128 0x2e
 1800 00cd 01       		.byte	0x1
 1801 00ce 3F       		.uleb128 0x3f
 1802 00cf 19       		.uleb128 0x19
 1803 00d0 03       		.uleb128 0x3
 1804 00d1 0E       		.uleb128 0xe
 1805 00d2 3A       		.uleb128 0x3a
 1806 00d3 0B       		.uleb128 0xb
 1807 00d4 3B       		.uleb128 0x3b
 1808 00d5 05       		.uleb128 0x5
ARM GAS  C:\Users\kevan\AppData\Local\Temp\ccXb7CWJ.s 			page 49


 1809 00d6 27       		.uleb128 0x27
 1810 00d7 19       		.uleb128 0x19
 1811 00d8 11       		.uleb128 0x11
 1812 00d9 01       		.uleb128 0x1
 1813 00da 12       		.uleb128 0x12
 1814 00db 06       		.uleb128 0x6
 1815 00dc 40       		.uleb128 0x40
 1816 00dd 18       		.uleb128 0x18
 1817 00de 9742     		.uleb128 0x2117
 1818 00e0 19       		.uleb128 0x19
 1819 00e1 01       		.uleb128 0x1
 1820 00e2 13       		.uleb128 0x13
 1821 00e3 00       		.byte	0
 1822 00e4 00       		.byte	0
 1823 00e5 10       		.uleb128 0x10
 1824 00e6 2E       		.uleb128 0x2e
 1825 00e7 00       		.byte	0
 1826 00e8 3F       		.uleb128 0x3f
 1827 00e9 19       		.uleb128 0x19
 1828 00ea 03       		.uleb128 0x3
 1829 00eb 0E       		.uleb128 0xe
 1830 00ec 3A       		.uleb128 0x3a
 1831 00ed 0B       		.uleb128 0xb
 1832 00ee 3B       		.uleb128 0x3b
 1833 00ef 05       		.uleb128 0x5
 1834 00f0 27       		.uleb128 0x27
 1835 00f1 19       		.uleb128 0x19
 1836 00f2 11       		.uleb128 0x11
 1837 00f3 01       		.uleb128 0x1
 1838 00f4 12       		.uleb128 0x12
 1839 00f5 06       		.uleb128 0x6
 1840 00f6 40       		.uleb128 0x40
 1841 00f7 18       		.uleb128 0x18
 1842 00f8 9742     		.uleb128 0x2117
 1843 00fa 19       		.uleb128 0x19
 1844 00fb 00       		.byte	0
 1845 00fc 00       		.byte	0
 1846 00fd 11       		.uleb128 0x11
 1847 00fe 2E       		.uleb128 0x2e
 1848 00ff 01       		.byte	0x1
 1849 0100 3F       		.uleb128 0x3f
 1850 0101 19       		.uleb128 0x19
 1851 0102 03       		.uleb128 0x3
 1852 0103 0E       		.uleb128 0xe
 1853 0104 3A       		.uleb128 0x3a
 1854 0105 0B       		.uleb128 0xb
 1855 0106 3B       		.uleb128 0x3b
 1856 0107 05       		.uleb128 0x5
 1857 0108 27       		.uleb128 0x27
 1858 0109 19       		.uleb128 0x19
 1859 010a 49       		.uleb128 0x49
 1860 010b 13       		.uleb128 0x13
 1861 010c 11       		.uleb128 0x11
 1862 010d 01       		.uleb128 0x1
 1863 010e 12       		.uleb128 0x12
 1864 010f 06       		.uleb128 0x6
 1865 0110 40       		.uleb128 0x40
ARM GAS  C:\Users\kevan\AppData\Local\Temp\ccXb7CWJ.s 			page 50


 1866 0111 18       		.uleb128 0x18
 1867 0112 9742     		.uleb128 0x2117
 1868 0114 19       		.uleb128 0x19
 1869 0115 01       		.uleb128 0x1
 1870 0116 13       		.uleb128 0x13
 1871 0117 00       		.byte	0
 1872 0118 00       		.byte	0
 1873 0119 12       		.uleb128 0x12
 1874 011a 2E       		.uleb128 0x2e
 1875 011b 00       		.byte	0
 1876 011c 3F       		.uleb128 0x3f
 1877 011d 19       		.uleb128 0x19
 1878 011e 03       		.uleb128 0x3
 1879 011f 0E       		.uleb128 0xe
 1880 0120 3A       		.uleb128 0x3a
 1881 0121 0B       		.uleb128 0xb
 1882 0122 3B       		.uleb128 0x3b
 1883 0123 05       		.uleb128 0x5
 1884 0124 27       		.uleb128 0x27
 1885 0125 19       		.uleb128 0x19
 1886 0126 49       		.uleb128 0x49
 1887 0127 13       		.uleb128 0x13
 1888 0128 11       		.uleb128 0x11
 1889 0129 01       		.uleb128 0x1
 1890 012a 12       		.uleb128 0x12
 1891 012b 06       		.uleb128 0x6
 1892 012c 40       		.uleb128 0x40
 1893 012d 18       		.uleb128 0x18
 1894 012e 9742     		.uleb128 0x2117
 1895 0130 19       		.uleb128 0x19
 1896 0131 00       		.byte	0
 1897 0132 00       		.byte	0
 1898 0133 13       		.uleb128 0x13
 1899 0134 34       		.uleb128 0x34
 1900 0135 00       		.byte	0
 1901 0136 03       		.uleb128 0x3
 1902 0137 08       		.uleb128 0x8
 1903 0138 3A       		.uleb128 0x3a
 1904 0139 0B       		.uleb128 0xb
 1905 013a 3B       		.uleb128 0x3b
 1906 013b 05       		.uleb128 0x5
 1907 013c 49       		.uleb128 0x49
 1908 013d 13       		.uleb128 0x13
 1909 013e 02       		.uleb128 0x2
 1910 013f 17       		.uleb128 0x17
 1911 0140 00       		.byte	0
 1912 0141 00       		.byte	0
 1913 0142 14       		.uleb128 0x14
 1914 0143 05       		.uleb128 0x5
 1915 0144 00       		.byte	0
 1916 0145 03       		.uleb128 0x3
 1917 0146 0E       		.uleb128 0xe
 1918 0147 3A       		.uleb128 0x3a
 1919 0148 0B       		.uleb128 0xb
 1920 0149 3B       		.uleb128 0x3b
 1921 014a 05       		.uleb128 0x5
 1922 014b 49       		.uleb128 0x49
ARM GAS  C:\Users\kevan\AppData\Local\Temp\ccXb7CWJ.s 			page 51


 1923 014c 13       		.uleb128 0x13
 1924 014d 02       		.uleb128 0x2
 1925 014e 18       		.uleb128 0x18
 1926 014f 00       		.byte	0
 1927 0150 00       		.byte	0
 1928 0151 15       		.uleb128 0x15
 1929 0152 34       		.uleb128 0x34
 1930 0153 00       		.byte	0
 1931 0154 03       		.uleb128 0x3
 1932 0155 0E       		.uleb128 0xe
 1933 0156 3A       		.uleb128 0x3a
 1934 0157 0B       		.uleb128 0xb
 1935 0158 3B       		.uleb128 0x3b
 1936 0159 05       		.uleb128 0x5
 1937 015a 49       		.uleb128 0x49
 1938 015b 13       		.uleb128 0x13
 1939 015c 02       		.uleb128 0x2
 1940 015d 18       		.uleb128 0x18
 1941 015e 00       		.byte	0
 1942 015f 00       		.byte	0
 1943 0160 16       		.uleb128 0x16
 1944 0161 2E       		.uleb128 0x2e
 1945 0162 01       		.byte	0x1
 1946 0163 3F       		.uleb128 0x3f
 1947 0164 19       		.uleb128 0x19
 1948 0165 03       		.uleb128 0x3
 1949 0166 0E       		.uleb128 0xe
 1950 0167 3A       		.uleb128 0x3a
 1951 0168 0B       		.uleb128 0xb
 1952 0169 3B       		.uleb128 0x3b
 1953 016a 05       		.uleb128 0x5
 1954 016b 27       		.uleb128 0x27
 1955 016c 19       		.uleb128 0x19
 1956 016d 49       		.uleb128 0x49
 1957 016e 13       		.uleb128 0x13
 1958 016f 11       		.uleb128 0x11
 1959 0170 01       		.uleb128 0x1
 1960 0171 12       		.uleb128 0x12
 1961 0172 06       		.uleb128 0x6
 1962 0173 40       		.uleb128 0x40
 1963 0174 18       		.uleb128 0x18
 1964 0175 9642     		.uleb128 0x2116
 1965 0177 19       		.uleb128 0x19
 1966 0178 01       		.uleb128 0x1
 1967 0179 13       		.uleb128 0x13
 1968 017a 00       		.byte	0
 1969 017b 00       		.byte	0
 1970 017c 17       		.uleb128 0x17
 1971 017d 34       		.uleb128 0x34
 1972 017e 00       		.byte	0
 1973 017f 03       		.uleb128 0x3
 1974 0180 0E       		.uleb128 0xe
 1975 0181 3A       		.uleb128 0x3a
 1976 0182 0B       		.uleb128 0xb
 1977 0183 3B       		.uleb128 0x3b
 1978 0184 05       		.uleb128 0x5
 1979 0185 49       		.uleb128 0x49
ARM GAS  C:\Users\kevan\AppData\Local\Temp\ccXb7CWJ.s 			page 52


 1980 0186 13       		.uleb128 0x13
 1981 0187 00       		.byte	0
 1982 0188 00       		.byte	0
 1983 0189 18       		.uleb128 0x18
 1984 018a 34       		.uleb128 0x34
 1985 018b 00       		.byte	0
 1986 018c 03       		.uleb128 0x3
 1987 018d 0E       		.uleb128 0xe
 1988 018e 3A       		.uleb128 0x3a
 1989 018f 0B       		.uleb128 0xb
 1990 0190 3B       		.uleb128 0x3b
 1991 0191 0B       		.uleb128 0xb
 1992 0192 49       		.uleb128 0x49
 1993 0193 13       		.uleb128 0x13
 1994 0194 3F       		.uleb128 0x3f
 1995 0195 19       		.uleb128 0x19
 1996 0196 02       		.uleb128 0x2
 1997 0197 18       		.uleb128 0x18
 1998 0198 00       		.byte	0
 1999 0199 00       		.byte	0
 2000 019a 19       		.uleb128 0x19
 2001 019b 2E       		.uleb128 0x2e
 2002 019c 00       		.byte	0
 2003 019d 3F       		.uleb128 0x3f
 2004 019e 19       		.uleb128 0x19
 2005 019f 3C       		.uleb128 0x3c
 2006 01a0 19       		.uleb128 0x19
 2007 01a1 6E       		.uleb128 0x6e
 2008 01a2 0E       		.uleb128 0xe
 2009 01a3 03       		.uleb128 0x3
 2010 01a4 0E       		.uleb128 0xe
 2011 01a5 3A       		.uleb128 0x3a
 2012 01a6 0B       		.uleb128 0xb
 2013 01a7 3B       		.uleb128 0x3b
 2014 01a8 0B       		.uleb128 0xb
 2015 01a9 00       		.byte	0
 2016 01aa 00       		.byte	0
 2017 01ab 00       		.byte	0
 2018              		.section	.debug_loc,"",%progbits
 2019              	.Ldebug_loc0:
 2020              	.LLST0:
 2021 0000 00000000 		.4byte	.LVL0
 2022 0004 1E000000 		.4byte	.LVL3
 2023 0008 0100     		.2byte	0x1
 2024 000a 50       		.byte	0x50
 2025 000b 1E000000 		.4byte	.LVL3
 2026 000f 26000000 		.4byte	.LVL5
 2027 0013 0400     		.2byte	0x4
 2028 0015 F3       		.byte	0xf3
 2029 0016 01       		.uleb128 0x1
 2030 0017 50       		.byte	0x50
 2031 0018 9F       		.byte	0x9f
 2032 0019 26000000 		.4byte	.LVL5
 2033 001d 2A000000 		.4byte	.LVL6
 2034 0021 0100     		.2byte	0x1
 2035 0023 50       		.byte	0x50
 2036 0024 2A000000 		.4byte	.LVL6
ARM GAS  C:\Users\kevan\AppData\Local\Temp\ccXb7CWJ.s 			page 53


 2037 0028 64000000 		.4byte	.LFE12
 2038 002c 0400     		.2byte	0x4
 2039 002e F3       		.byte	0xf3
 2040 002f 01       		.uleb128 0x1
 2041 0030 50       		.byte	0x50
 2042 0031 9F       		.byte	0x9f
 2043 0032 00000000 		.4byte	0
 2044 0036 00000000 		.4byte	0
 2045              	.LLST1:
 2046 003a 16000000 		.4byte	.LVL1
 2047 003e 1C000000 		.4byte	.LVL2
 2048 0042 0400     		.2byte	0x4
 2049 0044 0A       		.byte	0xa
 2050 0045 0001     		.2byte	0x100
 2051 0047 9F       		.byte	0x9f
 2052 0048 1C000000 		.4byte	.LVL2
 2053 004c 26000000 		.4byte	.LVL5
 2054 0050 0200     		.2byte	0x2
 2055 0052 30       		.byte	0x30
 2056 0053 9F       		.byte	0x9f
 2057 0054 2A000000 		.4byte	.LVL6
 2058 0058 3E000000 		.4byte	.LVL7
 2059 005c 0100     		.2byte	0x1
 2060 005e 52       		.byte	0x52
 2061 005f 00000000 		.4byte	0
 2062 0063 00000000 		.4byte	0
 2063              	.LLST2:
 2064 0067 38000000 		.4byte	.LVL10
 2065 006b 3C000000 		.4byte	.LVL11
 2066 006f 0500     		.2byte	0x5
 2067 0071 73       		.byte	0x73
 2068 0072 00       		.sleb128 0
 2069 0073 32       		.byte	0x32
 2070 0074 21       		.byte	0x21
 2071 0075 9F       		.byte	0x9f
 2072 0076 3C000000 		.4byte	.LVL11
 2073 007a 42000000 		.4byte	.LVL12
 2074 007e 0100     		.2byte	0x1
 2075 0080 53       		.byte	0x53
 2076 0081 42000000 		.4byte	.LVL12
 2077 0085 44000000 		.4byte	.LVL13
 2078 0089 0500     		.2byte	0x5
 2079 008b 0C       		.byte	0xc
 2080 008c 03590040 		.4byte	0x40005903
 2081 0090 00000000 		.4byte	0
 2082 0094 00000000 		.4byte	0
 2083              	.LLST3:
 2084 0098 08000000 		.4byte	.LVL9
 2085 009c 84000000 		.4byte	.LVL16
 2086 00a0 0100     		.2byte	0x1
 2087 00a2 54       		.byte	0x54
 2088 00a3 00000000 		.4byte	0
 2089 00a7 00000000 		.4byte	0
 2090              	.LLST4:
 2091 00ab 06000000 		.4byte	.LVL17
 2092 00af 3F000000 		.4byte	.LVL18-1
 2093 00b3 0100     		.2byte	0x1
ARM GAS  C:\Users\kevan\AppData\Local\Temp\ccXb7CWJ.s 			page 54


 2094 00b5 50       		.byte	0x50
 2095 00b6 00000000 		.4byte	0
 2096 00ba 00000000 		.4byte	0
 2097              	.LLST5:
 2098 00be 00000000 		.4byte	.LVL19
 2099 00c2 00000000 		.4byte	.LVL19
 2100 00c6 0100     		.2byte	0x1
 2101 00c8 50       		.byte	0x50
 2102 00c9 00000000 		.4byte	.LVL19
 2103 00cd 0C000000 		.4byte	.LVL21
 2104 00d1 0500     		.2byte	0x5
 2105 00d3 70       		.byte	0x70
 2106 00d4 00       		.sleb128 0
 2107 00d5 33       		.byte	0x33
 2108 00d6 1A       		.byte	0x1a
 2109 00d7 9F       		.byte	0x9f
 2110 00d8 0C000000 		.4byte	.LVL21
 2111 00dc 18000000 		.4byte	.LFE4
 2112 00e0 0600     		.2byte	0x6
 2113 00e2 F3       		.byte	0xf3
 2114 00e3 01       		.uleb128 0x1
 2115 00e4 50       		.byte	0x50
 2116 00e5 33       		.byte	0x33
 2117 00e6 1A       		.byte	0x1a
 2118 00e7 9F       		.byte	0x9f
 2119 00e8 00000000 		.4byte	0
 2120 00ec 00000000 		.4byte	0
 2121              	.LLST6:
 2122 00f0 08000000 		.4byte	.LVL20
 2123 00f4 0E000000 		.4byte	.LVL22
 2124 00f8 0100     		.2byte	0x1
 2125 00fa 53       		.byte	0x53
 2126 00fb 0E000000 		.4byte	.LVL22
 2127 00ff 18000000 		.4byte	.LFE4
 2128 0103 0100     		.2byte	0x1
 2129 0105 50       		.byte	0x50
 2130 0106 00000000 		.4byte	0
 2131 010a 00000000 		.4byte	0
 2132              	.LLST7:
 2133 010e 00000000 		.4byte	.LVL23
 2134 0112 1C000000 		.4byte	.LVL26
 2135 0116 0100     		.2byte	0x1
 2136 0118 50       		.byte	0x50
 2137 0119 1C000000 		.4byte	.LVL26
 2138 011d 24000000 		.4byte	.LVL28
 2139 0121 0400     		.2byte	0x4
 2140 0123 F3       		.byte	0xf3
 2141 0124 01       		.uleb128 0x1
 2142 0125 50       		.byte	0x50
 2143 0126 9F       		.byte	0x9f
 2144 0127 24000000 		.4byte	.LVL28
 2145 012b 26000000 		.4byte	.LVL29
 2146 012f 0100     		.2byte	0x1
 2147 0131 50       		.byte	0x50
 2148 0132 26000000 		.4byte	.LVL29
 2149 0136 38000000 		.4byte	.LFE5
 2150 013a 0400     		.2byte	0x4
ARM GAS  C:\Users\kevan\AppData\Local\Temp\ccXb7CWJ.s 			page 55


 2151 013c F3       		.byte	0xf3
 2152 013d 01       		.uleb128 0x1
 2153 013e 50       		.byte	0x50
 2154 013f 9F       		.byte	0x9f
 2155 0140 00000000 		.4byte	0
 2156 0144 00000000 		.4byte	0
 2157              	.LLST8:
 2158 0148 16000000 		.4byte	.LVL24
 2159 014c 1A000000 		.4byte	.LVL25
 2160 0150 0300     		.2byte	0x3
 2161 0152 08       		.byte	0x8
 2162 0153 44       		.byte	0x44
 2163 0154 9F       		.byte	0x9f
 2164 0155 1A000000 		.4byte	.LVL25
 2165 0159 24000000 		.4byte	.LVL28
 2166 015d 0300     		.2byte	0x3
 2167 015f 09       		.byte	0x9
 2168 0160 C4       		.byte	0xc4
 2169 0161 9F       		.byte	0x9f
 2170 0162 26000000 		.4byte	.LVL29
 2171 0166 2F000000 		.4byte	.LVL30-1
 2172 016a 0100     		.2byte	0x1
 2173 016c 52       		.byte	0x52
 2174 016d 00000000 		.4byte	0
 2175 0171 00000000 		.4byte	0
 2176              	.LLST9:
 2177 0175 00000000 		.4byte	.LVL37
 2178 0179 14000000 		.4byte	.LVL39
 2179 017d 0100     		.2byte	0x1
 2180 017f 50       		.byte	0x50
 2181 0180 14000000 		.4byte	.LVL39
 2182 0184 24000000 		.4byte	.LFE8
 2183 0188 0400     		.2byte	0x4
 2184 018a F3       		.byte	0xf3
 2185 018b 01       		.uleb128 0x1
 2186 018c 50       		.byte	0x50
 2187 018d 9F       		.byte	0x9f
 2188 018e 00000000 		.4byte	0
 2189 0192 00000000 		.4byte	0
 2190              	.LLST10:
 2191 0196 06000000 		.4byte	.LVL38
 2192 019a 17000000 		.4byte	.LVL40-1
 2193 019e 0500     		.2byte	0x5
 2194 01a0 73       		.byte	0x73
 2195 01a1 00       		.sleb128 0
 2196 01a2 31       		.byte	0x31
 2197 01a3 1A       		.byte	0x1a
 2198 01a4 9F       		.byte	0x9f
 2199 01a5 00000000 		.4byte	0
 2200 01a9 00000000 		.4byte	0
 2201              	.LLST11:
 2202 01ad 06000000 		.4byte	.LVL41
 2203 01b1 0C000000 		.4byte	.LVL42
 2204 01b5 0100     		.2byte	0x1
 2205 01b7 50       		.byte	0x50
 2206 01b8 00000000 		.4byte	0
 2207 01bc 00000000 		.4byte	0
ARM GAS  C:\Users\kevan\AppData\Local\Temp\ccXb7CWJ.s 			page 56


 2208              	.LLST12:
 2209 01c0 00000000 		.4byte	.LVL44
 2210 01c4 04000000 		.4byte	.LVL45
 2211 01c8 0100     		.2byte	0x1
 2212 01ca 50       		.byte	0x50
 2213 01cb 04000000 		.4byte	.LVL45
 2214 01cf 10000000 		.4byte	.LFE13
 2215 01d3 0400     		.2byte	0x4
 2216 01d5 F3       		.byte	0xf3
 2217 01d6 01       		.uleb128 0x1
 2218 01d7 50       		.byte	0x50
 2219 01d8 9F       		.byte	0x9f
 2220 01d9 00000000 		.4byte	0
 2221 01dd 00000000 		.4byte	0
 2222              	.LLST13:
 2223 01e1 00000000 		.4byte	.LVL47
 2224 01e5 24000000 		.4byte	.LVL51
 2225 01e9 0100     		.2byte	0x1
 2226 01eb 50       		.byte	0x50
 2227 01ec 24000000 		.4byte	.LVL51
 2228 01f0 58000000 		.4byte	.LFE15
 2229 01f4 0100     		.2byte	0x1
 2230 01f6 51       		.byte	0x51
 2231 01f7 00000000 		.4byte	0
 2232 01fb 00000000 		.4byte	0
 2233              	.LLST14:
 2234 01ff 16000000 		.4byte	.LVL48
 2235 0203 18000000 		.4byte	.LVL49
 2236 0207 0100     		.2byte	0x1
 2237 0209 54       		.byte	0x54
 2238 020a 1C000000 		.4byte	.LVL50
 2239 020e 4A000000 		.4byte	.LVL53
 2240 0212 0100     		.2byte	0x1
 2241 0214 54       		.byte	0x54
 2242 0215 00000000 		.4byte	0
 2243 0219 00000000 		.4byte	0
 2244              	.LLST15:
 2245 021d 00000000 		.4byte	.LVL54
 2246 0221 22000000 		.4byte	.LVL58
 2247 0225 0100     		.2byte	0x1
 2248 0227 50       		.byte	0x50
 2249 0228 22000000 		.4byte	.LVL58
 2250 022c 38000000 		.4byte	.LVL60
 2251 0230 0100     		.2byte	0x1
 2252 0232 54       		.byte	0x54
 2253 0233 00000000 		.4byte	0
 2254 0237 00000000 		.4byte	0
 2255              	.LLST16:
 2256 023b 16000000 		.4byte	.LVL55
 2257 023f 18000000 		.4byte	.LVL56
 2258 0243 0100     		.2byte	0x1
 2259 0245 52       		.byte	0x52
 2260 0246 1C000000 		.4byte	.LVL57
 2261 024a 35000000 		.4byte	.LVL59-1
 2262 024e 0100     		.2byte	0x1
 2263 0250 52       		.byte	0x52
 2264 0251 00000000 		.4byte	0
ARM GAS  C:\Users\kevan\AppData\Local\Temp\ccXb7CWJ.s 			page 57


 2265 0255 00000000 		.4byte	0
 2266              	.LLST17:
 2267 0259 00000000 		.4byte	.LVL61
 2268 025d 22000000 		.4byte	.LVL65
 2269 0261 0100     		.2byte	0x1
 2270 0263 50       		.byte	0x50
 2271 0264 22000000 		.4byte	.LVL65
 2272 0268 27000000 		.4byte	.LVL66-1
 2273 026c 0100     		.2byte	0x1
 2274 026e 50       		.byte	0x50
 2275 026f 00000000 		.4byte	0
 2276 0273 00000000 		.4byte	0
 2277              	.LLST18:
 2278 0277 16000000 		.4byte	.LVL62
 2279 027b 18000000 		.4byte	.LVL63
 2280 027f 0100     		.2byte	0x1
 2281 0281 54       		.byte	0x54
 2282 0282 1C000000 		.4byte	.LVL64
 2283 0286 40000000 		.4byte	.LVL70
 2284 028a 0100     		.2byte	0x1
 2285 028c 54       		.byte	0x54
 2286 028d 00000000 		.4byte	0
 2287 0291 00000000 		.4byte	0
 2288              		.section	.debug_aranges,"",%progbits
 2289 0000 A4000000 		.4byte	0xa4
 2290 0004 0200     		.2byte	0x2
 2291 0006 00000000 		.4byte	.Ldebug_info0
 2292 000a 04       		.byte	0x4
 2293 000b 00       		.byte	0
 2294 000c 0000     		.2byte	0
 2295 000e 0000     		.2byte	0
 2296 0010 00000000 		.4byte	.LFB12
 2297 0014 64000000 		.4byte	.LFE12-.LFB12
 2298 0018 00000000 		.4byte	.LFB2
 2299 001c 94000000 		.4byte	.LFE2-.LFB2
 2300 0020 00000000 		.4byte	.LFB3
 2301 0024 48000000 		.4byte	.LFE3-.LFB3
 2302 0028 00000000 		.4byte	.LFB4
 2303 002c 18000000 		.4byte	.LFE4-.LFB4
 2304 0030 00000000 		.4byte	.LFB5
 2305 0034 38000000 		.4byte	.LFE5-.LFB5
 2306 0038 00000000 		.4byte	.LFB1
 2307 003c 3C000000 		.4byte	.LFE1-.LFB1
 2308 0040 00000000 		.4byte	.LFB0
 2309 0044 1C000000 		.4byte	.LFE0-.LFB0
 2310 0048 00000000 		.4byte	.LFB6
 2311 004c 18000000 		.4byte	.LFE6-.LFB6
 2312 0050 00000000 		.4byte	.LFB7
 2313 0054 18000000 		.4byte	.LFE7-.LFB7
 2314 0058 00000000 		.4byte	.LFB8
 2315 005c 24000000 		.4byte	.LFE8-.LFB8
 2316 0060 00000000 		.4byte	.LFB9
 2317 0064 18000000 		.4byte	.LFE9-.LFB9
 2318 0068 00000000 		.4byte	.LFB10
 2319 006c 18000000 		.4byte	.LFE10-.LFB10
 2320 0070 00000000 		.4byte	.LFB11
 2321 0074 0C000000 		.4byte	.LFE11-.LFB11
ARM GAS  C:\Users\kevan\AppData\Local\Temp\ccXb7CWJ.s 			page 58


 2322 0078 00000000 		.4byte	.LFB13
 2323 007c 10000000 		.4byte	.LFE13-.LFB13
 2324 0080 00000000 		.4byte	.LFB14
 2325 0084 0C000000 		.4byte	.LFE14-.LFB14
 2326 0088 00000000 		.4byte	.LFB15
 2327 008c 58000000 		.4byte	.LFE15-.LFB15
 2328 0090 00000000 		.4byte	.LFB16
 2329 0094 48000000 		.4byte	.LFE16-.LFB16
 2330 0098 00000000 		.4byte	.LFB17
 2331 009c 50000000 		.4byte	.LFE17-.LFB17
 2332 00a0 00000000 		.4byte	0
 2333 00a4 00000000 		.4byte	0
 2334              		.section	.debug_ranges,"",%progbits
 2335              	.Ldebug_ranges0:
 2336 0000 00000000 		.4byte	.LFB12
 2337 0004 64000000 		.4byte	.LFE12
 2338 0008 00000000 		.4byte	.LFB2
 2339 000c 94000000 		.4byte	.LFE2
 2340 0010 00000000 		.4byte	.LFB3
 2341 0014 48000000 		.4byte	.LFE3
 2342 0018 00000000 		.4byte	.LFB4
 2343 001c 18000000 		.4byte	.LFE4
 2344 0020 00000000 		.4byte	.LFB5
 2345 0024 38000000 		.4byte	.LFE5
 2346 0028 00000000 		.4byte	.LFB1
 2347 002c 3C000000 		.4byte	.LFE1
 2348 0030 00000000 		.4byte	.LFB0
 2349 0034 1C000000 		.4byte	.LFE0
 2350 0038 00000000 		.4byte	.LFB6
 2351 003c 18000000 		.4byte	.LFE6
 2352 0040 00000000 		.4byte	.LFB7
 2353 0044 18000000 		.4byte	.LFE7
 2354 0048 00000000 		.4byte	.LFB8
 2355 004c 24000000 		.4byte	.LFE8
 2356 0050 00000000 		.4byte	.LFB9
 2357 0054 18000000 		.4byte	.LFE9
 2358 0058 00000000 		.4byte	.LFB10
 2359 005c 18000000 		.4byte	.LFE10
 2360 0060 00000000 		.4byte	.LFB11
 2361 0064 0C000000 		.4byte	.LFE11
 2362 0068 00000000 		.4byte	.LFB13
 2363 006c 10000000 		.4byte	.LFE13
 2364 0070 00000000 		.4byte	.LFB14
 2365 0074 0C000000 		.4byte	.LFE14
 2366 0078 00000000 		.4byte	.LFB15
 2367 007c 58000000 		.4byte	.LFE15
 2368 0080 00000000 		.4byte	.LFB16
 2369 0084 48000000 		.4byte	.LFE16
 2370 0088 00000000 		.4byte	.LFB17
 2371 008c 50000000 		.4byte	.LFE17
 2372 0090 00000000 		.4byte	0
 2373 0094 00000000 		.4byte	0
 2374              		.section	.debug_line,"",%progbits
 2375              	.Ldebug_line0:
 2376 0000 1C020000 		.section	.debug_str,"MS",%progbits,1
 2376      02006800 
 2376      00000201 
ARM GAS  C:\Users\kevan\AppData\Local\Temp\ccXb7CWJ.s 			page 59


 2376      FB0E0D00 
 2376      01010101 
 2377              	.LASF13:
 2378 0000 75696E74 		.ascii	"uint16\000"
 2378      313600
 2379              	.LASF70:
 2380 0007 4144435F 		.ascii	"ADC_SAR_1_GetResult8\000"
 2380      5341525F 
 2380      315F4765 
 2380      74526573 
 2380      756C7438 
 2381              	.LASF62:
 2382 001c 43794578 		.ascii	"CyExitCriticalSection\000"
 2382      69744372 
 2382      69746963 
 2382      616C5365 
 2382      6374696F 
 2383              	.LASF25:
 2384 0032 636F756E 		.ascii	"counts\000"
 2384      747300
 2385              	.LASF69:
 2386 0039 4144435F 		.ascii	"ADC_SAR_1_CalcGain\000"
 2386      5341525F 
 2386      315F4361 
 2386      6C634761 
 2386      696E00
 2387              	.LASF9:
 2388 004c 6C6F6E67 		.ascii	"long long unsigned int\000"
 2388      206C6F6E 
 2388      6720756E 
 2388      7369676E 
 2388      65642069 
 2389              	.LASF1:
 2390 0063 6C6F6E67 		.ascii	"long long int\000"
 2390      206C6F6E 
 2390      6720696E 
 2390      7400
 2391              	.LASF3:
 2392 0071 7369676E 		.ascii	"signed char\000"
 2392      65642063 
 2392      68617200 
 2393              	.LASF17:
 2394 007d 696E7433 		.ascii	"int32\000"
 2394      3200
 2395              	.LASF7:
 2396 0083 6C6F6E67 		.ascii	"long int\000"
 2396      20696E74 
 2396      00
 2397              	.LASF55:
 2398 008c 4144435F 		.ascii	"ADC_SAR_1_offset\000"
 2398      5341525F 
 2398      315F6F66 
 2398      66736574 
 2398      00
 2399              	.LASF23:
 2400 009d 72656731 		.ascii	"reg16\000"
 2400      3600
ARM GAS  C:\Users\kevan\AppData\Local\Temp\ccXb7CWJ.s 			page 60


 2401              	.LASF12:
 2402 00a3 75696E74 		.ascii	"uint8\000"
 2402      3800
 2403              	.LASF61:
 2404 00a9 43794465 		.ascii	"CyDelayUs\000"
 2404      6C617955 
 2404      7300
 2405              	.LASF20:
 2406 00b3 646F7562 		.ascii	"double\000"
 2406      6C6500
 2407              	.LASF14:
 2408 00ba 75696E74 		.ascii	"uint32\000"
 2408      333200
 2409              	.LASF50:
 2410 00c1 636F756E 		.ascii	"countsPer10Volt\000"
 2410      74735065 
 2410      72313056 
 2410      6F6C7400 
 2411              	.LASF65:
 2412 00d1 4379496E 		.ascii	"CyIntSetVector\000"
 2412      74536574 
 2412      56656374 
 2412      6F7200
 2413              	.LASF38:
 2414 00e0 7265744D 		.ascii	"retMode\000"
 2414      6F646500 
 2415              	.LASF0:
 2416 00e8 756E7369 		.ascii	"unsigned int\000"
 2416      676E6564 
 2416      20696E74 
 2416      00
 2417              	.LASF71:
 2418 00f5 75566F6C 		.ascii	"uVolts\000"
 2418      747300
 2419              	.LASF8:
 2420 00fc 6C6F6E67 		.ascii	"long unsigned int\000"
 2420      20756E73 
 2420      69676E65 
 2420      6420696E 
 2420      7400
 2421              	.LASF53:
 2422 010e 766F6C74 		.ascii	"volts\000"
 2422      7300
 2423              	.LASF60:
 2424 0114 4379456E 		.ascii	"CyEnterCriticalSection\000"
 2424      74657243 
 2424      72697469 
 2424      63616C53 
 2424      65637469 
 2425              	.LASF6:
 2426 012b 73686F72 		.ascii	"short unsigned int\000"
 2426      7420756E 
 2426      7369676E 
 2426      65642069 
 2426      6E7400
 2427              	.LASF34:
 2428 013e 4144435F 		.ascii	"ADC_SAR_1_Init\000"
ARM GAS  C:\Users\kevan\AppData\Local\Temp\ccXb7CWJ.s 			page 61


 2428      5341525F 
 2428      315F496E 
 2428      697400
 2429              	.LASF15:
 2430 014d 696E7438 		.ascii	"int8\000"
 2430      00
 2431              	.LASF49:
 2432 0152 6D566F6C 		.ascii	"mVolts\000"
 2432      747300
 2433              	.LASF24:
 2434 0159 72656733 		.ascii	"reg32\000"
 2434      3200
 2435              	.LASF56:
 2436 015f 4144435F 		.ascii	"ADC_SAR_1_countsPerVolt\000"
 2436      5341525F 
 2436      315F636F 
 2436      756E7473 
 2436      50657256 
 2437              	.LASF18:
 2438 0177 666C6F61 		.ascii	"float32\000"
 2438      74333200 
 2439              	.LASF10:
 2440 017f 73697A65 		.ascii	"sizetype\000"
 2440      74797065 
 2440      00
 2441              	.LASF2:
 2442 0188 6C6F6E67 		.ascii	"long double\000"
 2442      20646F75 
 2442      626C6500 
 2443              	.LASF33:
 2444 0194 4144435F 		.ascii	"ADC_SAR_1_SetResolution\000"
 2444      5341525F 
 2444      315F5365 
 2444      74526573 
 2444      6F6C7574 
 2445              	.LASF51:
 2446 01ac 4144435F 		.ascii	"ADC_SAR_1_CountsTo_uVolts\000"
 2446      5341525F 
 2446      315F436F 
 2446      756E7473 
 2446      546F5F75 
 2447              	.LASF63:
 2448 01c6 4144435F 		.ascii	"ADC_SAR_1_theACLK_SetModeRegister\000"
 2448      5341525F 
 2448      315F7468 
 2448      6541434C 
 2448      4B5F5365 
 2449              	.LASF35:
 2450 01e8 4144435F 		.ascii	"ADC_SAR_1_Start\000"
 2450      5341525F 
 2450      315F5374 
 2450      61727400 
 2451              	.LASF21:
 2452 01f8 696E7436 		.ascii	"int64\000"
 2452      3400
 2453              	.LASF42:
 2454 01fe 4144435F 		.ascii	"ADC_SAR_1_SetOffset\000"
ARM GAS  C:\Users\kevan\AppData\Local\Temp\ccXb7CWJ.s 			page 62


 2454      5341525F 
 2454      315F5365 
 2454      744F6666 
 2454      73657400 
 2455              	.LASF64:
 2456 0212 4379496E 		.ascii	"CyIntSetPriority\000"
 2456      74536574 
 2456      5072696F 
 2456      72697479 
 2456      00
 2457              	.LASF19:
 2458 0223 666C6F61 		.ascii	"float\000"
 2458      7400
 2459              	.LASF54:
 2460 0229 4144435F 		.ascii	"ADC_SAR_1_initVar\000"
 2460      5341525F 
 2460      315F696E 
 2460      69745661 
 2460      7200
 2461              	.LASF32:
 2462 023b 706F7765 		.ascii	"power\000"
 2462      7200
 2463              	.LASF22:
 2464 0241 72656738 		.ascii	"reg8\000"
 2464      00
 2465              	.LASF59:
 2466 0246 43794861 		.ascii	"CyHalt\000"
 2466      6C7400
 2467              	.LASF4:
 2468 024d 756E7369 		.ascii	"unsigned char\000"
 2468      676E6564 
 2468      20636861 
 2468      7200
 2469              	.LASF47:
 2470 025b 4144435F 		.ascii	"ADC_SAR_1_CountsTo_mVolts\000"
 2470      5341525F 
 2470      315F436F 
 2470      756E7473 
 2470      546F5F6D 
 2471              	.LASF5:
 2472 0275 73686F72 		.ascii	"short int\000"
 2472      7420696E 
 2472      7400
 2473              	.LASF45:
 2474 027f 61646347 		.ascii	"adcGain\000"
 2474      61696E00 
 2475              	.LASF28:
 2476 0287 4144435F 		.ascii	"ADC_SAR_1_Enable\000"
 2476      5341525F 
 2476      315F456E 
 2476      61626C65 
 2476      00
 2477              	.LASF46:
 2478 0298 4144435F 		.ascii	"ADC_SAR_1_SetScaledGain\000"
 2478      5341525F 
 2478      315F5365 
 2478      74536361 
ARM GAS  C:\Users\kevan\AppData\Local\Temp\ccXb7CWJ.s 			page 63


 2478      6C656447 
 2479              	.LASF66:
 2480 02b0 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 2480      43313120 
 2480      352E342E 
 2480      31203230 
 2480      31363036 
 2481 02e3 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 2481      20726576 
 2481      6973696F 
 2481      6E203233 
 2481      37373135 
 2482 0316 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 2482      66756E63 
 2482      74696F6E 
 2482      2D736563 
 2482      74696F6E 
 2483              	.LASF41:
 2484 033e 4144435F 		.ascii	"ADC_SAR_1_GetResult16\000"
 2484      5341525F 
 2484      315F4765 
 2484      74526573 
 2484      756C7431 
 2485              	.LASF31:
 2486 0354 7265736F 		.ascii	"resolution\000"
 2486      6C757469 
 2486      6F6E00
 2487              	.LASF67:
 2488 035f 47656E65 		.ascii	"Generated_Source\\PSoC5\\ADC_SAR_1.c\000"
 2488      72617465 
 2488      645F536F 
 2488      75726365 
 2488      5C50536F 
 2489              	.LASF11:
 2490 0382 63686172 		.ascii	"char\000"
 2490      00
 2491              	.LASF52:
 2492 0387 4144435F 		.ascii	"ADC_SAR_1_CountsTo_Volts\000"
 2492      5341525F 
 2492      315F436F 
 2492      756E7473 
 2492      546F5F56 
 2493              	.LASF43:
 2494 03a0 6F666673 		.ascii	"offset\000"
 2494      657400
 2495              	.LASF37:
 2496 03a7 4144435F 		.ascii	"ADC_SAR_1_StopConvert\000"
 2496      5341525F 
 2496      315F5374 
 2496      6F70436F 
 2496      6E766572 
 2497              	.LASF48:
 2498 03bd 61646343 		.ascii	"adcCounts\000"
 2498      6F756E74 
 2498      7300
 2499              	.LASF27:
 2500 03c7 656E6162 		.ascii	"enableInterrupts\000"
ARM GAS  C:\Users\kevan\AppData\Local\Temp\ccXb7CWJ.s 			page 64


 2500      6C65496E 
 2500      74657272 
 2500      75707473 
 2500      00
 2501              	.LASF39:
 2502 03d8 73746174 		.ascii	"status\000"
 2502      757300
 2503              	.LASF40:
 2504 03df 4144435F 		.ascii	"ADC_SAR_1_IsEndConversion\000"
 2504      5341525F 
 2504      315F4973 
 2504      456E6443 
 2504      6F6E7665 
 2505              	.LASF30:
 2506 03f9 4144435F 		.ascii	"ADC_SAR_1_SetPower\000"
 2506      5341525F 
 2506      315F5365 
 2506      74506F77 
 2506      657200
 2507              	.LASF44:
 2508 040c 4144435F 		.ascii	"ADC_SAR_1_SetGain\000"
 2508      5341525F 
 2508      315F5365 
 2508      74476169 
 2508      6E00
 2509              	.LASF16:
 2510 041e 696E7431 		.ascii	"int16\000"
 2510      3600
 2511              	.LASF57:
 2512 0424 4144435F 		.ascii	"ADC_SAR_1_countsPer10Volt\000"
 2512      5341525F 
 2512      315F636F 
 2512      756E7473 
 2512      50657231 
 2513              	.LASF36:
 2514 043e 4144435F 		.ascii	"ADC_SAR_1_StartConvert\000"
 2514      5341525F 
 2514      315F5374 
 2514      61727443 
 2514      6F6E7665 
 2515              	.LASF26:
 2516 0455 746D7052 		.ascii	"tmpReg\000"
 2516      656700
 2517              	.LASF58:
 2518 045c 4144435F 		.ascii	"ADC_SAR_1_shift\000"
 2518      5341525F 
 2518      315F7368 
 2518      69667400 
 2519              	.LASF68:
 2520 046c 433A5C55 		.ascii	"C:\\Users\\kevan\\Documents\\GitHub\\Hydraulic-Mimi"
 2520      73657273 
 2520      5C6B6576 
 2520      616E5C44 
 2520      6F63756D 
 2521 049a 632D4172 		.ascii	"c-Arm\\PSOC_arm_project.cydsn\000"
 2521      6D5C5053 
 2521      4F435F61 
ARM GAS  C:\Users\kevan\AppData\Local\Temp\ccXb7CWJ.s 			page 65


 2521      726D5F70 
 2521      726F6A65 
 2522              	.LASF29:
 2523 04b7 4144435F 		.ascii	"ADC_SAR_1_Stop\000"
 2523      5341525F 
 2523      315F5374 
 2523      6F7000
 2524              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
