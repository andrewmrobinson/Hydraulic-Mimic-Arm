ARM GAS  C:\Users\Andrew\AppData\Local\Temp\cciI3n3d.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"debug.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text._write,"ax",%progbits
  20              		.align	2
  21              		.global	_write
  22              		.thumb
  23              		.thumb_func
  24              		.type	_write, %function
  25              	_write:
  26              	.LFB64:
  27              		.file 1 "debug.c"
   1:debug.c       **** /*******************************************************************************
   2:debug.c       **** * File Name: debug.c
   3:debug.c       **** *
   4:debug.c       **** * Version: 1.10
   5:debug.c       **** *
   6:debug.c       **** * Description:
   7:debug.c       **** *  This file contains functions for printf functionality.
   8:debug.c       **** *
   9:debug.c       **** *******************************************************************************
  10:debug.c       **** * Copyright (2017), Cypress Semiconductor Corporation. All rights reserved.
  11:debug.c       **** *******************************************************************************
  12:debug.c       **** * This software, including source code, documentation and related materials
  13:debug.c       **** * (“Software”), is owned by Cypress Semiconductor Corporation or one of its
  14:debug.c       **** * subsidiaries (“Cypress”) and is protected by and subject to worldwide patent
  15:debug.c       **** * protection (United States and foreign), United States copyright laws and
  16:debug.c       **** * international treaty provisions. Therefore, you may use this Software only
  17:debug.c       **** * as provided in the license agreement accompanying the software package from
  18:debug.c       **** * which you obtained this Software (“EULA”).
  19:debug.c       **** *
  20:debug.c       **** * If no EULA applies, Cypress hereby grants you a personal, non-exclusive,
  21:debug.c       **** * non-transferable license to copy, modify, and compile the Software source
  22:debug.c       **** * code solely for use in connection with Cypress’s integrated circuit products.
  23:debug.c       **** * Any reproduction, modification, translation, compilation, or representation
  24:debug.c       **** * of this Software except as specified above is prohibited without the express
  25:debug.c       **** * written permission of Cypress.
  26:debug.c       **** *
  27:debug.c       **** * Disclaimer: THIS SOFTWARE IS PROVIDED AS-IS, WITH NO WARRANTY OF ANY KIND, 
  28:debug.c       **** * EXPRESS OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, NONINFRINGEMENT, IMPLIED 
  29:debug.c       **** * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE. Cypress 
  30:debug.c       **** * reserves the right to make changes to the Software without notice. Cypress 
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\cciI3n3d.s 			page 2


  31:debug.c       **** * does not assume any liability arising out of the application or use of the 
  32:debug.c       **** * Software or any product or circuit described in the Software. Cypress does 
  33:debug.c       **** * not authorize its products for use in any products where a malfunction or 
  34:debug.c       **** * failure of the Cypress product may reasonably be expected to result in 
  35:debug.c       **** * significant property damage, injury or death (“High Risk Product”). By 
  36:debug.c       **** * including Cypress’s product in a High Risk Product, the manufacturer of such 
  37:debug.c       **** * system or application assumes all risk of such use and in doing so agrees to 
  38:debug.c       **** * indemnify Cypress against all liability. 
  39:debug.c       **** *******************************************************************************/
  40:debug.c       **** 
  41:debug.c       **** 
  42:debug.c       **** #include <project.h>
  43:debug.c       **** #include <stdio.h>
  44:debug.c       **** #include "common.h"
  45:debug.c       **** 
  46:debug.c       **** #if (UART_PRINTF_ENABLED == ENABLED)
  47:debug.c       **** 
  48:debug.c       **** #if (CY_PSOC3)
  49:debug.c       ****     /* For Keil compiler revise putchar() function with communication
  50:debug.c       ****        component which has to send data */
  51:debug.c       ****     char putchar(char c)
  52:debug.c       ****     {
  53:debug.c       ****         UART_PutChar(c);
  54:debug.c       ****         return (c);
  55:debug.c       ****     }
  56:debug.c       ****     
  57:debug.c       **** #else
  58:debug.c       ****     
  59:debug.c       ****     #if defined(__ARMCC_VERSION)
  60:debug.c       ****         
  61:debug.c       ****     /* For MDK/RVDS compiler revise fputc function for printf functionality */
  62:debug.c       ****     struct __FILE 
  63:debug.c       ****     {
  64:debug.c       ****         int handle;  
  65:debug.c       ****     };
  66:debug.c       **** 
  67:debug.c       ****     enum 
  68:debug.c       ****     {
  69:debug.c       ****         STDIN_HANDLE,
  70:debug.c       ****         STDOUT_HANDLE,
  71:debug.c       ****         STDERR_HANDLE
  72:debug.c       ****     };
  73:debug.c       **** 
  74:debug.c       ****     FILE __stdin = {STDIN_HANDLE};
  75:debug.c       ****     FILE __stdout = {STDOUT_HANDLE};
  76:debug.c       ****     FILE __stderr = {STDERR_HANDLE};
  77:debug.c       **** 
  78:debug.c       ****     int fputc(int ch, FILE *file) 
  79:debug.c       ****     {
  80:debug.c       ****         int ret = EOF;
  81:debug.c       **** 
  82:debug.c       ****         switch( file->handle )
  83:debug.c       ****         {
  84:debug.c       ****             case STDOUT_HANDLE:
  85:debug.c       ****                 UART_PutChar(ch);
  86:debug.c       ****                 ret = ch ;
  87:debug.c       ****                 break ;
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\cciI3n3d.s 			page 3


  88:debug.c       **** 
  89:debug.c       ****             case STDERR_HANDLE:
  90:debug.c       ****                 ret = ch ;
  91:debug.c       ****                 break ;
  92:debug.c       **** 
  93:debug.c       ****             default:
  94:debug.c       ****                 file = file;
  95:debug.c       ****                 break ;
  96:debug.c       ****         }
  97:debug.c       ****         return (ret);
  98:debug.c       ****     }
  99:debug.c       **** 
 100:debug.c       ****     #elif defined (__ICCARM__)      /* IAR */
 101:debug.c       **** 
 102:debug.c       ****     /* For IAR compiler revise __write() function for printf functionality */
 103:debug.c       ****     size_t __write(int handle, const unsigned char * buffer, size_t size)
 104:debug.c       ****     {
 105:debug.c       ****         size_t nChars = 0;
 106:debug.c       **** 
 107:debug.c       ****         if (buffer != NULL)
 108:debug.c       ****         {
 109:debug.c       ****             for (/* Empty */; size != 0; --size)
 110:debug.c       ****             {
 111:debug.c       ****                 UART_PutChar(*buffer++);
 112:debug.c       ****                 ++nChars;
 113:debug.c       ****             }
 114:debug.c       ****         }
 115:debug.c       ****         else
 116:debug.c       ****         {
 117:debug.c       ****             /*
 118:debug.c       ****              * This means that we should flush internal buffers.  Since we
 119:debug.c       ****              * don't we just return.  (Remember, "handle" == -1 means that all
 120:debug.c       ****              * handles should be flushed.)
 121:debug.c       ****              */
 122:debug.c       ****         }
 123:debug.c       **** 
 124:debug.c       ****         return (nChars);
 125:debug.c       ****     }
 126:debug.c       **** 
 127:debug.c       ****     #else  /* (__GNUC__)  GCC */
 128:debug.c       **** 
 129:debug.c       ****     /* For GCC compiler revise _write() function for printf functionality */
 130:debug.c       ****     int _write(int file, char *ptr, int len)
 131:debug.c       ****     {
  28              		.loc 1 131 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 24
  31              		@ frame_needed = 1, uses_anonymous_args = 0
  32 0000 80B5     		push	{r7, lr}
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 7, -8
  35              		.cfi_offset 14, -4
  36 0002 86B0     		sub	sp, sp, #24
  37              		.cfi_def_cfa_offset 32
  38 0004 00AF     		add	r7, sp, #0
  39              		.cfi_def_cfa_register 7
  40 0006 F860     		str	r0, [r7, #12]
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\cciI3n3d.s 			page 4


  41 0008 B960     		str	r1, [r7, #8]
  42 000a 7A60     		str	r2, [r7, #4]
 132:debug.c       ****         int i;
 133:debug.c       ****         file = file;
 134:debug.c       ****         for (i = 0; i < len; i++)
  43              		.loc 1 134 0
  44 000c 0023     		movs	r3, #0
  45 000e 7B61     		str	r3, [r7, #20]
  46 0010 09E0     		b	.L2
  47              	.L3:
 135:debug.c       ****         {
 136:debug.c       ****             UART_PutChar(*ptr++);
  48              		.loc 1 136 0 discriminator 3
  49 0012 BB68     		ldr	r3, [r7, #8]
  50 0014 5A1C     		adds	r2, r3, #1
  51 0016 BA60     		str	r2, [r7, #8]
  52 0018 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  53 001a 1846     		mov	r0, r3
  54 001c FFF7FEFF 		bl	UART_PutChar
 134:debug.c       ****         {
  55              		.loc 1 134 0 discriminator 3
  56 0020 7B69     		ldr	r3, [r7, #20]
  57 0022 0133     		adds	r3, r3, #1
  58 0024 7B61     		str	r3, [r7, #20]
  59              	.L2:
 134:debug.c       ****         {
  60              		.loc 1 134 0 is_stmt 0 discriminator 1
  61 0026 7A69     		ldr	r2, [r7, #20]
  62 0028 7B68     		ldr	r3, [r7, #4]
  63 002a 9A42     		cmp	r2, r3
  64 002c F1DB     		blt	.L3
 137:debug.c       ****         }
 138:debug.c       ****         return (len);
  65              		.loc 1 138 0 is_stmt 1
  66 002e 7B68     		ldr	r3, [r7, #4]
 139:debug.c       ****     }
  67              		.loc 1 139 0
  68 0030 1846     		mov	r0, r3
  69 0032 1837     		adds	r7, r7, #24
  70              		.cfi_def_cfa_offset 8
  71 0034 BD46     		mov	sp, r7
  72              		.cfi_def_cfa_register 13
  73              		@ sp needed
  74 0036 80BD     		pop	{r7, pc}
  75              		.cfi_endproc
  76              	.LFE64:
  77              		.size	_write, .-_write
  78              		.text
  79              	.Letext0:
  80              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
  81              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
  82              		.file 4 "Generated_Source\\PSoC5/core_cm3.h"
  83              		.section	.debug_info,"",%progbits
  84              	.Ldebug_info0:
  85 0000 08010000 		.4byte	0x108
  86 0004 0400     		.2byte	0x4
  87 0006 00000000 		.4byte	.Ldebug_abbrev0
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\cciI3n3d.s 			page 5


  88 000a 04       		.byte	0x4
  89 000b 01       		.uleb128 0x1
  90 000c 5F000000 		.4byte	.LASF17
  91 0010 0C       		.byte	0xc
  92 0011 0E000000 		.4byte	.LASF18
  93 0015 6C010000 		.4byte	.LASF19
  94 0019 00000000 		.4byte	.Ldebug_ranges0+0
  95 001d 00000000 		.4byte	0
  96 0021 00000000 		.4byte	.Ldebug_line0
  97 0025 02       		.uleb128 0x2
  98 0026 01       		.byte	0x1
  99 0027 06       		.byte	0x6
 100 0028 29010000 		.4byte	.LASF0
 101 002c 02       		.uleb128 0x2
 102 002d 01       		.byte	0x1
 103 002e 08       		.byte	0x8
 104 002f F4000000 		.4byte	.LASF1
 105 0033 02       		.uleb128 0x2
 106 0034 02       		.byte	0x2
 107 0035 05       		.byte	0x5
 108 0036 51010000 		.4byte	.LASF2
 109 003a 02       		.uleb128 0x2
 110 003b 02       		.byte	0x2
 111 003c 07       		.byte	0x7
 112 003d 4C000000 		.4byte	.LASF3
 113 0041 03       		.uleb128 0x3
 114 0042 41010000 		.4byte	.LASF9
 115 0046 02       		.byte	0x2
 116 0047 3F       		.byte	0x3f
 117 0048 4C000000 		.4byte	0x4c
 118 004c 02       		.uleb128 0x2
 119 004d 04       		.byte	0x4
 120 004e 05       		.byte	0x5
 121 004f 07010000 		.4byte	.LASF4
 122 0053 02       		.uleb128 0x2
 123 0054 04       		.byte	0x4
 124 0055 07       		.byte	0x7
 125 0056 23000000 		.4byte	.LASF5
 126 005a 02       		.uleb128 0x2
 127 005b 08       		.byte	0x8
 128 005c 05       		.byte	0x5
 129 005d 00000000 		.4byte	.LASF6
 130 0061 02       		.uleb128 0x2
 131 0062 08       		.byte	0x8
 132 0063 07       		.byte	0x7
 133 0064 35000000 		.4byte	.LASF7
 134 0068 04       		.uleb128 0x4
 135 0069 04       		.byte	0x4
 136 006a 05       		.byte	0x5
 137 006b 696E7400 		.ascii	"int\000"
 138 006f 02       		.uleb128 0x2
 139 0070 04       		.byte	0x4
 140 0071 07       		.byte	0x7
 141 0072 16000000 		.4byte	.LASF8
 142 0076 03       		.uleb128 0x3
 143 0077 5B010000 		.4byte	.LASF10
 144 007b 03       		.byte	0x3
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\cciI3n3d.s 			page 6


 145 007c 2C       		.byte	0x2c
 146 007d 41000000 		.4byte	0x41
 147 0081 02       		.uleb128 0x2
 148 0082 04       		.byte	0x4
 149 0083 04       		.byte	0x4
 150 0084 4B010000 		.4byte	.LASF11
 151 0088 02       		.uleb128 0x2
 152 0089 08       		.byte	0x8
 153 008a 04       		.byte	0x4
 154 008b 15010000 		.4byte	.LASF12
 155 008f 02       		.uleb128 0x2
 156 0090 01       		.byte	0x1
 157 0091 08       		.byte	0x8
 158 0092 02010000 		.4byte	.LASF13
 159 0096 02       		.uleb128 0x2
 160 0097 08       		.byte	0x8
 161 0098 04       		.byte	0x4
 162 0099 35010000 		.4byte	.LASF14
 163 009d 02       		.uleb128 0x2
 164 009e 04       		.byte	0x4
 165 009f 07       		.byte	0x7
 166 00a0 63010000 		.4byte	.LASF15
 167 00a4 05       		.uleb128 0x5
 168 00a5 04       		.byte	0x4
 169 00a6 8F000000 		.4byte	0x8f
 170 00aa 06       		.uleb128 0x6
 171 00ab ED000000 		.4byte	.LASF20
 172 00af 01       		.byte	0x1
 173 00b0 82       		.byte	0x82
 174 00b1 68000000 		.4byte	0x68
 175 00b5 00000000 		.4byte	.LFB64
 176 00b9 38000000 		.4byte	.LFE64-.LFB64
 177 00bd 01       		.uleb128 0x1
 178 00be 9C       		.byte	0x9c
 179 00bf FA000000 		.4byte	0xfa
 180 00c3 07       		.uleb128 0x7
 181 00c4 10010000 		.4byte	.LASF16
 182 00c8 01       		.byte	0x1
 183 00c9 82       		.byte	0x82
 184 00ca 68000000 		.4byte	0x68
 185 00ce 02       		.uleb128 0x2
 186 00cf 91       		.byte	0x91
 187 00d0 6C       		.sleb128 -20
 188 00d1 08       		.uleb128 0x8
 189 00d2 70747200 		.ascii	"ptr\000"
 190 00d6 01       		.byte	0x1
 191 00d7 82       		.byte	0x82
 192 00d8 A4000000 		.4byte	0xa4
 193 00dc 02       		.uleb128 0x2
 194 00dd 91       		.byte	0x91
 195 00de 68       		.sleb128 -24
 196 00df 08       		.uleb128 0x8
 197 00e0 6C656E00 		.ascii	"len\000"
 198 00e4 01       		.byte	0x1
 199 00e5 82       		.byte	0x82
 200 00e6 68000000 		.4byte	0x68
 201 00ea 02       		.uleb128 0x2
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\cciI3n3d.s 			page 7


 202 00eb 91       		.byte	0x91
 203 00ec 64       		.sleb128 -28
 204 00ed 09       		.uleb128 0x9
 205 00ee 6900     		.ascii	"i\000"
 206 00f0 01       		.byte	0x1
 207 00f1 84       		.byte	0x84
 208 00f2 68000000 		.4byte	0x68
 209 00f6 02       		.uleb128 0x2
 210 00f7 91       		.byte	0x91
 211 00f8 74       		.sleb128 -12
 212 00f9 00       		.byte	0
 213 00fa 0A       		.uleb128 0xa
 214 00fb 1C010000 		.4byte	.LASF21
 215 00ff 04       		.byte	0x4
 216 0100 1207     		.2byte	0x712
 217 0102 06010000 		.4byte	0x106
 218 0106 0B       		.uleb128 0xb
 219 0107 76000000 		.4byte	0x76
 220 010b 00       		.byte	0
 221              		.section	.debug_abbrev,"",%progbits
 222              	.Ldebug_abbrev0:
 223 0000 01       		.uleb128 0x1
 224 0001 11       		.uleb128 0x11
 225 0002 01       		.byte	0x1
 226 0003 25       		.uleb128 0x25
 227 0004 0E       		.uleb128 0xe
 228 0005 13       		.uleb128 0x13
 229 0006 0B       		.uleb128 0xb
 230 0007 03       		.uleb128 0x3
 231 0008 0E       		.uleb128 0xe
 232 0009 1B       		.uleb128 0x1b
 233 000a 0E       		.uleb128 0xe
 234 000b 55       		.uleb128 0x55
 235 000c 17       		.uleb128 0x17
 236 000d 11       		.uleb128 0x11
 237 000e 01       		.uleb128 0x1
 238 000f 10       		.uleb128 0x10
 239 0010 17       		.uleb128 0x17
 240 0011 00       		.byte	0
 241 0012 00       		.byte	0
 242 0013 02       		.uleb128 0x2
 243 0014 24       		.uleb128 0x24
 244 0015 00       		.byte	0
 245 0016 0B       		.uleb128 0xb
 246 0017 0B       		.uleb128 0xb
 247 0018 3E       		.uleb128 0x3e
 248 0019 0B       		.uleb128 0xb
 249 001a 03       		.uleb128 0x3
 250 001b 0E       		.uleb128 0xe
 251 001c 00       		.byte	0
 252 001d 00       		.byte	0
 253 001e 03       		.uleb128 0x3
 254 001f 16       		.uleb128 0x16
 255 0020 00       		.byte	0
 256 0021 03       		.uleb128 0x3
 257 0022 0E       		.uleb128 0xe
 258 0023 3A       		.uleb128 0x3a
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\cciI3n3d.s 			page 8


 259 0024 0B       		.uleb128 0xb
 260 0025 3B       		.uleb128 0x3b
 261 0026 0B       		.uleb128 0xb
 262 0027 49       		.uleb128 0x49
 263 0028 13       		.uleb128 0x13
 264 0029 00       		.byte	0
 265 002a 00       		.byte	0
 266 002b 04       		.uleb128 0x4
 267 002c 24       		.uleb128 0x24
 268 002d 00       		.byte	0
 269 002e 0B       		.uleb128 0xb
 270 002f 0B       		.uleb128 0xb
 271 0030 3E       		.uleb128 0x3e
 272 0031 0B       		.uleb128 0xb
 273 0032 03       		.uleb128 0x3
 274 0033 08       		.uleb128 0x8
 275 0034 00       		.byte	0
 276 0035 00       		.byte	0
 277 0036 05       		.uleb128 0x5
 278 0037 0F       		.uleb128 0xf
 279 0038 00       		.byte	0
 280 0039 0B       		.uleb128 0xb
 281 003a 0B       		.uleb128 0xb
 282 003b 49       		.uleb128 0x49
 283 003c 13       		.uleb128 0x13
 284 003d 00       		.byte	0
 285 003e 00       		.byte	0
 286 003f 06       		.uleb128 0x6
 287 0040 2E       		.uleb128 0x2e
 288 0041 01       		.byte	0x1
 289 0042 3F       		.uleb128 0x3f
 290 0043 19       		.uleb128 0x19
 291 0044 03       		.uleb128 0x3
 292 0045 0E       		.uleb128 0xe
 293 0046 3A       		.uleb128 0x3a
 294 0047 0B       		.uleb128 0xb
 295 0048 3B       		.uleb128 0x3b
 296 0049 0B       		.uleb128 0xb
 297 004a 27       		.uleb128 0x27
 298 004b 19       		.uleb128 0x19
 299 004c 49       		.uleb128 0x49
 300 004d 13       		.uleb128 0x13
 301 004e 11       		.uleb128 0x11
 302 004f 01       		.uleb128 0x1
 303 0050 12       		.uleb128 0x12
 304 0051 06       		.uleb128 0x6
 305 0052 40       		.uleb128 0x40
 306 0053 18       		.uleb128 0x18
 307 0054 9642     		.uleb128 0x2116
 308 0056 19       		.uleb128 0x19
 309 0057 01       		.uleb128 0x1
 310 0058 13       		.uleb128 0x13
 311 0059 00       		.byte	0
 312 005a 00       		.byte	0
 313 005b 07       		.uleb128 0x7
 314 005c 05       		.uleb128 0x5
 315 005d 00       		.byte	0
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\cciI3n3d.s 			page 9


 316 005e 03       		.uleb128 0x3
 317 005f 0E       		.uleb128 0xe
 318 0060 3A       		.uleb128 0x3a
 319 0061 0B       		.uleb128 0xb
 320 0062 3B       		.uleb128 0x3b
 321 0063 0B       		.uleb128 0xb
 322 0064 49       		.uleb128 0x49
 323 0065 13       		.uleb128 0x13
 324 0066 02       		.uleb128 0x2
 325 0067 18       		.uleb128 0x18
 326 0068 00       		.byte	0
 327 0069 00       		.byte	0
 328 006a 08       		.uleb128 0x8
 329 006b 05       		.uleb128 0x5
 330 006c 00       		.byte	0
 331 006d 03       		.uleb128 0x3
 332 006e 08       		.uleb128 0x8
 333 006f 3A       		.uleb128 0x3a
 334 0070 0B       		.uleb128 0xb
 335 0071 3B       		.uleb128 0x3b
 336 0072 0B       		.uleb128 0xb
 337 0073 49       		.uleb128 0x49
 338 0074 13       		.uleb128 0x13
 339 0075 02       		.uleb128 0x2
 340 0076 18       		.uleb128 0x18
 341 0077 00       		.byte	0
 342 0078 00       		.byte	0
 343 0079 09       		.uleb128 0x9
 344 007a 34       		.uleb128 0x34
 345 007b 00       		.byte	0
 346 007c 03       		.uleb128 0x3
 347 007d 08       		.uleb128 0x8
 348 007e 3A       		.uleb128 0x3a
 349 007f 0B       		.uleb128 0xb
 350 0080 3B       		.uleb128 0x3b
 351 0081 0B       		.uleb128 0xb
 352 0082 49       		.uleb128 0x49
 353 0083 13       		.uleb128 0x13
 354 0084 02       		.uleb128 0x2
 355 0085 18       		.uleb128 0x18
 356 0086 00       		.byte	0
 357 0087 00       		.byte	0
 358 0088 0A       		.uleb128 0xa
 359 0089 34       		.uleb128 0x34
 360 008a 00       		.byte	0
 361 008b 03       		.uleb128 0x3
 362 008c 0E       		.uleb128 0xe
 363 008d 3A       		.uleb128 0x3a
 364 008e 0B       		.uleb128 0xb
 365 008f 3B       		.uleb128 0x3b
 366 0090 05       		.uleb128 0x5
 367 0091 49       		.uleb128 0x49
 368 0092 13       		.uleb128 0x13
 369 0093 3F       		.uleb128 0x3f
 370 0094 19       		.uleb128 0x19
 371 0095 3C       		.uleb128 0x3c
 372 0096 19       		.uleb128 0x19
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\cciI3n3d.s 			page 10


 373 0097 00       		.byte	0
 374 0098 00       		.byte	0
 375 0099 0B       		.uleb128 0xb
 376 009a 35       		.uleb128 0x35
 377 009b 00       		.byte	0
 378 009c 49       		.uleb128 0x49
 379 009d 13       		.uleb128 0x13
 380 009e 00       		.byte	0
 381 009f 00       		.byte	0
 382 00a0 00       		.byte	0
 383              		.section	.debug_aranges,"",%progbits
 384 0000 1C000000 		.4byte	0x1c
 385 0004 0200     		.2byte	0x2
 386 0006 00000000 		.4byte	.Ldebug_info0
 387 000a 04       		.byte	0x4
 388 000b 00       		.byte	0
 389 000c 0000     		.2byte	0
 390 000e 0000     		.2byte	0
 391 0010 00000000 		.4byte	.LFB64
 392 0014 38000000 		.4byte	.LFE64-.LFB64
 393 0018 00000000 		.4byte	0
 394 001c 00000000 		.4byte	0
 395              		.section	.debug_ranges,"",%progbits
 396              	.Ldebug_ranges0:
 397 0000 00000000 		.4byte	.LFB64
 398 0004 38000000 		.4byte	.LFE64
 399 0008 00000000 		.4byte	0
 400 000c 00000000 		.4byte	0
 401              		.section	.debug_line,"",%progbits
 402              	.Ldebug_line0:
 403 0000 6A010000 		.section	.debug_str,"MS",%progbits,1
 403      02004001 
 403      00000201 
 403      FB0E0D00 
 403      01010101 
 404              	.LASF6:
 405 0000 6C6F6E67 		.ascii	"long long int\000"
 405      206C6F6E 
 405      6720696E 
 405      7400
 406              	.LASF18:
 407 000e 64656275 		.ascii	"debug.c\000"
 407      672E6300 
 408              	.LASF8:
 409 0016 756E7369 		.ascii	"unsigned int\000"
 409      676E6564 
 409      20696E74 
 409      00
 410              	.LASF5:
 411 0023 6C6F6E67 		.ascii	"long unsigned int\000"
 411      20756E73 
 411      69676E65 
 411      6420696E 
 411      7400
 412              	.LASF7:
 413 0035 6C6F6E67 		.ascii	"long long unsigned int\000"
 413      206C6F6E 
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\cciI3n3d.s 			page 11


 413      6720756E 
 413      7369676E 
 413      65642069 
 414              	.LASF3:
 415 004c 73686F72 		.ascii	"short unsigned int\000"
 415      7420756E 
 415      7369676E 
 415      65642069 
 415      6E7400
 416              	.LASF17:
 417 005f 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 417      43313120 
 417      352E342E 
 417      31203230 
 417      31363036 
 418 0092 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 418      20726576 
 418      6973696F 
 418      6E203233 
 418      37373135 
 419 00c5 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 419      66756E63 
 419      74696F6E 
 419      2D736563 
 419      74696F6E 
 420              	.LASF20:
 421 00ed 5F777269 		.ascii	"_write\000"
 421      746500
 422              	.LASF1:
 423 00f4 756E7369 		.ascii	"unsigned char\000"
 423      676E6564 
 423      20636861 
 423      7200
 424              	.LASF13:
 425 0102 63686172 		.ascii	"char\000"
 425      00
 426              	.LASF4:
 427 0107 6C6F6E67 		.ascii	"long int\000"
 427      20696E74 
 427      00
 428              	.LASF16:
 429 0110 66696C65 		.ascii	"file\000"
 429      00
 430              	.LASF12:
 431 0115 646F7562 		.ascii	"double\000"
 431      6C6500
 432              	.LASF21:
 433 011c 49544D5F 		.ascii	"ITM_RxBuffer\000"
 433      52784275 
 433      66666572 
 433      00
 434              	.LASF0:
 435 0129 7369676E 		.ascii	"signed char\000"
 435      65642063 
 435      68617200 
 436              	.LASF14:
 437 0135 6C6F6E67 		.ascii	"long double\000"
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\cciI3n3d.s 			page 12


 437      20646F75 
 437      626C6500 
 438              	.LASF9:
 439 0141 5F5F696E 		.ascii	"__int32_t\000"
 439      7433325F 
 439      7400
 440              	.LASF11:
 441 014b 666C6F61 		.ascii	"float\000"
 441      7400
 442              	.LASF2:
 443 0151 73686F72 		.ascii	"short int\000"
 443      7420696E 
 443      7400
 444              	.LASF10:
 445 015b 696E7433 		.ascii	"int32_t\000"
 445      325F7400 
 446              	.LASF15:
 447 0163 73697A65 		.ascii	"sizetype\000"
 447      74797065 
 447      00
 448              	.LASF19:
 449 016c 433A5C55 		.ascii	"C:\\Users\\Andrew\\Documents\\GitHub\\Hydraulic-Mim"
 449      73657273 
 449      5C416E64 
 449      7265775C 
 449      446F6375 
 450 019a 69632D41 		.ascii	"ic-Arm\\PSOC_arm_project.cydsn\000"
 450      726D5C50 
 450      534F435F 
 450      61726D5F 
 450      70726F6A 
 451              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
