ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccxWh4RE.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"Timer_1.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	Timer_1_initVar
  20              		.bss
  21              		.type	Timer_1_initVar, %object
  22              		.size	Timer_1_initVar, 1
  23              	Timer_1_initVar:
  24 0000 00       		.space	1
  25              		.section	.text.Timer_1_Init,"ax",%progbits
  26              		.align	2
  27              		.global	Timer_1_Init
  28              		.thumb
  29              		.thumb_func
  30              		.type	Timer_1_Init, %function
  31              	Timer_1_Init:
  32              	.LFB0:
  33              		.file 1 "Generated_Source\\PSoC5\\Timer_1.c"
   1:Generated_Source\PSoC5/Timer_1.c **** /*******************************************************************************
   2:Generated_Source\PSoC5/Timer_1.c **** * File Name: Timer_1.c
   3:Generated_Source\PSoC5/Timer_1.c **** * Version 2.80
   4:Generated_Source\PSoC5/Timer_1.c **** *
   5:Generated_Source\PSoC5/Timer_1.c **** * Description:
   6:Generated_Source\PSoC5/Timer_1.c **** *  The Timer component consists of a 8, 16, 24 or 32-bit timer with
   7:Generated_Source\PSoC5/Timer_1.c **** *  a selectable period between 2 and 2^Width - 1.  The timer may free run
   8:Generated_Source\PSoC5/Timer_1.c **** *  or be used as a capture timer as well.  The capture can be initiated
   9:Generated_Source\PSoC5/Timer_1.c **** *  by a positive or negative edge signal as well as via software.
  10:Generated_Source\PSoC5/Timer_1.c **** *  A trigger input can be programmed to enable the timer on rising edge
  11:Generated_Source\PSoC5/Timer_1.c **** *  falling edge, either edge or continous run.
  12:Generated_Source\PSoC5/Timer_1.c **** *  Interrupts may be generated due to a terminal count condition
  13:Generated_Source\PSoC5/Timer_1.c **** *  or a capture event.
  14:Generated_Source\PSoC5/Timer_1.c **** *
  15:Generated_Source\PSoC5/Timer_1.c **** * Note:
  16:Generated_Source\PSoC5/Timer_1.c **** *
  17:Generated_Source\PSoC5/Timer_1.c **** ********************************************************************************
  18:Generated_Source\PSoC5/Timer_1.c **** * Copyright 2008-2017, Cypress Semiconductor Corporation.  All rights reserved.
  19:Generated_Source\PSoC5/Timer_1.c **** * You may use this file only in accordance with the license, terms, conditions,
  20:Generated_Source\PSoC5/Timer_1.c **** * disclaimers, and limitations in the end user license agreement accompanying
  21:Generated_Source\PSoC5/Timer_1.c **** * the software package with which this file was provided.
  22:Generated_Source\PSoC5/Timer_1.c **** ********************************************************************************/
  23:Generated_Source\PSoC5/Timer_1.c **** 
  24:Generated_Source\PSoC5/Timer_1.c **** #include "Timer_1.h"
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccxWh4RE.s 			page 2


  25:Generated_Source\PSoC5/Timer_1.c **** 
  26:Generated_Source\PSoC5/Timer_1.c **** uint8 Timer_1_initVar = 0u;
  27:Generated_Source\PSoC5/Timer_1.c **** 
  28:Generated_Source\PSoC5/Timer_1.c **** 
  29:Generated_Source\PSoC5/Timer_1.c **** /*******************************************************************************
  30:Generated_Source\PSoC5/Timer_1.c **** * Function Name: Timer_1_Init
  31:Generated_Source\PSoC5/Timer_1.c **** ********************************************************************************
  32:Generated_Source\PSoC5/Timer_1.c **** *
  33:Generated_Source\PSoC5/Timer_1.c **** * Summary:
  34:Generated_Source\PSoC5/Timer_1.c **** *  Initialize to the schematic state
  35:Generated_Source\PSoC5/Timer_1.c **** *
  36:Generated_Source\PSoC5/Timer_1.c **** * Parameters:
  37:Generated_Source\PSoC5/Timer_1.c **** *  void
  38:Generated_Source\PSoC5/Timer_1.c **** *
  39:Generated_Source\PSoC5/Timer_1.c **** * Return:
  40:Generated_Source\PSoC5/Timer_1.c **** *  void
  41:Generated_Source\PSoC5/Timer_1.c **** *
  42:Generated_Source\PSoC5/Timer_1.c **** *******************************************************************************/
  43:Generated_Source\PSoC5/Timer_1.c **** void Timer_1_Init(void) 
  44:Generated_Source\PSoC5/Timer_1.c **** {
  34              		.loc 1 44 0
  35              		.cfi_startproc
  36              		@ args = 0, pretend = 0, frame = 0
  37              		@ frame_needed = 1, uses_anonymous_args = 0
  38 0000 80B5     		push	{r7, lr}
  39              		.cfi_def_cfa_offset 8
  40              		.cfi_offset 7, -8
  41              		.cfi_offset 14, -4
  42 0002 00AF     		add	r7, sp, #0
  43              		.cfi_def_cfa_register 7
  45:Generated_Source\PSoC5/Timer_1.c ****     #if(!Timer_1_UsingFixedFunction)
  46:Generated_Source\PSoC5/Timer_1.c ****             /* Interrupt State Backup for Critical Region*/
  47:Generated_Source\PSoC5/Timer_1.c ****             uint8 Timer_1_interruptState;
  48:Generated_Source\PSoC5/Timer_1.c ****     #endif /* Interrupt state back up for Fixed Function only */
  49:Generated_Source\PSoC5/Timer_1.c **** 
  50:Generated_Source\PSoC5/Timer_1.c ****     #if (Timer_1_UsingFixedFunction)
  51:Generated_Source\PSoC5/Timer_1.c ****         /* Clear all bits but the enable bit (if it's already set) for Timer operation */
  52:Generated_Source\PSoC5/Timer_1.c ****         Timer_1_CONTROL &= Timer_1_CTRL_ENABLE;
  44              		.loc 1 52 0
  45 0004 264A     		ldr	r2, .L2
  46 0006 264B     		ldr	r3, .L2
  47 0008 1B78     		ldrb	r3, [r3]
  48 000a DBB2     		uxtb	r3, r3
  49 000c 03F00103 		and	r3, r3, #1
  50 0010 DBB2     		uxtb	r3, r3
  51 0012 1370     		strb	r3, [r2]
  53:Generated_Source\PSoC5/Timer_1.c **** 
  54:Generated_Source\PSoC5/Timer_1.c ****         /* Clear the mode bits for continuous run mode */
  55:Generated_Source\PSoC5/Timer_1.c ****         #if (CY_PSOC5A)
  56:Generated_Source\PSoC5/Timer_1.c ****             Timer_1_CONTROL2 &= ((uint8)(~Timer_1_CTRL_MODE_MASK));
  57:Generated_Source\PSoC5/Timer_1.c ****         #endif /* Clear bits in CONTROL2 only in PSOC5A */
  58:Generated_Source\PSoC5/Timer_1.c **** 
  59:Generated_Source\PSoC5/Timer_1.c ****         #if (CY_PSOC3 || CY_PSOC5LP)
  60:Generated_Source\PSoC5/Timer_1.c ****             Timer_1_CONTROL3 &= ((uint8)(~Timer_1_CTRL_MODE_MASK));
  52              		.loc 1 60 0
  53 0014 234A     		ldr	r2, .L2+4
  54 0016 234B     		ldr	r3, .L2+4
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccxWh4RE.s 			page 3


  55 0018 1B78     		ldrb	r3, [r3]
  56 001a DBB2     		uxtb	r3, r3
  57 001c 23F00303 		bic	r3, r3, #3
  58 0020 DBB2     		uxtb	r3, r3
  59 0022 1370     		strb	r3, [r2]
  61:Generated_Source\PSoC5/Timer_1.c ****         #endif /* CONTROL3 register exists only in PSoC3 OR PSoC5LP */
  62:Generated_Source\PSoC5/Timer_1.c **** 
  63:Generated_Source\PSoC5/Timer_1.c ****         /* Check if One Shot mode is enabled i.e. RunMode !=0*/
  64:Generated_Source\PSoC5/Timer_1.c ****         #if (Timer_1_RunModeUsed != 0x0u)
  65:Generated_Source\PSoC5/Timer_1.c ****             /* Set 3rd bit of Control register to enable one shot mode */
  66:Generated_Source\PSoC5/Timer_1.c ****             Timer_1_CONTROL |= 0x04u;
  60              		.loc 1 66 0
  61 0024 1E4A     		ldr	r2, .L2
  62 0026 1E4B     		ldr	r3, .L2
  63 0028 1B78     		ldrb	r3, [r3]
  64 002a DBB2     		uxtb	r3, r3
  65 002c 43F00403 		orr	r3, r3, #4
  66 0030 DBB2     		uxtb	r3, r3
  67 0032 1370     		strb	r3, [r2]
  67:Generated_Source\PSoC5/Timer_1.c ****         #endif /* One Shot enabled only when RunModeUsed is not Continuous*/
  68:Generated_Source\PSoC5/Timer_1.c **** 
  69:Generated_Source\PSoC5/Timer_1.c ****         #if (Timer_1_RunModeUsed == 2)
  70:Generated_Source\PSoC5/Timer_1.c ****             #if (CY_PSOC5A)
  71:Generated_Source\PSoC5/Timer_1.c ****                 /* Set last 2 bits of control2 register if one shot(halt on
  72:Generated_Source\PSoC5/Timer_1.c ****                 interrupt) is enabled*/
  73:Generated_Source\PSoC5/Timer_1.c ****                 Timer_1_CONTROL2 |= 0x03u;
  74:Generated_Source\PSoC5/Timer_1.c ****             #endif /* Set One-Shot Halt on Interrupt bit in CONTROL2 for PSoC5A */
  75:Generated_Source\PSoC5/Timer_1.c **** 
  76:Generated_Source\PSoC5/Timer_1.c ****             #if (CY_PSOC3 || CY_PSOC5LP)
  77:Generated_Source\PSoC5/Timer_1.c ****                 /* Set last 2 bits of control3 register if one shot(halt on
  78:Generated_Source\PSoC5/Timer_1.c ****                 interrupt) is enabled*/
  79:Generated_Source\PSoC5/Timer_1.c ****                 Timer_1_CONTROL3 |= 0x03u;
  80:Generated_Source\PSoC5/Timer_1.c ****             #endif /* Set One-Shot Halt on Interrupt bit in CONTROL3 for PSoC3 or PSoC5LP */
  81:Generated_Source\PSoC5/Timer_1.c **** 
  82:Generated_Source\PSoC5/Timer_1.c ****         #endif /* Remove section if One Shot Halt on Interrupt is not enabled */
  83:Generated_Source\PSoC5/Timer_1.c **** 
  84:Generated_Source\PSoC5/Timer_1.c ****         #if (Timer_1_UsingHWEnable != 0)
  85:Generated_Source\PSoC5/Timer_1.c ****             #if (CY_PSOC5A)
  86:Generated_Source\PSoC5/Timer_1.c ****                 /* Set the default Run Mode of the Timer to Continuous */
  87:Generated_Source\PSoC5/Timer_1.c ****                 Timer_1_CONTROL2 |= Timer_1_CTRL_MODE_PULSEWIDTH;
  88:Generated_Source\PSoC5/Timer_1.c ****             #endif /* Set Continuous Run Mode in CONTROL2 for PSoC5A */
  89:Generated_Source\PSoC5/Timer_1.c **** 
  90:Generated_Source\PSoC5/Timer_1.c ****             #if (CY_PSOC3 || CY_PSOC5LP)
  91:Generated_Source\PSoC5/Timer_1.c ****                 /* Clear and Set ROD and COD bits of CFG2 register */
  92:Generated_Source\PSoC5/Timer_1.c ****                 Timer_1_CONTROL3 &= ((uint8)(~Timer_1_CTRL_RCOD_MASK));
  93:Generated_Source\PSoC5/Timer_1.c ****                 Timer_1_CONTROL3 |= Timer_1_CTRL_RCOD;
  94:Generated_Source\PSoC5/Timer_1.c **** 
  95:Generated_Source\PSoC5/Timer_1.c ****                 /* Clear and Enable the HW enable bit in CFG2 register */
  96:Generated_Source\PSoC5/Timer_1.c ****                 Timer_1_CONTROL3 &= ((uint8)(~Timer_1_CTRL_ENBL_MASK));
  97:Generated_Source\PSoC5/Timer_1.c ****                 Timer_1_CONTROL3 |= Timer_1_CTRL_ENBL;
  98:Generated_Source\PSoC5/Timer_1.c **** 
  99:Generated_Source\PSoC5/Timer_1.c ****                 /* Set the default Run Mode of the Timer to Continuous */
 100:Generated_Source\PSoC5/Timer_1.c ****                 Timer_1_CONTROL3 |= Timer_1_CTRL_MODE_CONTINUOUS;
 101:Generated_Source\PSoC5/Timer_1.c ****             #endif /* Set Continuous Run Mode in CONTROL3 for PSoC3ES3 or PSoC5A */
 102:Generated_Source\PSoC5/Timer_1.c **** 
 103:Generated_Source\PSoC5/Timer_1.c ****         #endif /* Configure Run Mode with hardware enable */
 104:Generated_Source\PSoC5/Timer_1.c **** 
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccxWh4RE.s 			page 4


 105:Generated_Source\PSoC5/Timer_1.c ****         /* Clear and Set SYNCTC and SYNCCMP bits of RT1 register */
 106:Generated_Source\PSoC5/Timer_1.c ****         Timer_1_RT1 &= ((uint8)(~Timer_1_RT1_MASK));
  68              		.loc 1 106 0
  69 0034 1C4A     		ldr	r2, .L2+8
  70 0036 1C4B     		ldr	r3, .L2+8
  71 0038 1B78     		ldrb	r3, [r3]
  72 003a DBB2     		uxtb	r3, r3
  73 003c 23F03003 		bic	r3, r3, #48
  74 0040 DBB2     		uxtb	r3, r3
  75 0042 1370     		strb	r3, [r2]
 107:Generated_Source\PSoC5/Timer_1.c ****         Timer_1_RT1 |= Timer_1_SYNC;
  76              		.loc 1 107 0
  77 0044 184A     		ldr	r2, .L2+8
  78 0046 184B     		ldr	r3, .L2+8
  79 0048 1B78     		ldrb	r3, [r3]
  80 004a DBB2     		uxtb	r3, r3
  81 004c 43F03003 		orr	r3, r3, #48
  82 0050 DBB2     		uxtb	r3, r3
  83 0052 1370     		strb	r3, [r2]
 108:Generated_Source\PSoC5/Timer_1.c **** 
 109:Generated_Source\PSoC5/Timer_1.c ****         /*Enable DSI Sync all all inputs of the Timer*/
 110:Generated_Source\PSoC5/Timer_1.c ****         Timer_1_RT1 &= ((uint8)(~Timer_1_SYNCDSI_MASK));
  84              		.loc 1 110 0
  85 0054 144A     		ldr	r2, .L2+8
  86 0056 144B     		ldr	r3, .L2+8
  87 0058 1B78     		ldrb	r3, [r3]
  88 005a DBB2     		uxtb	r3, r3
  89 005c 23F00F03 		bic	r3, r3, #15
  90 0060 DBB2     		uxtb	r3, r3
  91 0062 1370     		strb	r3, [r2]
 111:Generated_Source\PSoC5/Timer_1.c ****         Timer_1_RT1 |= Timer_1_SYNCDSI_EN;
  92              		.loc 1 111 0
  93 0064 104A     		ldr	r2, .L2+8
  94 0066 104B     		ldr	r3, .L2+8
  95 0068 1B78     		ldrb	r3, [r3]
  96 006a DBB2     		uxtb	r3, r3
  97 006c 43F00F03 		orr	r3, r3, #15
  98 0070 DBB2     		uxtb	r3, r3
  99 0072 1370     		strb	r3, [r2]
 112:Generated_Source\PSoC5/Timer_1.c **** 
 113:Generated_Source\PSoC5/Timer_1.c ****         /* Set the IRQ to use the status register interrupts */
 114:Generated_Source\PSoC5/Timer_1.c ****         Timer_1_CONTROL2 |= Timer_1_CTRL2_IRQ_SEL;
 100              		.loc 1 114 0
 101 0074 0D4A     		ldr	r2, .L2+12
 102 0076 0D4B     		ldr	r3, .L2+12
 103 0078 1B78     		ldrb	r3, [r3]
 104 007a DBB2     		uxtb	r3, r3
 105 007c 43F00103 		orr	r3, r3, #1
 106 0080 DBB2     		uxtb	r3, r3
 107 0082 1370     		strb	r3, [r2]
 115:Generated_Source\PSoC5/Timer_1.c ****     #endif /* Configuring registers of fixed function implementation */
 116:Generated_Source\PSoC5/Timer_1.c **** 
 117:Generated_Source\PSoC5/Timer_1.c ****     /* Set Initial values from Configuration */
 118:Generated_Source\PSoC5/Timer_1.c ****     Timer_1_WritePeriod(Timer_1_INIT_PERIOD);
 108              		.loc 1 118 0
 109 0084 4FF6FF70 		movw	r0, #65535
 110 0088 FFF7FEFF 		bl	Timer_1_WritePeriod
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccxWh4RE.s 			page 5


 119:Generated_Source\PSoC5/Timer_1.c ****     Timer_1_WriteCounter(Timer_1_INIT_PERIOD);
 111              		.loc 1 119 0
 112 008c 4FF6FF70 		movw	r0, #65535
 113 0090 FFF7FEFF 		bl	Timer_1_WriteCounter
 120:Generated_Source\PSoC5/Timer_1.c **** 
 121:Generated_Source\PSoC5/Timer_1.c ****     #if (Timer_1_UsingHWCaptureCounter)/* Capture counter is enabled */
 122:Generated_Source\PSoC5/Timer_1.c ****         Timer_1_CAPTURE_COUNT_CTRL |= Timer_1_CNTR_ENABLE;
 123:Generated_Source\PSoC5/Timer_1.c ****         Timer_1_SetCaptureCount(Timer_1_INIT_CAPTURE_COUNT);
 124:Generated_Source\PSoC5/Timer_1.c ****     #endif /* Configure capture counter value */
 125:Generated_Source\PSoC5/Timer_1.c **** 
 126:Generated_Source\PSoC5/Timer_1.c ****     #if (!Timer_1_UsingFixedFunction)
 127:Generated_Source\PSoC5/Timer_1.c ****         #if (Timer_1_SoftwareCaptureMode)
 128:Generated_Source\PSoC5/Timer_1.c ****             Timer_1_SetCaptureMode(Timer_1_INIT_CAPTURE_MODE);
 129:Generated_Source\PSoC5/Timer_1.c ****         #endif /* Set Capture Mode for UDB implementation if capture mode is software controlled */
 130:Generated_Source\PSoC5/Timer_1.c **** 
 131:Generated_Source\PSoC5/Timer_1.c ****         #if (Timer_1_SoftwareTriggerMode)
 132:Generated_Source\PSoC5/Timer_1.c ****             #if (!Timer_1_UDB_CONTROL_REG_REMOVED)
 133:Generated_Source\PSoC5/Timer_1.c ****                 if (0u == (Timer_1_CONTROL & Timer_1__B_TIMER__TM_SOFTWARE))
 134:Generated_Source\PSoC5/Timer_1.c ****                 {
 135:Generated_Source\PSoC5/Timer_1.c ****                     Timer_1_SetTriggerMode(Timer_1_INIT_TRIGGER_MODE);
 136:Generated_Source\PSoC5/Timer_1.c ****                 }
 137:Generated_Source\PSoC5/Timer_1.c ****             #endif /* (!Timer_1_UDB_CONTROL_REG_REMOVED) */
 138:Generated_Source\PSoC5/Timer_1.c ****         #endif /* Set trigger mode for UDB Implementation if trigger mode is software controlled */
 139:Generated_Source\PSoC5/Timer_1.c **** 
 140:Generated_Source\PSoC5/Timer_1.c ****         /* CyEnterCriticalRegion and CyExitCriticalRegion are used to mark following region critica
 141:Generated_Source\PSoC5/Timer_1.c ****         /* Enter Critical Region*/
 142:Generated_Source\PSoC5/Timer_1.c ****         Timer_1_interruptState = CyEnterCriticalSection();
 143:Generated_Source\PSoC5/Timer_1.c **** 
 144:Generated_Source\PSoC5/Timer_1.c ****         /* Use the interrupt output of the status register for IRQ output */
 145:Generated_Source\PSoC5/Timer_1.c ****         Timer_1_STATUS_AUX_CTRL |= Timer_1_STATUS_ACTL_INT_EN_MASK;
 146:Generated_Source\PSoC5/Timer_1.c **** 
 147:Generated_Source\PSoC5/Timer_1.c ****         /* Exit Critical Region*/
 148:Generated_Source\PSoC5/Timer_1.c ****         CyExitCriticalSection(Timer_1_interruptState);
 149:Generated_Source\PSoC5/Timer_1.c **** 
 150:Generated_Source\PSoC5/Timer_1.c ****         #if (Timer_1_EnableTriggerMode)
 151:Generated_Source\PSoC5/Timer_1.c ****             Timer_1_EnableTrigger();
 152:Generated_Source\PSoC5/Timer_1.c ****         #endif /* Set Trigger enable bit for UDB implementation in the control register*/
 153:Generated_Source\PSoC5/Timer_1.c **** 		
 154:Generated_Source\PSoC5/Timer_1.c **** 		
 155:Generated_Source\PSoC5/Timer_1.c ****         #if (Timer_1_InterruptOnCaptureCount && !Timer_1_UDB_CONTROL_REG_REMOVED)
 156:Generated_Source\PSoC5/Timer_1.c ****             Timer_1_SetInterruptCount(Timer_1_INIT_INT_CAPTURE_COUNT);
 157:Generated_Source\PSoC5/Timer_1.c ****         #endif /* Set interrupt count in UDB implementation if interrupt count feature is checked.*
 158:Generated_Source\PSoC5/Timer_1.c **** 
 159:Generated_Source\PSoC5/Timer_1.c ****         Timer_1_ClearFIFO();
 160:Generated_Source\PSoC5/Timer_1.c ****     #endif /* Configure additional features of UDB implementation */
 161:Generated_Source\PSoC5/Timer_1.c **** 
 162:Generated_Source\PSoC5/Timer_1.c ****     Timer_1_SetInterruptMode(Timer_1_INIT_INTERRUPT_MODE);
 114              		.loc 1 162 0
 115 0094 0020     		movs	r0, #0
 116 0096 FFF7FEFF 		bl	Timer_1_SetInterruptMode
 163:Generated_Source\PSoC5/Timer_1.c **** }
 117              		.loc 1 163 0
 118 009a 00BF     		nop
 119 009c 80BD     		pop	{r7, pc}
 120              	.L3:
 121 009e 00BF     		.align	2
 122              	.L2:
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccxWh4RE.s 			page 6


 123 00a0 004F0040 		.word	1073762048
 124 00a4 024F0040 		.word	1073762050
 125 00a8 0B4F0040 		.word	1073762059
 126 00ac 014F0040 		.word	1073762049
 127              		.cfi_endproc
 128              	.LFE0:
 129              		.size	Timer_1_Init, .-Timer_1_Init
 130              		.section	.text.Timer_1_Enable,"ax",%progbits
 131              		.align	2
 132              		.global	Timer_1_Enable
 133              		.thumb
 134              		.thumb_func
 135              		.type	Timer_1_Enable, %function
 136              	Timer_1_Enable:
 137              	.LFB1:
 164:Generated_Source\PSoC5/Timer_1.c **** 
 165:Generated_Source\PSoC5/Timer_1.c **** 
 166:Generated_Source\PSoC5/Timer_1.c **** /*******************************************************************************
 167:Generated_Source\PSoC5/Timer_1.c **** * Function Name: Timer_1_Enable
 168:Generated_Source\PSoC5/Timer_1.c **** ********************************************************************************
 169:Generated_Source\PSoC5/Timer_1.c **** *
 170:Generated_Source\PSoC5/Timer_1.c **** * Summary:
 171:Generated_Source\PSoC5/Timer_1.c **** *  Enable the Timer
 172:Generated_Source\PSoC5/Timer_1.c **** *
 173:Generated_Source\PSoC5/Timer_1.c **** * Parameters:
 174:Generated_Source\PSoC5/Timer_1.c **** *  void
 175:Generated_Source\PSoC5/Timer_1.c **** *
 176:Generated_Source\PSoC5/Timer_1.c **** * Return:
 177:Generated_Source\PSoC5/Timer_1.c **** *  void
 178:Generated_Source\PSoC5/Timer_1.c **** *
 179:Generated_Source\PSoC5/Timer_1.c **** *******************************************************************************/
 180:Generated_Source\PSoC5/Timer_1.c **** void Timer_1_Enable(void) 
 181:Generated_Source\PSoC5/Timer_1.c **** {
 138              		.loc 1 181 0
 139              		.cfi_startproc
 140              		@ args = 0, pretend = 0, frame = 0
 141              		@ frame_needed = 1, uses_anonymous_args = 0
 142              		@ link register save eliminated.
 143 0000 80B4     		push	{r7}
 144              		.cfi_def_cfa_offset 4
 145              		.cfi_offset 7, -4
 146 0002 00AF     		add	r7, sp, #0
 147              		.cfi_def_cfa_register 7
 182:Generated_Source\PSoC5/Timer_1.c ****     /* Globally Enable the Fixed Function Block chosen */
 183:Generated_Source\PSoC5/Timer_1.c ****     #if (Timer_1_UsingFixedFunction)
 184:Generated_Source\PSoC5/Timer_1.c ****         Timer_1_GLOBAL_ENABLE |= Timer_1_BLOCK_EN_MASK;
 148              		.loc 1 184 0
 149 0004 0D4A     		ldr	r2, .L5
 150 0006 0D4B     		ldr	r3, .L5
 151 0008 1B78     		ldrb	r3, [r3]
 152 000a DBB2     		uxtb	r3, r3
 153 000c 43F00103 		orr	r3, r3, #1
 154 0010 DBB2     		uxtb	r3, r3
 155 0012 1370     		strb	r3, [r2]
 185:Generated_Source\PSoC5/Timer_1.c ****         Timer_1_GLOBAL_STBY_ENABLE |= Timer_1_BLOCK_STBY_EN_MASK;
 156              		.loc 1 185 0
 157 0014 0A4A     		ldr	r2, .L5+4
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccxWh4RE.s 			page 7


 158 0016 0A4B     		ldr	r3, .L5+4
 159 0018 1B78     		ldrb	r3, [r3]
 160 001a DBB2     		uxtb	r3, r3
 161 001c 43F00103 		orr	r3, r3, #1
 162 0020 DBB2     		uxtb	r3, r3
 163 0022 1370     		strb	r3, [r2]
 186:Generated_Source\PSoC5/Timer_1.c ****     #endif /* Set Enable bit for enabling Fixed function timer*/
 187:Generated_Source\PSoC5/Timer_1.c **** 
 188:Generated_Source\PSoC5/Timer_1.c ****     /* Remove assignment if control register is removed */
 189:Generated_Source\PSoC5/Timer_1.c ****     #if (!Timer_1_UDB_CONTROL_REG_REMOVED || Timer_1_UsingFixedFunction)
 190:Generated_Source\PSoC5/Timer_1.c ****         Timer_1_CONTROL |= Timer_1_CTRL_ENABLE;
 164              		.loc 1 190 0
 165 0024 074A     		ldr	r2, .L5+8
 166 0026 074B     		ldr	r3, .L5+8
 167 0028 1B78     		ldrb	r3, [r3]
 168 002a DBB2     		uxtb	r3, r3
 169 002c 43F00103 		orr	r3, r3, #1
 170 0030 DBB2     		uxtb	r3, r3
 171 0032 1370     		strb	r3, [r2]
 191:Generated_Source\PSoC5/Timer_1.c ****     #endif /* Remove assignment if control register is removed */
 192:Generated_Source\PSoC5/Timer_1.c **** }
 172              		.loc 1 192 0
 173 0034 00BF     		nop
 174 0036 BD46     		mov	sp, r7
 175              		.cfi_def_cfa_register 13
 176              		@ sp needed
 177 0038 80BC     		pop	{r7}
 178              		.cfi_restore 7
 179              		.cfi_def_cfa_offset 0
 180 003a 7047     		bx	lr
 181              	.L6:
 182              		.align	2
 183              	.L5:
 184 003c A3430040 		.word	1073759139
 185 0040 B3430040 		.word	1073759155
 186 0044 004F0040 		.word	1073762048
 187              		.cfi_endproc
 188              	.LFE1:
 189              		.size	Timer_1_Enable, .-Timer_1_Enable
 190              		.section	.text.Timer_1_Start,"ax",%progbits
 191              		.align	2
 192              		.global	Timer_1_Start
 193              		.thumb
 194              		.thumb_func
 195              		.type	Timer_1_Start, %function
 196              	Timer_1_Start:
 197              	.LFB2:
 193:Generated_Source\PSoC5/Timer_1.c **** 
 194:Generated_Source\PSoC5/Timer_1.c **** 
 195:Generated_Source\PSoC5/Timer_1.c **** /*******************************************************************************
 196:Generated_Source\PSoC5/Timer_1.c **** * Function Name: Timer_1_Start
 197:Generated_Source\PSoC5/Timer_1.c **** ********************************************************************************
 198:Generated_Source\PSoC5/Timer_1.c **** *
 199:Generated_Source\PSoC5/Timer_1.c **** * Summary:
 200:Generated_Source\PSoC5/Timer_1.c **** *  The start function initializes the timer with the default values, the
 201:Generated_Source\PSoC5/Timer_1.c **** *  enables the timerto begin counting.  It does not enable interrupts,
 202:Generated_Source\PSoC5/Timer_1.c **** *  the EnableInt command should be called if interrupt generation is required.
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccxWh4RE.s 			page 8


 203:Generated_Source\PSoC5/Timer_1.c **** *
 204:Generated_Source\PSoC5/Timer_1.c **** * Parameters:
 205:Generated_Source\PSoC5/Timer_1.c **** *  void
 206:Generated_Source\PSoC5/Timer_1.c **** *
 207:Generated_Source\PSoC5/Timer_1.c **** * Return:
 208:Generated_Source\PSoC5/Timer_1.c **** *  void
 209:Generated_Source\PSoC5/Timer_1.c **** *
 210:Generated_Source\PSoC5/Timer_1.c **** * Global variables:
 211:Generated_Source\PSoC5/Timer_1.c **** *  Timer_1_initVar: Is modified when this function is called for the
 212:Generated_Source\PSoC5/Timer_1.c **** *   first time. Is used to ensure that initialization happens only once.
 213:Generated_Source\PSoC5/Timer_1.c **** *
 214:Generated_Source\PSoC5/Timer_1.c **** *******************************************************************************/
 215:Generated_Source\PSoC5/Timer_1.c **** void Timer_1_Start(void) 
 216:Generated_Source\PSoC5/Timer_1.c **** {
 198              		.loc 1 216 0
 199              		.cfi_startproc
 200              		@ args = 0, pretend = 0, frame = 0
 201              		@ frame_needed = 1, uses_anonymous_args = 0
 202 0000 80B5     		push	{r7, lr}
 203              		.cfi_def_cfa_offset 8
 204              		.cfi_offset 7, -8
 205              		.cfi_offset 14, -4
 206 0002 00AF     		add	r7, sp, #0
 207              		.cfi_def_cfa_register 7
 217:Generated_Source\PSoC5/Timer_1.c ****     if(Timer_1_initVar == 0u)
 208              		.loc 1 217 0
 209 0004 064B     		ldr	r3, .L9
 210 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 211 0008 002B     		cmp	r3, #0
 212 000a 04D1     		bne	.L8
 218:Generated_Source\PSoC5/Timer_1.c ****     {
 219:Generated_Source\PSoC5/Timer_1.c ****         Timer_1_Init();
 213              		.loc 1 219 0
 214 000c FFF7FEFF 		bl	Timer_1_Init
 220:Generated_Source\PSoC5/Timer_1.c **** 
 221:Generated_Source\PSoC5/Timer_1.c ****         Timer_1_initVar = 1u;   /* Clear this bit for Initialization */
 215              		.loc 1 221 0
 216 0010 034B     		ldr	r3, .L9
 217 0012 0122     		movs	r2, #1
 218 0014 1A70     		strb	r2, [r3]
 219              	.L8:
 222:Generated_Source\PSoC5/Timer_1.c ****     }
 223:Generated_Source\PSoC5/Timer_1.c **** 
 224:Generated_Source\PSoC5/Timer_1.c ****     /* Enable the Timer */
 225:Generated_Source\PSoC5/Timer_1.c ****     Timer_1_Enable();
 220              		.loc 1 225 0
 221 0016 FFF7FEFF 		bl	Timer_1_Enable
 226:Generated_Source\PSoC5/Timer_1.c **** }
 222              		.loc 1 226 0
 223 001a 00BF     		nop
 224 001c 80BD     		pop	{r7, pc}
 225              	.L10:
 226 001e 00BF     		.align	2
 227              	.L9:
 228 0020 00000000 		.word	Timer_1_initVar
 229              		.cfi_endproc
 230              	.LFE2:
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccxWh4RE.s 			page 9


 231              		.size	Timer_1_Start, .-Timer_1_Start
 232              		.section	.text.Timer_1_Stop,"ax",%progbits
 233              		.align	2
 234              		.global	Timer_1_Stop
 235              		.thumb
 236              		.thumb_func
 237              		.type	Timer_1_Stop, %function
 238              	Timer_1_Stop:
 239              	.LFB3:
 227:Generated_Source\PSoC5/Timer_1.c **** 
 228:Generated_Source\PSoC5/Timer_1.c **** 
 229:Generated_Source\PSoC5/Timer_1.c **** /*******************************************************************************
 230:Generated_Source\PSoC5/Timer_1.c **** * Function Name: Timer_1_Stop
 231:Generated_Source\PSoC5/Timer_1.c **** ********************************************************************************
 232:Generated_Source\PSoC5/Timer_1.c **** *
 233:Generated_Source\PSoC5/Timer_1.c **** * Summary:
 234:Generated_Source\PSoC5/Timer_1.c **** *  The stop function halts the timer, but does not change any modes or disable
 235:Generated_Source\PSoC5/Timer_1.c **** *  interrupts.
 236:Generated_Source\PSoC5/Timer_1.c **** *
 237:Generated_Source\PSoC5/Timer_1.c **** * Parameters:
 238:Generated_Source\PSoC5/Timer_1.c **** *  void
 239:Generated_Source\PSoC5/Timer_1.c **** *
 240:Generated_Source\PSoC5/Timer_1.c **** * Return:
 241:Generated_Source\PSoC5/Timer_1.c **** *  void
 242:Generated_Source\PSoC5/Timer_1.c **** *
 243:Generated_Source\PSoC5/Timer_1.c **** * Side Effects: If the Enable mode is set to Hardware only then this function
 244:Generated_Source\PSoC5/Timer_1.c **** *               has no effect on the operation of the timer.
 245:Generated_Source\PSoC5/Timer_1.c **** *
 246:Generated_Source\PSoC5/Timer_1.c **** *******************************************************************************/
 247:Generated_Source\PSoC5/Timer_1.c **** void Timer_1_Stop(void) 
 248:Generated_Source\PSoC5/Timer_1.c **** {
 240              		.loc 1 248 0
 241              		.cfi_startproc
 242              		@ args = 0, pretend = 0, frame = 0
 243              		@ frame_needed = 1, uses_anonymous_args = 0
 244              		@ link register save eliminated.
 245 0000 80B4     		push	{r7}
 246              		.cfi_def_cfa_offset 4
 247              		.cfi_offset 7, -4
 248 0002 00AF     		add	r7, sp, #0
 249              		.cfi_def_cfa_register 7
 249:Generated_Source\PSoC5/Timer_1.c ****     /* Disable Timer */
 250:Generated_Source\PSoC5/Timer_1.c ****     #if(!Timer_1_UDB_CONTROL_REG_REMOVED || Timer_1_UsingFixedFunction)
 251:Generated_Source\PSoC5/Timer_1.c ****         Timer_1_CONTROL &= ((uint8)(~Timer_1_CTRL_ENABLE));
 250              		.loc 1 251 0
 251 0004 0D4A     		ldr	r2, .L12
 252 0006 0D4B     		ldr	r3, .L12
 253 0008 1B78     		ldrb	r3, [r3]
 254 000a DBB2     		uxtb	r3, r3
 255 000c 23F00103 		bic	r3, r3, #1
 256 0010 DBB2     		uxtb	r3, r3
 257 0012 1370     		strb	r3, [r2]
 252:Generated_Source\PSoC5/Timer_1.c ****     #endif /* Remove assignment if control register is removed */
 253:Generated_Source\PSoC5/Timer_1.c **** 
 254:Generated_Source\PSoC5/Timer_1.c ****     /* Globally disable the Fixed Function Block chosen */
 255:Generated_Source\PSoC5/Timer_1.c ****     #if (Timer_1_UsingFixedFunction)
 256:Generated_Source\PSoC5/Timer_1.c ****         Timer_1_GLOBAL_ENABLE &= ((uint8)(~Timer_1_BLOCK_EN_MASK));
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccxWh4RE.s 			page 10


 258              		.loc 1 256 0
 259 0014 0A4A     		ldr	r2, .L12+4
 260 0016 0A4B     		ldr	r3, .L12+4
 261 0018 1B78     		ldrb	r3, [r3]
 262 001a DBB2     		uxtb	r3, r3
 263 001c 23F00103 		bic	r3, r3, #1
 264 0020 DBB2     		uxtb	r3, r3
 265 0022 1370     		strb	r3, [r2]
 257:Generated_Source\PSoC5/Timer_1.c ****         Timer_1_GLOBAL_STBY_ENABLE &= ((uint8)(~Timer_1_BLOCK_STBY_EN_MASK));
 266              		.loc 1 257 0
 267 0024 074A     		ldr	r2, .L12+8
 268 0026 074B     		ldr	r3, .L12+8
 269 0028 1B78     		ldrb	r3, [r3]
 270 002a DBB2     		uxtb	r3, r3
 271 002c 23F00103 		bic	r3, r3, #1
 272 0030 DBB2     		uxtb	r3, r3
 273 0032 1370     		strb	r3, [r2]
 258:Generated_Source\PSoC5/Timer_1.c ****     #endif /* Disable global enable for the Timer Fixed function block to stop the Timer*/
 259:Generated_Source\PSoC5/Timer_1.c **** }
 274              		.loc 1 259 0
 275 0034 00BF     		nop
 276 0036 BD46     		mov	sp, r7
 277              		.cfi_def_cfa_register 13
 278              		@ sp needed
 279 0038 80BC     		pop	{r7}
 280              		.cfi_restore 7
 281              		.cfi_def_cfa_offset 0
 282 003a 7047     		bx	lr
 283              	.L13:
 284              		.align	2
 285              	.L12:
 286 003c 004F0040 		.word	1073762048
 287 0040 A3430040 		.word	1073759139
 288 0044 B3430040 		.word	1073759155
 289              		.cfi_endproc
 290              	.LFE3:
 291              		.size	Timer_1_Stop, .-Timer_1_Stop
 292              		.section	.text.Timer_1_SetInterruptMode,"ax",%progbits
 293              		.align	2
 294              		.global	Timer_1_SetInterruptMode
 295              		.thumb
 296              		.thumb_func
 297              		.type	Timer_1_SetInterruptMode, %function
 298              	Timer_1_SetInterruptMode:
 299              	.LFB4:
 260:Generated_Source\PSoC5/Timer_1.c **** 
 261:Generated_Source\PSoC5/Timer_1.c **** 
 262:Generated_Source\PSoC5/Timer_1.c **** /*******************************************************************************
 263:Generated_Source\PSoC5/Timer_1.c **** * Function Name: Timer_1_SetInterruptMode
 264:Generated_Source\PSoC5/Timer_1.c **** ********************************************************************************
 265:Generated_Source\PSoC5/Timer_1.c **** *
 266:Generated_Source\PSoC5/Timer_1.c **** * Summary:
 267:Generated_Source\PSoC5/Timer_1.c **** *  This function selects which of the interrupt inputs may cause an interrupt.
 268:Generated_Source\PSoC5/Timer_1.c **** *  The twosources are caputure and terminal.  One, both or neither may
 269:Generated_Source\PSoC5/Timer_1.c **** *  be selected.
 270:Generated_Source\PSoC5/Timer_1.c **** *
 271:Generated_Source\PSoC5/Timer_1.c **** * Parameters:
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccxWh4RE.s 			page 11


 272:Generated_Source\PSoC5/Timer_1.c **** *  interruptMode:   This parameter is used to enable interrups on either/or
 273:Generated_Source\PSoC5/Timer_1.c **** *                   terminal count or capture.
 274:Generated_Source\PSoC5/Timer_1.c **** *
 275:Generated_Source\PSoC5/Timer_1.c **** * Return:
 276:Generated_Source\PSoC5/Timer_1.c **** *  void
 277:Generated_Source\PSoC5/Timer_1.c **** *
 278:Generated_Source\PSoC5/Timer_1.c **** *******************************************************************************/
 279:Generated_Source\PSoC5/Timer_1.c **** void Timer_1_SetInterruptMode(uint8 interruptMode) 
 280:Generated_Source\PSoC5/Timer_1.c **** {
 300              		.loc 1 280 0
 301              		.cfi_startproc
 302              		@ args = 0, pretend = 0, frame = 8
 303              		@ frame_needed = 1, uses_anonymous_args = 0
 304              		@ link register save eliminated.
 305 0000 80B4     		push	{r7}
 306              		.cfi_def_cfa_offset 4
 307              		.cfi_offset 7, -4
 308 0002 83B0     		sub	sp, sp, #12
 309              		.cfi_def_cfa_offset 16
 310 0004 00AF     		add	r7, sp, #0
 311              		.cfi_def_cfa_register 7
 312 0006 0346     		mov	r3, r0
 313 0008 FB71     		strb	r3, [r7, #7]
 281:Generated_Source\PSoC5/Timer_1.c ****     Timer_1_STATUS_MASK = interruptMode;
 314              		.loc 1 281 0
 315 000a 044A     		ldr	r2, .L15
 316 000c FB79     		ldrb	r3, [r7, #7]
 317 000e 1370     		strb	r3, [r2]
 282:Generated_Source\PSoC5/Timer_1.c **** }
 318              		.loc 1 282 0
 319 0010 00BF     		nop
 320 0012 0C37     		adds	r7, r7, #12
 321              		.cfi_def_cfa_offset 4
 322 0014 BD46     		mov	sp, r7
 323              		.cfi_def_cfa_register 13
 324              		@ sp needed
 325 0016 80BC     		pop	{r7}
 326              		.cfi_restore 7
 327              		.cfi_def_cfa_offset 0
 328 0018 7047     		bx	lr
 329              	.L16:
 330 001a 00BF     		.align	2
 331              	.L15:
 332 001c 034F0040 		.word	1073762051
 333              		.cfi_endproc
 334              	.LFE4:
 335              		.size	Timer_1_SetInterruptMode, .-Timer_1_SetInterruptMode
 336              		.section	.text.Timer_1_SoftwareCapture,"ax",%progbits
 337              		.align	2
 338              		.global	Timer_1_SoftwareCapture
 339              		.thumb
 340              		.thumb_func
 341              		.type	Timer_1_SoftwareCapture, %function
 342              	Timer_1_SoftwareCapture:
 343              	.LFB5:
 283:Generated_Source\PSoC5/Timer_1.c **** 
 284:Generated_Source\PSoC5/Timer_1.c **** 
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccxWh4RE.s 			page 12


 285:Generated_Source\PSoC5/Timer_1.c **** /*******************************************************************************
 286:Generated_Source\PSoC5/Timer_1.c **** * Function Name: Timer_1_SoftwareCapture
 287:Generated_Source\PSoC5/Timer_1.c **** ********************************************************************************
 288:Generated_Source\PSoC5/Timer_1.c **** *
 289:Generated_Source\PSoC5/Timer_1.c **** * Summary:
 290:Generated_Source\PSoC5/Timer_1.c **** *  This function forces a capture independent of the capture signal.
 291:Generated_Source\PSoC5/Timer_1.c **** *
 292:Generated_Source\PSoC5/Timer_1.c **** * Parameters:
 293:Generated_Source\PSoC5/Timer_1.c **** *  void
 294:Generated_Source\PSoC5/Timer_1.c **** *
 295:Generated_Source\PSoC5/Timer_1.c **** * Return:
 296:Generated_Source\PSoC5/Timer_1.c **** *  void
 297:Generated_Source\PSoC5/Timer_1.c **** *
 298:Generated_Source\PSoC5/Timer_1.c **** * Side Effects:
 299:Generated_Source\PSoC5/Timer_1.c **** *  An existing hardware capture could be overwritten.
 300:Generated_Source\PSoC5/Timer_1.c **** *
 301:Generated_Source\PSoC5/Timer_1.c **** *******************************************************************************/
 302:Generated_Source\PSoC5/Timer_1.c **** void Timer_1_SoftwareCapture(void) 
 303:Generated_Source\PSoC5/Timer_1.c **** {
 344              		.loc 1 303 0
 345              		.cfi_startproc
 346              		@ args = 0, pretend = 0, frame = 0
 347              		@ frame_needed = 1, uses_anonymous_args = 0
 348              		@ link register save eliminated.
 349 0000 80B4     		push	{r7}
 350              		.cfi_def_cfa_offset 4
 351              		.cfi_offset 7, -4
 352 0002 00AF     		add	r7, sp, #0
 353              		.cfi_def_cfa_register 7
 304:Generated_Source\PSoC5/Timer_1.c ****     /* Generate a software capture by reading the counter register */
 305:Generated_Source\PSoC5/Timer_1.c ****     #if(Timer_1_UsingFixedFunction)
 306:Generated_Source\PSoC5/Timer_1.c ****         (void)CY_GET_REG16(Timer_1_COUNTER_LSB_PTR);
 354              		.loc 1 306 0
 355 0004 024B     		ldr	r3, .L18
 356 0006 1B88     		ldrh	r3, [r3]	@ movhi
 307:Generated_Source\PSoC5/Timer_1.c ****     #else
 308:Generated_Source\PSoC5/Timer_1.c ****         (void)CY_GET_REG8(Timer_1_COUNTER_LSB_PTR_8BIT);
 309:Generated_Source\PSoC5/Timer_1.c ****     #endif/* (Timer_1_UsingFixedFunction) */
 310:Generated_Source\PSoC5/Timer_1.c ****     /* Capture Data is now in the FIFO */
 311:Generated_Source\PSoC5/Timer_1.c **** }
 357              		.loc 1 311 0
 358 0008 00BF     		nop
 359 000a BD46     		mov	sp, r7
 360              		.cfi_def_cfa_register 13
 361              		@ sp needed
 362 000c 80BC     		pop	{r7}
 363              		.cfi_restore 7
 364              		.cfi_def_cfa_offset 0
 365 000e 7047     		bx	lr
 366              	.L19:
 367              		.align	2
 368              	.L18:
 369 0010 064F0040 		.word	1073762054
 370              		.cfi_endproc
 371              	.LFE5:
 372              		.size	Timer_1_SoftwareCapture, .-Timer_1_SoftwareCapture
 373              		.section	.text.Timer_1_ReadStatusRegister,"ax",%progbits
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccxWh4RE.s 			page 13


 374              		.align	2
 375              		.global	Timer_1_ReadStatusRegister
 376              		.thumb
 377              		.thumb_func
 378              		.type	Timer_1_ReadStatusRegister, %function
 379              	Timer_1_ReadStatusRegister:
 380              	.LFB6:
 312:Generated_Source\PSoC5/Timer_1.c **** 
 313:Generated_Source\PSoC5/Timer_1.c **** 
 314:Generated_Source\PSoC5/Timer_1.c **** /*******************************************************************************
 315:Generated_Source\PSoC5/Timer_1.c **** * Function Name: Timer_1_ReadStatusRegister
 316:Generated_Source\PSoC5/Timer_1.c **** ********************************************************************************
 317:Generated_Source\PSoC5/Timer_1.c **** *
 318:Generated_Source\PSoC5/Timer_1.c **** * Summary:
 319:Generated_Source\PSoC5/Timer_1.c **** *  Reads the status register and returns it's state. This function should use
 320:Generated_Source\PSoC5/Timer_1.c **** *  defined types for the bit-field information as the bits in this register may
 321:Generated_Source\PSoC5/Timer_1.c **** *  be permuteable.
 322:Generated_Source\PSoC5/Timer_1.c **** *
 323:Generated_Source\PSoC5/Timer_1.c **** * Parameters:
 324:Generated_Source\PSoC5/Timer_1.c **** *  void
 325:Generated_Source\PSoC5/Timer_1.c **** *
 326:Generated_Source\PSoC5/Timer_1.c **** * Return:
 327:Generated_Source\PSoC5/Timer_1.c **** *  The contents of the status register
 328:Generated_Source\PSoC5/Timer_1.c **** *
 329:Generated_Source\PSoC5/Timer_1.c **** * Side Effects:
 330:Generated_Source\PSoC5/Timer_1.c **** *  Status register bits may be clear on read.
 331:Generated_Source\PSoC5/Timer_1.c **** *
 332:Generated_Source\PSoC5/Timer_1.c **** *******************************************************************************/
 333:Generated_Source\PSoC5/Timer_1.c **** uint8   Timer_1_ReadStatusRegister(void) 
 334:Generated_Source\PSoC5/Timer_1.c **** {
 381              		.loc 1 334 0
 382              		.cfi_startproc
 383              		@ args = 0, pretend = 0, frame = 0
 384              		@ frame_needed = 1, uses_anonymous_args = 0
 385              		@ link register save eliminated.
 386 0000 80B4     		push	{r7}
 387              		.cfi_def_cfa_offset 4
 388              		.cfi_offset 7, -4
 389 0002 00AF     		add	r7, sp, #0
 390              		.cfi_def_cfa_register 7
 335:Generated_Source\PSoC5/Timer_1.c ****     return (Timer_1_STATUS);
 391              		.loc 1 335 0
 392 0004 034B     		ldr	r3, .L22
 393 0006 1B78     		ldrb	r3, [r3]
 394 0008 DBB2     		uxtb	r3, r3
 336:Generated_Source\PSoC5/Timer_1.c **** }
 395              		.loc 1 336 0
 396 000a 1846     		mov	r0, r3
 397 000c BD46     		mov	sp, r7
 398              		.cfi_def_cfa_register 13
 399              		@ sp needed
 400 000e 80BC     		pop	{r7}
 401              		.cfi_restore 7
 402              		.cfi_def_cfa_offset 0
 403 0010 7047     		bx	lr
 404              	.L23:
 405 0012 00BF     		.align	2
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccxWh4RE.s 			page 14


 406              	.L22:
 407 0014 034F0040 		.word	1073762051
 408              		.cfi_endproc
 409              	.LFE6:
 410              		.size	Timer_1_ReadStatusRegister, .-Timer_1_ReadStatusRegister
 411              		.section	.text.Timer_1_ReadControlRegister,"ax",%progbits
 412              		.align	2
 413              		.global	Timer_1_ReadControlRegister
 414              		.thumb
 415              		.thumb_func
 416              		.type	Timer_1_ReadControlRegister, %function
 417              	Timer_1_ReadControlRegister:
 418              	.LFB7:
 337:Generated_Source\PSoC5/Timer_1.c **** 
 338:Generated_Source\PSoC5/Timer_1.c **** 
 339:Generated_Source\PSoC5/Timer_1.c **** #if (!Timer_1_UDB_CONTROL_REG_REMOVED) /* Remove API if control register is unused */
 340:Generated_Source\PSoC5/Timer_1.c **** 
 341:Generated_Source\PSoC5/Timer_1.c **** 
 342:Generated_Source\PSoC5/Timer_1.c **** /*******************************************************************************
 343:Generated_Source\PSoC5/Timer_1.c **** * Function Name: Timer_1_ReadControlRegister
 344:Generated_Source\PSoC5/Timer_1.c **** ********************************************************************************
 345:Generated_Source\PSoC5/Timer_1.c **** *
 346:Generated_Source\PSoC5/Timer_1.c **** * Summary:
 347:Generated_Source\PSoC5/Timer_1.c **** *  Reads the control register and returns it's value.
 348:Generated_Source\PSoC5/Timer_1.c **** *
 349:Generated_Source\PSoC5/Timer_1.c **** * Parameters:
 350:Generated_Source\PSoC5/Timer_1.c **** *  void
 351:Generated_Source\PSoC5/Timer_1.c **** *
 352:Generated_Source\PSoC5/Timer_1.c **** * Return:
 353:Generated_Source\PSoC5/Timer_1.c **** *  The contents of the control register
 354:Generated_Source\PSoC5/Timer_1.c **** *
 355:Generated_Source\PSoC5/Timer_1.c **** *******************************************************************************/
 356:Generated_Source\PSoC5/Timer_1.c **** uint8 Timer_1_ReadControlRegister(void) 
 357:Generated_Source\PSoC5/Timer_1.c **** {
 419              		.loc 1 357 0
 420              		.cfi_startproc
 421              		@ args = 0, pretend = 0, frame = 0
 422              		@ frame_needed = 1, uses_anonymous_args = 0
 423              		@ link register save eliminated.
 424 0000 80B4     		push	{r7}
 425              		.cfi_def_cfa_offset 4
 426              		.cfi_offset 7, -4
 427 0002 00AF     		add	r7, sp, #0
 428              		.cfi_def_cfa_register 7
 358:Generated_Source\PSoC5/Timer_1.c ****     #if (!Timer_1_UDB_CONTROL_REG_REMOVED) 
 359:Generated_Source\PSoC5/Timer_1.c ****         return ((uint8)Timer_1_CONTROL);
 429              		.loc 1 359 0
 430 0004 034B     		ldr	r3, .L26
 431 0006 1B78     		ldrb	r3, [r3]
 432 0008 DBB2     		uxtb	r3, r3
 360:Generated_Source\PSoC5/Timer_1.c ****     #else
 361:Generated_Source\PSoC5/Timer_1.c ****         return (0);
 362:Generated_Source\PSoC5/Timer_1.c ****     #endif /* (!Timer_1_UDB_CONTROL_REG_REMOVED) */
 363:Generated_Source\PSoC5/Timer_1.c **** }
 433              		.loc 1 363 0
 434 000a 1846     		mov	r0, r3
 435 000c BD46     		mov	sp, r7
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccxWh4RE.s 			page 15


 436              		.cfi_def_cfa_register 13
 437              		@ sp needed
 438 000e 80BC     		pop	{r7}
 439              		.cfi_restore 7
 440              		.cfi_def_cfa_offset 0
 441 0010 7047     		bx	lr
 442              	.L27:
 443 0012 00BF     		.align	2
 444              	.L26:
 445 0014 004F0040 		.word	1073762048
 446              		.cfi_endproc
 447              	.LFE7:
 448              		.size	Timer_1_ReadControlRegister, .-Timer_1_ReadControlRegister
 449              		.section	.text.Timer_1_WriteControlRegister,"ax",%progbits
 450              		.align	2
 451              		.global	Timer_1_WriteControlRegister
 452              		.thumb
 453              		.thumb_func
 454              		.type	Timer_1_WriteControlRegister, %function
 455              	Timer_1_WriteControlRegister:
 456              	.LFB8:
 364:Generated_Source\PSoC5/Timer_1.c **** 
 365:Generated_Source\PSoC5/Timer_1.c **** 
 366:Generated_Source\PSoC5/Timer_1.c **** /*******************************************************************************
 367:Generated_Source\PSoC5/Timer_1.c **** * Function Name: Timer_1_WriteControlRegister
 368:Generated_Source\PSoC5/Timer_1.c **** ********************************************************************************
 369:Generated_Source\PSoC5/Timer_1.c **** *
 370:Generated_Source\PSoC5/Timer_1.c **** * Summary:
 371:Generated_Source\PSoC5/Timer_1.c **** *  Sets the bit-field of the control register.
 372:Generated_Source\PSoC5/Timer_1.c **** *
 373:Generated_Source\PSoC5/Timer_1.c **** * Parameters:
 374:Generated_Source\PSoC5/Timer_1.c **** *  control: The contents of the control register
 375:Generated_Source\PSoC5/Timer_1.c **** *
 376:Generated_Source\PSoC5/Timer_1.c **** * Return:
 377:Generated_Source\PSoC5/Timer_1.c **** *
 378:Generated_Source\PSoC5/Timer_1.c **** *******************************************************************************/
 379:Generated_Source\PSoC5/Timer_1.c **** void Timer_1_WriteControlRegister(uint8 control) 
 380:Generated_Source\PSoC5/Timer_1.c **** {
 457              		.loc 1 380 0
 458              		.cfi_startproc
 459              		@ args = 0, pretend = 0, frame = 8
 460              		@ frame_needed = 1, uses_anonymous_args = 0
 461              		@ link register save eliminated.
 462 0000 80B4     		push	{r7}
 463              		.cfi_def_cfa_offset 4
 464              		.cfi_offset 7, -4
 465 0002 83B0     		sub	sp, sp, #12
 466              		.cfi_def_cfa_offset 16
 467 0004 00AF     		add	r7, sp, #0
 468              		.cfi_def_cfa_register 7
 469 0006 0346     		mov	r3, r0
 470 0008 FB71     		strb	r3, [r7, #7]
 381:Generated_Source\PSoC5/Timer_1.c ****     #if (!Timer_1_UDB_CONTROL_REG_REMOVED) 
 382:Generated_Source\PSoC5/Timer_1.c ****         Timer_1_CONTROL = control;
 471              		.loc 1 382 0
 472 000a 044A     		ldr	r2, .L29
 473 000c FB79     		ldrb	r3, [r7, #7]
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccxWh4RE.s 			page 16


 474 000e 1370     		strb	r3, [r2]
 383:Generated_Source\PSoC5/Timer_1.c ****     #else
 384:Generated_Source\PSoC5/Timer_1.c ****         control = 0u;
 385:Generated_Source\PSoC5/Timer_1.c ****     #endif /* (!Timer_1_UDB_CONTROL_REG_REMOVED) */
 386:Generated_Source\PSoC5/Timer_1.c **** }
 475              		.loc 1 386 0
 476 0010 00BF     		nop
 477 0012 0C37     		adds	r7, r7, #12
 478              		.cfi_def_cfa_offset 4
 479 0014 BD46     		mov	sp, r7
 480              		.cfi_def_cfa_register 13
 481              		@ sp needed
 482 0016 80BC     		pop	{r7}
 483              		.cfi_restore 7
 484              		.cfi_def_cfa_offset 0
 485 0018 7047     		bx	lr
 486              	.L30:
 487 001a 00BF     		.align	2
 488              	.L29:
 489 001c 004F0040 		.word	1073762048
 490              		.cfi_endproc
 491              	.LFE8:
 492              		.size	Timer_1_WriteControlRegister, .-Timer_1_WriteControlRegister
 493              		.section	.text.Timer_1_ReadPeriod,"ax",%progbits
 494              		.align	2
 495              		.global	Timer_1_ReadPeriod
 496              		.thumb
 497              		.thumb_func
 498              		.type	Timer_1_ReadPeriod, %function
 499              	Timer_1_ReadPeriod:
 500              	.LFB9:
 387:Generated_Source\PSoC5/Timer_1.c **** 
 388:Generated_Source\PSoC5/Timer_1.c **** #endif /* Remove API if control register is unused */
 389:Generated_Source\PSoC5/Timer_1.c **** 
 390:Generated_Source\PSoC5/Timer_1.c **** 
 391:Generated_Source\PSoC5/Timer_1.c **** /*******************************************************************************
 392:Generated_Source\PSoC5/Timer_1.c **** * Function Name: Timer_1_ReadPeriod
 393:Generated_Source\PSoC5/Timer_1.c **** ********************************************************************************
 394:Generated_Source\PSoC5/Timer_1.c **** *
 395:Generated_Source\PSoC5/Timer_1.c **** * Summary:
 396:Generated_Source\PSoC5/Timer_1.c **** *  This function returns the current value of the Period.
 397:Generated_Source\PSoC5/Timer_1.c **** *
 398:Generated_Source\PSoC5/Timer_1.c **** * Parameters:
 399:Generated_Source\PSoC5/Timer_1.c **** *  void
 400:Generated_Source\PSoC5/Timer_1.c **** *
 401:Generated_Source\PSoC5/Timer_1.c **** * Return:
 402:Generated_Source\PSoC5/Timer_1.c **** *  The present value of the counter.
 403:Generated_Source\PSoC5/Timer_1.c **** *
 404:Generated_Source\PSoC5/Timer_1.c **** *******************************************************************************/
 405:Generated_Source\PSoC5/Timer_1.c **** uint16 Timer_1_ReadPeriod(void) 
 406:Generated_Source\PSoC5/Timer_1.c **** {
 501              		.loc 1 406 0
 502              		.cfi_startproc
 503              		@ args = 0, pretend = 0, frame = 0
 504              		@ frame_needed = 1, uses_anonymous_args = 0
 505              		@ link register save eliminated.
 506 0000 80B4     		push	{r7}
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccxWh4RE.s 			page 17


 507              		.cfi_def_cfa_offset 4
 508              		.cfi_offset 7, -4
 509 0002 00AF     		add	r7, sp, #0
 510              		.cfi_def_cfa_register 7
 407:Generated_Source\PSoC5/Timer_1.c ****    #if(Timer_1_UsingFixedFunction)
 408:Generated_Source\PSoC5/Timer_1.c ****        return ((uint16)CY_GET_REG16(Timer_1_PERIOD_LSB_PTR));
 511              		.loc 1 408 0
 512 0004 034B     		ldr	r3, .L33
 513 0006 1B88     		ldrh	r3, [r3]	@ movhi
 514 0008 9BB2     		uxth	r3, r3
 409:Generated_Source\PSoC5/Timer_1.c ****    #else
 410:Generated_Source\PSoC5/Timer_1.c ****        return (CY_GET_REG16(Timer_1_PERIOD_LSB_PTR));
 411:Generated_Source\PSoC5/Timer_1.c ****    #endif /* (Timer_1_UsingFixedFunction) */
 412:Generated_Source\PSoC5/Timer_1.c **** }
 515              		.loc 1 412 0
 516 000a 1846     		mov	r0, r3
 517 000c BD46     		mov	sp, r7
 518              		.cfi_def_cfa_register 13
 519              		@ sp needed
 520 000e 80BC     		pop	{r7}
 521              		.cfi_restore 7
 522              		.cfi_def_cfa_offset 0
 523 0010 7047     		bx	lr
 524              	.L34:
 525 0012 00BF     		.align	2
 526              	.L33:
 527 0014 044F0040 		.word	1073762052
 528              		.cfi_endproc
 529              	.LFE9:
 530              		.size	Timer_1_ReadPeriod, .-Timer_1_ReadPeriod
 531              		.section	.text.Timer_1_WritePeriod,"ax",%progbits
 532              		.align	2
 533              		.global	Timer_1_WritePeriod
 534              		.thumb
 535              		.thumb_func
 536              		.type	Timer_1_WritePeriod, %function
 537              	Timer_1_WritePeriod:
 538              	.LFB10:
 413:Generated_Source\PSoC5/Timer_1.c **** 
 414:Generated_Source\PSoC5/Timer_1.c **** 
 415:Generated_Source\PSoC5/Timer_1.c **** /*******************************************************************************
 416:Generated_Source\PSoC5/Timer_1.c **** * Function Name: Timer_1_WritePeriod
 417:Generated_Source\PSoC5/Timer_1.c **** ********************************************************************************
 418:Generated_Source\PSoC5/Timer_1.c **** *
 419:Generated_Source\PSoC5/Timer_1.c **** * Summary:
 420:Generated_Source\PSoC5/Timer_1.c **** *  This function is used to change the period of the counter.  The new period
 421:Generated_Source\PSoC5/Timer_1.c **** *  will be loaded the next time terminal count is detected.
 422:Generated_Source\PSoC5/Timer_1.c **** *
 423:Generated_Source\PSoC5/Timer_1.c **** * Parameters:
 424:Generated_Source\PSoC5/Timer_1.c **** *  period: This value may be between 1 and (2^Resolution)-1.  A value of 0 will
 425:Generated_Source\PSoC5/Timer_1.c **** *          result in the counter remaining at zero.
 426:Generated_Source\PSoC5/Timer_1.c **** *
 427:Generated_Source\PSoC5/Timer_1.c **** * Return:
 428:Generated_Source\PSoC5/Timer_1.c **** *  void
 429:Generated_Source\PSoC5/Timer_1.c **** *
 430:Generated_Source\PSoC5/Timer_1.c **** *******************************************************************************/
 431:Generated_Source\PSoC5/Timer_1.c **** void Timer_1_WritePeriod(uint16 period) 
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccxWh4RE.s 			page 18


 432:Generated_Source\PSoC5/Timer_1.c **** {
 539              		.loc 1 432 0
 540              		.cfi_startproc
 541              		@ args = 0, pretend = 0, frame = 16
 542              		@ frame_needed = 1, uses_anonymous_args = 0
 543              		@ link register save eliminated.
 544 0000 80B4     		push	{r7}
 545              		.cfi_def_cfa_offset 4
 546              		.cfi_offset 7, -4
 547 0002 85B0     		sub	sp, sp, #20
 548              		.cfi_def_cfa_offset 24
 549 0004 00AF     		add	r7, sp, #0
 550              		.cfi_def_cfa_register 7
 551 0006 0346     		mov	r3, r0
 552 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 433:Generated_Source\PSoC5/Timer_1.c ****     #if(Timer_1_UsingFixedFunction)
 434:Generated_Source\PSoC5/Timer_1.c ****         uint16 period_temp = (uint16)period;
 553              		.loc 1 434 0
 554 000a FB88     		ldrh	r3, [r7, #6]	@ movhi
 555 000c FB81     		strh	r3, [r7, #14]	@ movhi
 435:Generated_Source\PSoC5/Timer_1.c ****         CY_SET_REG16(Timer_1_PERIOD_LSB_PTR, period_temp);
 556              		.loc 1 435 0
 557 000e 044A     		ldr	r2, .L36
 558 0010 FB89     		ldrh	r3, [r7, #14]	@ movhi
 559 0012 1380     		strh	r3, [r2]	@ movhi
 436:Generated_Source\PSoC5/Timer_1.c ****     #else
 437:Generated_Source\PSoC5/Timer_1.c ****         CY_SET_REG16(Timer_1_PERIOD_LSB_PTR, period);
 438:Generated_Source\PSoC5/Timer_1.c ****     #endif /*Write Period value with appropriate resolution suffix depending on UDB or fixed functi
 439:Generated_Source\PSoC5/Timer_1.c **** }
 560              		.loc 1 439 0
 561 0014 00BF     		nop
 562 0016 1437     		adds	r7, r7, #20
 563              		.cfi_def_cfa_offset 4
 564 0018 BD46     		mov	sp, r7
 565              		.cfi_def_cfa_register 13
 566              		@ sp needed
 567 001a 80BC     		pop	{r7}
 568              		.cfi_restore 7
 569              		.cfi_def_cfa_offset 0
 570 001c 7047     		bx	lr
 571              	.L37:
 572 001e 00BF     		.align	2
 573              	.L36:
 574 0020 044F0040 		.word	1073762052
 575              		.cfi_endproc
 576              	.LFE10:
 577              		.size	Timer_1_WritePeriod, .-Timer_1_WritePeriod
 578              		.section	.text.Timer_1_ReadCapture,"ax",%progbits
 579              		.align	2
 580              		.global	Timer_1_ReadCapture
 581              		.thumb
 582              		.thumb_func
 583              		.type	Timer_1_ReadCapture, %function
 584              	Timer_1_ReadCapture:
 585              	.LFB11:
 440:Generated_Source\PSoC5/Timer_1.c **** 
 441:Generated_Source\PSoC5/Timer_1.c **** 
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccxWh4RE.s 			page 19


 442:Generated_Source\PSoC5/Timer_1.c **** /*******************************************************************************
 443:Generated_Source\PSoC5/Timer_1.c **** * Function Name: Timer_1_ReadCapture
 444:Generated_Source\PSoC5/Timer_1.c **** ********************************************************************************
 445:Generated_Source\PSoC5/Timer_1.c **** *
 446:Generated_Source\PSoC5/Timer_1.c **** * Summary:
 447:Generated_Source\PSoC5/Timer_1.c **** *  This function returns the last value captured.
 448:Generated_Source\PSoC5/Timer_1.c **** *
 449:Generated_Source\PSoC5/Timer_1.c **** * Parameters:
 450:Generated_Source\PSoC5/Timer_1.c **** *  void
 451:Generated_Source\PSoC5/Timer_1.c **** *
 452:Generated_Source\PSoC5/Timer_1.c **** * Return:
 453:Generated_Source\PSoC5/Timer_1.c **** *  Present Capture value.
 454:Generated_Source\PSoC5/Timer_1.c **** *
 455:Generated_Source\PSoC5/Timer_1.c **** *******************************************************************************/
 456:Generated_Source\PSoC5/Timer_1.c **** uint16 Timer_1_ReadCapture(void) 
 457:Generated_Source\PSoC5/Timer_1.c **** {
 586              		.loc 1 457 0
 587              		.cfi_startproc
 588              		@ args = 0, pretend = 0, frame = 0
 589              		@ frame_needed = 1, uses_anonymous_args = 0
 590              		@ link register save eliminated.
 591 0000 80B4     		push	{r7}
 592              		.cfi_def_cfa_offset 4
 593              		.cfi_offset 7, -4
 594 0002 00AF     		add	r7, sp, #0
 595              		.cfi_def_cfa_register 7
 458:Generated_Source\PSoC5/Timer_1.c ****    #if(Timer_1_UsingFixedFunction)
 459:Generated_Source\PSoC5/Timer_1.c ****        return ((uint16)CY_GET_REG16(Timer_1_CAPTURE_LSB_PTR));
 596              		.loc 1 459 0
 597 0004 034B     		ldr	r3, .L40
 598 0006 1B88     		ldrh	r3, [r3]	@ movhi
 599 0008 9BB2     		uxth	r3, r3
 460:Generated_Source\PSoC5/Timer_1.c ****    #else
 461:Generated_Source\PSoC5/Timer_1.c ****        return (CY_GET_REG16(Timer_1_CAPTURE_LSB_PTR));
 462:Generated_Source\PSoC5/Timer_1.c ****    #endif /* (Timer_1_UsingFixedFunction) */
 463:Generated_Source\PSoC5/Timer_1.c **** }
 600              		.loc 1 463 0
 601 000a 1846     		mov	r0, r3
 602 000c BD46     		mov	sp, r7
 603              		.cfi_def_cfa_register 13
 604              		@ sp needed
 605 000e 80BC     		pop	{r7}
 606              		.cfi_restore 7
 607              		.cfi_def_cfa_offset 0
 608 0010 7047     		bx	lr
 609              	.L41:
 610 0012 00BF     		.align	2
 611              	.L40:
 612 0014 084F0040 		.word	1073762056
 613              		.cfi_endproc
 614              	.LFE11:
 615              		.size	Timer_1_ReadCapture, .-Timer_1_ReadCapture
 616              		.section	.text.Timer_1_WriteCounter,"ax",%progbits
 617              		.align	2
 618              		.global	Timer_1_WriteCounter
 619              		.thumb
 620              		.thumb_func
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccxWh4RE.s 			page 20


 621              		.type	Timer_1_WriteCounter, %function
 622              	Timer_1_WriteCounter:
 623              	.LFB12:
 464:Generated_Source\PSoC5/Timer_1.c **** 
 465:Generated_Source\PSoC5/Timer_1.c **** 
 466:Generated_Source\PSoC5/Timer_1.c **** /*******************************************************************************
 467:Generated_Source\PSoC5/Timer_1.c **** * Function Name: Timer_1_WriteCounter
 468:Generated_Source\PSoC5/Timer_1.c **** ********************************************************************************
 469:Generated_Source\PSoC5/Timer_1.c **** *
 470:Generated_Source\PSoC5/Timer_1.c **** * Summary:
 471:Generated_Source\PSoC5/Timer_1.c **** *  This funtion is used to set the counter to a specific value
 472:Generated_Source\PSoC5/Timer_1.c **** *
 473:Generated_Source\PSoC5/Timer_1.c **** * Parameters:
 474:Generated_Source\PSoC5/Timer_1.c **** *  counter:  New counter value.
 475:Generated_Source\PSoC5/Timer_1.c **** *
 476:Generated_Source\PSoC5/Timer_1.c **** * Return:
 477:Generated_Source\PSoC5/Timer_1.c **** *  void
 478:Generated_Source\PSoC5/Timer_1.c **** *
 479:Generated_Source\PSoC5/Timer_1.c **** *******************************************************************************/
 480:Generated_Source\PSoC5/Timer_1.c **** void Timer_1_WriteCounter(uint16 counter) 
 481:Generated_Source\PSoC5/Timer_1.c **** {
 624              		.loc 1 481 0
 625              		.cfi_startproc
 626              		@ args = 0, pretend = 0, frame = 8
 627              		@ frame_needed = 1, uses_anonymous_args = 0
 628              		@ link register save eliminated.
 629 0000 80B4     		push	{r7}
 630              		.cfi_def_cfa_offset 4
 631              		.cfi_offset 7, -4
 632 0002 83B0     		sub	sp, sp, #12
 633              		.cfi_def_cfa_offset 16
 634 0004 00AF     		add	r7, sp, #0
 635              		.cfi_def_cfa_register 7
 636 0006 0346     		mov	r3, r0
 637 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 482:Generated_Source\PSoC5/Timer_1.c ****    #if(Timer_1_UsingFixedFunction)
 483:Generated_Source\PSoC5/Timer_1.c ****         /* This functionality is removed until a FixedFunction HW update to
 484:Generated_Source\PSoC5/Timer_1.c ****          * allow this register to be written
 485:Generated_Source\PSoC5/Timer_1.c ****          */
 486:Generated_Source\PSoC5/Timer_1.c ****         CY_SET_REG16(Timer_1_COUNTER_LSB_PTR, (uint16)counter);
 638              		.loc 1 486 0
 639 000a 044A     		ldr	r2, .L43
 640 000c FB88     		ldrh	r3, [r7, #6]	@ movhi
 641 000e 1380     		strh	r3, [r2]	@ movhi
 487:Generated_Source\PSoC5/Timer_1.c ****         
 488:Generated_Source\PSoC5/Timer_1.c ****     #else
 489:Generated_Source\PSoC5/Timer_1.c ****         CY_SET_REG16(Timer_1_COUNTER_LSB_PTR, counter);
 490:Generated_Source\PSoC5/Timer_1.c ****     #endif /* Set Write Counter only for the UDB implementation (Write Counter not available in fix
 491:Generated_Source\PSoC5/Timer_1.c **** }
 642              		.loc 1 491 0
 643 0010 00BF     		nop
 644 0012 0C37     		adds	r7, r7, #12
 645              		.cfi_def_cfa_offset 4
 646 0014 BD46     		mov	sp, r7
 647              		.cfi_def_cfa_register 13
 648              		@ sp needed
 649 0016 80BC     		pop	{r7}
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccxWh4RE.s 			page 21


 650              		.cfi_restore 7
 651              		.cfi_def_cfa_offset 0
 652 0018 7047     		bx	lr
 653              	.L44:
 654 001a 00BF     		.align	2
 655              	.L43:
 656 001c 064F0040 		.word	1073762054
 657              		.cfi_endproc
 658              	.LFE12:
 659              		.size	Timer_1_WriteCounter, .-Timer_1_WriteCounter
 660              		.section	.text.Timer_1_ReadCounter,"ax",%progbits
 661              		.align	2
 662              		.global	Timer_1_ReadCounter
 663              		.thumb
 664              		.thumb_func
 665              		.type	Timer_1_ReadCounter, %function
 666              	Timer_1_ReadCounter:
 667              	.LFB13:
 492:Generated_Source\PSoC5/Timer_1.c **** 
 493:Generated_Source\PSoC5/Timer_1.c **** 
 494:Generated_Source\PSoC5/Timer_1.c **** /*******************************************************************************
 495:Generated_Source\PSoC5/Timer_1.c **** * Function Name: Timer_1_ReadCounter
 496:Generated_Source\PSoC5/Timer_1.c **** ********************************************************************************
 497:Generated_Source\PSoC5/Timer_1.c **** *
 498:Generated_Source\PSoC5/Timer_1.c **** * Summary:
 499:Generated_Source\PSoC5/Timer_1.c **** *  This function returns the current counter value.
 500:Generated_Source\PSoC5/Timer_1.c **** *
 501:Generated_Source\PSoC5/Timer_1.c **** * Parameters:
 502:Generated_Source\PSoC5/Timer_1.c **** *  void
 503:Generated_Source\PSoC5/Timer_1.c **** *
 504:Generated_Source\PSoC5/Timer_1.c **** * Return:
 505:Generated_Source\PSoC5/Timer_1.c **** *  Present compare value.
 506:Generated_Source\PSoC5/Timer_1.c **** *
 507:Generated_Source\PSoC5/Timer_1.c **** *******************************************************************************/
 508:Generated_Source\PSoC5/Timer_1.c **** uint16 Timer_1_ReadCounter(void) 
 509:Generated_Source\PSoC5/Timer_1.c **** {
 668              		.loc 1 509 0
 669              		.cfi_startproc
 670              		@ args = 0, pretend = 0, frame = 0
 671              		@ frame_needed = 1, uses_anonymous_args = 0
 672              		@ link register save eliminated.
 673 0000 80B4     		push	{r7}
 674              		.cfi_def_cfa_offset 4
 675              		.cfi_offset 7, -4
 676 0002 00AF     		add	r7, sp, #0
 677              		.cfi_def_cfa_register 7
 510:Generated_Source\PSoC5/Timer_1.c ****     /* Force capture by reading Accumulator */
 511:Generated_Source\PSoC5/Timer_1.c ****     /* Must first do a software capture to be able to read the counter */
 512:Generated_Source\PSoC5/Timer_1.c ****     /* It is up to the user code to make sure there isn't already captured data in the FIFO */
 513:Generated_Source\PSoC5/Timer_1.c ****     #if(Timer_1_UsingFixedFunction)
 514:Generated_Source\PSoC5/Timer_1.c ****         (void)CY_GET_REG16(Timer_1_COUNTER_LSB_PTR);
 678              		.loc 1 514 0
 679 0004 044B     		ldr	r3, .L47
 680 0006 1B88     		ldrh	r3, [r3]	@ movhi
 515:Generated_Source\PSoC5/Timer_1.c ****     #else
 516:Generated_Source\PSoC5/Timer_1.c ****         (void)CY_GET_REG8(Timer_1_COUNTER_LSB_PTR_8BIT);
 517:Generated_Source\PSoC5/Timer_1.c ****     #endif/* (Timer_1_UsingFixedFunction) */
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccxWh4RE.s 			page 22


 518:Generated_Source\PSoC5/Timer_1.c **** 
 519:Generated_Source\PSoC5/Timer_1.c ****     /* Read the data from the FIFO (or capture register for Fixed Function)*/
 520:Generated_Source\PSoC5/Timer_1.c ****     #if(Timer_1_UsingFixedFunction)
 521:Generated_Source\PSoC5/Timer_1.c ****         return ((uint16)CY_GET_REG16(Timer_1_CAPTURE_LSB_PTR));
 681              		.loc 1 521 0
 682 0008 044B     		ldr	r3, .L47+4
 683 000a 1B88     		ldrh	r3, [r3]	@ movhi
 684 000c 9BB2     		uxth	r3, r3
 522:Generated_Source\PSoC5/Timer_1.c ****     #else
 523:Generated_Source\PSoC5/Timer_1.c ****         return (CY_GET_REG16(Timer_1_CAPTURE_LSB_PTR));
 524:Generated_Source\PSoC5/Timer_1.c ****     #endif /* (Timer_1_UsingFixedFunction) */
 525:Generated_Source\PSoC5/Timer_1.c **** }
 685              		.loc 1 525 0
 686 000e 1846     		mov	r0, r3
 687 0010 BD46     		mov	sp, r7
 688              		.cfi_def_cfa_register 13
 689              		@ sp needed
 690 0012 80BC     		pop	{r7}
 691              		.cfi_restore 7
 692              		.cfi_def_cfa_offset 0
 693 0014 7047     		bx	lr
 694              	.L48:
 695 0016 00BF     		.align	2
 696              	.L47:
 697 0018 064F0040 		.word	1073762054
 698 001c 084F0040 		.word	1073762056
 699              		.cfi_endproc
 700              	.LFE13:
 701              		.size	Timer_1_ReadCounter, .-Timer_1_ReadCounter
 702              		.text
 703              	.Letext0:
 704              		.file 2 "Generated_Source\\PSoC5\\cytypes.h"
 705              		.section	.debug_info,"",%progbits
 706              	.Ldebug_info0:
 707 0000 41020000 		.4byte	0x241
 708 0004 0400     		.2byte	0x4
 709 0006 00000000 		.4byte	.Ldebug_abbrev0
 710 000a 04       		.byte	0x4
 711 000b 01       		.uleb128 0x1
 712 000c 06000000 		.4byte	.LASF36
 713 0010 0C       		.byte	0xc
 714 0011 DA000000 		.4byte	.LASF37
 715 0015 85020000 		.4byte	.LASF38
 716 0019 00000000 		.4byte	.Ldebug_ranges0+0
 717 001d 00000000 		.4byte	0
 718 0021 00000000 		.4byte	.Ldebug_line0
 719 0025 02       		.uleb128 0x2
 720 0026 01       		.byte	0x1
 721 0027 06       		.byte	0x6
 722 0028 06030000 		.4byte	.LASF0
 723 002c 02       		.uleb128 0x2
 724 002d 01       		.byte	0x1
 725 002e 08       		.byte	0x8
 726 002f 5E010000 		.4byte	.LASF1
 727 0033 02       		.uleb128 0x2
 728 0034 02       		.byte	0x2
 729 0035 05       		.byte	0x5
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccxWh4RE.s 			page 23


 730 0036 7B020000 		.4byte	.LASF2
 731 003a 02       		.uleb128 0x2
 732 003b 02       		.byte	0x2
 733 003c 07       		.byte	0x7
 734 003d C7000000 		.4byte	.LASF3
 735 0041 02       		.uleb128 0x2
 736 0042 04       		.byte	0x4
 737 0043 05       		.byte	0x5
 738 0044 EC020000 		.4byte	.LASF4
 739 0048 02       		.uleb128 0x2
 740 0049 04       		.byte	0x4
 741 004a 07       		.byte	0x7
 742 004b 3E010000 		.4byte	.LASF5
 743 004f 02       		.uleb128 0x2
 744 0050 08       		.byte	0x8
 745 0051 05       		.byte	0x5
 746 0052 4B020000 		.4byte	.LASF6
 747 0056 02       		.uleb128 0x2
 748 0057 08       		.byte	0x8
 749 0058 07       		.byte	0x7
 750 0059 F6010000 		.4byte	.LASF7
 751 005d 03       		.uleb128 0x3
 752 005e 04       		.byte	0x4
 753 005f 05       		.byte	0x5
 754 0060 696E7400 		.ascii	"int\000"
 755 0064 02       		.uleb128 0x2
 756 0065 04       		.byte	0x4
 757 0066 07       		.byte	0x7
 758 0067 FB000000 		.4byte	.LASF8
 759 006b 04       		.uleb128 0x4
 760 006c 50010000 		.4byte	.LASF9
 761 0070 02       		.byte	0x2
 762 0071 9201     		.2byte	0x192
 763 0073 2C000000 		.4byte	0x2c
 764 0077 04       		.uleb128 0x4
 765 0078 9B010000 		.4byte	.LASF10
 766 007c 02       		.byte	0x2
 767 007d 9301     		.2byte	0x193
 768 007f 3A000000 		.4byte	0x3a
 769 0083 02       		.uleb128 0x2
 770 0084 04       		.byte	0x4
 771 0085 04       		.byte	0x4
 772 0086 08010000 		.4byte	.LASF11
 773 008a 02       		.uleb128 0x2
 774 008b 08       		.byte	0x8
 775 008c 04       		.byte	0x4
 776 008d 7B010000 		.4byte	.LASF12
 777 0091 02       		.uleb128 0x2
 778 0092 01       		.byte	0x1
 779 0093 08       		.byte	0x8
 780 0094 F5020000 		.4byte	.LASF13
 781 0098 04       		.uleb128 0x4
 782 0099 26010000 		.4byte	.LASF14
 783 009d 02       		.byte	0x2
 784 009e 3C02     		.2byte	0x23c
 785 00a0 A4000000 		.4byte	0xa4
 786 00a4 05       		.uleb128 0x5
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccxWh4RE.s 			page 24


 787 00a5 6B000000 		.4byte	0x6b
 788 00a9 04       		.uleb128 0x4
 789 00aa 00000000 		.4byte	.LASF15
 790 00ae 02       		.byte	0x2
 791 00af 3D02     		.2byte	0x23d
 792 00b1 B5000000 		.4byte	0xb5
 793 00b5 05       		.uleb128 0x5
 794 00b6 77000000 		.4byte	0x77
 795 00ba 02       		.uleb128 0x2
 796 00bb 08       		.byte	0x8
 797 00bc 04       		.byte	0x4
 798 00bd FA020000 		.4byte	.LASF16
 799 00c1 02       		.uleb128 0x2
 800 00c2 04       		.byte	0x4
 801 00c3 07       		.byte	0x7
 802 00c4 42020000 		.4byte	.LASF17
 803 00c8 06       		.uleb128 0x6
 804 00c9 E9010000 		.4byte	.LASF18
 805 00cd 01       		.byte	0x1
 806 00ce 2B       		.byte	0x2b
 807 00cf 00000000 		.4byte	.LFB0
 808 00d3 B0000000 		.4byte	.LFE0-.LFB0
 809 00d7 01       		.uleb128 0x1
 810 00d8 9C       		.byte	0x9c
 811 00d9 07       		.uleb128 0x7
 812 00da 6C010000 		.4byte	.LASF19
 813 00de 01       		.byte	0x1
 814 00df B4       		.byte	0xb4
 815 00e0 00000000 		.4byte	.LFB1
 816 00e4 48000000 		.4byte	.LFE1-.LFB1
 817 00e8 01       		.uleb128 0x1
 818 00e9 9C       		.byte	0x9c
 819 00ea 06       		.uleb128 0x6
 820 00eb DB010000 		.4byte	.LASF20
 821 00ef 01       		.byte	0x1
 822 00f0 D7       		.byte	0xd7
 823 00f1 00000000 		.4byte	.LFB2
 824 00f5 24000000 		.4byte	.LFE2-.LFB2
 825 00f9 01       		.uleb128 0x1
 826 00fa 9C       		.byte	0x9c
 827 00fb 07       		.uleb128 0x7
 828 00fc 12030000 		.4byte	.LASF21
 829 0100 01       		.byte	0x1
 830 0101 F7       		.byte	0xf7
 831 0102 00000000 		.4byte	.LFB3
 832 0106 48000000 		.4byte	.LFE3-.LFB3
 833 010a 01       		.uleb128 0x1
 834 010b 9C       		.byte	0x9c
 835 010c 08       		.uleb128 0x8
 836 010d 82010000 		.4byte	.LASF25
 837 0111 01       		.byte	0x1
 838 0112 1701     		.2byte	0x117
 839 0114 00000000 		.4byte	.LFB4
 840 0118 20000000 		.4byte	.LFE4-.LFB4
 841 011c 01       		.uleb128 0x1
 842 011d 9C       		.byte	0x9c
 843 011e 32010000 		.4byte	0x132
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccxWh4RE.s 			page 25


 844 0122 09       		.uleb128 0x9
 845 0123 59020000 		.4byte	.LASF27
 846 0127 01       		.byte	0x1
 847 0128 1701     		.2byte	0x117
 848 012a 6B000000 		.4byte	0x6b
 849 012e 02       		.uleb128 0x2
 850 012f 91       		.byte	0x91
 851 0130 77       		.sleb128 -9
 852 0131 00       		.byte	0
 853 0132 0A       		.uleb128 0xa
 854 0133 94000000 		.4byte	.LASF22
 855 0137 01       		.byte	0x1
 856 0138 2E01     		.2byte	0x12e
 857 013a 00000000 		.4byte	.LFB5
 858 013e 14000000 		.4byte	.LFE5-.LFB5
 859 0142 01       		.uleb128 0x1
 860 0143 9C       		.byte	0x9c
 861 0144 0B       		.uleb128 0xb
 862 0145 D1020000 		.4byte	.LASF23
 863 0149 01       		.byte	0x1
 864 014a 4D01     		.2byte	0x14d
 865 014c 6B000000 		.4byte	0x6b
 866 0150 00000000 		.4byte	.LFB6
 867 0154 18000000 		.4byte	.LFE6-.LFB6
 868 0158 01       		.uleb128 0x1
 869 0159 9C       		.byte	0x9c
 870 015a 0B       		.uleb128 0xb
 871 015b BF010000 		.4byte	.LASF24
 872 015f 01       		.byte	0x1
 873 0160 6401     		.2byte	0x164
 874 0162 6B000000 		.4byte	0x6b
 875 0166 00000000 		.4byte	.LFB7
 876 016a 18000000 		.4byte	.LFE7-.LFB7
 877 016e 01       		.uleb128 0x1
 878 016f 9C       		.byte	0x9c
 879 0170 08       		.uleb128 0x8
 880 0171 A2010000 		.4byte	.LASF26
 881 0175 01       		.byte	0x1
 882 0176 7B01     		.2byte	0x17b
 883 0178 00000000 		.4byte	.LFB8
 884 017c 20000000 		.4byte	.LFE8-.LFB8
 885 0180 01       		.uleb128 0x1
 886 0181 9C       		.byte	0x9c
 887 0182 96010000 		.4byte	0x196
 888 0186 09       		.uleb128 0x9
 889 0187 56010000 		.4byte	.LASF28
 890 018b 01       		.byte	0x1
 891 018c 7B01     		.2byte	0x17b
 892 018e 6B000000 		.4byte	0x6b
 893 0192 02       		.uleb128 0x2
 894 0193 91       		.byte	0x91
 895 0194 77       		.sleb128 -9
 896 0195 00       		.byte	0
 897 0196 0B       		.uleb128 0xb
 898 0197 2B010000 		.4byte	.LASF29
 899 019b 01       		.byte	0x1
 900 019c 9501     		.2byte	0x195
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccxWh4RE.s 			page 26


 901 019e 77000000 		.4byte	0x77
 902 01a2 00000000 		.4byte	.LFB9
 903 01a6 18000000 		.4byte	.LFE9-.LFB9
 904 01aa 01       		.uleb128 0x1
 905 01ab 9C       		.byte	0x9c
 906 01ac 08       		.uleb128 0x8
 907 01ad AC000000 		.4byte	.LASF30
 908 01b1 01       		.byte	0x1
 909 01b2 AF01     		.2byte	0x1af
 910 01b4 00000000 		.4byte	.LFB10
 911 01b8 24000000 		.4byte	.LFE10-.LFB10
 912 01bc 01       		.uleb128 0x1
 913 01bd 9C       		.byte	0x9c
 914 01be E1010000 		.4byte	0x1e1
 915 01c2 09       		.uleb128 0x9
 916 01c3 C0000000 		.4byte	.LASF31
 917 01c7 01       		.byte	0x1
 918 01c8 AF01     		.2byte	0x1af
 919 01ca 77000000 		.4byte	0x77
 920 01ce 02       		.uleb128 0x2
 921 01cf 91       		.byte	0x91
 922 01d0 6E       		.sleb128 -18
 923 01d1 0C       		.uleb128 0xc
 924 01d2 36020000 		.4byte	.LASF39
 925 01d6 01       		.byte	0x1
 926 01d7 B201     		.2byte	0x1b2
 927 01d9 77000000 		.4byte	0x77
 928 01dd 02       		.uleb128 0x2
 929 01de 91       		.byte	0x91
 930 01df 76       		.sleb128 -10
 931 01e0 00       		.byte	0
 932 01e1 0B       		.uleb128 0xb
 933 01e2 22020000 		.4byte	.LASF32
 934 01e6 01       		.byte	0x1
 935 01e7 C801     		.2byte	0x1c8
 936 01e9 77000000 		.4byte	0x77
 937 01ed 00000000 		.4byte	.LFB11
 938 01f1 18000000 		.4byte	.LFE11-.LFB11
 939 01f5 01       		.uleb128 0x1
 940 01f6 9C       		.byte	0x9c
 941 01f7 08       		.uleb128 0x8
 942 01f8 0D020000 		.4byte	.LASF33
 943 01fc 01       		.byte	0x1
 944 01fd E001     		.2byte	0x1e0
 945 01ff 00000000 		.4byte	.LFB12
 946 0203 20000000 		.4byte	.LFE12-.LFB12
 947 0207 01       		.uleb128 0x1
 948 0208 9C       		.byte	0x9c
 949 0209 1D020000 		.4byte	0x21d
 950 020d 09       		.uleb128 0x9
 951 020e 0E010000 		.4byte	.LASF34
 952 0212 01       		.byte	0x1
 953 0213 E001     		.2byte	0x1e0
 954 0215 77000000 		.4byte	0x77
 955 0219 02       		.uleb128 0x2
 956 021a 91       		.byte	0x91
 957 021b 76       		.sleb128 -10
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccxWh4RE.s 			page 27


 958 021c 00       		.byte	0
 959 021d 0B       		.uleb128 0xb
 960 021e 67020000 		.4byte	.LASF35
 961 0222 01       		.byte	0x1
 962 0223 FC01     		.2byte	0x1fc
 963 0225 77000000 		.4byte	0x77
 964 0229 00000000 		.4byte	.LFB13
 965 022d 20000000 		.4byte	.LFE13-.LFB13
 966 0231 01       		.uleb128 0x1
 967 0232 9C       		.byte	0x9c
 968 0233 0D       		.uleb128 0xd
 969 0234 16010000 		.4byte	.LASF40
 970 0238 01       		.byte	0x1
 971 0239 1A       		.byte	0x1a
 972 023a 6B000000 		.4byte	0x6b
 973 023e 05       		.uleb128 0x5
 974 023f 03       		.byte	0x3
 975 0240 00000000 		.4byte	Timer_1_initVar
 976 0244 00       		.byte	0
 977              		.section	.debug_abbrev,"",%progbits
 978              	.Ldebug_abbrev0:
 979 0000 01       		.uleb128 0x1
 980 0001 11       		.uleb128 0x11
 981 0002 01       		.byte	0x1
 982 0003 25       		.uleb128 0x25
 983 0004 0E       		.uleb128 0xe
 984 0005 13       		.uleb128 0x13
 985 0006 0B       		.uleb128 0xb
 986 0007 03       		.uleb128 0x3
 987 0008 0E       		.uleb128 0xe
 988 0009 1B       		.uleb128 0x1b
 989 000a 0E       		.uleb128 0xe
 990 000b 55       		.uleb128 0x55
 991 000c 17       		.uleb128 0x17
 992 000d 11       		.uleb128 0x11
 993 000e 01       		.uleb128 0x1
 994 000f 10       		.uleb128 0x10
 995 0010 17       		.uleb128 0x17
 996 0011 00       		.byte	0
 997 0012 00       		.byte	0
 998 0013 02       		.uleb128 0x2
 999 0014 24       		.uleb128 0x24
 1000 0015 00       		.byte	0
 1001 0016 0B       		.uleb128 0xb
 1002 0017 0B       		.uleb128 0xb
 1003 0018 3E       		.uleb128 0x3e
 1004 0019 0B       		.uleb128 0xb
 1005 001a 03       		.uleb128 0x3
 1006 001b 0E       		.uleb128 0xe
 1007 001c 00       		.byte	0
 1008 001d 00       		.byte	0
 1009 001e 03       		.uleb128 0x3
 1010 001f 24       		.uleb128 0x24
 1011 0020 00       		.byte	0
 1012 0021 0B       		.uleb128 0xb
 1013 0022 0B       		.uleb128 0xb
 1014 0023 3E       		.uleb128 0x3e
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccxWh4RE.s 			page 28


 1015 0024 0B       		.uleb128 0xb
 1016 0025 03       		.uleb128 0x3
 1017 0026 08       		.uleb128 0x8
 1018 0027 00       		.byte	0
 1019 0028 00       		.byte	0
 1020 0029 04       		.uleb128 0x4
 1021 002a 16       		.uleb128 0x16
 1022 002b 00       		.byte	0
 1023 002c 03       		.uleb128 0x3
 1024 002d 0E       		.uleb128 0xe
 1025 002e 3A       		.uleb128 0x3a
 1026 002f 0B       		.uleb128 0xb
 1027 0030 3B       		.uleb128 0x3b
 1028 0031 05       		.uleb128 0x5
 1029 0032 49       		.uleb128 0x49
 1030 0033 13       		.uleb128 0x13
 1031 0034 00       		.byte	0
 1032 0035 00       		.byte	0
 1033 0036 05       		.uleb128 0x5
 1034 0037 35       		.uleb128 0x35
 1035 0038 00       		.byte	0
 1036 0039 49       		.uleb128 0x49
 1037 003a 13       		.uleb128 0x13
 1038 003b 00       		.byte	0
 1039 003c 00       		.byte	0
 1040 003d 06       		.uleb128 0x6
 1041 003e 2E       		.uleb128 0x2e
 1042 003f 00       		.byte	0
 1043 0040 3F       		.uleb128 0x3f
 1044 0041 19       		.uleb128 0x19
 1045 0042 03       		.uleb128 0x3
 1046 0043 0E       		.uleb128 0xe
 1047 0044 3A       		.uleb128 0x3a
 1048 0045 0B       		.uleb128 0xb
 1049 0046 3B       		.uleb128 0x3b
 1050 0047 0B       		.uleb128 0xb
 1051 0048 27       		.uleb128 0x27
 1052 0049 19       		.uleb128 0x19
 1053 004a 11       		.uleb128 0x11
 1054 004b 01       		.uleb128 0x1
 1055 004c 12       		.uleb128 0x12
 1056 004d 06       		.uleb128 0x6
 1057 004e 40       		.uleb128 0x40
 1058 004f 18       		.uleb128 0x18
 1059 0050 9642     		.uleb128 0x2116
 1060 0052 19       		.uleb128 0x19
 1061 0053 00       		.byte	0
 1062 0054 00       		.byte	0
 1063 0055 07       		.uleb128 0x7
 1064 0056 2E       		.uleb128 0x2e
 1065 0057 00       		.byte	0
 1066 0058 3F       		.uleb128 0x3f
 1067 0059 19       		.uleb128 0x19
 1068 005a 03       		.uleb128 0x3
 1069 005b 0E       		.uleb128 0xe
 1070 005c 3A       		.uleb128 0x3a
 1071 005d 0B       		.uleb128 0xb
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccxWh4RE.s 			page 29


 1072 005e 3B       		.uleb128 0x3b
 1073 005f 0B       		.uleb128 0xb
 1074 0060 27       		.uleb128 0x27
 1075 0061 19       		.uleb128 0x19
 1076 0062 11       		.uleb128 0x11
 1077 0063 01       		.uleb128 0x1
 1078 0064 12       		.uleb128 0x12
 1079 0065 06       		.uleb128 0x6
 1080 0066 40       		.uleb128 0x40
 1081 0067 18       		.uleb128 0x18
 1082 0068 9742     		.uleb128 0x2117
 1083 006a 19       		.uleb128 0x19
 1084 006b 00       		.byte	0
 1085 006c 00       		.byte	0
 1086 006d 08       		.uleb128 0x8
 1087 006e 2E       		.uleb128 0x2e
 1088 006f 01       		.byte	0x1
 1089 0070 3F       		.uleb128 0x3f
 1090 0071 19       		.uleb128 0x19
 1091 0072 03       		.uleb128 0x3
 1092 0073 0E       		.uleb128 0xe
 1093 0074 3A       		.uleb128 0x3a
 1094 0075 0B       		.uleb128 0xb
 1095 0076 3B       		.uleb128 0x3b
 1096 0077 05       		.uleb128 0x5
 1097 0078 27       		.uleb128 0x27
 1098 0079 19       		.uleb128 0x19
 1099 007a 11       		.uleb128 0x11
 1100 007b 01       		.uleb128 0x1
 1101 007c 12       		.uleb128 0x12
 1102 007d 06       		.uleb128 0x6
 1103 007e 40       		.uleb128 0x40
 1104 007f 18       		.uleb128 0x18
 1105 0080 9742     		.uleb128 0x2117
 1106 0082 19       		.uleb128 0x19
 1107 0083 01       		.uleb128 0x1
 1108 0084 13       		.uleb128 0x13
 1109 0085 00       		.byte	0
 1110 0086 00       		.byte	0
 1111 0087 09       		.uleb128 0x9
 1112 0088 05       		.uleb128 0x5
 1113 0089 00       		.byte	0
 1114 008a 03       		.uleb128 0x3
 1115 008b 0E       		.uleb128 0xe
 1116 008c 3A       		.uleb128 0x3a
 1117 008d 0B       		.uleb128 0xb
 1118 008e 3B       		.uleb128 0x3b
 1119 008f 05       		.uleb128 0x5
 1120 0090 49       		.uleb128 0x49
 1121 0091 13       		.uleb128 0x13
 1122 0092 02       		.uleb128 0x2
 1123 0093 18       		.uleb128 0x18
 1124 0094 00       		.byte	0
 1125 0095 00       		.byte	0
 1126 0096 0A       		.uleb128 0xa
 1127 0097 2E       		.uleb128 0x2e
 1128 0098 00       		.byte	0
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccxWh4RE.s 			page 30


 1129 0099 3F       		.uleb128 0x3f
 1130 009a 19       		.uleb128 0x19
 1131 009b 03       		.uleb128 0x3
 1132 009c 0E       		.uleb128 0xe
 1133 009d 3A       		.uleb128 0x3a
 1134 009e 0B       		.uleb128 0xb
 1135 009f 3B       		.uleb128 0x3b
 1136 00a0 05       		.uleb128 0x5
 1137 00a1 27       		.uleb128 0x27
 1138 00a2 19       		.uleb128 0x19
 1139 00a3 11       		.uleb128 0x11
 1140 00a4 01       		.uleb128 0x1
 1141 00a5 12       		.uleb128 0x12
 1142 00a6 06       		.uleb128 0x6
 1143 00a7 40       		.uleb128 0x40
 1144 00a8 18       		.uleb128 0x18
 1145 00a9 9742     		.uleb128 0x2117
 1146 00ab 19       		.uleb128 0x19
 1147 00ac 00       		.byte	0
 1148 00ad 00       		.byte	0
 1149 00ae 0B       		.uleb128 0xb
 1150 00af 2E       		.uleb128 0x2e
 1151 00b0 00       		.byte	0
 1152 00b1 3F       		.uleb128 0x3f
 1153 00b2 19       		.uleb128 0x19
 1154 00b3 03       		.uleb128 0x3
 1155 00b4 0E       		.uleb128 0xe
 1156 00b5 3A       		.uleb128 0x3a
 1157 00b6 0B       		.uleb128 0xb
 1158 00b7 3B       		.uleb128 0x3b
 1159 00b8 05       		.uleb128 0x5
 1160 00b9 27       		.uleb128 0x27
 1161 00ba 19       		.uleb128 0x19
 1162 00bb 49       		.uleb128 0x49
 1163 00bc 13       		.uleb128 0x13
 1164 00bd 11       		.uleb128 0x11
 1165 00be 01       		.uleb128 0x1
 1166 00bf 12       		.uleb128 0x12
 1167 00c0 06       		.uleb128 0x6
 1168 00c1 40       		.uleb128 0x40
 1169 00c2 18       		.uleb128 0x18
 1170 00c3 9742     		.uleb128 0x2117
 1171 00c5 19       		.uleb128 0x19
 1172 00c6 00       		.byte	0
 1173 00c7 00       		.byte	0
 1174 00c8 0C       		.uleb128 0xc
 1175 00c9 34       		.uleb128 0x34
 1176 00ca 00       		.byte	0
 1177 00cb 03       		.uleb128 0x3
 1178 00cc 0E       		.uleb128 0xe
 1179 00cd 3A       		.uleb128 0x3a
 1180 00ce 0B       		.uleb128 0xb
 1181 00cf 3B       		.uleb128 0x3b
 1182 00d0 05       		.uleb128 0x5
 1183 00d1 49       		.uleb128 0x49
 1184 00d2 13       		.uleb128 0x13
 1185 00d3 02       		.uleb128 0x2
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccxWh4RE.s 			page 31


 1186 00d4 18       		.uleb128 0x18
 1187 00d5 00       		.byte	0
 1188 00d6 00       		.byte	0
 1189 00d7 0D       		.uleb128 0xd
 1190 00d8 34       		.uleb128 0x34
 1191 00d9 00       		.byte	0
 1192 00da 03       		.uleb128 0x3
 1193 00db 0E       		.uleb128 0xe
 1194 00dc 3A       		.uleb128 0x3a
 1195 00dd 0B       		.uleb128 0xb
 1196 00de 3B       		.uleb128 0x3b
 1197 00df 0B       		.uleb128 0xb
 1198 00e0 49       		.uleb128 0x49
 1199 00e1 13       		.uleb128 0x13
 1200 00e2 3F       		.uleb128 0x3f
 1201 00e3 19       		.uleb128 0x19
 1202 00e4 02       		.uleb128 0x2
 1203 00e5 18       		.uleb128 0x18
 1204 00e6 00       		.byte	0
 1205 00e7 00       		.byte	0
 1206 00e8 00       		.byte	0
 1207              		.section	.debug_aranges,"",%progbits
 1208 0000 84000000 		.4byte	0x84
 1209 0004 0200     		.2byte	0x2
 1210 0006 00000000 		.4byte	.Ldebug_info0
 1211 000a 04       		.byte	0x4
 1212 000b 00       		.byte	0
 1213 000c 0000     		.2byte	0
 1214 000e 0000     		.2byte	0
 1215 0010 00000000 		.4byte	.LFB0
 1216 0014 B0000000 		.4byte	.LFE0-.LFB0
 1217 0018 00000000 		.4byte	.LFB1
 1218 001c 48000000 		.4byte	.LFE1-.LFB1
 1219 0020 00000000 		.4byte	.LFB2
 1220 0024 24000000 		.4byte	.LFE2-.LFB2
 1221 0028 00000000 		.4byte	.LFB3
 1222 002c 48000000 		.4byte	.LFE3-.LFB3
 1223 0030 00000000 		.4byte	.LFB4
 1224 0034 20000000 		.4byte	.LFE4-.LFB4
 1225 0038 00000000 		.4byte	.LFB5
 1226 003c 14000000 		.4byte	.LFE5-.LFB5
 1227 0040 00000000 		.4byte	.LFB6
 1228 0044 18000000 		.4byte	.LFE6-.LFB6
 1229 0048 00000000 		.4byte	.LFB7
 1230 004c 18000000 		.4byte	.LFE7-.LFB7
 1231 0050 00000000 		.4byte	.LFB8
 1232 0054 20000000 		.4byte	.LFE8-.LFB8
 1233 0058 00000000 		.4byte	.LFB9
 1234 005c 18000000 		.4byte	.LFE9-.LFB9
 1235 0060 00000000 		.4byte	.LFB10
 1236 0064 24000000 		.4byte	.LFE10-.LFB10
 1237 0068 00000000 		.4byte	.LFB11
 1238 006c 18000000 		.4byte	.LFE11-.LFB11
 1239 0070 00000000 		.4byte	.LFB12
 1240 0074 20000000 		.4byte	.LFE12-.LFB12
 1241 0078 00000000 		.4byte	.LFB13
 1242 007c 20000000 		.4byte	.LFE13-.LFB13
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccxWh4RE.s 			page 32


 1243 0080 00000000 		.4byte	0
 1244 0084 00000000 		.4byte	0
 1245              		.section	.debug_ranges,"",%progbits
 1246              	.Ldebug_ranges0:
 1247 0000 00000000 		.4byte	.LFB0
 1248 0004 B0000000 		.4byte	.LFE0
 1249 0008 00000000 		.4byte	.LFB1
 1250 000c 48000000 		.4byte	.LFE1
 1251 0010 00000000 		.4byte	.LFB2
 1252 0014 24000000 		.4byte	.LFE2
 1253 0018 00000000 		.4byte	.LFB3
 1254 001c 48000000 		.4byte	.LFE3
 1255 0020 00000000 		.4byte	.LFB4
 1256 0024 20000000 		.4byte	.LFE4
 1257 0028 00000000 		.4byte	.LFB5
 1258 002c 14000000 		.4byte	.LFE5
 1259 0030 00000000 		.4byte	.LFB6
 1260 0034 18000000 		.4byte	.LFE6
 1261 0038 00000000 		.4byte	.LFB7
 1262 003c 18000000 		.4byte	.LFE7
 1263 0040 00000000 		.4byte	.LFB8
 1264 0044 20000000 		.4byte	.LFE8
 1265 0048 00000000 		.4byte	.LFB9
 1266 004c 18000000 		.4byte	.LFE9
 1267 0050 00000000 		.4byte	.LFB10
 1268 0054 24000000 		.4byte	.LFE10
 1269 0058 00000000 		.4byte	.LFB11
 1270 005c 18000000 		.4byte	.LFE11
 1271 0060 00000000 		.4byte	.LFB12
 1272 0064 20000000 		.4byte	.LFE12
 1273 0068 00000000 		.4byte	.LFB13
 1274 006c 20000000 		.4byte	.LFE13
 1275 0070 00000000 		.4byte	0
 1276 0074 00000000 		.4byte	0
 1277              		.section	.debug_line,"",%progbits
 1278              	.Ldebug_line0:
 1279 0000 5C010000 		.section	.debug_str,"MS",%progbits,1
 1279      02004400 
 1279      00000201 
 1279      FB0E0D00 
 1279      01010101 
 1280              	.LASF15:
 1281 0000 72656731 		.ascii	"reg16\000"
 1281      3600
 1282              	.LASF36:
 1283 0006 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 1283      43313120 
 1283      352E342E 
 1283      31203230 
 1283      31363036 
 1284 0039 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 1284      20726576 
 1284      6973696F 
 1284      6E203233 
 1284      37373135 
 1285 006c 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 1285      66756E63 
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccxWh4RE.s 			page 33


 1285      74696F6E 
 1285      2D736563 
 1285      74696F6E 
 1286              	.LASF22:
 1287 0094 54696D65 		.ascii	"Timer_1_SoftwareCapture\000"
 1287      725F315F 
 1287      536F6674 
 1287      77617265 
 1287      43617074 
 1288              	.LASF30:
 1289 00ac 54696D65 		.ascii	"Timer_1_WritePeriod\000"
 1289      725F315F 
 1289      57726974 
 1289      65506572 
 1289      696F6400 
 1290              	.LASF31:
 1291 00c0 70657269 		.ascii	"period\000"
 1291      6F6400
 1292              	.LASF3:
 1293 00c7 73686F72 		.ascii	"short unsigned int\000"
 1293      7420756E 
 1293      7369676E 
 1293      65642069 
 1293      6E7400
 1294              	.LASF37:
 1295 00da 47656E65 		.ascii	"Generated_Source\\PSoC5\\Timer_1.c\000"
 1295      72617465 
 1295      645F536F 
 1295      75726365 
 1295      5C50536F 
 1296              	.LASF8:
 1297 00fb 756E7369 		.ascii	"unsigned int\000"
 1297      676E6564 
 1297      20696E74 
 1297      00
 1298              	.LASF11:
 1299 0108 666C6F61 		.ascii	"float\000"
 1299      7400
 1300              	.LASF34:
 1301 010e 636F756E 		.ascii	"counter\000"
 1301      74657200 
 1302              	.LASF40:
 1303 0116 54696D65 		.ascii	"Timer_1_initVar\000"
 1303      725F315F 
 1303      696E6974 
 1303      56617200 
 1304              	.LASF14:
 1305 0126 72656738 		.ascii	"reg8\000"
 1305      00
 1306              	.LASF29:
 1307 012b 54696D65 		.ascii	"Timer_1_ReadPeriod\000"
 1307      725F315F 
 1307      52656164 
 1307      50657269 
 1307      6F6400
 1308              	.LASF5:
 1309 013e 6C6F6E67 		.ascii	"long unsigned int\000"
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccxWh4RE.s 			page 34


 1309      20756E73 
 1309      69676E65 
 1309      6420696E 
 1309      7400
 1310              	.LASF9:
 1311 0150 75696E74 		.ascii	"uint8\000"
 1311      3800
 1312              	.LASF28:
 1313 0156 636F6E74 		.ascii	"control\000"
 1313      726F6C00 
 1314              	.LASF1:
 1315 015e 756E7369 		.ascii	"unsigned char\000"
 1315      676E6564 
 1315      20636861 
 1315      7200
 1316              	.LASF19:
 1317 016c 54696D65 		.ascii	"Timer_1_Enable\000"
 1317      725F315F 
 1317      456E6162 
 1317      6C6500
 1318              	.LASF12:
 1319 017b 646F7562 		.ascii	"double\000"
 1319      6C6500
 1320              	.LASF25:
 1321 0182 54696D65 		.ascii	"Timer_1_SetInterruptMode\000"
 1321      725F315F 
 1321      53657449 
 1321      6E746572 
 1321      72757074 
 1322              	.LASF10:
 1323 019b 75696E74 		.ascii	"uint16\000"
 1323      313600
 1324              	.LASF26:
 1325 01a2 54696D65 		.ascii	"Timer_1_WriteControlRegister\000"
 1325      725F315F 
 1325      57726974 
 1325      65436F6E 
 1325      74726F6C 
 1326              	.LASF24:
 1327 01bf 54696D65 		.ascii	"Timer_1_ReadControlRegister\000"
 1327      725F315F 
 1327      52656164 
 1327      436F6E74 
 1327      726F6C52 
 1328              	.LASF20:
 1329 01db 54696D65 		.ascii	"Timer_1_Start\000"
 1329      725F315F 
 1329      53746172 
 1329      7400
 1330              	.LASF18:
 1331 01e9 54696D65 		.ascii	"Timer_1_Init\000"
 1331      725F315F 
 1331      496E6974 
 1331      00
 1332              	.LASF7:
 1333 01f6 6C6F6E67 		.ascii	"long long unsigned int\000"
 1333      206C6F6E 
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccxWh4RE.s 			page 35


 1333      6720756E 
 1333      7369676E 
 1333      65642069 
 1334              	.LASF33:
 1335 020d 54696D65 		.ascii	"Timer_1_WriteCounter\000"
 1335      725F315F 
 1335      57726974 
 1335      65436F75 
 1335      6E746572 
 1336              	.LASF32:
 1337 0222 54696D65 		.ascii	"Timer_1_ReadCapture\000"
 1337      725F315F 
 1337      52656164 
 1337      43617074 
 1337      75726500 
 1338              	.LASF39:
 1339 0236 70657269 		.ascii	"period_temp\000"
 1339      6F645F74 
 1339      656D7000 
 1340              	.LASF17:
 1341 0242 73697A65 		.ascii	"sizetype\000"
 1341      74797065 
 1341      00
 1342              	.LASF6:
 1343 024b 6C6F6E67 		.ascii	"long long int\000"
 1343      206C6F6E 
 1343      6720696E 
 1343      7400
 1344              	.LASF27:
 1345 0259 696E7465 		.ascii	"interruptMode\000"
 1345      72727570 
 1345      744D6F64 
 1345      6500
 1346              	.LASF35:
 1347 0267 54696D65 		.ascii	"Timer_1_ReadCounter\000"
 1347      725F315F 
 1347      52656164 
 1347      436F756E 
 1347      74657200 
 1348              	.LASF2:
 1349 027b 73686F72 		.ascii	"short int\000"
 1349      7420696E 
 1349      7400
 1350              	.LASF38:
 1351 0285 433A5C55 		.ascii	"C:\\Users\\Andrew\\Documents\\GitHub\\Hydraulic-Mim"
 1351      73657273 
 1351      5C416E64 
 1351      7265775C 
 1351      446F6375 
 1352 02b3 69632D41 		.ascii	"ic-Arm\\PSOC_arm_project.cydsn\000"
 1352      726D5C50 
 1352      534F435F 
 1352      61726D5F 
 1352      70726F6A 
 1353              	.LASF23:
 1354 02d1 54696D65 		.ascii	"Timer_1_ReadStatusRegister\000"
 1354      725F315F 
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccxWh4RE.s 			page 36


 1354      52656164 
 1354      53746174 
 1354      75735265 
 1355              	.LASF4:
 1356 02ec 6C6F6E67 		.ascii	"long int\000"
 1356      20696E74 
 1356      00
 1357              	.LASF13:
 1358 02f5 63686172 		.ascii	"char\000"
 1358      00
 1359              	.LASF16:
 1360 02fa 6C6F6E67 		.ascii	"long double\000"
 1360      20646F75 
 1360      626C6500 
 1361              	.LASF0:
 1362 0306 7369676E 		.ascii	"signed char\000"
 1362      65642063 
 1362      68617200 
 1363              	.LASF21:
 1364 0312 54696D65 		.ascii	"Timer_1_Stop\000"
 1364      725F315F 
 1364      53746F70 
 1364      00
 1365              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
