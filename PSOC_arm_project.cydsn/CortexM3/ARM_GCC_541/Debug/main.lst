ARM GAS  C:\Users\Andrew\AppData\Local\Temp\cc3FIxQa.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.syntax unified
  20              		.global _printf_float
  21              		.thumb
  22              		.syntax unified
  23              		.global	errorStatus
  24              		.bss
  25              		.type	errorStatus, %object
  26              		.size	errorStatus, 1
  27              	errorStatus:
  28 0000 00       		.space	1
  29              		.section	.text.writePWM,"ax",%progbits
  30              		.align	2
  31              		.global	writePWM
  32              		.thumb
  33              		.thumb_func
  34              		.type	writePWM, %function
  35              	writePWM:
  36              	.LFB64:
  37              		.file 1 "main.c"
   1:main.c        **** 
   2:main.c        **** #include <project.h>
   3:main.c        **** #include <stdio.h>
   4:main.c        **** #include "common.h"
   5:main.c        **** #include <math.h>
   6:main.c        **** #include <stdlib.h>     /* strtod */
   7:main.c        **** 
   8:main.c        **** #define	Frequency 1000000.0			// Frequency of PWMClock
   9:main.c        **** #define	One_ms (Frequency/1000.0)	// 1 ms constant
  10:main.c        **** #define filter_size 7
  11:main.c        **** #define CYL_NO 2                    // Number of connected cylinders
  12:main.c        **** 
  13:main.c        **** /* Add an explicit reference to the floating point printf library to allow
  14:main.c        **** the usage of floating point conversion specifier */
  15:main.c        **** #if defined (__GNUC__)
  16:main.c        ****     asm (".global _printf_float");
  17:main.c        **** #endif
  18:main.c        **** 
  19:main.c        **** uint8 errorStatus = 0u;
  20:main.c        **** 
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\cc3FIxQa.s 			page 2


  21:main.c        **** void writePWM(int cylinder, int pulse){
  38              		.loc 1 21 0
  39              		.cfi_startproc
  40              		@ args = 0, pretend = 0, frame = 8
  41              		@ frame_needed = 1, uses_anonymous_args = 0
  42 0000 80B5     		push	{r7, lr}
  43              		.cfi_def_cfa_offset 8
  44              		.cfi_offset 7, -8
  45              		.cfi_offset 14, -4
  46 0002 82B0     		sub	sp, sp, #8
  47              		.cfi_def_cfa_offset 16
  48 0004 00AF     		add	r7, sp, #0
  49              		.cfi_def_cfa_register 7
  50 0006 7860     		str	r0, [r7, #4]
  51 0008 3960     		str	r1, [r7]
  22:main.c        ****     switch(cylinder){
  52              		.loc 1 22 0
  53 000a 7B68     		ldr	r3, [r7, #4]
  54 000c 032B     		cmp	r3, #3
  55 000e 2FD8     		bhi	.L8
  56 0010 01A2     		adr	r2, .L4
  57 0012 52F823F0 		ldr	pc, [r2, r3, lsl #2]
  58 0016 00BF     		.p2align 2
  59              	.L4:
  60 0018 29000000 		.word	.L3+1
  61 001c 3B000000 		.word	.L5+1
  62 0020 4D000000 		.word	.L6+1
  63 0024 5F000000 		.word	.L7+1
  64              		.p2align 1
  65              	.L3:
  23:main.c        ****                 case 0:
  24:main.c        ****                     PWM_0_WriteCompare(pulse + 1500);
  66              		.loc 1 24 0
  67 0028 3B68     		ldr	r3, [r7]
  68 002a 9BB2     		uxth	r3, r3
  69 002c 03F2DC53 		addw	r3, r3, #1500
  70 0030 9BB2     		uxth	r3, r3
  71 0032 1846     		mov	r0, r3
  72 0034 FFF7FEFF 		bl	PWM_0_WriteCompare
  25:main.c        ****                     break;
  73              		.loc 1 25 0
  74 0038 1AE0     		b	.L2
  75              	.L5:
  26:main.c        ****                 case 1:
  27:main.c        ****                     PWM_1_WriteCompare(pulse + 1500);
  76              		.loc 1 27 0
  77 003a 3B68     		ldr	r3, [r7]
  78 003c 9BB2     		uxth	r3, r3
  79 003e 03F2DC53 		addw	r3, r3, #1500
  80 0042 9BB2     		uxth	r3, r3
  81 0044 1846     		mov	r0, r3
  82 0046 FFF7FEFF 		bl	PWM_1_WriteCompare
  28:main.c        ****                     break;
  83              		.loc 1 28 0
  84 004a 11E0     		b	.L2
  85              	.L6:
  29:main.c        ****                 case 2:
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\cc3FIxQa.s 			page 3


  30:main.c        ****                     PWM_2_WriteCompare(pulse + 1500);
  86              		.loc 1 30 0
  87 004c 3B68     		ldr	r3, [r7]
  88 004e 9BB2     		uxth	r3, r3
  89 0050 03F2DC53 		addw	r3, r3, #1500
  90 0054 9BB2     		uxth	r3, r3
  91 0056 1846     		mov	r0, r3
  92 0058 FFF7FEFF 		bl	PWM_2_WriteCompare
  31:main.c        ****                     break;
  93              		.loc 1 31 0
  94 005c 08E0     		b	.L2
  95              	.L7:
  32:main.c        ****                 case 3:
  33:main.c        ****                     PWM_3_WriteCompare(pulse + 1500);
  96              		.loc 1 33 0
  97 005e 3B68     		ldr	r3, [r7]
  98 0060 9BB2     		uxth	r3, r3
  99 0062 03F2DC53 		addw	r3, r3, #1500
 100 0066 9BB2     		uxth	r3, r3
 101 0068 1846     		mov	r0, r3
 102 006a FFF7FEFF 		bl	PWM_3_WriteCompare
  34:main.c        ****                     break;
 103              		.loc 1 34 0
 104 006e 00BF     		nop
 105              	.L2:
 106              	.L8:
  35:main.c        ****             }  
  36:main.c        **** }
 107              		.loc 1 36 0
 108 0070 00BF     		nop
 109 0072 0837     		adds	r7, r7, #8
 110              		.cfi_def_cfa_offset 8
 111 0074 BD46     		mov	sp, r7
 112              		.cfi_def_cfa_register 13
 113              		@ sp needed
 114 0076 80BD     		pop	{r7, pc}
 115              		.cfi_endproc
 116              	.LFE64:
 117              		.size	writePWM, .-writePWM
 118              		.section	.text.pulseCheck,"ax",%progbits
 119              		.align	2
 120              		.global	pulseCheck
 121              		.thumb
 122              		.thumb_func
 123              		.type	pulseCheck, %function
 124              	pulseCheck:
 125              	.LFB65:
  37:main.c        **** 
  38:main.c        **** int pulseCheck(int pulse, int offset_upper, int offset_lower) {
 126              		.loc 1 38 0
 127              		.cfi_startproc
 128              		@ args = 0, pretend = 0, frame = 16
 129              		@ frame_needed = 1, uses_anonymous_args = 0
 130              		@ link register save eliminated.
 131 0000 80B4     		push	{r7}
 132              		.cfi_def_cfa_offset 4
 133              		.cfi_offset 7, -4
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\cc3FIxQa.s 			page 4


 134 0002 85B0     		sub	sp, sp, #20
 135              		.cfi_def_cfa_offset 24
 136 0004 00AF     		add	r7, sp, #0
 137              		.cfi_def_cfa_register 7
 138 0006 F860     		str	r0, [r7, #12]
 139 0008 B960     		str	r1, [r7, #8]
 140 000a 7A60     		str	r2, [r7, #4]
  39:main.c        ****     if(pulse<0){pulse = pulse - offset_lower;}
 141              		.loc 1 39 0
 142 000c FB68     		ldr	r3, [r7, #12]
 143 000e 002B     		cmp	r3, #0
 144 0010 03DA     		bge	.L10
 145              		.loc 1 39 0 is_stmt 0 discriminator 1
 146 0012 FA68     		ldr	r2, [r7, #12]
 147 0014 7B68     		ldr	r3, [r7, #4]
 148 0016 D31A     		subs	r3, r2, r3
 149 0018 FB60     		str	r3, [r7, #12]
 150              	.L10:
  40:main.c        ****         if(pulse>0){pulse = pulse + offset_upper;}
 151              		.loc 1 40 0 is_stmt 1
 152 001a FB68     		ldr	r3, [r7, #12]
 153 001c 002B     		cmp	r3, #0
 154 001e 03DD     		ble	.L11
 155              		.loc 1 40 0 is_stmt 0 discriminator 1
 156 0020 FA68     		ldr	r2, [r7, #12]
 157 0022 BB68     		ldr	r3, [r7, #8]
 158 0024 1344     		add	r3, r3, r2
 159 0026 FB60     		str	r3, [r7, #12]
 160              	.L11:
  41:main.c        ****         if(pulse<-500){pulse=-500;}
 161              		.loc 1 41 0 is_stmt 1
 162 0028 FB68     		ldr	r3, [r7, #12]
 163 002a 13F5FA7F 		cmn	r3, #500
 164 002e 01DA     		bge	.L12
 165              		.loc 1 41 0 is_stmt 0 discriminator 1
 166 0030 074B     		ldr	r3, .L15
 167 0032 FB60     		str	r3, [r7, #12]
 168              	.L12:
  42:main.c        ****         if(pulse>500){pulse=500;}
 169              		.loc 1 42 0 is_stmt 1
 170 0034 FB68     		ldr	r3, [r7, #12]
 171 0036 B3F5FA7F 		cmp	r3, #500
 172 003a 02DD     		ble	.L13
 173              		.loc 1 42 0 is_stmt 0 discriminator 1
 174 003c 4FF4FA73 		mov	r3, #500
 175 0040 FB60     		str	r3, [r7, #12]
 176              	.L13:
  43:main.c        ****     return pulse;
 177              		.loc 1 43 0 is_stmt 1
 178 0042 FB68     		ldr	r3, [r7, #12]
  44:main.c        **** }
 179              		.loc 1 44 0
 180 0044 1846     		mov	r0, r3
 181 0046 1437     		adds	r7, r7, #20
 182              		.cfi_def_cfa_offset 4
 183 0048 BD46     		mov	sp, r7
 184              		.cfi_def_cfa_register 13
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\cc3FIxQa.s 			page 5


 185              		@ sp needed
 186 004a 80BC     		pop	{r7}
 187              		.cfi_restore 7
 188              		.cfi_def_cfa_offset 0
 189 004c 7047     		bx	lr
 190              	.L16:
 191 004e 00BF     		.align	2
 192              	.L15:
 193 0050 0CFEFFFF 		.word	-500
 194              		.cfi_endproc
 195              	.LFE65:
 196              		.size	pulseCheck, .-pulseCheck
 197              		.global	data_read_mode
 198              		.bss
 199 0001 000000   		.align	2
 200              		.type	data_read_mode, %object
 201              		.size	data_read_mode, 4
 202              	data_read_mode:
 203 0004 00000000 		.space	4
 204              		.global	new_pos_set
 205              		.align	2
 206              		.type	new_pos_set, %object
 207              		.size	new_pos_set, 8
 208              	new_pos_set:
 209 0008 00000000 		.space	8
 209      00000000 
 210              		.comm	new_pos,8,4
 211              		.global	pos
 212              		.data
 213              		.align	2
 214              		.type	pos, %object
 215              		.size	pos, 8
 216              	pos:
 217 0000 D0070000 		.word	2000
 218 0004 D0070000 		.word	2000
 219              		.global	pulse
 220              		.bss
 221              		.align	2
 222              		.type	pulse, %object
 223              		.size	pulse, 8
 224              	pulse:
 225 0010 00000000 		.space	8
 225      00000000 
 226              		.global	pulse_temp
 227              		.align	2
 228              		.type	pulse_temp, %object
 229              		.size	pulse_temp, 8
 230              	pulse_temp:
 231 0018 00000000 		.space	8
 231      00000000 
 232              		.comm	err,16,8
 233              		.comm	adcValue,4,4
 234              		.global	der
 235              		.align	3
 236              		.type	der, %object
 237              		.size	der, 16
 238              	der:
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\cc3FIxQa.s 			page 6


 239 0020 00000000 		.space	16
 239      00000000 
 239      00000000 
 239      00000000 
 240              		.global	prev_err
 241              		.align	3
 242              		.type	prev_err, %object
 243              		.size	prev_err, 16
 244              	prev_err:
 245 0030 00000000 		.space	16
 245      00000000 
 245      00000000 
 245      00000000 
 246              		.global	pid_integral
 247              		.align	3
 248              		.type	pid_integral, %object
 249              		.size	pid_integral, 16
 250              	pid_integral:
 251 0040 00000000 		.space	16
 251      00000000 
 251      00000000 
 251      00000000 
 252              		.global	cyl_set
 253              		.align	2
 254              		.type	cyl_set, %object
 255              		.size	cyl_set, 4
 256              	cyl_set:
 257 0050 00000000 		.space	4
 258              		.comm	cyl_tmp,1,4
 259              		.global	offsets
 260              		.data
 261              		.align	2
 262              		.type	offsets, %object
 263              		.size	offsets, 32
 264              	offsets:
 265 0008 85000000 		.word	133
 266 000c 86000000 		.word	134
 267 0010 85000000 		.word	133
 268 0014 86000000 		.word	134
 269 0018 00000000 		.word	0
 270 001c 00000000 		.word	0
 271 0020 00000000 		.word	0
 272 0024 00000000 		.word	0
 273              		.comm	sendValue,100,4
 274              		.comm	temp,20,4
 275              		.global	nn
 276              		.bss
 277              		.align	2
 278              		.type	nn, %object
 279              		.size	nn, 4
 280              	nn:
 281 0054 00000000 		.space	4
 282              		.global	pid
 283              		.data
 284              		.align	3
 285              		.type	pid, %object
 286              		.size	pid, 24
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\cc3FIxQa.s 			page 7


 287              	pid:
 288 0028 66666666 		.word	1717986918
 289 002c 6666E63F 		.word	1072064102
 290 0030 FCA9F1D2 		.word	-755914244
 291 0034 4D62503F 		.word	1062232653
 292 0038 7B14AE47 		.word	1202590843
 293 003c E17AA43F 		.word	1067743969
 294              		.comm	help,100,4
 295              		.global	tt
 296              		.bss
 297              		.align	2
 298              		.type	tt, %object
 299              		.size	tt, 4
 300              	tt:
 301 0058 00000000 		.space	4
 302              		.global	start_calib
 303              		.align	2
 304              		.type	start_calib, %object
 305              		.size	start_calib, 4
 306              	start_calib:
 307 005c 00000000 		.space	4
 308              		.global	cyl_no
 309              		.align	2
 310              		.type	cyl_no, %object
 311              		.size	cyl_no, 4
 312              	cyl_no:
 313 0060 00000000 		.space	4
 314              		.global	moving_median
 315              		.align	2
 316              		.type	moving_median, %object
 317              		.size	moving_median, 28
 318              	moving_median:
 319 0064 00000000 		.space	28
 319      00000000 
 319      00000000 
 319      00000000 
 319      00000000 
 320              		.comm	tempArray,14,4
 321              		.comm	tmp,2,2
 322              		.section	.text.adc_update,"ax",%progbits
 323              		.align	2
 324              		.global	adc_update
 325              		.thumb
 326              		.thumb_func
 327              		.type	adc_update, %function
 328              	adc_update:
 329              	.LFB66:
  45:main.c        **** 
  46:main.c        **** 
  47:main.c        **** int data_read_mode = 0;
  48:main.c        **** 
  49:main.c        **** volatile int new_pos_set[CYL_NO] = {0};
  50:main.c        **** int new_pos[CYL_NO];
  51:main.c        **** int pos[CYL_NO]={2000,2000};
  52:main.c        **** int pulse[CYL_NO] = {0};
  53:main.c        **** int pulse_temp[CYL_NO] = {0};
  54:main.c        **** double err[CYL_NO];
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\cc3FIxQa.s 			page 8


  55:main.c        **** uint16 adcValue[CYL_NO];
  56:main.c        **** double der[CYL_NO] = {0};
  57:main.c        **** double prev_err[CYL_NO] = {0};
  58:main.c        **** double pid_integral[CYL_NO] = {0};
  59:main.c        **** int cyl_set = 0;
  60:main.c        **** char cyl_tmp[1];
  61:main.c        **** 
  62:main.c        **** int offsets[4][2] = {{133,134},{133,134},{0,0},{0,0}}; //{lower,upper} - both positive
  63:main.c        **** 
  64:main.c        **** char sendValue[100];
  65:main.c        **** char temp[20];
  66:main.c        **** int nn=0;
  67:main.c        **** double pid[3] = {0.7,0.001,0.04};
  68:main.c        **** //double pid[3] = { -2.22,-0.0307,0.0 };
  69:main.c        **** char help[100];
  70:main.c        **** int tt = 0;
  71:main.c        **** 
  72:main.c        **** int start_calib = 0;
  73:main.c        **** int cyl_no = 0;
  74:main.c        **** 
  75:main.c        **** uint16 moving_median[CYL_NO][filter_size] = {0};
  76:main.c        **** uint16 tempArray[filter_size];
  77:main.c        **** uint16 tmp;
  78:main.c        **** 
  79:main.c        **** CY_ISR(adc_update){
 330              		.loc 1 79 0
 331              		.cfi_startproc
 332              		@ args = 0, pretend = 0, frame = 24
 333              		@ frame_needed = 1, uses_anonymous_args = 0
 334 0000 80B5     		push	{r7, lr}
 335              		.cfi_def_cfa_offset 8
 336              		.cfi_offset 7, -8
 337              		.cfi_offset 14, -4
 338 0002 86B0     		sub	sp, sp, #24
 339              		.cfi_def_cfa_offset 32
 340 0004 00AF     		add	r7, sp, #0
 341              		.cfi_def_cfa_register 7
 342              	.LBB2:
  80:main.c        ****     for(int c = 0;c<CYL_NO;c++){
 343              		.loc 1 80 0
 344 0006 0023     		movs	r3, #0
 345 0008 7B61     		str	r3, [r7, #20]
 346 000a 8FE0     		b	.L18
 347              	.L28:
  81:main.c        ****         AMux_0_FastSelect(c);
 348              		.loc 1 81 0
 349 000c 7B69     		ldr	r3, [r7, #20]
 350 000e DBB2     		uxtb	r3, r3
 351 0010 1846     		mov	r0, r3
 352 0012 FFF7FEFF 		bl	AMux_0_FastSelect
 353              	.LBB3:
  82:main.c        ****         
  83:main.c        ****         for(int j=0;j<filter_size-1;j++){
 354              		.loc 1 83 0
 355 0016 0023     		movs	r3, #0
 356 0018 3B61     		str	r3, [r7, #16]
 357 001a 16E0     		b	.L19
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\cc3FIxQa.s 			page 9


 358              	.L20:
  84:main.c        ****                 moving_median[c][j] = moving_median[c][j+1]; 
 359              		.loc 1 84 0 discriminator 3
 360 001c 3B69     		ldr	r3, [r7, #16]
 361 001e 591C     		adds	r1, r3, #1
 362 0020 4748     		ldr	r0, .L29
 363 0022 7A69     		ldr	r2, [r7, #20]
 364 0024 1346     		mov	r3, r2
 365 0026 DB00     		lsls	r3, r3, #3
 366 0028 9B1A     		subs	r3, r3, r2
 367 002a 0B44     		add	r3, r3, r1
 368 002c 30F81300 		ldrh	r0, [r0, r3, lsl #1]
 369 0030 4349     		ldr	r1, .L29
 370 0032 7A69     		ldr	r2, [r7, #20]
 371 0034 1346     		mov	r3, r2
 372 0036 DB00     		lsls	r3, r3, #3
 373 0038 9B1A     		subs	r3, r3, r2
 374 003a 3A69     		ldr	r2, [r7, #16]
 375 003c 1344     		add	r3, r3, r2
 376 003e 0246     		mov	r2, r0	@ movhi
 377 0040 21F81320 		strh	r2, [r1, r3, lsl #1]	@ movhi
  83:main.c        ****                 moving_median[c][j] = moving_median[c][j+1]; 
 378              		.loc 1 83 0 discriminator 3
 379 0044 3B69     		ldr	r3, [r7, #16]
 380 0046 0133     		adds	r3, r3, #1
 381 0048 3B61     		str	r3, [r7, #16]
 382              	.L19:
  83:main.c        ****                 moving_median[c][j] = moving_median[c][j+1]; 
 383              		.loc 1 83 0 is_stmt 0 discriminator 1
 384 004a 3B69     		ldr	r3, [r7, #16]
 385 004c 052B     		cmp	r3, #5
 386 004e E5DD     		ble	.L20
 387              	.LBE3:
  85:main.c        ****         }
  86:main.c        ****         
  87:main.c        ****         moving_median[c][filter_size-1] = ADC_0_GetResult16();
 388              		.loc 1 87 0 is_stmt 1
 389 0050 FFF7FEFF 		bl	ADC_0_GetResult16
 390 0054 0346     		mov	r3, r0
 391 0056 98B2     		uxth	r0, r3
 392 0058 3949     		ldr	r1, .L29
 393 005a 7A69     		ldr	r2, [r7, #20]
 394 005c 1346     		mov	r3, r2
 395 005e DB00     		lsls	r3, r3, #3
 396 0060 9B1A     		subs	r3, r3, r2
 397 0062 5B00     		lsls	r3, r3, #1
 398 0064 0B44     		add	r3, r3, r1
 399 0066 0C33     		adds	r3, r3, #12
 400 0068 0246     		mov	r2, r0	@ movhi
 401 006a 1A80     		strh	r2, [r3]	@ movhi
  88:main.c        ****         ADC_0_IsEndConversion(ADC_0_WAIT_FOR_RESULT);
 402              		.loc 1 88 0
 403 006c 0020     		movs	r0, #0
 404 006e FFF7FEFF 		bl	ADC_0_IsEndConversion
  89:main.c        ****         moving_median[c][filter_size-1] = ADC_0_GetResult16();
 405              		.loc 1 89 0
 406 0072 FFF7FEFF 		bl	ADC_0_GetResult16
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\cc3FIxQa.s 			page 10


 407 0076 0346     		mov	r3, r0
 408 0078 98B2     		uxth	r0, r3
 409 007a 3149     		ldr	r1, .L29
 410 007c 7A69     		ldr	r2, [r7, #20]
 411 007e 1346     		mov	r3, r2
 412 0080 DB00     		lsls	r3, r3, #3
 413 0082 9B1A     		subs	r3, r3, r2
 414 0084 5B00     		lsls	r3, r3, #1
 415 0086 0B44     		add	r3, r3, r1
 416 0088 0C33     		adds	r3, r3, #12
 417 008a 0246     		mov	r2, r0	@ movhi
 418 008c 1A80     		strh	r2, [r3]	@ movhi
 419              	.LBB4:
  90:main.c        ****         
  91:main.c        ****         for(int j=0;j<filter_size;j++){
 420              		.loc 1 91 0
 421 008e 0023     		movs	r3, #0
 422 0090 FB60     		str	r3, [r7, #12]
 423 0092 0FE0     		b	.L21
 424              	.L22:
  92:main.c        ****                 tempArray[j] = moving_median[c][j]; 
 425              		.loc 1 92 0 discriminator 3
 426 0094 2A49     		ldr	r1, .L29
 427 0096 7A69     		ldr	r2, [r7, #20]
 428 0098 1346     		mov	r3, r2
 429 009a DB00     		lsls	r3, r3, #3
 430 009c 9B1A     		subs	r3, r3, r2
 431 009e FA68     		ldr	r2, [r7, #12]
 432 00a0 1344     		add	r3, r3, r2
 433 00a2 31F81310 		ldrh	r1, [r1, r3, lsl #1]
 434 00a6 274A     		ldr	r2, .L29+4
 435 00a8 FB68     		ldr	r3, [r7, #12]
 436 00aa 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
  91:main.c        ****                 tempArray[j] = moving_median[c][j]; 
 437              		.loc 1 91 0 discriminator 3
 438 00ae FB68     		ldr	r3, [r7, #12]
 439 00b0 0133     		adds	r3, r3, #1
 440 00b2 FB60     		str	r3, [r7, #12]
 441              	.L21:
  91:main.c        ****                 tempArray[j] = moving_median[c][j]; 
 442              		.loc 1 91 0 is_stmt 0 discriminator 1
 443 00b4 FB68     		ldr	r3, [r7, #12]
 444 00b6 062B     		cmp	r3, #6
 445 00b8 ECDD     		ble	.L22
 446              	.LBE4:
 447              	.LBB5:
  93:main.c        ****         }
  94:main.c        ****         for(int i = 0; i < filter_size; i++){                     //Loop for ascending ordering
 448              		.loc 1 94 0 is_stmt 1
 449 00ba 0023     		movs	r3, #0
 450 00bc BB60     		str	r3, [r7, #8]
 451 00be 29E0     		b	.L23
 452              	.L27:
 453              	.LBB6:
  95:main.c        ****         	for (int j = 0; j < filter_size; j++)             //Loop for comparing other values
 454              		.loc 1 95 0
 455 00c0 0023     		movs	r3, #0
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\cc3FIxQa.s 			page 11


 456 00c2 7B60     		str	r3, [r7, #4]
 457 00c4 20E0     		b	.L24
 458              	.L26:
  96:main.c        ****         	{
  97:main.c        ****         		if (tempArray[j] > tempArray[i])                //Comparing other array elements
 459              		.loc 1 97 0
 460 00c6 1F4A     		ldr	r2, .L29+4
 461 00c8 7B68     		ldr	r3, [r7, #4]
 462 00ca 32F81320 		ldrh	r2, [r2, r3, lsl #1]
 463 00ce 1D49     		ldr	r1, .L29+4
 464 00d0 BB68     		ldr	r3, [r7, #8]
 465 00d2 31F81330 		ldrh	r3, [r1, r3, lsl #1]
 466 00d6 9A42     		cmp	r2, r3
 467 00d8 13D9     		bls	.L25
  98:main.c        ****         		{
  99:main.c        ****         			tmp = tempArray[i];         //Using temporary variable for storing last value
 468              		.loc 1 99 0
 469 00da 1A4A     		ldr	r2, .L29+4
 470 00dc BB68     		ldr	r3, [r7, #8]
 471 00de 32F81320 		ldrh	r2, [r2, r3, lsl #1]
 472 00e2 194B     		ldr	r3, .L29+8
 473 00e4 1A80     		strh	r2, [r3]	@ movhi
 100:main.c        ****         			tempArray[i] = tempArray[j];            //replacing value
 474              		.loc 1 100 0
 475 00e6 174A     		ldr	r2, .L29+4
 476 00e8 7B68     		ldr	r3, [r7, #4]
 477 00ea 32F81310 		ldrh	r1, [r2, r3, lsl #1]
 478 00ee 154A     		ldr	r2, .L29+4
 479 00f0 BB68     		ldr	r3, [r7, #8]
 480 00f2 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
 101:main.c        ****         			tempArray[j] = tmp;             //storing last value
 481              		.loc 1 101 0
 482 00f6 144B     		ldr	r3, .L29+8
 483 00f8 1988     		ldrh	r1, [r3]
 484 00fa 124A     		ldr	r2, .L29+4
 485 00fc 7B68     		ldr	r3, [r7, #4]
 486 00fe 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
 487              	.L25:
  95:main.c        ****         	{
 488              		.loc 1 95 0 discriminator 2
 489 0102 7B68     		ldr	r3, [r7, #4]
 490 0104 0133     		adds	r3, r3, #1
 491 0106 7B60     		str	r3, [r7, #4]
 492              	.L24:
  95:main.c        ****         	{
 493              		.loc 1 95 0 is_stmt 0 discriminator 1
 494 0108 7B68     		ldr	r3, [r7, #4]
 495 010a 062B     		cmp	r3, #6
 496 010c DBDD     		ble	.L26
 497              	.LBE6:
  94:main.c        ****         	for (int j = 0; j < filter_size; j++)             //Loop for comparing other values
 498              		.loc 1 94 0 is_stmt 1 discriminator 2
 499 010e BB68     		ldr	r3, [r7, #8]
 500 0110 0133     		adds	r3, r3, #1
 501 0112 BB60     		str	r3, [r7, #8]
 502              	.L23:
  94:main.c        ****         	for (int j = 0; j < filter_size; j++)             //Loop for comparing other values
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\cc3FIxQa.s 			page 12


 503              		.loc 1 94 0 is_stmt 0 discriminator 1
 504 0114 BB68     		ldr	r3, [r7, #8]
 505 0116 062B     		cmp	r3, #6
 506 0118 D2DD     		ble	.L27
 507              	.LBE5:
 102:main.c        ****         		}  
 103:main.c        ****         	}
 104:main.c        ****         }
 105:main.c        ****         adcValue[c] = tempArray[(filter_size-1)/2];
 508              		.loc 1 105 0 is_stmt 1 discriminator 2
 509 011a 0A4B     		ldr	r3, .L29+4
 510 011c D988     		ldrh	r1, [r3, #6]
 511 011e 0B4A     		ldr	r2, .L29+12
 512 0120 7B69     		ldr	r3, [r7, #20]
 513 0122 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
  80:main.c        ****         AMux_0_FastSelect(c);
 514              		.loc 1 80 0 discriminator 2
 515 0126 7B69     		ldr	r3, [r7, #20]
 516 0128 0133     		adds	r3, r3, #1
 517 012a 7B61     		str	r3, [r7, #20]
 518              	.L18:
  80:main.c        ****         AMux_0_FastSelect(c);
 519              		.loc 1 80 0 is_stmt 0 discriminator 1
 520 012c 7B69     		ldr	r3, [r7, #20]
 521 012e 012B     		cmp	r3, #1
 522 0130 7FF76CAF 		ble	.L28
 523              	.LBE2:
 106:main.c        ****     }
 107:main.c        ****     update_median_isr_ClearPending();
 524              		.loc 1 107 0 is_stmt 1
 525 0134 FFF7FEFF 		bl	update_median_isr_ClearPending
 108:main.c        ****     
 109:main.c        **** }
 526              		.loc 1 109 0
 527 0138 00BF     		nop
 528 013a 1837     		adds	r7, r7, #24
 529              		.cfi_def_cfa_offset 8
 530 013c BD46     		mov	sp, r7
 531              		.cfi_def_cfa_register 13
 532              		@ sp needed
 533 013e 80BD     		pop	{r7, pc}
 534              	.L30:
 535              		.align	2
 536              	.L29:
 537 0140 00000000 		.word	moving_median
 538 0144 00000000 		.word	tempArray
 539 0148 00000000 		.word	tmp
 540 014c 00000000 		.word	adcValue
 541              		.cfi_endproc
 542              	.LFE66:
 543              		.size	adc_update, .-adc_update
 544              		.section	.text.RxIsr,"ax",%progbits
 545              		.align	2
 546              		.global	RxIsr
 547              		.thumb
 548              		.thumb_func
 549              		.type	RxIsr, %function
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\cc3FIxQa.s 			page 13


 550              	RxIsr:
 551              	.LFB67:
 110:main.c        **** 
 111:main.c        **** 
 112:main.c        **** CY_ISR(RxIsr)
 113:main.c        **** {
 552              		.loc 1 113 0
 553              		.cfi_startproc
 554              		@ args = 0, pretend = 0, frame = 8
 555              		@ frame_needed = 1, uses_anonymous_args = 0
 556 0000 90B5     		push	{r4, r7, lr}
 557              		.cfi_def_cfa_offset 12
 558              		.cfi_offset 4, -12
 559              		.cfi_offset 7, -8
 560              		.cfi_offset 14, -4
 561 0002 83B0     		sub	sp, sp, #12
 562              		.cfi_def_cfa_offset 24
 563 0004 00AF     		add	r7, sp, #0
 564              		.cfi_def_cfa_register 7
 565              	.L63:
 114:main.c        ****     uint8 rxStatus;         
 115:main.c        ****     uint8 rxData;           
 116:main.c        ****     
 117:main.c        ****     do
 118:main.c        ****     {
 119:main.c        ****         /* Read receiver status register */
 120:main.c        ****         rxStatus = UART_RXSTATUS_REG;
 566              		.loc 1 120 0
 567 0006 A34B     		ldr	r3, .L66
 568 0008 1B78     		ldrb	r3, [r3]
 569 000a FB70     		strb	r3, [r7, #3]
 121:main.c        **** 
 122:main.c        ****         if((rxStatus & (UART_RX_STS_BREAK      | UART_RX_STS_PAR_ERROR |
 123:main.c        ****                         UART_RX_STS_STOP_ERROR | UART_RX_STS_OVERRUN)) != 0u)
 570              		.loc 1 123 0
 571 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 572 000e 03F01E03 		and	r3, r3, #30
 122:main.c        ****                         UART_RX_STS_STOP_ERROR | UART_RX_STS_OVERRUN)) != 0u)
 573              		.loc 1 122 0
 574 0012 002B     		cmp	r3, #0
 575 0014 0CD0     		beq	.L32
 124:main.c        ****         {
 125:main.c        ****             /* ERROR handling. */
 126:main.c        ****             errorStatus |= rxStatus & ( UART_RX_STS_BREAK      | UART_RX_STS_PAR_ERROR | 
 576              		.loc 1 126 0
 577 0016 97F90330 		ldrsb	r3, [r7, #3]
 578 001a 03F01E03 		and	r3, r3, #30
 579 001e 5AB2     		sxtb	r2, r3
 580 0020 9D4B     		ldr	r3, .L66+4
 581 0022 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 582 0024 5BB2     		sxtb	r3, r3
 583 0026 1343     		orrs	r3, r3, r2
 584 0028 5BB2     		sxtb	r3, r3
 585 002a DAB2     		uxtb	r2, r3
 586 002c 9A4B     		ldr	r3, .L66+4
 587 002e 1A70     		strb	r2, [r3]
 588              	.L32:
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\cc3FIxQa.s 			page 14


 127:main.c        ****                                         UART_RX_STS_STOP_ERROR | UART_RX_STS_OVERRUN);
 128:main.c        ****         }
 129:main.c        ****         
 130:main.c        ****         if((rxStatus & UART_RX_STS_FIFO_NOTEMPTY) != 0u)
 589              		.loc 1 130 0
 590 0030 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 591 0032 03F02003 		and	r3, r3, #32
 592 0036 002B     		cmp	r3, #0
 593 0038 00F02281 		beq	.L33
 131:main.c        ****         {
 132:main.c        ****             /* Read data from the RX data register */
 133:main.c        ****             rxData = UART_RXDATA_REG;
 594              		.loc 1 133 0
 595 003c 974B     		ldr	r3, .L66+8
 596 003e 1B78     		ldrb	r3, [r3]
 597 0040 BB70     		strb	r3, [r7, #2]
 134:main.c        ****             help[tt] = rxData;
 598              		.loc 1 134 0
 599 0042 974B     		ldr	r3, .L66+12
 600 0044 1B68     		ldr	r3, [r3]
 601 0046 9749     		ldr	r1, .L66+16
 602 0048 BA78     		ldrb	r2, [r7, #2]
 603 004a CA54     		strb	r2, [r1, r3]
 135:main.c        ****             tt++;
 604              		.loc 1 135 0
 605 004c 944B     		ldr	r3, .L66+12
 606 004e 1B68     		ldr	r3, [r3]
 607 0050 0133     		adds	r3, r3, #1
 608 0052 934A     		ldr	r2, .L66+12
 609 0054 1360     		str	r3, [r2]
 136:main.c        ****             if(tt==99){tt=0;}
 610              		.loc 1 136 0
 611 0056 924B     		ldr	r3, .L66+12
 612 0058 1B68     		ldr	r3, [r3]
 613 005a 632B     		cmp	r3, #99
 614 005c 02D1     		bne	.L34
 615              		.loc 1 136 0 is_stmt 0 discriminator 1
 616 005e 904B     		ldr	r3, .L66+12
 617 0060 0022     		movs	r2, #0
 618 0062 1A60     		str	r2, [r3]
 619              	.L34:
 137:main.c        ****             if(rxData=='b' ){start_calib=1;};
 620              		.loc 1 137 0 is_stmt 1
 621 0064 BB78     		ldrb	r3, [r7, #2]	@ zero_extendqisi2
 622 0066 622B     		cmp	r3, #98
 623 0068 02D1     		bne	.L35
 624              		.loc 1 137 0 is_stmt 0 discriminator 1
 625 006a 8F4B     		ldr	r3, .L66+20
 626 006c 0122     		movs	r2, #1
 627 006e 1A60     		str	r2, [r3]
 628              	.L35:
 138:main.c        ****             switch(data_read_mode)
 629              		.loc 1 138 0 is_stmt 1
 630 0070 8E4B     		ldr	r3, .L66+24
 631 0072 1B68     		ldr	r3, [r3]
 632 0074 062B     		cmp	r3, #6
 633 0076 00F20381 		bhi	.L33
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\cc3FIxQa.s 			page 15


 634 007a 01A2     		adr	r2, .L38
 635 007c 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 636              		.p2align 2
 637              	.L38:
 638 0080 9D000000 		.word	.L37+1
 639 0084 D3000000 		.word	.L39+1
 640 0088 1B010000 		.word	.L40+1
 641 008c 73010000 		.word	.L41+1
 642 0090 B5010000 		.word	.L42+1
 643 0094 F7010000 		.word	.L43+1
 644 0098 39020000 		.word	.L44+1
 645              		.p2align 1
 646              	.L37:
 139:main.c        ****             {
 140:main.c        ****                 case 0:
 141:main.c        ****                     if(rxData=='{' )
 647              		.loc 1 141 0
 648 009c BB78     		ldrb	r3, [r7, #2]	@ zero_extendqisi2
 649 009e 7B2B     		cmp	r3, #123
 650 00a0 40F0EB80 		bne	.L64
 651              	.LBB7:
 142:main.c        ****                     {
 143:main.c        ****                         for(int pp=1;pp<20;pp++){
 652              		.loc 1 143 0
 653 00a4 0123     		movs	r3, #1
 654 00a6 7B60     		str	r3, [r7, #4]
 655 00a8 07E0     		b	.L46
 656              	.L47:
 144:main.c        ****                             temp[pp] = ' ';
 657              		.loc 1 144 0 discriminator 3
 658 00aa 814A     		ldr	r2, .L66+28
 659 00ac 7B68     		ldr	r3, [r7, #4]
 660 00ae 1344     		add	r3, r3, r2
 661 00b0 2022     		movs	r2, #32
 662 00b2 1A70     		strb	r2, [r3]
 143:main.c        ****                             temp[pp] = ' ';
 663              		.loc 1 143 0 discriminator 3
 664 00b4 7B68     		ldr	r3, [r7, #4]
 665 00b6 0133     		adds	r3, r3, #1
 666 00b8 7B60     		str	r3, [r7, #4]
 667              	.L46:
 143:main.c        ****                             temp[pp] = ' ';
 668              		.loc 1 143 0 is_stmt 0 discriminator 1
 669 00ba 7B68     		ldr	r3, [r7, #4]
 670 00bc 132B     		cmp	r3, #19
 671 00be F4DD     		ble	.L47
 672              	.LBE7:
 145:main.c        ****                         }
 146:main.c        ****                         temp[0] = '\0';
 673              		.loc 1 146 0 is_stmt 1
 674 00c0 7B4B     		ldr	r3, .L66+28
 675 00c2 0022     		movs	r2, #0
 676 00c4 1A70     		strb	r2, [r3]
 147:main.c        ****                         data_read_mode++;
 677              		.loc 1 147 0
 678 00c6 794B     		ldr	r3, .L66+24
 679 00c8 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\cc3FIxQa.s 			page 16


 680 00ca 0133     		adds	r3, r3, #1
 681 00cc 774A     		ldr	r2, .L66+24
 682 00ce 1360     		str	r3, [r2]
 148:main.c        ****                     }
 149:main.c        ****                 break;
 683              		.loc 1 149 0
 684 00d0 D3E0     		b	.L64
 685              	.L39:
 150:main.c        ****                 case 1:
 151:main.c        ****                     if(rxData=='x'){
 686              		.loc 1 151 0
 687 00d2 BB78     		ldrb	r3, [r7, #2]	@ zero_extendqisi2
 688 00d4 782B     		cmp	r3, #120
 689 00d6 03D1     		bne	.L48
 152:main.c        ****                         data_read_mode = 2;}
 690              		.loc 1 152 0
 691 00d8 744B     		ldr	r3, .L66+24
 692 00da 0222     		movs	r2, #2
 693 00dc 1A60     		str	r2, [r3]
 153:main.c        ****                     else if(rxData=='p'){
 154:main.c        ****                         data_read_mode = 3;}
 155:main.c        ****                     else if(rxData=='i'){
 156:main.c        ****                         data_read_mode = 4;}
 157:main.c        ****                     else if(rxData=='d'){
 158:main.c        ****                         data_read_mode = 5;}
 159:main.c        ****                     else if(rxData=='c'){
 160:main.c        ****                         data_read_mode = 6;}
 161:main.c        ****                 break;
 694              		.loc 1 161 0
 695 00de CEE0     		b	.L65
 696              	.L48:
 153:main.c        ****                     else if(rxData=='p'){
 697              		.loc 1 153 0
 698 00e0 BB78     		ldrb	r3, [r7, #2]	@ zero_extendqisi2
 699 00e2 702B     		cmp	r3, #112
 700 00e4 03D1     		bne	.L50
 154:main.c        ****                     else if(rxData=='i'){
 701              		.loc 1 154 0
 702 00e6 714B     		ldr	r3, .L66+24
 703 00e8 0322     		movs	r2, #3
 704 00ea 1A60     		str	r2, [r3]
 705              		.loc 1 161 0
 706 00ec C7E0     		b	.L65
 707              	.L50:
 155:main.c        ****                         data_read_mode = 4;}
 708              		.loc 1 155 0
 709 00ee BB78     		ldrb	r3, [r7, #2]	@ zero_extendqisi2
 710 00f0 692B     		cmp	r3, #105
 711 00f2 03D1     		bne	.L51
 156:main.c        ****                     else if(rxData=='d'){
 712              		.loc 1 156 0
 713 00f4 6D4B     		ldr	r3, .L66+24
 714 00f6 0422     		movs	r2, #4
 715 00f8 1A60     		str	r2, [r3]
 716              		.loc 1 161 0
 717 00fa C0E0     		b	.L65
 718              	.L51:
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\cc3FIxQa.s 			page 17


 157:main.c        ****                         data_read_mode = 5;}
 719              		.loc 1 157 0
 720 00fc BB78     		ldrb	r3, [r7, #2]	@ zero_extendqisi2
 721 00fe 642B     		cmp	r3, #100
 722 0100 03D1     		bne	.L52
 158:main.c        ****                     else if(rxData=='c'){
 723              		.loc 1 158 0
 724 0102 6A4B     		ldr	r3, .L66+24
 725 0104 0522     		movs	r2, #5
 726 0106 1A60     		str	r2, [r3]
 727              		.loc 1 161 0
 728 0108 B9E0     		b	.L65
 729              	.L52:
 159:main.c        ****                         data_read_mode = 6;}
 730              		.loc 1 159 0
 731 010a BB78     		ldrb	r3, [r7, #2]	@ zero_extendqisi2
 732 010c 632B     		cmp	r3, #99
 733 010e 40F0B680 		bne	.L65
 160:main.c        ****                 break;
 734              		.loc 1 160 0
 735 0112 664B     		ldr	r3, .L66+24
 736 0114 0622     		movs	r2, #6
 737 0116 1A60     		str	r2, [r3]
 738              		.loc 1 161 0
 739 0118 B1E0     		b	.L65
 740              	.L40:
 162:main.c        ****                 case 2: //x
 163:main.c        ****                     if(rxData != '}'){
 741              		.loc 1 163 0
 742 011a BB78     		ldrb	r3, [r7, #2]	@ zero_extendqisi2
 743 011c 7D2B     		cmp	r3, #125
 744 011e 0AD0     		beq	.L53
 164:main.c        ****                         temp[nn] = rxData;
 745              		.loc 1 164 0
 746 0120 644B     		ldr	r3, .L66+32
 747 0122 1B68     		ldr	r3, [r3]
 748 0124 6249     		ldr	r1, .L66+28
 749 0126 BA78     		ldrb	r2, [r7, #2]
 750 0128 CA54     		strb	r2, [r1, r3]
 165:main.c        ****                         nn++;
 751              		.loc 1 165 0
 752 012a 624B     		ldr	r3, .L66+32
 753 012c 1B68     		ldr	r3, [r3]
 754 012e 0133     		adds	r3, r3, #1
 755 0130 604A     		ldr	r2, .L66+32
 756 0132 1360     		str	r3, [r2]
 166:main.c        ****                     }
 167:main.c        ****                     else {
 168:main.c        ****                         
 169:main.c        ****                         new_pos[cyl_no] = (int) strtol(temp, (char **)NULL, 10);
 170:main.c        ****                         new_pos_set[cyl_no] = 1;
 171:main.c        ****                         nn=0; 
 172:main.c        ****                     
 173:main.c        ****                         
 174:main.c        ****                         UART_PutString(sendValue);
 175:main.c        ****                         temp[0] = '\0';
 176:main.c        ****                         
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\cc3FIxQa.s 			page 18


 177:main.c        ****                         data_read_mode = 0;
 178:main.c        ****                     }
 179:main.c        ****                   
 180:main.c        ****                 break;
 757              		.loc 1 180 0
 758 0134 A4E0     		b	.L33
 759              	.L53:
 169:main.c        ****                         new_pos_set[cyl_no] = 1;
 760              		.loc 1 169 0
 761 0136 604B     		ldr	r3, .L66+36
 762 0138 1C68     		ldr	r4, [r3]
 763 013a 0A22     		movs	r2, #10
 764 013c 0021     		movs	r1, #0
 765 013e 5C48     		ldr	r0, .L66+28
 766 0140 FFF7FEFF 		bl	strtol
 767 0144 0246     		mov	r2, r0
 768 0146 5D4B     		ldr	r3, .L66+40
 769 0148 43F82420 		str	r2, [r3, r4, lsl #2]
 170:main.c        ****                         nn=0; 
 770              		.loc 1 170 0
 771 014c 5A4B     		ldr	r3, .L66+36
 772 014e 1B68     		ldr	r3, [r3]
 773 0150 5B4A     		ldr	r2, .L66+44
 774 0152 0121     		movs	r1, #1
 775 0154 42F82310 		str	r1, [r2, r3, lsl #2]
 171:main.c        ****                     
 776              		.loc 1 171 0
 777 0158 564B     		ldr	r3, .L66+32
 778 015a 0022     		movs	r2, #0
 779 015c 1A60     		str	r2, [r3]
 174:main.c        ****                         temp[0] = '\0';
 780              		.loc 1 174 0
 781 015e 5948     		ldr	r0, .L66+48
 782 0160 FFF7FEFF 		bl	UART_PutString
 175:main.c        ****                         
 783              		.loc 1 175 0
 784 0164 524B     		ldr	r3, .L66+28
 785 0166 0022     		movs	r2, #0
 786 0168 1A70     		strb	r2, [r3]
 177:main.c        ****                     }
 787              		.loc 1 177 0
 788 016a 504B     		ldr	r3, .L66+24
 789 016c 0022     		movs	r2, #0
 790 016e 1A60     		str	r2, [r3]
 791              		.loc 1 180 0
 792 0170 86E0     		b	.L33
 793              	.L41:
 181:main.c        ****                 case 3: //p
 182:main.c        ****                     if(rxData != '}'){
 794              		.loc 1 182 0
 795 0172 BB78     		ldrb	r3, [r7, #2]	@ zero_extendqisi2
 796 0174 7D2B     		cmp	r3, #125
 797 0176 0AD0     		beq	.L55
 183:main.c        ****                         temp[nn] = rxData;
 798              		.loc 1 183 0
 799 0178 4E4B     		ldr	r3, .L66+32
 800 017a 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\cc3FIxQa.s 			page 19


 801 017c 4C49     		ldr	r1, .L66+28
 802 017e BA78     		ldrb	r2, [r7, #2]
 803 0180 CA54     		strb	r2, [r1, r3]
 184:main.c        ****                         nn++;
 804              		.loc 1 184 0
 805 0182 4C4B     		ldr	r3, .L66+32
 806 0184 1B68     		ldr	r3, [r3]
 807 0186 0133     		adds	r3, r3, #1
 808 0188 4A4A     		ldr	r2, .L66+32
 809 018a 1360     		str	r3, [r2]
 185:main.c        ****                     }
 186:main.c        ****                     else {
 187:main.c        ****                         pid[0] = strtod(temp, NULL);
 188:main.c        ****                         nn=0;
 189:main.c        ****                         temp[0] = '\0';
 190:main.c        ****                         data_read_mode = 0;
 191:main.c        ****                     }
 192:main.c        ****                     
 193:main.c        ****                 break;
 810              		.loc 1 193 0
 811 018c 78E0     		b	.L33
 812              	.L55:
 187:main.c        ****                         nn=0;
 813              		.loc 1 187 0
 814 018e 0021     		movs	r1, #0
 815 0190 4748     		ldr	r0, .L66+28
 816 0192 FFF7FEFF 		bl	strtod
 817 0196 0346     		mov	r3, r0
 818 0198 0C46     		mov	r4, r1
 819 019a 4B4A     		ldr	r2, .L66+52
 820 019c C2E90034 		strd	r3, [r2]
 188:main.c        ****                         temp[0] = '\0';
 821              		.loc 1 188 0
 822 01a0 444B     		ldr	r3, .L66+32
 823 01a2 0022     		movs	r2, #0
 824 01a4 1A60     		str	r2, [r3]
 189:main.c        ****                         data_read_mode = 0;
 825              		.loc 1 189 0
 826 01a6 424B     		ldr	r3, .L66+28
 827 01a8 0022     		movs	r2, #0
 828 01aa 1A70     		strb	r2, [r3]
 190:main.c        ****                     }
 829              		.loc 1 190 0
 830 01ac 3F4B     		ldr	r3, .L66+24
 831 01ae 0022     		movs	r2, #0
 832 01b0 1A60     		str	r2, [r3]
 833              		.loc 1 193 0
 834 01b2 65E0     		b	.L33
 835              	.L42:
 194:main.c        ****                 case 4: //i
 195:main.c        ****                     if(rxData != '}'){
 836              		.loc 1 195 0
 837 01b4 BB78     		ldrb	r3, [r7, #2]	@ zero_extendqisi2
 838 01b6 7D2B     		cmp	r3, #125
 839 01b8 0AD0     		beq	.L57
 196:main.c        ****                         temp[nn] = rxData;
 840              		.loc 1 196 0
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\cc3FIxQa.s 			page 20


 841 01ba 3E4B     		ldr	r3, .L66+32
 842 01bc 1B68     		ldr	r3, [r3]
 843 01be 3C49     		ldr	r1, .L66+28
 844 01c0 BA78     		ldrb	r2, [r7, #2]
 845 01c2 CA54     		strb	r2, [r1, r3]
 197:main.c        ****                         nn++;
 846              		.loc 1 197 0
 847 01c4 3B4B     		ldr	r3, .L66+32
 848 01c6 1B68     		ldr	r3, [r3]
 849 01c8 0133     		adds	r3, r3, #1
 850 01ca 3A4A     		ldr	r2, .L66+32
 851 01cc 1360     		str	r3, [r2]
 198:main.c        ****                     }
 199:main.c        ****                     else {
 200:main.c        ****                         pid[1] = strtod(temp, NULL);
 201:main.c        ****                         nn=0;
 202:main.c        ****                         temp[0] = '\0';
 203:main.c        ****                         data_read_mode = 0;
 204:main.c        ****                     }
 205:main.c        ****                     
 206:main.c        ****                 break;
 852              		.loc 1 206 0
 853 01ce 57E0     		b	.L33
 854              	.L57:
 200:main.c        ****                         nn=0;
 855              		.loc 1 200 0
 856 01d0 0021     		movs	r1, #0
 857 01d2 3748     		ldr	r0, .L66+28
 858 01d4 FFF7FEFF 		bl	strtod
 859 01d8 0346     		mov	r3, r0
 860 01da 0C46     		mov	r4, r1
 861 01dc 3A4A     		ldr	r2, .L66+52
 862 01de C2E90234 		strd	r3, [r2, #8]
 201:main.c        ****                         temp[0] = '\0';
 863              		.loc 1 201 0
 864 01e2 344B     		ldr	r3, .L66+32
 865 01e4 0022     		movs	r2, #0
 866 01e6 1A60     		str	r2, [r3]
 202:main.c        ****                         data_read_mode = 0;
 867              		.loc 1 202 0
 868 01e8 314B     		ldr	r3, .L66+28
 869 01ea 0022     		movs	r2, #0
 870 01ec 1A70     		strb	r2, [r3]
 203:main.c        ****                     }
 871              		.loc 1 203 0
 872 01ee 2F4B     		ldr	r3, .L66+24
 873 01f0 0022     		movs	r2, #0
 874 01f2 1A60     		str	r2, [r3]
 875              		.loc 1 206 0
 876 01f4 44E0     		b	.L33
 877              	.L43:
 207:main.c        ****                 case 5: //d
 208:main.c        ****                     if(rxData != '}'){
 878              		.loc 1 208 0
 879 01f6 BB78     		ldrb	r3, [r7, #2]	@ zero_extendqisi2
 880 01f8 7D2B     		cmp	r3, #125
 881 01fa 0AD0     		beq	.L59
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\cc3FIxQa.s 			page 21


 209:main.c        ****                         temp[nn] = rxData;
 882              		.loc 1 209 0
 883 01fc 2D4B     		ldr	r3, .L66+32
 884 01fe 1B68     		ldr	r3, [r3]
 885 0200 2B49     		ldr	r1, .L66+28
 886 0202 BA78     		ldrb	r2, [r7, #2]
 887 0204 CA54     		strb	r2, [r1, r3]
 210:main.c        ****                         nn++;
 888              		.loc 1 210 0
 889 0206 2B4B     		ldr	r3, .L66+32
 890 0208 1B68     		ldr	r3, [r3]
 891 020a 0133     		adds	r3, r3, #1
 892 020c 294A     		ldr	r2, .L66+32
 893 020e 1360     		str	r3, [r2]
 211:main.c        ****                     }
 212:main.c        ****                     else {
 213:main.c        ****                         pid[2] = strtod(temp, NULL);
 214:main.c        ****                         nn=0;
 215:main.c        ****                         temp[0] = '\0';
 216:main.c        ****                         data_read_mode = 0;
 217:main.c        ****                     }
 218:main.c        ****                     
 219:main.c        ****                 break;
 894              		.loc 1 219 0
 895 0210 36E0     		b	.L33
 896              	.L59:
 213:main.c        ****                         nn=0;
 897              		.loc 1 213 0
 898 0212 0021     		movs	r1, #0
 899 0214 2648     		ldr	r0, .L66+28
 900 0216 FFF7FEFF 		bl	strtod
 901 021a 0346     		mov	r3, r0
 902 021c 0C46     		mov	r4, r1
 903 021e 2A4A     		ldr	r2, .L66+52
 904 0220 C2E90434 		strd	r3, [r2, #16]
 214:main.c        ****                         temp[0] = '\0';
 905              		.loc 1 214 0
 906 0224 234B     		ldr	r3, .L66+32
 907 0226 0022     		movs	r2, #0
 908 0228 1A60     		str	r2, [r3]
 215:main.c        ****                         data_read_mode = 0;
 909              		.loc 1 215 0
 910 022a 214B     		ldr	r3, .L66+28
 911 022c 0022     		movs	r2, #0
 912 022e 1A70     		strb	r2, [r3]
 216:main.c        ****                     }
 913              		.loc 1 216 0
 914 0230 1E4B     		ldr	r3, .L66+24
 915 0232 0022     		movs	r2, #0
 916 0234 1A60     		str	r2, [r3]
 917              		.loc 1 219 0
 918 0236 23E0     		b	.L33
 919              	.L44:
 220:main.c        ****                 case 6: //c
 221:main.c        ****                     if(rxData != '}'){
 920              		.loc 1 221 0
 921 0238 BB78     		ldrb	r3, [r7, #2]	@ zero_extendqisi2
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\cc3FIxQa.s 			page 22


 922 023a 7D2B     		cmp	r3, #125
 923 023c 0AD0     		beq	.L61
 222:main.c        ****                         temp[nn] = rxData;
 924              		.loc 1 222 0
 925 023e 1D4B     		ldr	r3, .L66+32
 926 0240 1B68     		ldr	r3, [r3]
 927 0242 1B49     		ldr	r1, .L66+28
 928 0244 BA78     		ldrb	r2, [r7, #2]
 929 0246 CA54     		strb	r2, [r1, r3]
 223:main.c        ****                         nn++;
 930              		.loc 1 223 0
 931 0248 1A4B     		ldr	r3, .L66+32
 932 024a 1B68     		ldr	r3, [r3]
 933 024c 0133     		adds	r3, r3, #1
 934 024e 194A     		ldr	r2, .L66+32
 935 0250 1360     		str	r3, [r2]
 224:main.c        ****                     }
 225:main.c        ****                     else {
 226:main.c        ****                         cyl_no = (int) strtol(temp, (char **)NULL, 10);
 227:main.c        ****                         nn=0; 
 228:main.c        ****                         temp[0] = '\0';
 229:main.c        ****                         data_read_mode = 0;
 230:main.c        ****                     }
 231:main.c        ****                   
 232:main.c        ****                 break;
 936              		.loc 1 232 0
 937 0252 15E0     		b	.L33
 938              	.L61:
 226:main.c        ****                         nn=0; 
 939              		.loc 1 226 0
 940 0254 0A22     		movs	r2, #10
 941 0256 0021     		movs	r1, #0
 942 0258 1548     		ldr	r0, .L66+28
 943 025a FFF7FEFF 		bl	strtol
 944 025e 0246     		mov	r2, r0
 945 0260 154B     		ldr	r3, .L66+36
 946 0262 1A60     		str	r2, [r3]
 227:main.c        ****                         temp[0] = '\0';
 947              		.loc 1 227 0
 948 0264 134B     		ldr	r3, .L66+32
 949 0266 0022     		movs	r2, #0
 950 0268 1A60     		str	r2, [r3]
 228:main.c        ****                         data_read_mode = 0;
 951              		.loc 1 228 0
 952 026a 114B     		ldr	r3, .L66+28
 953 026c 0022     		movs	r2, #0
 954 026e 1A70     		strb	r2, [r3]
 229:main.c        ****                     }
 955              		.loc 1 229 0
 956 0270 0E4B     		ldr	r3, .L66+24
 957 0272 0022     		movs	r2, #0
 958 0274 1A60     		str	r2, [r3]
 959              		.loc 1 232 0
 960 0276 00BF     		nop
 961 0278 02E0     		b	.L33
 962              	.L64:
 149:main.c        ****                 case 1:
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\cc3FIxQa.s 			page 23


 963              		.loc 1 149 0
 964 027a 00BF     		nop
 965 027c 00E0     		b	.L33
 966              	.L65:
 161:main.c        ****                 case 2: //x
 967              		.loc 1 161 0
 968 027e 00BF     		nop
 969              	.L33:
 233:main.c        ****             }
 234:main.c        ****             
 235:main.c        ****             if(errorStatus == 0u)
 236:main.c        ****             {
 237:main.c        ****                 /* Send data backward */
 238:main.c        ****                 //UART_TXDATA_REG = rxData;
 239:main.c        ****             }
 240:main.c        ****         }
 241:main.c        ****     }while((rxStatus & UART_RX_STS_FIFO_NOTEMPTY) != 0u);
 970              		.loc 1 241 0
 971 0280 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 972 0282 03F02003 		and	r3, r3, #32
 973 0286 002B     		cmp	r3, #0
 974 0288 7FF4BDAE 		bne	.L63
 242:main.c        **** 
 243:main.c        **** }
 975              		.loc 1 243 0
 976 028c 00BF     		nop
 977 028e 0C37     		adds	r7, r7, #12
 978              		.cfi_def_cfa_offset 12
 979 0290 BD46     		mov	sp, r7
 980              		.cfi_def_cfa_register 13
 981              		@ sp needed
 982 0292 90BD     		pop	{r4, r7, pc}
 983              	.L67:
 984              		.align	2
 985              	.L66:
 986 0294 6A650040 		.word	1073767786
 987 0298 00000000 		.word	errorStatus
 988 029c 4A650040 		.word	1073767754
 989 02a0 00000000 		.word	tt
 990 02a4 00000000 		.word	help
 991 02a8 00000000 		.word	start_calib
 992 02ac 00000000 		.word	data_read_mode
 993 02b0 00000000 		.word	temp
 994 02b4 00000000 		.word	nn
 995 02b8 00000000 		.word	cyl_no
 996 02bc 00000000 		.word	new_pos
 997 02c0 00000000 		.word	new_pos_set
 998 02c4 00000000 		.word	sendValue
 999 02c8 00000000 		.word	pid
 1000              		.cfi_endproc
 1001              	.LFE67:
 1002              		.size	RxIsr, .-RxIsr
 1003              		.global	led_switch
 1004              		.bss
 1005              		.align	2
 1006              		.type	led_switch, %object
 1007              		.size	led_switch, 4
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\cc3FIxQa.s 			page 24


 1008              	led_switch:
 1009 0080 00000000 		.space	4
 1010              		.section	.rodata
 1011              		.align	2
 1012              	.LC0:
 1013 0000 25303864 		.ascii	"%08d\011%08.2f\011%08d\011%08.2f\000"
 1013      09253038 
 1013      2E326609 
 1013      25303864 
 1013      09253038 
 1014              		.global	__aeabi_i2d
 1015              		.global	__aeabi_dsub
 1016              		.global	__aeabi_dadd
 1017              		.global	__aeabi_dmul
 1018              		.global	__aeabi_ddiv
 1019              		.global	__aeabi_d2iz
 1020              		.align	2
 1021              	.LC1:
 1022 0018 25303864 		.ascii	"%08d\011%08.2f\011%08d\011%08.2f\012\000"
 1022      09253038 
 1022      2E326609 
 1022      25303864 
 1022      09253038 
 1023 0031 000000   		.align	2
 1024              	.LC2:
 1025 0034 55505045 		.ascii	"UPPER:\011Lower Offset: %d \011Upper Offset: %d \011"
 1025      523A094C 
 1025      6F776572 
 1025      204F6666 
 1025      7365743A 
 1026 005f 20414443 		.ascii	" ADC Diff: %d\012\000"
 1026      20446966 
 1026      663A2025 
 1026      640A00
 1027 006e 0000     		.align	2
 1028              	.LC3:
 1029 0070 4C4F5745 		.ascii	"LOWER:\011Lower Offset: %d \011Upper Offset: %d \011"
 1029      523A094C 
 1029      6F776572 
 1029      204F6666 
 1029      7365743A 
 1030 009b 20414443 		.ascii	" ADC Diff: %d\012\000"
 1030      20446966 
 1030      663A2025 
 1030      640A00
 1031 00aa 0000     		.align	2
 1032              	.LC4:
 1033 00ac 4C6F7765 		.ascii	"Lower Offset: %d \011 Upper Offset: %d \012\000"
 1033      72204F66 
 1033      66736574 
 1033      3A202564 
 1033      20092055 
 1034              		.global	__aeabi_ui2d
 1035              		.section	.text.main,"ax",%progbits
 1036              		.align	2
 1037              		.global	main
 1038              		.thumb
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\cc3FIxQa.s 			page 25


 1039              		.thumb_func
 1040              		.type	main, %function
 1041              	main:
 1042              	.LFB68:
 244:main.c        ****     
 245:main.c        **** 
 246:main.c        **** 
 247:main.c        **** int led_switch = 0;
 248:main.c        **** int main()
 249:main.c        **** {
 1043              		.loc 1 249 0
 1044              		.cfi_startproc
 1045              		@ args = 0, pretend = 0, frame = 56
 1046              		@ frame_needed = 1, uses_anonymous_args = 0
 1047 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1048              		.cfi_def_cfa_offset 20
 1049              		.cfi_offset 4, -20
 1050              		.cfi_offset 5, -16
 1051              		.cfi_offset 6, -12
 1052              		.cfi_offset 7, -8
 1053              		.cfi_offset 14, -4
 1054 0002 95B0     		sub	sp, sp, #84
 1055              		.cfi_def_cfa_offset 104
 1056 0004 06AF     		add	r7, sp, #24
 1057              		.cfi_def_cfa 7, 80
 250:main.c        ****     
 251:main.c        ****     //PWM variables
 252:main.c        ****     PWM_0_Start();
 1058              		.loc 1 252 0
 1059 0006 FFF7FEFF 		bl	PWM_0_Start
 253:main.c        ****     PWM_1_Start();
 1060              		.loc 1 253 0
 1061 000a FFF7FEFF 		bl	PWM_1_Start
 254:main.c        ****     PWM_2_Start();
 1062              		.loc 1 254 0
 1063 000e FFF7FEFF 		bl	PWM_2_Start
 255:main.c        ****     PWM_3_Start();
 1064              		.loc 1 255 0
 1065 0012 FFF7FEFF 		bl	PWM_3_Start
 256:main.c        ****     ADC_0_Start();
 1066              		.loc 1 256 0
 1067 0016 FFF7FEFF 		bl	ADC_0_Start
 257:main.c        ****     ADC_0_StartConvert();
 1068              		.loc 1 257 0
 1069 001a FFF7FEFF 		bl	ADC_0_StartConvert
 258:main.c        ****     AMux_0_Init();
 1070              		.loc 1 258 0
 1071 001e FFF7FEFF 		bl	AMux_0_Start
 259:main.c        ****     
 260:main.c        ****     UART_Start();           /* Start communication component */
 1072              		.loc 1 260 0
 1073 0022 FFF7FEFF 		bl	UART_Start
 261:main.c        **** 
 262:main.c        **** #if(INTERRUPT_CODE_ENABLED == ENABLED)
 263:main.c        ****     isr_rx_StartEx(RxIsr);
 1074              		.loc 1 263 0
 1075 0026 A648     		ldr	r0, .L87+8
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\cc3FIxQa.s 			page 26


 1076 0028 FFF7FEFF 		bl	isr_rx_StartEx
 264:main.c        ****     update_median_isr_StartEx(adc_update);
 1077              		.loc 1 264 0
 1078 002c A548     		ldr	r0, .L87+12
 1079 002e FFF7FEFF 		bl	update_median_isr_StartEx
 265:main.c        **** #endif /* INTERRUPT_CODE_ENABLED == ENABLED */
 266:main.c        ****     
 267:main.c        ****     CyGlobalIntEnable;      /* Enable global interrupts. */
 1080              		.loc 1 267 0
 1081              		.syntax unified
 1082              	@ 267 "main.c" 1
 1083 0032 62B6     		CPSIE   i
 1084              	@ 0 "" 2
 268:main.c        ****     
 269:main.c        ****     double dt;
 270:main.c        ****     double time;
 271:main.c        ****     
 272:main.c        ****     dt = 0.025; //initialised dt, corrected by timer  below
 1085              		.loc 1 272 0
 1086              		.thumb
 1087              		.syntax unified
 1088 0034 A0A4     		adr	r4, .L87
 1089 0036 D4E90034 		ldrd	r3, [r4]
 1090 003a C7E90C34 		strd	r3, [r7, #48]
 273:main.c        **** 
 274:main.c        ****     sprintf(sendValue,"%08d\t%08.2f\t%08d\t%08.2f",adcValue[0],err[0],adcValue[1],err[1]);
 1091              		.loc 1 274 0
 1092 003e A24B     		ldr	r3, .L87+16
 1093 0040 1B88     		ldrh	r3, [r3]
 1094 0042 1D46     		mov	r5, r3
 1095 0044 A14B     		ldr	r3, .L87+20
 1096 0046 18CB     		ldmia	r3, {r3-r4}
 1097 0048 9F4A     		ldr	r2, .L87+16
 1098 004a 5288     		ldrh	r2, [r2, #2]
 1099 004c 1046     		mov	r0, r2
 1100 004e 9F4A     		ldr	r2, .L87+20
 1101 0050 D2E90212 		ldrd	r1, [r2, #8]
 1102 0054 CDE90412 		strd	r1, [sp, #16]
 1103 0058 0290     		str	r0, [sp, #8]
 1104 005a CDE90034 		strd	r3, [sp]
 1105 005e 2A46     		mov	r2, r5
 1106 0060 9B49     		ldr	r1, .L87+24
 1107 0062 9C48     		ldr	r0, .L87+28
 1108 0064 FFF7FEFF 		bl	sprintf
 275:main.c        ****     UART_PutString(sendValue);
 1109              		.loc 1 275 0
 1110 0068 9A48     		ldr	r0, .L87+28
 1111 006a FFF7FEFF 		bl	UART_PutString
 276:main.c        ****     
 277:main.c        ****     median_timer_Start();
 1112              		.loc 1 277 0
 1113 006e FFF7FEFF 		bl	median_timer_Start
 278:main.c        ****     Timer_1_Start();
 1114              		.loc 1 278 0
 1115 0072 FFF7FEFF 		bl	Timer_1_Start
 279:main.c        ****    int send_now = 0;
 1116              		.loc 1 279 0
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\cc3FIxQa.s 			page 27


 1117 0076 0023     		movs	r3, #0
 1118 0078 FB62     		str	r3, [r7, #44]
 1119              	.L86:
 280:main.c        ****     for(;;)
 281:main.c        ****     {
 282:main.c        ****         Timer_1_WriteCounter(65535);
 1120              		.loc 1 282 0
 1121 007a 4FF6FF70 		movw	r0, #65535
 1122 007e FFF7FEFF 		bl	Timer_1_WriteCounter
 1123              	.LBB8:
 283:main.c        **** 
 284:main.c        ****         /* START PID CODE */
 285:main.c        ****         for(int cyl = 0;cyl<CYL_NO;cyl++){
 1124              		.loc 1 285 0
 1125 0082 0023     		movs	r3, #0
 1126 0084 BB62     		str	r3, [r7, #40]
 1127 0086 D7E0     		b	.L69
 1128              	.L71:
 286:main.c        ****             if(new_pos_set[cyl]){
 1129              		.loc 1 286 0
 1130 0088 934A     		ldr	r2, .L87+32
 1131 008a BB6A     		ldr	r3, [r7, #40]
 1132 008c 52F82330 		ldr	r3, [r2, r3, lsl #2]
 1133 0090 002B     		cmp	r3, #0
 1134 0092 0CD0     		beq	.L70
 287:main.c        ****                 pos[cyl] = new_pos[cyl];
 1135              		.loc 1 287 0
 1136 0094 914A     		ldr	r2, .L87+36
 1137 0096 BB6A     		ldr	r3, [r7, #40]
 1138 0098 52F82320 		ldr	r2, [r2, r3, lsl #2]
 1139 009c 9049     		ldr	r1, .L87+40
 1140 009e BB6A     		ldr	r3, [r7, #40]
 1141 00a0 41F82320 		str	r2, [r1, r3, lsl #2]
 288:main.c        ****                 new_pos_set[cyl] = 0;
 1142              		.loc 1 288 0
 1143 00a4 8C4A     		ldr	r2, .L87+32
 1144 00a6 BB6A     		ldr	r3, [r7, #40]
 1145 00a8 0021     		movs	r1, #0
 1146 00aa 42F82310 		str	r1, [r2, r3, lsl #2]
 1147              	.L70:
 289:main.c        ****             }
 290:main.c        ****             
 291:main.c        ****             err[cyl] = -pos[cyl] + adcValue[cyl];
 1148              		.loc 1 291 0 discriminator 2
 1149 00ae 864A     		ldr	r2, .L87+16
 1150 00b0 BB6A     		ldr	r3, [r7, #40]
 1151 00b2 32F81330 		ldrh	r3, [r2, r3, lsl #1]
 1152 00b6 1946     		mov	r1, r3
 1153 00b8 894A     		ldr	r2, .L87+40
 1154 00ba BB6A     		ldr	r3, [r7, #40]
 1155 00bc 52F82330 		ldr	r3, [r2, r3, lsl #2]
 1156 00c0 CB1A     		subs	r3, r1, r3
 1157 00c2 1846     		mov	r0, r3
 1158 00c4 FFF7FEFF 		bl	__aeabi_i2d
 1159 00c8 0346     		mov	r3, r0
 1160 00ca 0C46     		mov	r4, r1
 1161 00cc 7F49     		ldr	r1, .L87+20
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\cc3FIxQa.s 			page 28


 1162 00ce BA6A     		ldr	r2, [r7, #40]
 1163 00d0 D200     		lsls	r2, r2, #3
 1164 00d2 0A44     		add	r2, r2, r1
 1165 00d4 C2E90034 		strd	r3, [r2]
 292:main.c        ****             der[cyl] = err[cyl] - prev_err[cyl];
 1166              		.loc 1 292 0 discriminator 2
 1167 00d8 7C4A     		ldr	r2, .L87+20
 1168 00da BB6A     		ldr	r3, [r7, #40]
 1169 00dc DB00     		lsls	r3, r3, #3
 1170 00de 1344     		add	r3, r3, r2
 1171 00e0 D3E90001 		ldrd	r0, [r3]
 1172 00e4 7F4A     		ldr	r2, .L87+44
 1173 00e6 BB6A     		ldr	r3, [r7, #40]
 1174 00e8 DB00     		lsls	r3, r3, #3
 1175 00ea 1344     		add	r3, r3, r2
 1176 00ec 18CB     		ldmia	r3, {r3-r4}
 1177 00ee 1A46     		mov	r2, r3
 1178 00f0 2346     		mov	r3, r4
 1179 00f2 FFF7FEFF 		bl	__aeabi_dsub
 1180 00f6 0346     		mov	r3, r0
 1181 00f8 0C46     		mov	r4, r1
 1182 00fa 7B49     		ldr	r1, .L87+48
 1183 00fc BA6A     		ldr	r2, [r7, #40]
 1184 00fe D200     		lsls	r2, r2, #3
 1185 0100 0A44     		add	r2, r2, r1
 1186 0102 C2E90034 		strd	r3, [r2]
 293:main.c        ****             pid_integral[cyl] = err[cyl] + pid_integral[cyl];
 1187              		.loc 1 293 0 discriminator 2
 1188 0106 714A     		ldr	r2, .L87+20
 1189 0108 BB6A     		ldr	r3, [r7, #40]
 1190 010a DB00     		lsls	r3, r3, #3
 1191 010c 1344     		add	r3, r3, r2
 1192 010e D3E90001 		ldrd	r0, [r3]
 1193 0112 764A     		ldr	r2, .L87+52
 1194 0114 BB6A     		ldr	r3, [r7, #40]
 1195 0116 DB00     		lsls	r3, r3, #3
 1196 0118 1344     		add	r3, r3, r2
 1197 011a 18CB     		ldmia	r3, {r3-r4}
 1198 011c 1A46     		mov	r2, r3
 1199 011e 2346     		mov	r3, r4
 1200 0120 FFF7FEFF 		bl	__aeabi_dadd
 1201 0124 0346     		mov	r3, r0
 1202 0126 0C46     		mov	r4, r1
 1203 0128 7049     		ldr	r1, .L87+52
 1204 012a BA6A     		ldr	r2, [r7, #40]
 1205 012c D200     		lsls	r2, r2, #3
 1206 012e 0A44     		add	r2, r2, r1
 1207 0130 C2E90034 		strd	r3, [r2]
 294:main.c        ****             pulse_temp[cyl] = pid[0] * err[cyl] + ( pid[1] * pid_integral[cyl] * dt) + ( pid[2] * d
 1208              		.loc 1 294 0 discriminator 2
 1209 0134 6E4B     		ldr	r3, .L87+56
 1210 0136 D3E90001 		ldrd	r0, [r3]
 1211 013a 644A     		ldr	r2, .L87+20
 1212 013c BB6A     		ldr	r3, [r7, #40]
 1213 013e DB00     		lsls	r3, r3, #3
 1214 0140 1344     		add	r3, r3, r2
 1215 0142 18CB     		ldmia	r3, {r3-r4}
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\cc3FIxQa.s 			page 29


 1216 0144 1A46     		mov	r2, r3
 1217 0146 2346     		mov	r3, r4
 1218 0148 FFF7FEFF 		bl	__aeabi_dmul
 1219 014c 0346     		mov	r3, r0
 1220 014e 0C46     		mov	r4, r1
 1221 0150 1D46     		mov	r5, r3
 1222 0152 2646     		mov	r6, r4
 1223 0154 664B     		ldr	r3, .L87+56
 1224 0156 D3E90201 		ldrd	r0, [r3, #8]
 1225 015a 644A     		ldr	r2, .L87+52
 1226 015c BB6A     		ldr	r3, [r7, #40]
 1227 015e DB00     		lsls	r3, r3, #3
 1228 0160 1344     		add	r3, r3, r2
 1229 0162 18CB     		ldmia	r3, {r3-r4}
 1230 0164 1A46     		mov	r2, r3
 1231 0166 2346     		mov	r3, r4
 1232 0168 FFF7FEFF 		bl	__aeabi_dmul
 1233 016c 0346     		mov	r3, r0
 1234 016e 0C46     		mov	r4, r1
 1235 0170 1846     		mov	r0, r3
 1236 0172 2146     		mov	r1, r4
 1237 0174 D7E90C23 		ldrd	r2, [r7, #48]
 1238 0178 FFF7FEFF 		bl	__aeabi_dmul
 1239 017c 0346     		mov	r3, r0
 1240 017e 0C46     		mov	r4, r1
 1241 0180 1A46     		mov	r2, r3
 1242 0182 2346     		mov	r3, r4
 1243 0184 2846     		mov	r0, r5
 1244 0186 3146     		mov	r1, r6
 1245 0188 FFF7FEFF 		bl	__aeabi_dadd
 1246 018c 0346     		mov	r3, r0
 1247 018e 0C46     		mov	r4, r1
 1248 0190 1D46     		mov	r5, r3
 1249 0192 2646     		mov	r6, r4
 1250 0194 564B     		ldr	r3, .L87+56
 1251 0196 D3E90401 		ldrd	r0, [r3, #16]
 1252 019a 534A     		ldr	r2, .L87+48
 1253 019c BB6A     		ldr	r3, [r7, #40]
 1254 019e DB00     		lsls	r3, r3, #3
 1255 01a0 1344     		add	r3, r3, r2
 1256 01a2 18CB     		ldmia	r3, {r3-r4}
 1257 01a4 1A46     		mov	r2, r3
 1258 01a6 2346     		mov	r3, r4
 1259 01a8 FFF7FEFF 		bl	__aeabi_dmul
 1260 01ac 0346     		mov	r3, r0
 1261 01ae 0C46     		mov	r4, r1
 1262 01b0 1846     		mov	r0, r3
 1263 01b2 2146     		mov	r1, r4
 1264 01b4 D7E90C23 		ldrd	r2, [r7, #48]
 1265 01b8 FFF7FEFF 		bl	__aeabi_ddiv
 1266 01bc 0346     		mov	r3, r0
 1267 01be 0C46     		mov	r4, r1
 1268 01c0 1A46     		mov	r2, r3
 1269 01c2 2346     		mov	r3, r4
 1270 01c4 2846     		mov	r0, r5
 1271 01c6 3146     		mov	r1, r6
 1272 01c8 FFF7FEFF 		bl	__aeabi_dadd
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\cc3FIxQa.s 			page 30


 1273 01cc 0346     		mov	r3, r0
 1274 01ce 0C46     		mov	r4, r1
 1275 01d0 1846     		mov	r0, r3
 1276 01d2 2146     		mov	r1, r4
 1277 01d4 FFF7FEFF 		bl	__aeabi_d2iz
 1278 01d8 0146     		mov	r1, r0
 1279 01da 464A     		ldr	r2, .L87+60
 1280 01dc BB6A     		ldr	r3, [r7, #40]
 1281 01de 42F82310 		str	r1, [r2, r3, lsl #2]
 295:main.c        ****             
 296:main.c        ****             pulse[cyl] = pulseCheck(pulse_temp[cyl],offsets[cyl][1],offsets[cyl][0]);
 1282              		.loc 1 296 0 discriminator 2
 1283 01e2 444A     		ldr	r2, .L87+60
 1284 01e4 BB6A     		ldr	r3, [r7, #40]
 1285 01e6 52F82300 		ldr	r0, [r2, r3, lsl #2]
 1286 01ea 434A     		ldr	r2, .L87+64
 1287 01ec BB6A     		ldr	r3, [r7, #40]
 1288 01ee DB00     		lsls	r3, r3, #3
 1289 01f0 1344     		add	r3, r3, r2
 1290 01f2 5968     		ldr	r1, [r3, #4]
 1291 01f4 404A     		ldr	r2, .L87+64
 1292 01f6 BB6A     		ldr	r3, [r7, #40]
 1293 01f8 52F83330 		ldr	r3, [r2, r3, lsl #3]
 1294 01fc 1A46     		mov	r2, r3
 1295 01fe FFF7FEFF 		bl	pulseCheck
 1296 0202 0146     		mov	r1, r0
 1297 0204 3D4A     		ldr	r2, .L87+68
 1298 0206 BB6A     		ldr	r3, [r7, #40]
 1299 0208 42F82310 		str	r1, [r2, r3, lsl #2]
 297:main.c        ****             
 298:main.c        ****             writePWM(cyl,pulse[cyl]);
 1300              		.loc 1 298 0 discriminator 2
 1301 020c 3B4A     		ldr	r2, .L87+68
 1302 020e BB6A     		ldr	r3, [r7, #40]
 1303 0210 52F82330 		ldr	r3, [r2, r3, lsl #2]
 1304 0214 1946     		mov	r1, r3
 1305 0216 B86A     		ldr	r0, [r7, #40]
 1306 0218 FFF7FEFF 		bl	writePWM
 299:main.c        ****             prev_err[cyl] = err[cyl];
 1307              		.loc 1 299 0 discriminator 2
 1308 021c 2B4A     		ldr	r2, .L87+20
 1309 021e BB6A     		ldr	r3, [r7, #40]
 1310 0220 DB00     		lsls	r3, r3, #3
 1311 0222 1344     		add	r3, r3, r2
 1312 0224 18CB     		ldmia	r3, {r3-r4}
 1313 0226 2F49     		ldr	r1, .L87+44
 1314 0228 BA6A     		ldr	r2, [r7, #40]
 1315 022a D200     		lsls	r2, r2, #3
 1316 022c 0A44     		add	r2, r2, r1
 1317 022e C2E90034 		strd	r3, [r2]
 285:main.c        ****             if(new_pos_set[cyl]){
 1318              		.loc 1 285 0 discriminator 2
 1319 0232 BB6A     		ldr	r3, [r7, #40]
 1320 0234 0133     		adds	r3, r3, #1
 1321 0236 BB62     		str	r3, [r7, #40]
 1322              	.L69:
 285:main.c        ****             if(new_pos_set[cyl]){
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\cc3FIxQa.s 			page 31


 1323              		.loc 1 285 0 is_stmt 0 discriminator 1
 1324 0238 BB6A     		ldr	r3, [r7, #40]
 1325 023a 012B     		cmp	r3, #1
 1326 023c 7FF724AF 		ble	.L71
 1327              	.LBE8:
 300:main.c        ****         }
 301:main.c        ****         if(send_now>10){
 1328              		.loc 1 301 0 is_stmt 1
 1329 0240 FB6A     		ldr	r3, [r7, #44]
 1330 0242 0A2B     		cmp	r3, #10
 1331 0244 1ADD     		ble	.L72
 302:main.c        ****             sprintf(sendValue,"%08d\t%08.2f\t%08d\t%08.2f\n",adcValue[0],err[0],adcValue[1],err[1])
 1332              		.loc 1 302 0
 1333 0246 204B     		ldr	r3, .L87+16
 1334 0248 1B88     		ldrh	r3, [r3]
 1335 024a 1D46     		mov	r5, r3
 1336 024c 1F4B     		ldr	r3, .L87+20
 1337 024e 18CB     		ldmia	r3, {r3-r4}
 1338 0250 1D4A     		ldr	r2, .L87+16
 1339 0252 5288     		ldrh	r2, [r2, #2]
 1340 0254 1046     		mov	r0, r2
 1341 0256 1D4A     		ldr	r2, .L87+20
 1342 0258 D2E90212 		ldrd	r1, [r2, #8]
 1343 025c CDE90412 		strd	r1, [sp, #16]
 1344 0260 0290     		str	r0, [sp, #8]
 1345 0262 CDE90034 		strd	r3, [sp]
 1346 0266 2A46     		mov	r2, r5
 1347 0268 2549     		ldr	r1, .L87+72
 1348 026a 1A48     		ldr	r0, .L87+28
 1349 026c FFF7FEFF 		bl	sprintf
 303:main.c        ****             UART_PutString(sendValue);
 1350              		.loc 1 303 0
 1351 0270 1848     		ldr	r0, .L87+28
 1352 0272 FFF7FEFF 		bl	UART_PutString
 304:main.c        ****             send_now = 0;
 1353              		.loc 1 304 0
 1354 0276 0023     		movs	r3, #0
 1355 0278 FB62     		str	r3, [r7, #44]
 1356 027a 02E0     		b	.L73
 1357              	.L72:
 305:main.c        ****         } else {
 306:main.c        ****             send_now++;
 1358              		.loc 1 306 0
 1359 027c FB6A     		ldr	r3, [r7, #44]
 1360 027e 0133     		adds	r3, r3, #1
 1361 0280 FB62     		str	r3, [r7, #44]
 1362              	.L73:
 307:main.c        ****         }
 308:main.c        ****         /* END PID CODE */
 309:main.c        ****         if(start_calib){
 1363              		.loc 1 309 0
 1364 0282 204B     		ldr	r3, .L87+76
 1365 0284 1B68     		ldr	r3, [r3]
 1366 0286 002B     		cmp	r3, #0
 1367 0288 00F0C980 		beq	.L74
 1368              	.LBB9:
 310:main.c        ****             int calib_cyl = 0;
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\cc3FIxQa.s 			page 32


 1369              		.loc 1 310 0
 1370 028c 0023     		movs	r3, #0
 1371 028e 3B61     		str	r3, [r7, #16]
 311:main.c        ****             int upper_offset_set = 0;
 1372              		.loc 1 311 0
 1373 0290 0023     		movs	r3, #0
 1374 0292 7B62     		str	r3, [r7, #36]
 312:main.c        ****             int lower_offset_set = 0;
 1375              		.loc 1 312 0
 1376 0294 0023     		movs	r3, #0
 1377 0296 3B62     		str	r3, [r7, #32]
 313:main.c        ****             int upper_offset = 120;
 1378              		.loc 1 313 0
 1379 0298 7823     		movs	r3, #120
 1380 029a FB61     		str	r3, [r7, #28]
 314:main.c        ****             int lower_offset = -120;
 1381              		.loc 1 314 0
 1382 029c 6FF07703 		mvn	r3, #119
 1383 02a0 BB61     		str	r3, [r7, #24]
 315:main.c        ****             uint16 prev_adcValue = adcValue[0];
 1384              		.loc 1 315 0
 1385 02a2 094B     		ldr	r3, .L87+16
 1386 02a4 1B88     		ldrh	r3, [r3]	@ movhi
 1387 02a6 FB81     		strh	r3, [r7, #14]	@ movhi
 316:main.c        ****             uint16 diff = 0;
 1388              		.loc 1 316 0
 1389 02a8 0023     		movs	r3, #0
 1390 02aa BB81     		strh	r3, [r7, #12]	@ movhi
 1391              	.LBB10:
 317:main.c        ****             for(int g = 0;g<CYL_NO;g++)
 1392              		.loc 1 317 0
 1393 02ac 0023     		movs	r3, #0
 1394 02ae 7B61     		str	r3, [r7, #20]
 1395 02b0 31E0     		b	.L75
 1396              	.L88:
 1397 02b2 00BFAFF3 		.align	3
 1397      0080
 1398              	.L87:
 1399 02b8 9A999999 		.word	-1717986918
 1400 02bc 9999993F 		.word	1067030937
 1401 02c0 00000000 		.word	RxIsr
 1402 02c4 00000000 		.word	adc_update
 1403 02c8 00000000 		.word	adcValue
 1404 02cc 00000000 		.word	err
 1405 02d0 00000000 		.word	.LC0
 1406 02d4 00000000 		.word	sendValue
 1407 02d8 00000000 		.word	new_pos_set
 1408 02dc 00000000 		.word	new_pos
 1409 02e0 00000000 		.word	pos
 1410 02e4 00000000 		.word	prev_err
 1411 02e8 00000000 		.word	der
 1412 02ec 00000000 		.word	pid_integral
 1413 02f0 00000000 		.word	pid
 1414 02f4 00000000 		.word	pulse_temp
 1415 02f8 00000000 		.word	offsets
 1416 02fc 00000000 		.word	pulse
 1417 0300 18000000 		.word	.LC1
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\cc3FIxQa.s 			page 33


 1418 0304 00000000 		.word	start_calib
 1419              	.L76:
 318:main.c        ****                 writePWM(g,0);
 1420              		.loc 1 318 0 discriminator 3
 1421 0308 0021     		movs	r1, #0
 1422 030a 7869     		ldr	r0, [r7, #20]
 1423 030c FFF7FEFF 		bl	writePWM
 317:main.c        ****             for(int g = 0;g<CYL_NO;g++)
 1424              		.loc 1 317 0 discriminator 3
 1425 0310 7B69     		ldr	r3, [r7, #20]
 1426 0312 0133     		adds	r3, r3, #1
 1427 0314 7B61     		str	r3, [r7, #20]
 1428              	.L75:
 317:main.c        ****             for(int g = 0;g<CYL_NO;g++)
 1429              		.loc 1 317 0 is_stmt 0 discriminator 1
 1430 0316 7B69     		ldr	r3, [r7, #20]
 1431 0318 012B     		cmp	r3, #1
 1432 031a F5DD     		ble	.L76
 1433              	.LBE10:
 319:main.c        ****                 
 320:main.c        ****             CyDelay(1000);
 1434              		.loc 1 320 0 is_stmt 1
 1435 031c 4FF47A70 		mov	r0, #1000
 1436 0320 FFF7FEFF 		bl	CyDelay
 321:main.c        ****         
 322:main.c        ****             while(upper_offset_set==0 && lower_offset_set==0){
 1437              		.loc 1 322 0
 1438 0324 69E0     		b	.L77
 1439              	.L85:
 323:main.c        ****                 
 324:main.c        ****                 prev_adcValue = adcValue[calib_cyl];
 1440              		.loc 1 324 0
 1441 0326 544A     		ldr	r2, .L89+16
 1442 0328 3B69     		ldr	r3, [r7, #16]
 1443 032a 32F81330 		ldrh	r3, [r2, r3, lsl #1]	@ movhi
 1444 032e FB81     		strh	r3, [r7, #14]	@ movhi
 325:main.c        ****                 if(upper_offset_set==0){
 1445              		.loc 1 325 0
 1446 0330 7B6A     		ldr	r3, [r7, #36]
 1447 0332 002B     		cmp	r3, #0
 1448 0334 24D1     		bne	.L78
 326:main.c        ****                     writePWM(calib_cyl,upper_offset);
 1449              		.loc 1 326 0
 1450 0336 F969     		ldr	r1, [r7, #28]
 1451 0338 3869     		ldr	r0, [r7, #16]
 1452 033a FFF7FEFF 		bl	writePWM
 327:main.c        ****                     CyDelay(200);
 1453              		.loc 1 327 0
 1454 033e C820     		movs	r0, #200
 1455 0340 FFF7FEFF 		bl	CyDelay
 328:main.c        ****                     diff = abs(prev_adcValue-adcValue[calib_cyl]);
 1456              		.loc 1 328 0
 1457 0344 FB89     		ldrh	r3, [r7, #14]
 1458 0346 4C49     		ldr	r1, .L89+16
 1459 0348 3A69     		ldr	r2, [r7, #16]
 1460 034a 31F81220 		ldrh	r2, [r1, r2, lsl #1]
 1461 034e 9B1A     		subs	r3, r3, r2
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\cc3FIxQa.s 			page 34


 1462 0350 002B     		cmp	r3, #0
 1463 0352 B8BF     		it	lt
 1464 0354 5B42     		rsblt	r3, r3, #0
 1465 0356 BB81     		strh	r3, [r7, #12]	@ movhi
 329:main.c        ****                     if(diff>10){
 1466              		.loc 1 329 0
 1467 0358 BB89     		ldrh	r3, [r7, #12]
 1468 035a 0A2B     		cmp	r3, #10
 1469 035c 02D9     		bls	.L79
 330:main.c        ****                         upper_offset_set=1;
 1470              		.loc 1 330 0
 1471 035e 0123     		movs	r3, #1
 1472 0360 7B62     		str	r3, [r7, #36]
 1473 0362 02E0     		b	.L80
 1474              	.L79:
 331:main.c        ****                     }else{
 332:main.c        ****                         upper_offset = upper_offset + 1;
 1475              		.loc 1 332 0
 1476 0364 FB69     		ldr	r3, [r7, #28]
 1477 0366 0133     		adds	r3, r3, #1
 1478 0368 FB61     		str	r3, [r7, #28]
 1479              	.L80:
 333:main.c        ****                     }
 334:main.c        ****                     sprintf(sendValue,"UPPER:\tLower Offset: %d \tUpper Offset: %d \t ADC Diff: %d\
 1480              		.loc 1 334 0
 1481 036a BB89     		ldrh	r3, [r7, #12]
 1482 036c 0093     		str	r3, [sp]
 1483 036e FB69     		ldr	r3, [r7, #28]
 1484 0370 BA69     		ldr	r2, [r7, #24]
 1485 0372 4249     		ldr	r1, .L89+20
 1486 0374 4248     		ldr	r0, .L89+24
 1487 0376 FFF7FEFF 		bl	sprintf
 335:main.c        ****                     UART_PutString(sendValue);
 1488              		.loc 1 335 0
 1489 037a 4148     		ldr	r0, .L89+24
 1490 037c FFF7FEFF 		bl	UART_PutString
 1491              	.L78:
 336:main.c        ****                 }
 337:main.c        ****                 writePWM(calib_cyl,0);
 1492              		.loc 1 337 0
 1493 0380 0021     		movs	r1, #0
 1494 0382 3869     		ldr	r0, [r7, #16]
 1495 0384 FFF7FEFF 		bl	writePWM
 338:main.c        ****                 CyDelay(500);
 1496              		.loc 1 338 0
 1497 0388 4FF4FA70 		mov	r0, #500
 1498 038c FFF7FEFF 		bl	CyDelay
 339:main.c        ****                 
 340:main.c        ****                 prev_adcValue = adcValue[calib_cyl];
 1499              		.loc 1 340 0
 1500 0390 394A     		ldr	r2, .L89+16
 1501 0392 3B69     		ldr	r3, [r7, #16]
 1502 0394 32F81330 		ldrh	r3, [r2, r3, lsl #1]	@ movhi
 1503 0398 FB81     		strh	r3, [r7, #14]	@ movhi
 341:main.c        ****                 if(lower_offset_set==0){
 1504              		.loc 1 341 0
 1505 039a 3B6A     		ldr	r3, [r7, #32]
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\cc3FIxQa.s 			page 35


 1506 039c 002B     		cmp	r3, #0
 1507 039e 24D1     		bne	.L81
 342:main.c        ****                     writePWM(calib_cyl,lower_offset);
 1508              		.loc 1 342 0
 1509 03a0 B969     		ldr	r1, [r7, #24]
 1510 03a2 3869     		ldr	r0, [r7, #16]
 1511 03a4 FFF7FEFF 		bl	writePWM
 343:main.c        ****                     CyDelay(200);
 1512              		.loc 1 343 0
 1513 03a8 C820     		movs	r0, #200
 1514 03aa FFF7FEFF 		bl	CyDelay
 344:main.c        ****                     diff = abs(prev_adcValue-adcValue[calib_cyl]);
 1515              		.loc 1 344 0
 1516 03ae FB89     		ldrh	r3, [r7, #14]
 1517 03b0 3149     		ldr	r1, .L89+16
 1518 03b2 3A69     		ldr	r2, [r7, #16]
 1519 03b4 31F81220 		ldrh	r2, [r1, r2, lsl #1]
 1520 03b8 9B1A     		subs	r3, r3, r2
 1521 03ba 002B     		cmp	r3, #0
 1522 03bc B8BF     		it	lt
 1523 03be 5B42     		rsblt	r3, r3, #0
 1524 03c0 BB81     		strh	r3, [r7, #12]	@ movhi
 345:main.c        ****                     if(diff>10){
 1525              		.loc 1 345 0
 1526 03c2 BB89     		ldrh	r3, [r7, #12]
 1527 03c4 0A2B     		cmp	r3, #10
 1528 03c6 02D9     		bls	.L82
 346:main.c        ****                         lower_offset_set=1;
 1529              		.loc 1 346 0
 1530 03c8 0123     		movs	r3, #1
 1531 03ca 3B62     		str	r3, [r7, #32]
 1532 03cc 02E0     		b	.L83
 1533              	.L82:
 347:main.c        ****                     }else{
 348:main.c        ****                         lower_offset = lower_offset - 1;
 1534              		.loc 1 348 0
 1535 03ce BB69     		ldr	r3, [r7, #24]
 1536 03d0 013B     		subs	r3, r3, #1
 1537 03d2 BB61     		str	r3, [r7, #24]
 1538              	.L83:
 349:main.c        ****                     }
 350:main.c        ****                     sprintf(sendValue,"LOWER:\tLower Offset: %d \tUpper Offset: %d \t ADC Diff: %d\
 1539              		.loc 1 350 0
 1540 03d4 BB89     		ldrh	r3, [r7, #12]
 1541 03d6 0093     		str	r3, [sp]
 1542 03d8 FB69     		ldr	r3, [r7, #28]
 1543 03da BA69     		ldr	r2, [r7, #24]
 1544 03dc 2949     		ldr	r1, .L89+28
 1545 03de 2848     		ldr	r0, .L89+24
 1546 03e0 FFF7FEFF 		bl	sprintf
 351:main.c        ****                     UART_PutString(sendValue);
 1547              		.loc 1 351 0
 1548 03e4 2648     		ldr	r0, .L89+24
 1549 03e6 FFF7FEFF 		bl	UART_PutString
 1550              	.L81:
 352:main.c        ****             
 353:main.c        ****                 }
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\cc3FIxQa.s 			page 36


 354:main.c        ****                 
 355:main.c        ****                 writePWM(calib_cyl,0);
 1551              		.loc 1 355 0
 1552 03ea 0021     		movs	r1, #0
 1553 03ec 3869     		ldr	r0, [r7, #16]
 1554 03ee FFF7FEFF 		bl	writePWM
 356:main.c        ****                 CyDelay(500);
 1555              		.loc 1 356 0
 1556 03f2 4FF4FA70 		mov	r0, #500
 1557 03f6 FFF7FEFF 		bl	CyDelay
 1558              	.L77:
 322:main.c        ****                 
 1559              		.loc 1 322 0
 1560 03fa 7B6A     		ldr	r3, [r7, #36]
 1561 03fc 002B     		cmp	r3, #0
 1562 03fe 02D1     		bne	.L84
 322:main.c        ****                 
 1563              		.loc 1 322 0 is_stmt 0 discriminator 1
 1564 0400 3B6A     		ldr	r3, [r7, #32]
 1565 0402 002B     		cmp	r3, #0
 1566 0404 8FD0     		beq	.L85
 1567              	.L84:
 357:main.c        ****                 
 358:main.c        ****             }
 359:main.c        ****             
 360:main.c        ****             sprintf(sendValue,"Lower Offset: %d \t Upper Offset: %d \n",lower_offset,upper_offset);
 1568              		.loc 1 360 0 is_stmt 1
 1569 0406 FB69     		ldr	r3, [r7, #28]
 1570 0408 BA69     		ldr	r2, [r7, #24]
 1571 040a 1F49     		ldr	r1, .L89+32
 1572 040c 1C48     		ldr	r0, .L89+24
 1573 040e FFF7FEFF 		bl	sprintf
 361:main.c        ****             UART_PutString(sendValue);
 1574              		.loc 1 361 0
 1575 0412 1B48     		ldr	r0, .L89+24
 1576 0414 FFF7FEFF 		bl	UART_PutString
 362:main.c        ****             
 363:main.c        ****             //while(1){CyDelay(100);};
 364:main.c        ****             start_calib = 0;
 1577              		.loc 1 364 0
 1578 0418 1C4B     		ldr	r3, .L89+36
 1579 041a 0022     		movs	r2, #0
 1580 041c 1A60     		str	r2, [r3]
 1581              	.L74:
 1582              	.LBE9:
 365:main.c        ****         }
 366:main.c        ****         CyDelay(10);
 1583              		.loc 1 366 0
 1584 041e 0A20     		movs	r0, #10
 1585 0420 FFF7FEFF 		bl	CyDelay
 367:main.c        ****         time = Timer_1_ReadCounter();
 1586              		.loc 1 367 0
 1587 0424 FFF7FEFF 		bl	Timer_1_ReadCounter
 1588 0428 0346     		mov	r3, r0
 1589 042a 1846     		mov	r0, r3
 1590 042c FFF7FEFF 		bl	__aeabi_ui2d
 1591 0430 0346     		mov	r3, r0
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\cc3FIxQa.s 			page 37


 1592 0432 0C46     		mov	r4, r1
 1593 0434 C7E90034 		strd	r3, [r7]
 368:main.c        ****         dt=(double)(65535-time)/1000000;
 1594              		.loc 1 368 0
 1595 0438 D7E90023 		ldrd	r2, [r7]
 1596 043c 0AA1     		adr	r1, .L89
 1597 043e D1E90001 		ldrd	r0, [r1]
 1598 0442 FFF7FEFF 		bl	__aeabi_dsub
 1599 0446 0346     		mov	r3, r0
 1600 0448 0C46     		mov	r4, r1
 1601 044a 1846     		mov	r0, r3
 1602 044c 2146     		mov	r1, r4
 1603 044e 08A3     		adr	r3, .L89+8
 1604 0450 D3E90023 		ldrd	r2, [r3]
 1605 0454 FFF7FEFF 		bl	__aeabi_ddiv
 1606 0458 0346     		mov	r3, r0
 1607 045a 0C46     		mov	r4, r1
 1608 045c C7E90C34 		strd	r3, [r7, #48]
 369:main.c        **** 
 370:main.c        ****     }
 1609              		.loc 1 370 0
 1610 0460 0BE6     		b	.L86
 1611              	.L90:
 1612 0462 00BFAFF3 		.align	3
 1612      0080
 1613              	.L89:
 1614 0468 00000000 		.word	0
 1615 046c E0FFEF40 		.word	1089470432
 1616 0470 00000000 		.word	0
 1617 0474 80842E41 		.word	1093567616
 1618 0478 00000000 		.word	adcValue
 1619 047c 34000000 		.word	.LC2
 1620 0480 00000000 		.word	sendValue
 1621 0484 70000000 		.word	.LC3
 1622 0488 AC000000 		.word	.LC4
 1623 048c 00000000 		.word	start_calib
 1624              		.cfi_endproc
 1625              	.LFE68:
 1626              		.size	main, .-main
 1627              		.text
 1628              	.Letext0:
 1629              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 1630              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 1631              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 1632              		.file 5 "Generated_Source\\PSoC5/core_cm3.h"
 1633              		.section	.debug_info,"",%progbits
 1634              	.Ldebug_info0:
 1635 0000 A5050000 		.4byte	0x5a5
 1636 0004 0400     		.2byte	0x4
 1637 0006 00000000 		.4byte	.Ldebug_abbrev0
 1638 000a 04       		.byte	0x4
 1639 000b 01       		.uleb128 0x1
 1640 000c 66000000 		.4byte	.LASF58
 1641 0010 0C       		.byte	0xc
 1642 0011 82020000 		.4byte	.LASF59
 1643 0015 18020000 		.4byte	.LASF60
 1644 0019 00000000 		.4byte	.Ldebug_ranges0+0
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\cc3FIxQa.s 			page 38


 1645 001d 00000000 		.4byte	0
 1646 0021 00000000 		.4byte	.Ldebug_line0
 1647 0025 02       		.uleb128 0x2
 1648 0026 01       		.byte	0x1
 1649 0027 06       		.byte	0x6
 1650 0028 42010000 		.4byte	.LASF0
 1651 002c 02       		.uleb128 0x2
 1652 002d 01       		.byte	0x1
 1653 002e 08       		.byte	0x8
 1654 002f 96010000 		.4byte	.LASF1
 1655 0033 02       		.uleb128 0x2
 1656 0034 02       		.byte	0x2
 1657 0035 05       		.byte	0x5
 1658 0036 41000000 		.4byte	.LASF2
 1659 003a 02       		.uleb128 0x2
 1660 003b 02       		.byte	0x2
 1661 003c 07       		.byte	0x7
 1662 003d 05020000 		.4byte	.LASF3
 1663 0041 03       		.uleb128 0x3
 1664 0042 BB020000 		.4byte	.LASF9
 1665 0046 02       		.byte	0x2
 1666 0047 3F       		.byte	0x3f
 1667 0048 4C000000 		.4byte	0x4c
 1668 004c 02       		.uleb128 0x2
 1669 004d 04       		.byte	0x4
 1670 004e 05       		.byte	0x5
 1671 004f 75010000 		.4byte	.LASF4
 1672 0053 02       		.uleb128 0x2
 1673 0054 04       		.byte	0x4
 1674 0055 07       		.byte	0x7
 1675 0056 8E020000 		.4byte	.LASF5
 1676 005a 02       		.uleb128 0x2
 1677 005b 08       		.byte	0x8
 1678 005c 05       		.byte	0x5
 1679 005d F4000000 		.4byte	.LASF6
 1680 0061 02       		.uleb128 0x2
 1681 0062 08       		.byte	0x8
 1682 0063 07       		.byte	0x7
 1683 0064 D6010000 		.4byte	.LASF7
 1684 0068 04       		.uleb128 0x4
 1685 0069 04       		.byte	0x4
 1686 006a 05       		.byte	0x5
 1687 006b 696E7400 		.ascii	"int\000"
 1688 006f 02       		.uleb128 0x2
 1689 0070 04       		.byte	0x4
 1690 0071 07       		.byte	0x7
 1691 0072 ED010000 		.4byte	.LASF8
 1692 0076 03       		.uleb128 0x3
 1693 0077 73020000 		.4byte	.LASF10
 1694 007b 03       		.byte	0x3
 1695 007c 2C       		.byte	0x2c
 1696 007d 41000000 		.4byte	0x41
 1697 0081 05       		.uleb128 0x5
 1698 0082 27010000 		.4byte	.LASF11
 1699 0086 04       		.byte	0x4
 1700 0087 9201     		.2byte	0x192
 1701 0089 2C000000 		.4byte	0x2c
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\cc3FIxQa.s 			page 39


 1702 008d 05       		.uleb128 0x5
 1703 008e 7B020000 		.4byte	.LASF12
 1704 0092 04       		.byte	0x4
 1705 0093 9301     		.2byte	0x193
 1706 0095 3A000000 		.4byte	0x3a
 1707 0099 02       		.uleb128 0x2
 1708 009a 04       		.byte	0x4
 1709 009b 04       		.byte	0x4
 1710 009c 1C000000 		.4byte	.LASF13
 1711 00a0 02       		.uleb128 0x2
 1712 00a1 08       		.byte	0x8
 1713 00a2 04       		.byte	0x4
 1714 00a3 1D030000 		.4byte	.LASF14
 1715 00a7 02       		.uleb128 0x2
 1716 00a8 01       		.byte	0x1
 1717 00a9 08       		.byte	0x8
 1718 00aa 64020000 		.4byte	.LASF15
 1719 00ae 05       		.uleb128 0x5
 1720 00af 89020000 		.4byte	.LASF16
 1721 00b3 04       		.byte	0x4
 1722 00b4 3C02     		.2byte	0x23c
 1723 00b6 BA000000 		.4byte	0xba
 1724 00ba 06       		.uleb128 0x6
 1725 00bb 81000000 		.4byte	0x81
 1726 00bf 02       		.uleb128 0x2
 1727 00c0 08       		.byte	0x8
 1728 00c1 04       		.byte	0x4
 1729 00c2 00000000 		.4byte	.LASF17
 1730 00c6 02       		.uleb128 0x2
 1731 00c7 04       		.byte	0x4
 1732 00c8 07       		.byte	0x7
 1733 00c9 58000000 		.4byte	.LASF18
 1734 00cd 07       		.uleb128 0x7
 1735 00ce 57010000 		.4byte	.LASF23
 1736 00d2 01       		.byte	0x1
 1737 00d3 15       		.byte	0x15
 1738 00d4 00000000 		.4byte	.LFB64
 1739 00d8 78000000 		.4byte	.LFE64-.LFB64
 1740 00dc 01       		.uleb128 0x1
 1741 00dd 9C       		.byte	0x9c
 1742 00de FF000000 		.4byte	0xff
 1743 00e2 08       		.uleb128 0x8
 1744 00e3 2D010000 		.4byte	.LASF19
 1745 00e7 01       		.byte	0x1
 1746 00e8 15       		.byte	0x15
 1747 00e9 68000000 		.4byte	0x68
 1748 00ed 02       		.uleb128 0x2
 1749 00ee 91       		.byte	0x91
 1750 00ef 74       		.sleb128 -12
 1751 00f0 08       		.uleb128 0x8
 1752 00f1 21010000 		.4byte	.LASF20
 1753 00f5 01       		.byte	0x1
 1754 00f6 15       		.byte	0x15
 1755 00f7 68000000 		.4byte	0x68
 1756 00fb 02       		.uleb128 0x2
 1757 00fc 91       		.byte	0x91
 1758 00fd 70       		.sleb128 -16
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\cc3FIxQa.s 			page 40


 1759 00fe 00       		.byte	0
 1760 00ff 09       		.uleb128 0x9
 1761 0100 D2020000 		.4byte	.LASF61
 1762 0104 01       		.byte	0x1
 1763 0105 26       		.byte	0x26
 1764 0106 68000000 		.4byte	0x68
 1765 010a 00000000 		.4byte	.LFB65
 1766 010e 54000000 		.4byte	.LFE65-.LFB65
 1767 0112 01       		.uleb128 0x1
 1768 0113 9C       		.byte	0x9c
 1769 0114 43010000 		.4byte	0x143
 1770 0118 08       		.uleb128 0x8
 1771 0119 21010000 		.4byte	.LASF20
 1772 011d 01       		.byte	0x1
 1773 011e 26       		.byte	0x26
 1774 011f 68000000 		.4byte	0x68
 1775 0123 02       		.uleb128 0x2
 1776 0124 91       		.byte	0x91
 1777 0125 74       		.sleb128 -12
 1778 0126 08       		.uleb128 0x8
 1779 0127 C5020000 		.4byte	.LASF21
 1780 012b 01       		.byte	0x1
 1781 012c 26       		.byte	0x26
 1782 012d 68000000 		.4byte	0x68
 1783 0131 02       		.uleb128 0x2
 1784 0132 91       		.byte	0x91
 1785 0133 70       		.sleb128 -16
 1786 0134 08       		.uleb128 0x8
 1787 0135 4B000000 		.4byte	.LASF22
 1788 0139 01       		.byte	0x1
 1789 013a 26       		.byte	0x26
 1790 013b 68000000 		.4byte	0x68
 1791 013f 02       		.uleb128 0x2
 1792 0140 91       		.byte	0x91
 1793 0141 6C       		.sleb128 -20
 1794 0142 00       		.byte	0
 1795 0143 07       		.uleb128 0x7
 1796 0144 E9020000 		.4byte	.LASF24
 1797 0148 01       		.byte	0x1
 1798 0149 4F       		.byte	0x4f
 1799 014a 00000000 		.4byte	.LFB66
 1800 014e 50010000 		.4byte	.LFE66-.LFB66
 1801 0152 01       		.uleb128 0x1
 1802 0153 9C       		.byte	0x9c
 1803 0154 CF010000 		.4byte	0x1cf
 1804 0158 0A       		.uleb128 0xa
 1805 0159 06000000 		.4byte	.LBB2
 1806 015d 2E010000 		.4byte	.LBE2-.LBB2
 1807 0161 0B       		.uleb128 0xb
 1808 0162 6300     		.ascii	"c\000"
 1809 0164 01       		.byte	0x1
 1810 0165 50       		.byte	0x50
 1811 0166 68000000 		.4byte	0x68
 1812 016a 02       		.uleb128 0x2
 1813 016b 91       		.byte	0x91
 1814 016c 74       		.sleb128 -12
 1815 016d 0C       		.uleb128 0xc
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\cc3FIxQa.s 			page 41


 1816 016e 16000000 		.4byte	.LBB3
 1817 0172 3A000000 		.4byte	.LBE3-.LBB3
 1818 0176 87010000 		.4byte	0x187
 1819 017a 0B       		.uleb128 0xb
 1820 017b 6A00     		.ascii	"j\000"
 1821 017d 01       		.byte	0x1
 1822 017e 53       		.byte	0x53
 1823 017f 68000000 		.4byte	0x68
 1824 0183 02       		.uleb128 0x2
 1825 0184 91       		.byte	0x91
 1826 0185 70       		.sleb128 -16
 1827 0186 00       		.byte	0
 1828 0187 0C       		.uleb128 0xc
 1829 0188 8E000000 		.4byte	.LBB4
 1830 018c 2C000000 		.4byte	.LBE4-.LBB4
 1831 0190 A1010000 		.4byte	0x1a1
 1832 0194 0B       		.uleb128 0xb
 1833 0195 6A00     		.ascii	"j\000"
 1834 0197 01       		.byte	0x1
 1835 0198 5B       		.byte	0x5b
 1836 0199 68000000 		.4byte	0x68
 1837 019d 02       		.uleb128 0x2
 1838 019e 91       		.byte	0x91
 1839 019f 6C       		.sleb128 -20
 1840 01a0 00       		.byte	0
 1841 01a1 0A       		.uleb128 0xa
 1842 01a2 BA000000 		.4byte	.LBB5
 1843 01a6 60000000 		.4byte	.LBE5-.LBB5
 1844 01aa 0B       		.uleb128 0xb
 1845 01ab 6900     		.ascii	"i\000"
 1846 01ad 01       		.byte	0x1
 1847 01ae 5E       		.byte	0x5e
 1848 01af 68000000 		.4byte	0x68
 1849 01b3 02       		.uleb128 0x2
 1850 01b4 91       		.byte	0x91
 1851 01b5 68       		.sleb128 -24
 1852 01b6 0A       		.uleb128 0xa
 1853 01b7 C0000000 		.4byte	.LBB6
 1854 01bb 4E000000 		.4byte	.LBE6-.LBB6
 1855 01bf 0B       		.uleb128 0xb
 1856 01c0 6A00     		.ascii	"j\000"
 1857 01c2 01       		.byte	0x1
 1858 01c3 5F       		.byte	0x5f
 1859 01c4 68000000 		.4byte	0x68
 1860 01c8 02       		.uleb128 0x2
 1861 01c9 91       		.byte	0x91
 1862 01ca 64       		.sleb128 -28
 1863 01cb 00       		.byte	0
 1864 01cc 00       		.byte	0
 1865 01cd 00       		.byte	0
 1866 01ce 00       		.byte	0
 1867 01cf 07       		.uleb128 0x7
 1868 01d0 FF010000 		.4byte	.LASF25
 1869 01d4 01       		.byte	0x1
 1870 01d5 70       		.byte	0x70
 1871 01d6 00000000 		.4byte	.LFB67
 1872 01da CC020000 		.4byte	.LFE67-.LFB67
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\cc3FIxQa.s 			page 42


 1873 01de 01       		.uleb128 0x1
 1874 01df 9C       		.byte	0x9c
 1875 01e0 18020000 		.4byte	0x218
 1876 01e4 0D       		.uleb128 0xd
 1877 01e5 BC010000 		.4byte	.LASF26
 1878 01e9 01       		.byte	0x1
 1879 01ea 72       		.byte	0x72
 1880 01eb 81000000 		.4byte	0x81
 1881 01ef 02       		.uleb128 0x2
 1882 01f0 91       		.byte	0x91
 1883 01f1 6B       		.sleb128 -21
 1884 01f2 0D       		.uleb128 0xd
 1885 01f3 F4020000 		.4byte	.LASF27
 1886 01f7 01       		.byte	0x1
 1887 01f8 73       		.byte	0x73
 1888 01f9 81000000 		.4byte	0x81
 1889 01fd 02       		.uleb128 0x2
 1890 01fe 91       		.byte	0x91
 1891 01ff 6A       		.sleb128 -22
 1892 0200 0A       		.uleb128 0xa
 1893 0201 A4000000 		.4byte	.LBB7
 1894 0205 1C000000 		.4byte	.LBE7-.LBB7
 1895 0209 0B       		.uleb128 0xb
 1896 020a 707000   		.ascii	"pp\000"
 1897 020d 01       		.byte	0x1
 1898 020e 8F       		.byte	0x8f
 1899 020f 68000000 		.4byte	0x68
 1900 0213 02       		.uleb128 0x2
 1901 0214 91       		.byte	0x91
 1902 0215 6C       		.sleb128 -20
 1903 0216 00       		.byte	0
 1904 0217 00       		.byte	0
 1905 0218 0E       		.uleb128 0xe
 1906 0219 61000000 		.4byte	.LASF28
 1907 021d 01       		.byte	0x1
 1908 021e F8       		.byte	0xf8
 1909 021f 68000000 		.4byte	0x68
 1910 0223 00000000 		.4byte	.LFB68
 1911 0227 90040000 		.4byte	.LFE68-.LFB68
 1912 022b 01       		.uleb128 0x1
 1913 022c 9C       		.byte	0x9c
 1914 022d 08030000 		.4byte	0x308
 1915 0231 0F       		.uleb128 0xf
 1916 0232 647400   		.ascii	"dt\000"
 1917 0235 01       		.byte	0x1
 1918 0236 0D01     		.2byte	0x10d
 1919 0238 A0000000 		.4byte	0xa0
 1920 023c 02       		.uleb128 0x2
 1921 023d 91       		.byte	0x91
 1922 023e 60       		.sleb128 -32
 1923 023f 10       		.uleb128 0x10
 1924 0240 FA010000 		.4byte	.LASF29
 1925 0244 01       		.byte	0x1
 1926 0245 0E01     		.2byte	0x10e
 1927 0247 A0000000 		.4byte	0xa0
 1928 024b 03       		.uleb128 0x3
 1929 024c 91       		.byte	0x91
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\cc3FIxQa.s 			page 43


 1930 024d B07F     		.sleb128 -80
 1931 024f 10       		.uleb128 0x10
 1932 0250 4E010000 		.4byte	.LASF30
 1933 0254 01       		.byte	0x1
 1934 0255 1701     		.2byte	0x117
 1935 0257 68000000 		.4byte	0x68
 1936 025b 02       		.uleb128 0x2
 1937 025c 91       		.byte	0x91
 1938 025d 5C       		.sleb128 -36
 1939 025e 0C       		.uleb128 0xc
 1940 025f 82000000 		.4byte	.LBB8
 1941 0263 BE010000 		.4byte	.LBE8-.LBB8
 1942 0267 7B020000 		.4byte	0x27b
 1943 026b 0F       		.uleb128 0xf
 1944 026c 63796C00 		.ascii	"cyl\000"
 1945 0270 01       		.byte	0x1
 1946 0271 1D01     		.2byte	0x11d
 1947 0273 68000000 		.4byte	0x68
 1948 0277 02       		.uleb128 0x2
 1949 0278 91       		.byte	0x91
 1950 0279 58       		.sleb128 -40
 1951 027a 00       		.byte	0
 1952 027b 0A       		.uleb128 0xa
 1953 027c 8C020000 		.4byte	.LBB9
 1954 0280 92010000 		.4byte	.LBE9-.LBB9
 1955 0284 10       		.uleb128 0x10
 1956 0285 69020000 		.4byte	.LASF31
 1957 0289 01       		.byte	0x1
 1958 028a 3601     		.2byte	0x136
 1959 028c 68000000 		.4byte	0x68
 1960 0290 02       		.uleb128 0x2
 1961 0291 91       		.byte	0x91
 1962 0292 40       		.sleb128 -64
 1963 0293 10       		.uleb128 0x10
 1964 0294 31030000 		.4byte	.LASF32
 1965 0298 01       		.byte	0x1
 1966 0299 3701     		.2byte	0x137
 1967 029b 68000000 		.4byte	0x68
 1968 029f 02       		.uleb128 0x2
 1969 02a0 91       		.byte	0x91
 1970 02a1 54       		.sleb128 -44
 1971 02a2 10       		.uleb128 0x10
 1972 02a3 85010000 		.4byte	.LASF33
 1973 02a7 01       		.byte	0x1
 1974 02a8 3801     		.2byte	0x138
 1975 02aa 68000000 		.4byte	0x68
 1976 02ae 02       		.uleb128 0x2
 1977 02af 91       		.byte	0x91
 1978 02b0 50       		.sleb128 -48
 1979 02b1 10       		.uleb128 0x10
 1980 02b2 68010000 		.4byte	.LASF34
 1981 02b6 01       		.byte	0x1
 1982 02b7 3901     		.2byte	0x139
 1983 02b9 68000000 		.4byte	0x68
 1984 02bd 02       		.uleb128 0x2
 1985 02be 91       		.byte	0x91
 1986 02bf 4C       		.sleb128 -52
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\cc3FIxQa.s 			page 44


 1987 02c0 10       		.uleb128 0x10
 1988 02c1 AF010000 		.4byte	.LASF35
 1989 02c5 01       		.byte	0x1
 1990 02c6 3A01     		.2byte	0x13a
 1991 02c8 68000000 		.4byte	0x68
 1992 02cc 02       		.uleb128 0x2
 1993 02cd 91       		.byte	0x91
 1994 02ce 48       		.sleb128 -56
 1995 02cf 10       		.uleb128 0x10
 1996 02d0 AD020000 		.4byte	.LASF36
 1997 02d4 01       		.byte	0x1
 1998 02d5 3B01     		.2byte	0x13b
 1999 02d7 8D000000 		.4byte	0x8d
 2000 02db 03       		.uleb128 0x3
 2001 02dc 91       		.byte	0x91
 2002 02dd BE7F     		.sleb128 -66
 2003 02df 10       		.uleb128 0x10
 2004 02e0 2B000000 		.4byte	.LASF37
 2005 02e4 01       		.byte	0x1
 2006 02e5 3C01     		.2byte	0x13c
 2007 02e7 8D000000 		.4byte	0x8d
 2008 02eb 03       		.uleb128 0x3
 2009 02ec 91       		.byte	0x91
 2010 02ed BC7F     		.sleb128 -68
 2011 02ef 0A       		.uleb128 0xa
 2012 02f0 AC020000 		.4byte	.LBB10
 2013 02f4 70000000 		.4byte	.LBE10-.LBB10
 2014 02f8 0F       		.uleb128 0xf
 2015 02f9 6700     		.ascii	"g\000"
 2016 02fb 01       		.byte	0x1
 2017 02fc 3D01     		.2byte	0x13d
 2018 02fe 68000000 		.4byte	0x68
 2019 0302 02       		.uleb128 0x2
 2020 0303 91       		.byte	0x91
 2021 0304 44       		.sleb128 -60
 2022 0305 00       		.byte	0
 2023 0306 00       		.byte	0
 2024 0307 00       		.byte	0
 2025 0308 11       		.uleb128 0x11
 2026 0309 24030000 		.4byte	.LASF38
 2027 030d 05       		.byte	0x5
 2028 030e 1207     		.2byte	0x712
 2029 0310 14030000 		.4byte	0x314
 2030 0314 06       		.uleb128 0x6
 2031 0315 76000000 		.4byte	0x76
 2032 0319 12       		.uleb128 0x12
 2033 031a 36010000 		.4byte	.LASF39
 2034 031e 01       		.byte	0x1
 2035 031f 13       		.byte	0x13
 2036 0320 81000000 		.4byte	0x81
 2037 0324 05       		.uleb128 0x5
 2038 0325 03       		.byte	0x3
 2039 0326 00000000 		.4byte	errorStatus
 2040 032a 12       		.uleb128 0x12
 2041 032b 12010000 		.4byte	.LASF40
 2042 032f 01       		.byte	0x1
 2043 0330 2F       		.byte	0x2f
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\cc3FIxQa.s 			page 45


 2044 0331 68000000 		.4byte	0x68
 2045 0335 05       		.uleb128 0x5
 2046 0336 03       		.byte	0x3
 2047 0337 00000000 		.4byte	data_read_mode
 2048 033b 13       		.uleb128 0x13
 2049 033c 4B030000 		.4byte	0x34b
 2050 0340 4B030000 		.4byte	0x34b
 2051 0344 14       		.uleb128 0x14
 2052 0345 C6000000 		.4byte	0xc6
 2053 0349 01       		.byte	0x1
 2054 034a 00       		.byte	0
 2055 034b 06       		.uleb128 0x6
 2056 034c 68000000 		.4byte	0x68
 2057 0350 12       		.uleb128 0x12
 2058 0351 30000000 		.4byte	.LASF41
 2059 0355 01       		.byte	0x1
 2060 0356 31       		.byte	0x31
 2061 0357 61030000 		.4byte	0x361
 2062 035b 05       		.uleb128 0x5
 2063 035c 03       		.byte	0x3
 2064 035d 00000000 		.4byte	new_pos_set
 2065 0361 06       		.uleb128 0x6
 2066 0362 3B030000 		.4byte	0x33b
 2067 0366 13       		.uleb128 0x13
 2068 0367 68000000 		.4byte	0x68
 2069 036b 76030000 		.4byte	0x376
 2070 036f 14       		.uleb128 0x14
 2071 0370 C6000000 		.4byte	0xc6
 2072 0374 01       		.byte	0x1
 2073 0375 00       		.byte	0
 2074 0376 12       		.uleb128 0x12
 2075 0377 C5010000 		.4byte	.LASF42
 2076 037b 01       		.byte	0x1
 2077 037c 32       		.byte	0x32
 2078 037d 66030000 		.4byte	0x366
 2079 0381 05       		.uleb128 0x5
 2080 0382 03       		.byte	0x3
 2081 0383 00000000 		.4byte	new_pos
 2082 0387 15       		.uleb128 0x15
 2083 0388 706F7300 		.ascii	"pos\000"
 2084 038c 01       		.byte	0x1
 2085 038d 33       		.byte	0x33
 2086 038e 66030000 		.4byte	0x366
 2087 0392 05       		.uleb128 0x5
 2088 0393 03       		.byte	0x3
 2089 0394 00000000 		.4byte	pos
 2090 0398 12       		.uleb128 0x12
 2091 0399 21010000 		.4byte	.LASF20
 2092 039d 01       		.byte	0x1
 2093 039e 34       		.byte	0x34
 2094 039f 66030000 		.4byte	0x366
 2095 03a3 05       		.uleb128 0x5
 2096 03a4 03       		.byte	0x3
 2097 03a5 00000000 		.4byte	pulse
 2098 03a9 12       		.uleb128 0x12
 2099 03aa A4010000 		.4byte	.LASF43
 2100 03ae 01       		.byte	0x1
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\cc3FIxQa.s 			page 46


 2101 03af 35       		.byte	0x35
 2102 03b0 66030000 		.4byte	0x366
 2103 03b4 05       		.uleb128 0x5
 2104 03b5 03       		.byte	0x3
 2105 03b6 00000000 		.4byte	pulse_temp
 2106 03ba 13       		.uleb128 0x13
 2107 03bb A0000000 		.4byte	0xa0
 2108 03bf CA030000 		.4byte	0x3ca
 2109 03c3 14       		.uleb128 0x14
 2110 03c4 C6000000 		.4byte	0xc6
 2111 03c8 01       		.byte	0x1
 2112 03c9 00       		.byte	0
 2113 03ca 15       		.uleb128 0x15
 2114 03cb 65727200 		.ascii	"err\000"
 2115 03cf 01       		.byte	0x1
 2116 03d0 36       		.byte	0x36
 2117 03d1 BA030000 		.4byte	0x3ba
 2118 03d5 05       		.uleb128 0x5
 2119 03d6 03       		.byte	0x3
 2120 03d7 00000000 		.4byte	err
 2121 03db 13       		.uleb128 0x13
 2122 03dc 8D000000 		.4byte	0x8d
 2123 03e0 EB030000 		.4byte	0x3eb
 2124 03e4 14       		.uleb128 0x14
 2125 03e5 C6000000 		.4byte	0xc6
 2126 03e9 01       		.byte	0x1
 2127 03ea 00       		.byte	0
 2128 03eb 12       		.uleb128 0x12
 2129 03ec CD010000 		.4byte	.LASF44
 2130 03f0 01       		.byte	0x1
 2131 03f1 37       		.byte	0x37
 2132 03f2 DB030000 		.4byte	0x3db
 2133 03f6 05       		.uleb128 0x5
 2134 03f7 03       		.byte	0x3
 2135 03f8 00000000 		.4byte	adcValue
 2136 03fc 15       		.uleb128 0x15
 2137 03fd 64657200 		.ascii	"der\000"
 2138 0401 01       		.byte	0x1
 2139 0402 38       		.byte	0x38
 2140 0403 BA030000 		.4byte	0x3ba
 2141 0407 05       		.uleb128 0x5
 2142 0408 03       		.byte	0x3
 2143 0409 00000000 		.4byte	der
 2144 040d 12       		.uleb128 0x12
 2145 040e 22000000 		.4byte	.LASF45
 2146 0412 01       		.byte	0x1
 2147 0413 39       		.byte	0x39
 2148 0414 BA030000 		.4byte	0x3ba
 2149 0418 05       		.uleb128 0x5
 2150 0419 03       		.byte	0x3
 2151 041a 00000000 		.4byte	prev_err
 2152 041e 12       		.uleb128 0x12
 2153 041f A0020000 		.4byte	.LASF46
 2154 0423 01       		.byte	0x1
 2155 0424 3A       		.byte	0x3a
 2156 0425 BA030000 		.4byte	0x3ba
 2157 0429 05       		.uleb128 0x5
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\cc3FIxQa.s 			page 47


 2158 042a 03       		.byte	0x3
 2159 042b 00000000 		.4byte	pid_integral
 2160 042f 12       		.uleb128 0x12
 2161 0430 0C000000 		.4byte	.LASF47
 2162 0434 01       		.byte	0x1
 2163 0435 3B       		.byte	0x3b
 2164 0436 68000000 		.4byte	0x68
 2165 043a 05       		.uleb128 0x5
 2166 043b 03       		.byte	0x3
 2167 043c 00000000 		.4byte	cyl_set
 2168 0440 13       		.uleb128 0x13
 2169 0441 A7000000 		.4byte	0xa7
 2170 0445 50040000 		.4byte	0x450
 2171 0449 14       		.uleb128 0x14
 2172 044a C6000000 		.4byte	0xc6
 2173 044e 00       		.byte	0
 2174 044f 00       		.byte	0
 2175 0450 12       		.uleb128 0x12
 2176 0451 14000000 		.4byte	.LASF48
 2177 0455 01       		.byte	0x1
 2178 0456 3C       		.byte	0x3c
 2179 0457 40040000 		.4byte	0x440
 2180 045b 05       		.uleb128 0x5
 2181 045c 03       		.byte	0x3
 2182 045d 00000000 		.4byte	cyl_tmp
 2183 0461 13       		.uleb128 0x13
 2184 0462 68000000 		.4byte	0x68
 2185 0466 77040000 		.4byte	0x477
 2186 046a 14       		.uleb128 0x14
 2187 046b C6000000 		.4byte	0xc6
 2188 046f 03       		.byte	0x3
 2189 0470 14       		.uleb128 0x14
 2190 0471 C6000000 		.4byte	0xc6
 2191 0475 01       		.byte	0x1
 2192 0476 00       		.byte	0
 2193 0477 12       		.uleb128 0x12
 2194 0478 60010000 		.4byte	.LASF49
 2195 047c 01       		.byte	0x1
 2196 047d 3E       		.byte	0x3e
 2197 047e 61040000 		.4byte	0x461
 2198 0482 05       		.uleb128 0x5
 2199 0483 03       		.byte	0x3
 2200 0484 00000000 		.4byte	offsets
 2201 0488 13       		.uleb128 0x13
 2202 0489 A7000000 		.4byte	0xa7
 2203 048d 98040000 		.4byte	0x498
 2204 0491 14       		.uleb128 0x14
 2205 0492 C6000000 		.4byte	0xc6
 2206 0496 63       		.byte	0x63
 2207 0497 00       		.byte	0
 2208 0498 12       		.uleb128 0x12
 2209 0499 13030000 		.4byte	.LASF50
 2210 049d 01       		.byte	0x1
 2211 049e 40       		.byte	0x40
 2212 049f 88040000 		.4byte	0x488
 2213 04a3 05       		.uleb128 0x5
 2214 04a4 03       		.byte	0x3
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\cc3FIxQa.s 			page 48


 2215 04a5 00000000 		.4byte	sendValue
 2216 04a9 13       		.uleb128 0x13
 2217 04aa A7000000 		.4byte	0xa7
 2218 04ae B9040000 		.4byte	0x4b9
 2219 04b2 14       		.uleb128 0x14
 2220 04b3 C6000000 		.4byte	0xc6
 2221 04b7 13       		.byte	0x13
 2222 04b8 00       		.byte	0
 2223 04b9 12       		.uleb128 0x12
 2224 04ba 3C000000 		.4byte	.LASF51
 2225 04be 01       		.byte	0x1
 2226 04bf 41       		.byte	0x41
 2227 04c0 A9040000 		.4byte	0x4a9
 2228 04c4 05       		.uleb128 0x5
 2229 04c5 03       		.byte	0x3
 2230 04c6 00000000 		.4byte	temp
 2231 04ca 15       		.uleb128 0x15
 2232 04cb 6E6E00   		.ascii	"nn\000"
 2233 04ce 01       		.byte	0x1
 2234 04cf 42       		.byte	0x42
 2235 04d0 68000000 		.4byte	0x68
 2236 04d4 05       		.uleb128 0x5
 2237 04d5 03       		.byte	0x3
 2238 04d6 00000000 		.4byte	nn
 2239 04da 13       		.uleb128 0x13
 2240 04db A0000000 		.4byte	0xa0
 2241 04df EA040000 		.4byte	0x4ea
 2242 04e3 14       		.uleb128 0x14
 2243 04e4 C6000000 		.4byte	0xc6
 2244 04e8 02       		.byte	0x2
 2245 04e9 00       		.byte	0
 2246 04ea 15       		.uleb128 0x15
 2247 04eb 70696400 		.ascii	"pid\000"
 2248 04ef 01       		.byte	0x1
 2249 04f0 43       		.byte	0x43
 2250 04f1 DA040000 		.4byte	0x4da
 2251 04f5 05       		.uleb128 0x5
 2252 04f6 03       		.byte	0x3
 2253 04f7 00000000 		.4byte	pid
 2254 04fb 12       		.uleb128 0x12
 2255 04fc 02010000 		.4byte	.LASF52
 2256 0500 01       		.byte	0x1
 2257 0501 45       		.byte	0x45
 2258 0502 88040000 		.4byte	0x488
 2259 0506 05       		.uleb128 0x5
 2260 0507 03       		.byte	0x3
 2261 0508 00000000 		.4byte	help
 2262 050c 15       		.uleb128 0x15
 2263 050d 747400   		.ascii	"tt\000"
 2264 0510 01       		.byte	0x1
 2265 0511 46       		.byte	0x46
 2266 0512 68000000 		.4byte	0x68
 2267 0516 05       		.uleb128 0x5
 2268 0517 03       		.byte	0x3
 2269 0518 00000000 		.4byte	tt
 2270 051c 12       		.uleb128 0x12
 2271 051d DD020000 		.4byte	.LASF53
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\cc3FIxQa.s 			page 49


 2272 0521 01       		.byte	0x1
 2273 0522 48       		.byte	0x48
 2274 0523 68000000 		.4byte	0x68
 2275 0527 05       		.uleb128 0x5
 2276 0528 03       		.byte	0x3
 2277 0529 00000000 		.4byte	start_calib
 2278 052d 12       		.uleb128 0x12
 2279 052e 7E010000 		.4byte	.LASF54
 2280 0532 01       		.byte	0x1
 2281 0533 49       		.byte	0x49
 2282 0534 68000000 		.4byte	0x68
 2283 0538 05       		.uleb128 0x5
 2284 0539 03       		.byte	0x3
 2285 053a 00000000 		.4byte	cyl_no
 2286 053e 13       		.uleb128 0x13
 2287 053f 8D000000 		.4byte	0x8d
 2288 0543 54050000 		.4byte	0x554
 2289 0547 14       		.uleb128 0x14
 2290 0548 C6000000 		.4byte	0xc6
 2291 054c 01       		.byte	0x1
 2292 054d 14       		.uleb128 0x14
 2293 054e C6000000 		.4byte	0xc6
 2294 0552 06       		.byte	0x6
 2295 0553 00       		.byte	0
 2296 0554 12       		.uleb128 0x12
 2297 0555 FB020000 		.4byte	.LASF55
 2298 0559 01       		.byte	0x1
 2299 055a 4B       		.byte	0x4b
 2300 055b 3E050000 		.4byte	0x53e
 2301 055f 05       		.uleb128 0x5
 2302 0560 03       		.byte	0x3
 2303 0561 00000000 		.4byte	moving_median
 2304 0565 13       		.uleb128 0x13
 2305 0566 8D000000 		.4byte	0x8d
 2306 056a 75050000 		.4byte	0x575
 2307 056e 14       		.uleb128 0x14
 2308 056f C6000000 		.4byte	0xc6
 2309 0573 06       		.byte	0x6
 2310 0574 00       		.byte	0
 2311 0575 12       		.uleb128 0x12
 2312 0576 09030000 		.4byte	.LASF56
 2313 057a 01       		.byte	0x1
 2314 057b 4C       		.byte	0x4c
 2315 057c 65050000 		.4byte	0x565
 2316 0580 05       		.uleb128 0x5
 2317 0581 03       		.byte	0x3
 2318 0582 00000000 		.4byte	tempArray
 2319 0586 15       		.uleb128 0x15
 2320 0587 746D7000 		.ascii	"tmp\000"
 2321 058b 01       		.byte	0x1
 2322 058c 4D       		.byte	0x4d
 2323 058d 8D000000 		.4byte	0x8d
 2324 0591 05       		.uleb128 0x5
 2325 0592 03       		.byte	0x3
 2326 0593 00000000 		.4byte	tmp
 2327 0597 12       		.uleb128 0x12
 2328 0598 07010000 		.4byte	.LASF57
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\cc3FIxQa.s 			page 50


 2329 059c 01       		.byte	0x1
 2330 059d F7       		.byte	0xf7
 2331 059e 68000000 		.4byte	0x68
 2332 05a2 05       		.uleb128 0x5
 2333 05a3 03       		.byte	0x3
 2334 05a4 00000000 		.4byte	led_switch
 2335 05a8 00       		.byte	0
 2336              		.section	.debug_abbrev,"",%progbits
 2337              	.Ldebug_abbrev0:
 2338 0000 01       		.uleb128 0x1
 2339 0001 11       		.uleb128 0x11
 2340 0002 01       		.byte	0x1
 2341 0003 25       		.uleb128 0x25
 2342 0004 0E       		.uleb128 0xe
 2343 0005 13       		.uleb128 0x13
 2344 0006 0B       		.uleb128 0xb
 2345 0007 03       		.uleb128 0x3
 2346 0008 0E       		.uleb128 0xe
 2347 0009 1B       		.uleb128 0x1b
 2348 000a 0E       		.uleb128 0xe
 2349 000b 55       		.uleb128 0x55
 2350 000c 17       		.uleb128 0x17
 2351 000d 11       		.uleb128 0x11
 2352 000e 01       		.uleb128 0x1
 2353 000f 10       		.uleb128 0x10
 2354 0010 17       		.uleb128 0x17
 2355 0011 00       		.byte	0
 2356 0012 00       		.byte	0
 2357 0013 02       		.uleb128 0x2
 2358 0014 24       		.uleb128 0x24
 2359 0015 00       		.byte	0
 2360 0016 0B       		.uleb128 0xb
 2361 0017 0B       		.uleb128 0xb
 2362 0018 3E       		.uleb128 0x3e
 2363 0019 0B       		.uleb128 0xb
 2364 001a 03       		.uleb128 0x3
 2365 001b 0E       		.uleb128 0xe
 2366 001c 00       		.byte	0
 2367 001d 00       		.byte	0
 2368 001e 03       		.uleb128 0x3
 2369 001f 16       		.uleb128 0x16
 2370 0020 00       		.byte	0
 2371 0021 03       		.uleb128 0x3
 2372 0022 0E       		.uleb128 0xe
 2373 0023 3A       		.uleb128 0x3a
 2374 0024 0B       		.uleb128 0xb
 2375 0025 3B       		.uleb128 0x3b
 2376 0026 0B       		.uleb128 0xb
 2377 0027 49       		.uleb128 0x49
 2378 0028 13       		.uleb128 0x13
 2379 0029 00       		.byte	0
 2380 002a 00       		.byte	0
 2381 002b 04       		.uleb128 0x4
 2382 002c 24       		.uleb128 0x24
 2383 002d 00       		.byte	0
 2384 002e 0B       		.uleb128 0xb
 2385 002f 0B       		.uleb128 0xb
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\cc3FIxQa.s 			page 51


 2386 0030 3E       		.uleb128 0x3e
 2387 0031 0B       		.uleb128 0xb
 2388 0032 03       		.uleb128 0x3
 2389 0033 08       		.uleb128 0x8
 2390 0034 00       		.byte	0
 2391 0035 00       		.byte	0
 2392 0036 05       		.uleb128 0x5
 2393 0037 16       		.uleb128 0x16
 2394 0038 00       		.byte	0
 2395 0039 03       		.uleb128 0x3
 2396 003a 0E       		.uleb128 0xe
 2397 003b 3A       		.uleb128 0x3a
 2398 003c 0B       		.uleb128 0xb
 2399 003d 3B       		.uleb128 0x3b
 2400 003e 05       		.uleb128 0x5
 2401 003f 49       		.uleb128 0x49
 2402 0040 13       		.uleb128 0x13
 2403 0041 00       		.byte	0
 2404 0042 00       		.byte	0
 2405 0043 06       		.uleb128 0x6
 2406 0044 35       		.uleb128 0x35
 2407 0045 00       		.byte	0
 2408 0046 49       		.uleb128 0x49
 2409 0047 13       		.uleb128 0x13
 2410 0048 00       		.byte	0
 2411 0049 00       		.byte	0
 2412 004a 07       		.uleb128 0x7
 2413 004b 2E       		.uleb128 0x2e
 2414 004c 01       		.byte	0x1
 2415 004d 3F       		.uleb128 0x3f
 2416 004e 19       		.uleb128 0x19
 2417 004f 03       		.uleb128 0x3
 2418 0050 0E       		.uleb128 0xe
 2419 0051 3A       		.uleb128 0x3a
 2420 0052 0B       		.uleb128 0xb
 2421 0053 3B       		.uleb128 0x3b
 2422 0054 0B       		.uleb128 0xb
 2423 0055 27       		.uleb128 0x27
 2424 0056 19       		.uleb128 0x19
 2425 0057 11       		.uleb128 0x11
 2426 0058 01       		.uleb128 0x1
 2427 0059 12       		.uleb128 0x12
 2428 005a 06       		.uleb128 0x6
 2429 005b 40       		.uleb128 0x40
 2430 005c 18       		.uleb128 0x18
 2431 005d 9642     		.uleb128 0x2116
 2432 005f 19       		.uleb128 0x19
 2433 0060 01       		.uleb128 0x1
 2434 0061 13       		.uleb128 0x13
 2435 0062 00       		.byte	0
 2436 0063 00       		.byte	0
 2437 0064 08       		.uleb128 0x8
 2438 0065 05       		.uleb128 0x5
 2439 0066 00       		.byte	0
 2440 0067 03       		.uleb128 0x3
 2441 0068 0E       		.uleb128 0xe
 2442 0069 3A       		.uleb128 0x3a
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\cc3FIxQa.s 			page 52


 2443 006a 0B       		.uleb128 0xb
 2444 006b 3B       		.uleb128 0x3b
 2445 006c 0B       		.uleb128 0xb
 2446 006d 49       		.uleb128 0x49
 2447 006e 13       		.uleb128 0x13
 2448 006f 02       		.uleb128 0x2
 2449 0070 18       		.uleb128 0x18
 2450 0071 00       		.byte	0
 2451 0072 00       		.byte	0
 2452 0073 09       		.uleb128 0x9
 2453 0074 2E       		.uleb128 0x2e
 2454 0075 01       		.byte	0x1
 2455 0076 3F       		.uleb128 0x3f
 2456 0077 19       		.uleb128 0x19
 2457 0078 03       		.uleb128 0x3
 2458 0079 0E       		.uleb128 0xe
 2459 007a 3A       		.uleb128 0x3a
 2460 007b 0B       		.uleb128 0xb
 2461 007c 3B       		.uleb128 0x3b
 2462 007d 0B       		.uleb128 0xb
 2463 007e 27       		.uleb128 0x27
 2464 007f 19       		.uleb128 0x19
 2465 0080 49       		.uleb128 0x49
 2466 0081 13       		.uleb128 0x13
 2467 0082 11       		.uleb128 0x11
 2468 0083 01       		.uleb128 0x1
 2469 0084 12       		.uleb128 0x12
 2470 0085 06       		.uleb128 0x6
 2471 0086 40       		.uleb128 0x40
 2472 0087 18       		.uleb128 0x18
 2473 0088 9742     		.uleb128 0x2117
 2474 008a 19       		.uleb128 0x19
 2475 008b 01       		.uleb128 0x1
 2476 008c 13       		.uleb128 0x13
 2477 008d 00       		.byte	0
 2478 008e 00       		.byte	0
 2479 008f 0A       		.uleb128 0xa
 2480 0090 0B       		.uleb128 0xb
 2481 0091 01       		.byte	0x1
 2482 0092 11       		.uleb128 0x11
 2483 0093 01       		.uleb128 0x1
 2484 0094 12       		.uleb128 0x12
 2485 0095 06       		.uleb128 0x6
 2486 0096 00       		.byte	0
 2487 0097 00       		.byte	0
 2488 0098 0B       		.uleb128 0xb
 2489 0099 34       		.uleb128 0x34
 2490 009a 00       		.byte	0
 2491 009b 03       		.uleb128 0x3
 2492 009c 08       		.uleb128 0x8
 2493 009d 3A       		.uleb128 0x3a
 2494 009e 0B       		.uleb128 0xb
 2495 009f 3B       		.uleb128 0x3b
 2496 00a0 0B       		.uleb128 0xb
 2497 00a1 49       		.uleb128 0x49
 2498 00a2 13       		.uleb128 0x13
 2499 00a3 02       		.uleb128 0x2
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\cc3FIxQa.s 			page 53


 2500 00a4 18       		.uleb128 0x18
 2501 00a5 00       		.byte	0
 2502 00a6 00       		.byte	0
 2503 00a7 0C       		.uleb128 0xc
 2504 00a8 0B       		.uleb128 0xb
 2505 00a9 01       		.byte	0x1
 2506 00aa 11       		.uleb128 0x11
 2507 00ab 01       		.uleb128 0x1
 2508 00ac 12       		.uleb128 0x12
 2509 00ad 06       		.uleb128 0x6
 2510 00ae 01       		.uleb128 0x1
 2511 00af 13       		.uleb128 0x13
 2512 00b0 00       		.byte	0
 2513 00b1 00       		.byte	0
 2514 00b2 0D       		.uleb128 0xd
 2515 00b3 34       		.uleb128 0x34
 2516 00b4 00       		.byte	0
 2517 00b5 03       		.uleb128 0x3
 2518 00b6 0E       		.uleb128 0xe
 2519 00b7 3A       		.uleb128 0x3a
 2520 00b8 0B       		.uleb128 0xb
 2521 00b9 3B       		.uleb128 0x3b
 2522 00ba 0B       		.uleb128 0xb
 2523 00bb 49       		.uleb128 0x49
 2524 00bc 13       		.uleb128 0x13
 2525 00bd 02       		.uleb128 0x2
 2526 00be 18       		.uleb128 0x18
 2527 00bf 00       		.byte	0
 2528 00c0 00       		.byte	0
 2529 00c1 0E       		.uleb128 0xe
 2530 00c2 2E       		.uleb128 0x2e
 2531 00c3 01       		.byte	0x1
 2532 00c4 3F       		.uleb128 0x3f
 2533 00c5 19       		.uleb128 0x19
 2534 00c6 03       		.uleb128 0x3
 2535 00c7 0E       		.uleb128 0xe
 2536 00c8 3A       		.uleb128 0x3a
 2537 00c9 0B       		.uleb128 0xb
 2538 00ca 3B       		.uleb128 0x3b
 2539 00cb 0B       		.uleb128 0xb
 2540 00cc 49       		.uleb128 0x49
 2541 00cd 13       		.uleb128 0x13
 2542 00ce 11       		.uleb128 0x11
 2543 00cf 01       		.uleb128 0x1
 2544 00d0 12       		.uleb128 0x12
 2545 00d1 06       		.uleb128 0x6
 2546 00d2 40       		.uleb128 0x40
 2547 00d3 18       		.uleb128 0x18
 2548 00d4 9642     		.uleb128 0x2116
 2549 00d6 19       		.uleb128 0x19
 2550 00d7 01       		.uleb128 0x1
 2551 00d8 13       		.uleb128 0x13
 2552 00d9 00       		.byte	0
 2553 00da 00       		.byte	0
 2554 00db 0F       		.uleb128 0xf
 2555 00dc 34       		.uleb128 0x34
 2556 00dd 00       		.byte	0
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\cc3FIxQa.s 			page 54


 2557 00de 03       		.uleb128 0x3
 2558 00df 08       		.uleb128 0x8
 2559 00e0 3A       		.uleb128 0x3a
 2560 00e1 0B       		.uleb128 0xb
 2561 00e2 3B       		.uleb128 0x3b
 2562 00e3 05       		.uleb128 0x5
 2563 00e4 49       		.uleb128 0x49
 2564 00e5 13       		.uleb128 0x13
 2565 00e6 02       		.uleb128 0x2
 2566 00e7 18       		.uleb128 0x18
 2567 00e8 00       		.byte	0
 2568 00e9 00       		.byte	0
 2569 00ea 10       		.uleb128 0x10
 2570 00eb 34       		.uleb128 0x34
 2571 00ec 00       		.byte	0
 2572 00ed 03       		.uleb128 0x3
 2573 00ee 0E       		.uleb128 0xe
 2574 00ef 3A       		.uleb128 0x3a
 2575 00f0 0B       		.uleb128 0xb
 2576 00f1 3B       		.uleb128 0x3b
 2577 00f2 05       		.uleb128 0x5
 2578 00f3 49       		.uleb128 0x49
 2579 00f4 13       		.uleb128 0x13
 2580 00f5 02       		.uleb128 0x2
 2581 00f6 18       		.uleb128 0x18
 2582 00f7 00       		.byte	0
 2583 00f8 00       		.byte	0
 2584 00f9 11       		.uleb128 0x11
 2585 00fa 34       		.uleb128 0x34
 2586 00fb 00       		.byte	0
 2587 00fc 03       		.uleb128 0x3
 2588 00fd 0E       		.uleb128 0xe
 2589 00fe 3A       		.uleb128 0x3a
 2590 00ff 0B       		.uleb128 0xb
 2591 0100 3B       		.uleb128 0x3b
 2592 0101 05       		.uleb128 0x5
 2593 0102 49       		.uleb128 0x49
 2594 0103 13       		.uleb128 0x13
 2595 0104 3F       		.uleb128 0x3f
 2596 0105 19       		.uleb128 0x19
 2597 0106 3C       		.uleb128 0x3c
 2598 0107 19       		.uleb128 0x19
 2599 0108 00       		.byte	0
 2600 0109 00       		.byte	0
 2601 010a 12       		.uleb128 0x12
 2602 010b 34       		.uleb128 0x34
 2603 010c 00       		.byte	0
 2604 010d 03       		.uleb128 0x3
 2605 010e 0E       		.uleb128 0xe
 2606 010f 3A       		.uleb128 0x3a
 2607 0110 0B       		.uleb128 0xb
 2608 0111 3B       		.uleb128 0x3b
 2609 0112 0B       		.uleb128 0xb
 2610 0113 49       		.uleb128 0x49
 2611 0114 13       		.uleb128 0x13
 2612 0115 3F       		.uleb128 0x3f
 2613 0116 19       		.uleb128 0x19
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\cc3FIxQa.s 			page 55


 2614 0117 02       		.uleb128 0x2
 2615 0118 18       		.uleb128 0x18
 2616 0119 00       		.byte	0
 2617 011a 00       		.byte	0
 2618 011b 13       		.uleb128 0x13
 2619 011c 01       		.uleb128 0x1
 2620 011d 01       		.byte	0x1
 2621 011e 49       		.uleb128 0x49
 2622 011f 13       		.uleb128 0x13
 2623 0120 01       		.uleb128 0x1
 2624 0121 13       		.uleb128 0x13
 2625 0122 00       		.byte	0
 2626 0123 00       		.byte	0
 2627 0124 14       		.uleb128 0x14
 2628 0125 21       		.uleb128 0x21
 2629 0126 00       		.byte	0
 2630 0127 49       		.uleb128 0x49
 2631 0128 13       		.uleb128 0x13
 2632 0129 2F       		.uleb128 0x2f
 2633 012a 0B       		.uleb128 0xb
 2634 012b 00       		.byte	0
 2635 012c 00       		.byte	0
 2636 012d 15       		.uleb128 0x15
 2637 012e 34       		.uleb128 0x34
 2638 012f 00       		.byte	0
 2639 0130 03       		.uleb128 0x3
 2640 0131 08       		.uleb128 0x8
 2641 0132 3A       		.uleb128 0x3a
 2642 0133 0B       		.uleb128 0xb
 2643 0134 3B       		.uleb128 0x3b
 2644 0135 0B       		.uleb128 0xb
 2645 0136 49       		.uleb128 0x49
 2646 0137 13       		.uleb128 0x13
 2647 0138 3F       		.uleb128 0x3f
 2648 0139 19       		.uleb128 0x19
 2649 013a 02       		.uleb128 0x2
 2650 013b 18       		.uleb128 0x18
 2651 013c 00       		.byte	0
 2652 013d 00       		.byte	0
 2653 013e 00       		.byte	0
 2654              		.section	.debug_aranges,"",%progbits
 2655 0000 3C000000 		.4byte	0x3c
 2656 0004 0200     		.2byte	0x2
 2657 0006 00000000 		.4byte	.Ldebug_info0
 2658 000a 04       		.byte	0x4
 2659 000b 00       		.byte	0
 2660 000c 0000     		.2byte	0
 2661 000e 0000     		.2byte	0
 2662 0010 00000000 		.4byte	.LFB64
 2663 0014 78000000 		.4byte	.LFE64-.LFB64
 2664 0018 00000000 		.4byte	.LFB65
 2665 001c 54000000 		.4byte	.LFE65-.LFB65
 2666 0020 00000000 		.4byte	.LFB66
 2667 0024 50010000 		.4byte	.LFE66-.LFB66
 2668 0028 00000000 		.4byte	.LFB67
 2669 002c CC020000 		.4byte	.LFE67-.LFB67
 2670 0030 00000000 		.4byte	.LFB68
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\cc3FIxQa.s 			page 56


 2671 0034 90040000 		.4byte	.LFE68-.LFB68
 2672 0038 00000000 		.4byte	0
 2673 003c 00000000 		.4byte	0
 2674              		.section	.debug_ranges,"",%progbits
 2675              	.Ldebug_ranges0:
 2676 0000 00000000 		.4byte	.LFB64
 2677 0004 78000000 		.4byte	.LFE64
 2678 0008 00000000 		.4byte	.LFB65
 2679 000c 54000000 		.4byte	.LFE65
 2680 0010 00000000 		.4byte	.LFB66
 2681 0014 50010000 		.4byte	.LFE66
 2682 0018 00000000 		.4byte	.LFB67
 2683 001c CC020000 		.4byte	.LFE67
 2684 0020 00000000 		.4byte	.LFB68
 2685 0024 90040000 		.4byte	.LFE68
 2686 0028 00000000 		.4byte	0
 2687 002c 00000000 		.4byte	0
 2688              		.section	.debug_line,"",%progbits
 2689              	.Ldebug_line0:
 2690 0000 63030000 		.section	.debug_str,"MS",%progbits,1
 2690      02004C01 
 2690      00000201 
 2690      FB0E0D00 
 2690      01010101 
 2691              	.LASF17:
 2692 0000 6C6F6E67 		.ascii	"long double\000"
 2692      20646F75 
 2692      626C6500 
 2693              	.LASF47:
 2694 000c 63796C5F 		.ascii	"cyl_set\000"
 2694      73657400 
 2695              	.LASF48:
 2696 0014 63796C5F 		.ascii	"cyl_tmp\000"
 2696      746D7000 
 2697              	.LASF13:
 2698 001c 666C6F61 		.ascii	"float\000"
 2698      7400
 2699              	.LASF45:
 2700 0022 70726576 		.ascii	"prev_err\000"
 2700      5F657272 
 2700      00
 2701              	.LASF37:
 2702 002b 64696666 		.ascii	"diff\000"
 2702      00
 2703              	.LASF41:
 2704 0030 6E65775F 		.ascii	"new_pos_set\000"
 2704      706F735F 
 2704      73657400 
 2705              	.LASF51:
 2706 003c 74656D70 		.ascii	"temp\000"
 2706      00
 2707              	.LASF2:
 2708 0041 73686F72 		.ascii	"short int\000"
 2708      7420696E 
 2708      7400
 2709              	.LASF22:
 2710 004b 6F666673 		.ascii	"offset_lower\000"
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\cc3FIxQa.s 			page 57


 2710      65745F6C 
 2710      6F776572 
 2710      00
 2711              	.LASF18:
 2712 0058 73697A65 		.ascii	"sizetype\000"
 2712      74797065 
 2712      00
 2713              	.LASF28:
 2714 0061 6D61696E 		.ascii	"main\000"
 2714      00
 2715              	.LASF58:
 2716 0066 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 2716      43313120 
 2716      352E342E 
 2716      31203230 
 2716      31363036 
 2717 0099 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 2717      20726576 
 2717      6973696F 
 2717      6E203233 
 2717      37373135 
 2718 00cc 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 2718      66756E63 
 2718      74696F6E 
 2718      2D736563 
 2718      74696F6E 
 2719              	.LASF6:
 2720 00f4 6C6F6E67 		.ascii	"long long int\000"
 2720      206C6F6E 
 2720      6720696E 
 2720      7400
 2721              	.LASF52:
 2722 0102 68656C70 		.ascii	"help\000"
 2722      00
 2723              	.LASF57:
 2724 0107 6C65645F 		.ascii	"led_switch\000"
 2724      73776974 
 2724      636800
 2725              	.LASF40:
 2726 0112 64617461 		.ascii	"data_read_mode\000"
 2726      5F726561 
 2726      645F6D6F 
 2726      646500
 2727              	.LASF20:
 2728 0121 70756C73 		.ascii	"pulse\000"
 2728      6500
 2729              	.LASF11:
 2730 0127 75696E74 		.ascii	"uint8\000"
 2730      3800
 2731              	.LASF19:
 2732 012d 63796C69 		.ascii	"cylinder\000"
 2732      6E646572 
 2732      00
 2733              	.LASF39:
 2734 0136 6572726F 		.ascii	"errorStatus\000"
 2734      72537461 
 2734      74757300 
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\cc3FIxQa.s 			page 58


 2735              	.LASF0:
 2736 0142 7369676E 		.ascii	"signed char\000"
 2736      65642063 
 2736      68617200 
 2737              	.LASF30:
 2738 014e 73656E64 		.ascii	"send_now\000"
 2738      5F6E6F77 
 2738      00
 2739              	.LASF23:
 2740 0157 77726974 		.ascii	"writePWM\000"
 2740      6550574D 
 2740      00
 2741              	.LASF49:
 2742 0160 6F666673 		.ascii	"offsets\000"
 2742      65747300 
 2743              	.LASF34:
 2744 0168 75707065 		.ascii	"upper_offset\000"
 2744      725F6F66 
 2744      66736574 
 2744      00
 2745              	.LASF4:
 2746 0175 6C6F6E67 		.ascii	"long int\000"
 2746      20696E74 
 2746      00
 2747              	.LASF54:
 2748 017e 63796C5F 		.ascii	"cyl_no\000"
 2748      6E6F00
 2749              	.LASF33:
 2750 0185 6C6F7765 		.ascii	"lower_offset_set\000"
 2750      725F6F66 
 2750      66736574 
 2750      5F736574 
 2750      00
 2751              	.LASF1:
 2752 0196 756E7369 		.ascii	"unsigned char\000"
 2752      676E6564 
 2752      20636861 
 2752      7200
 2753              	.LASF43:
 2754 01a4 70756C73 		.ascii	"pulse_temp\000"
 2754      655F7465 
 2754      6D7000
 2755              	.LASF35:
 2756 01af 6C6F7765 		.ascii	"lower_offset\000"
 2756      725F6F66 
 2756      66736574 
 2756      00
 2757              	.LASF26:
 2758 01bc 72785374 		.ascii	"rxStatus\000"
 2758      61747573 
 2758      00
 2759              	.LASF42:
 2760 01c5 6E65775F 		.ascii	"new_pos\000"
 2760      706F7300 
 2761              	.LASF44:
 2762 01cd 61646356 		.ascii	"adcValue\000"
 2762      616C7565 
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\cc3FIxQa.s 			page 59


 2762      00
 2763              	.LASF7:
 2764 01d6 6C6F6E67 		.ascii	"long long unsigned int\000"
 2764      206C6F6E 
 2764      6720756E 
 2764      7369676E 
 2764      65642069 
 2765              	.LASF8:
 2766 01ed 756E7369 		.ascii	"unsigned int\000"
 2766      676E6564 
 2766      20696E74 
 2766      00
 2767              	.LASF29:
 2768 01fa 74696D65 		.ascii	"time\000"
 2768      00
 2769              	.LASF25:
 2770 01ff 52784973 		.ascii	"RxIsr\000"
 2770      7200
 2771              	.LASF3:
 2772 0205 73686F72 		.ascii	"short unsigned int\000"
 2772      7420756E 
 2772      7369676E 
 2772      65642069 
 2772      6E7400
 2773              	.LASF60:
 2774 0218 433A5C55 		.ascii	"C:\\Users\\Andrew\\Documents\\GitHub\\Hydraulic-Mim"
 2774      73657273 
 2774      5C416E64 
 2774      7265775C 
 2774      446F6375 
 2775 0246 69632D41 		.ascii	"ic-Arm\\PSOC_arm_project.cydsn\000"
 2775      726D5C50 
 2775      534F435F 
 2775      61726D5F 
 2775      70726F6A 
 2776              	.LASF15:
 2777 0264 63686172 		.ascii	"char\000"
 2777      00
 2778              	.LASF31:
 2779 0269 63616C69 		.ascii	"calib_cyl\000"
 2779      625F6379 
 2779      6C00
 2780              	.LASF10:
 2781 0273 696E7433 		.ascii	"int32_t\000"
 2781      325F7400 
 2782              	.LASF12:
 2783 027b 75696E74 		.ascii	"uint16\000"
 2783      313600
 2784              	.LASF59:
 2785 0282 6D61696E 		.ascii	"main.c\000"
 2785      2E6300
 2786              	.LASF16:
 2787 0289 72656738 		.ascii	"reg8\000"
 2787      00
 2788              	.LASF5:
 2789 028e 6C6F6E67 		.ascii	"long unsigned int\000"
 2789      20756E73 
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\cc3FIxQa.s 			page 60


 2789      69676E65 
 2789      6420696E 
 2789      7400
 2790              	.LASF46:
 2791 02a0 7069645F 		.ascii	"pid_integral\000"
 2791      696E7465 
 2791      6772616C 
 2791      00
 2792              	.LASF36:
 2793 02ad 70726576 		.ascii	"prev_adcValue\000"
 2793      5F616463 
 2793      56616C75 
 2793      6500
 2794              	.LASF9:
 2795 02bb 5F5F696E 		.ascii	"__int32_t\000"
 2795      7433325F 
 2795      7400
 2796              	.LASF21:
 2797 02c5 6F666673 		.ascii	"offset_upper\000"
 2797      65745F75 
 2797      70706572 
 2797      00
 2798              	.LASF61:
 2799 02d2 70756C73 		.ascii	"pulseCheck\000"
 2799      65436865 
 2799      636B00
 2800              	.LASF53:
 2801 02dd 73746172 		.ascii	"start_calib\000"
 2801      745F6361 
 2801      6C696200 
 2802              	.LASF24:
 2803 02e9 6164635F 		.ascii	"adc_update\000"
 2803      75706461 
 2803      746500
 2804              	.LASF27:
 2805 02f4 72784461 		.ascii	"rxData\000"
 2805      746100
 2806              	.LASF55:
 2807 02fb 6D6F7669 		.ascii	"moving_median\000"
 2807      6E675F6D 
 2807      65646961 
 2807      6E00
 2808              	.LASF56:
 2809 0309 74656D70 		.ascii	"tempArray\000"
 2809      41727261 
 2809      7900
 2810              	.LASF50:
 2811 0313 73656E64 		.ascii	"sendValue\000"
 2811      56616C75 
 2811      6500
 2812              	.LASF14:
 2813 031d 646F7562 		.ascii	"double\000"
 2813      6C6500
 2814              	.LASF38:
 2815 0324 49544D5F 		.ascii	"ITM_RxBuffer\000"
 2815      52784275 
 2815      66666572 
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\cc3FIxQa.s 			page 61


 2815      00
 2816              	.LASF32:
 2817 0331 75707065 		.ascii	"upper_offset_set\000"
 2817      725F6F66 
 2817      66736574 
 2817      5F736574 
 2817      00
 2818              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
