ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccKv0qGd.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.comm	psoc_id,4,4
  20              		.comm	psoc_id_string,2,4
  21              		.syntax unified
  22              		.global _printf_float
  23              		.thumb
  24              		.syntax unified
  25              		.global	errorStatus
  26              		.bss
  27              		.type	errorStatus, %object
  28              		.size	errorStatus, 1
  29              	errorStatus:
  30 0000 00       		.space	1
  31              		.section	.text.writePWM,"ax",%progbits
  32              		.align	2
  33              		.global	writePWM
  34              		.thumb
  35              		.thumb_func
  36              		.type	writePWM, %function
  37              	writePWM:
  38              	.LFB64:
  39              		.file 1 "main.c"
   1:main.c        **** 
   2:main.c        **** #include <project.h>
   3:main.c        **** #include <stdio.h>
   4:main.c        **** #include "common.h"
   5:main.c        **** #include <math.h>
   6:main.c        **** #include <stdlib.h>     /* strtod */
   7:main.c        **** 
   8:main.c        **** #define	Frequency 1000000.0			// Frequency of PWMClock
   9:main.c        **** #define	One_ms (Frequency/1000.0)	// 1 ms constant
  10:main.c        **** #define filter_size 7
  11:main.c        **** #define CYL_NO 4                    // Number of connected cylinders
  12:main.c        **** 
  13:main.c        **** #define PSOC_ID_BYTE_ADDRESS          (0x20)
  14:main.c        **** int psoc_id;
  15:main.c        **** char psoc_id_string[2];
  16:main.c        **** 
  17:main.c        **** 
  18:main.c        **** /* Add an explicit reference to the floating point printf library to allow
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccKv0qGd.s 			page 2


  19:main.c        **** the usage of floating point conversion specifier */
  20:main.c        **** #if defined (__GNUC__)
  21:main.c        ****     asm (".global _printf_float");
  22:main.c        **** #endif
  23:main.c        **** 
  24:main.c        **** uint8 errorStatus = 0u;
  25:main.c        **** 
  26:main.c        **** void writePWM(int cylinder, int pulse){
  40              		.loc 1 26 0
  41              		.cfi_startproc
  42              		@ args = 0, pretend = 0, frame = 8
  43              		@ frame_needed = 1, uses_anonymous_args = 0
  44 0000 80B5     		push	{r7, lr}
  45              		.cfi_def_cfa_offset 8
  46              		.cfi_offset 7, -8
  47              		.cfi_offset 14, -4
  48 0002 82B0     		sub	sp, sp, #8
  49              		.cfi_def_cfa_offset 16
  50 0004 00AF     		add	r7, sp, #0
  51              		.cfi_def_cfa_register 7
  52 0006 7860     		str	r0, [r7, #4]
  53 0008 3960     		str	r1, [r7]
  27:main.c        ****     switch(cylinder){
  54              		.loc 1 27 0
  55 000a 7B68     		ldr	r3, [r7, #4]
  56 000c 032B     		cmp	r3, #3
  57 000e 2FD8     		bhi	.L8
  58 0010 01A2     		adr	r2, .L4
  59 0012 52F823F0 		ldr	pc, [r2, r3, lsl #2]
  60 0016 00BF     		.p2align 2
  61              	.L4:
  62 0018 29000000 		.word	.L3+1
  63 001c 3B000000 		.word	.L5+1
  64 0020 4D000000 		.word	.L6+1
  65 0024 5F000000 		.word	.L7+1
  66              		.p2align 1
  67              	.L3:
  28:main.c        ****                 case 0:
  29:main.c        ****                     PWM_0_WriteCompare(pulse + 1500);
  68              		.loc 1 29 0
  69 0028 3B68     		ldr	r3, [r7]
  70 002a 9BB2     		uxth	r3, r3
  71 002c 03F2DC53 		addw	r3, r3, #1500
  72 0030 9BB2     		uxth	r3, r3
  73 0032 1846     		mov	r0, r3
  74 0034 FFF7FEFF 		bl	PWM_0_WriteCompare
  30:main.c        ****                     break;
  75              		.loc 1 30 0
  76 0038 1AE0     		b	.L2
  77              	.L5:
  31:main.c        ****                 case 1:
  32:main.c        ****                     PWM_1_WriteCompare(pulse + 1500);
  78              		.loc 1 32 0
  79 003a 3B68     		ldr	r3, [r7]
  80 003c 9BB2     		uxth	r3, r3
  81 003e 03F2DC53 		addw	r3, r3, #1500
  82 0042 9BB2     		uxth	r3, r3
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccKv0qGd.s 			page 3


  83 0044 1846     		mov	r0, r3
  84 0046 FFF7FEFF 		bl	PWM_1_WriteCompare
  33:main.c        ****                     break;
  85              		.loc 1 33 0
  86 004a 11E0     		b	.L2
  87              	.L6:
  34:main.c        ****                 case 2:
  35:main.c        ****                     PWM_2_WriteCompare(pulse + 1500);
  88              		.loc 1 35 0
  89 004c 3B68     		ldr	r3, [r7]
  90 004e 9BB2     		uxth	r3, r3
  91 0050 03F2DC53 		addw	r3, r3, #1500
  92 0054 9BB2     		uxth	r3, r3
  93 0056 1846     		mov	r0, r3
  94 0058 FFF7FEFF 		bl	PWM_2_WriteCompare
  36:main.c        ****                     break;
  95              		.loc 1 36 0
  96 005c 08E0     		b	.L2
  97              	.L7:
  37:main.c        ****                 case 3:
  38:main.c        ****                     PWM_3_WriteCompare(pulse + 1500);
  98              		.loc 1 38 0
  99 005e 3B68     		ldr	r3, [r7]
 100 0060 9BB2     		uxth	r3, r3
 101 0062 03F2DC53 		addw	r3, r3, #1500
 102 0066 9BB2     		uxth	r3, r3
 103 0068 1846     		mov	r0, r3
 104 006a FFF7FEFF 		bl	PWM_3_WriteCompare
  39:main.c        ****                     break;
 105              		.loc 1 39 0
 106 006e 00BF     		nop
 107              	.L2:
 108              	.L8:
  40:main.c        ****             }  
  41:main.c        **** }
 109              		.loc 1 41 0
 110 0070 00BF     		nop
 111 0072 0837     		adds	r7, r7, #8
 112              		.cfi_def_cfa_offset 8
 113 0074 BD46     		mov	sp, r7
 114              		.cfi_def_cfa_register 13
 115              		@ sp needed
 116 0076 80BD     		pop	{r7, pc}
 117              		.cfi_endproc
 118              	.LFE64:
 119              		.size	writePWM, .-writePWM
 120              		.section	.text.pulseCheck,"ax",%progbits
 121              		.align	2
 122              		.global	pulseCheck
 123              		.thumb
 124              		.thumb_func
 125              		.type	pulseCheck, %function
 126              	pulseCheck:
 127              	.LFB65:
  42:main.c        **** 
  43:main.c        **** int pulseCheck(int pulse, int offset_upper, int offset_lower) {
 128              		.loc 1 43 0
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccKv0qGd.s 			page 4


 129              		.cfi_startproc
 130              		@ args = 0, pretend = 0, frame = 16
 131              		@ frame_needed = 1, uses_anonymous_args = 0
 132              		@ link register save eliminated.
 133 0000 80B4     		push	{r7}
 134              		.cfi_def_cfa_offset 4
 135              		.cfi_offset 7, -4
 136 0002 85B0     		sub	sp, sp, #20
 137              		.cfi_def_cfa_offset 24
 138 0004 00AF     		add	r7, sp, #0
 139              		.cfi_def_cfa_register 7
 140 0006 F860     		str	r0, [r7, #12]
 141 0008 B960     		str	r1, [r7, #8]
 142 000a 7A60     		str	r2, [r7, #4]
  44:main.c        ****     if(pulse<0){pulse = pulse - offset_lower;}
 143              		.loc 1 44 0
 144 000c FB68     		ldr	r3, [r7, #12]
 145 000e 002B     		cmp	r3, #0
 146 0010 03DA     		bge	.L10
 147              		.loc 1 44 0 is_stmt 0 discriminator 1
 148 0012 FA68     		ldr	r2, [r7, #12]
 149 0014 7B68     		ldr	r3, [r7, #4]
 150 0016 D31A     		subs	r3, r2, r3
 151 0018 FB60     		str	r3, [r7, #12]
 152              	.L10:
  45:main.c        ****         if(pulse>0){pulse = pulse + offset_upper;}
 153              		.loc 1 45 0 is_stmt 1
 154 001a FB68     		ldr	r3, [r7, #12]
 155 001c 002B     		cmp	r3, #0
 156 001e 03DD     		ble	.L11
 157              		.loc 1 45 0 is_stmt 0 discriminator 1
 158 0020 FA68     		ldr	r2, [r7, #12]
 159 0022 BB68     		ldr	r3, [r7, #8]
 160 0024 1344     		add	r3, r3, r2
 161 0026 FB60     		str	r3, [r7, #12]
 162              	.L11:
  46:main.c        ****         if(pulse<-500){pulse=-500;}
 163              		.loc 1 46 0 is_stmt 1
 164 0028 FB68     		ldr	r3, [r7, #12]
 165 002a 13F5FA7F 		cmn	r3, #500
 166 002e 01DA     		bge	.L12
 167              		.loc 1 46 0 is_stmt 0 discriminator 1
 168 0030 074B     		ldr	r3, .L15
 169 0032 FB60     		str	r3, [r7, #12]
 170              	.L12:
  47:main.c        ****         if(pulse>500){pulse=500;}
 171              		.loc 1 47 0 is_stmt 1
 172 0034 FB68     		ldr	r3, [r7, #12]
 173 0036 B3F5FA7F 		cmp	r3, #500
 174 003a 02DD     		ble	.L13
 175              		.loc 1 47 0 is_stmt 0 discriminator 1
 176 003c 4FF4FA73 		mov	r3, #500
 177 0040 FB60     		str	r3, [r7, #12]
 178              	.L13:
  48:main.c        ****     return pulse;
 179              		.loc 1 48 0 is_stmt 1
 180 0042 FB68     		ldr	r3, [r7, #12]
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccKv0qGd.s 			page 5


  49:main.c        **** }
 181              		.loc 1 49 0
 182 0044 1846     		mov	r0, r3
 183 0046 1437     		adds	r7, r7, #20
 184              		.cfi_def_cfa_offset 4
 185 0048 BD46     		mov	sp, r7
 186              		.cfi_def_cfa_register 13
 187              		@ sp needed
 188 004a 80BC     		pop	{r7}
 189              		.cfi_restore 7
 190              		.cfi_def_cfa_offset 0
 191 004c 7047     		bx	lr
 192              	.L16:
 193 004e 00BF     		.align	2
 194              	.L15:
 195 0050 0CFEFFFF 		.word	-500
 196              		.cfi_endproc
 197              	.LFE65:
 198              		.size	pulseCheck, .-pulseCheck
 199              		.global	data_read_mode
 200              		.bss
 201 0001 000000   		.align	2
 202              		.type	data_read_mode, %object
 203              		.size	data_read_mode, 4
 204              	data_read_mode:
 205 0004 00000000 		.space	4
 206              		.comm	new_pos_set,16,4
 207              		.comm	new_pos,16,4
 208              		.comm	pos,16,4
 209              		.comm	pulse,16,4
 210              		.comm	pulse_temp,16,4
 211              		.comm	err,32,8
 212              		.comm	adcValue,8,4
 213              		.comm	der,32,8
 214              		.comm	prev_err,32,8
 215              		.comm	pid_integral,32,8
 216              		.global	cyl_set
 217              		.align	2
 218              		.type	cyl_set, %object
 219              		.size	cyl_set, 4
 220              	cyl_set:
 221 0008 00000000 		.space	4
 222              		.comm	cyl_tmp,1,4
 223              		.comm	dts,240,8
 224              		.global	dts_ct
 225              		.align	2
 226              		.type	dts_ct, %object
 227              		.size	dts_ct, 4
 228              	dts_ct:
 229 000c 00000000 		.space	4
 230              		.global	offsets
 231              		.align	2
 232              		.type	offsets, %object
 233              		.size	offsets, 32
 234              	offsets:
 235 0010 00000000 		.space	32
 235      00000000 
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccKv0qGd.s 			page 6


 235      00000000 
 235      00000000 
 235      00000000 
 236              		.comm	sendValue,100,4
 237              		.comm	temp,20,4
 238              		.global	nn
 239              		.align	2
 240              		.type	nn, %object
 241              		.size	nn, 4
 242              	nn:
 243 0030 00000000 		.space	4
 244              		.global	pid
 245              		.data
 246              		.align	3
 247              		.type	pid, %object
 248              		.size	pid, 24
 249              	pid:
 250 0000 33333333 		.word	858993459
 251 0004 3333D33F 		.word	1070805811
 252 0008 FCA9F1D2 		.word	-755914244
 253 000c 4D62503F 		.word	1062232653
 254 0010 00000000 		.word	0
 255 0014 00000000 		.word	0
 256              		.comm	help,100,4
 257              		.global	tt
 258              		.bss
 259              		.align	2
 260              		.type	tt, %object
 261              		.size	tt, 4
 262              	tt:
 263 0034 00000000 		.space	4
 264              		.global	start_calib
 265              		.align	2
 266              		.type	start_calib, %object
 267              		.size	start_calib, 4
 268              	start_calib:
 269 0038 00000000 		.space	4
 270              		.global	cyl_no
 271              		.align	2
 272              		.type	cyl_no, %object
 273              		.size	cyl_no, 4
 274              	cyl_no:
 275 003c 00000000 		.space	4
 276              		.global	moving_median
 277              		.align	2
 278              		.type	moving_median, %object
 279              		.size	moving_median, 56
 280              	moving_median:
 281 0040 00000000 		.space	56
 281      00000000 
 281      00000000 
 281      00000000 
 281      00000000 
 282              		.comm	tempArray,14,4
 283              		.comm	tmp,2,2
 284              		.section	.text.adc_update,"ax",%progbits
 285              		.align	2
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccKv0qGd.s 			page 7


 286              		.global	adc_update
 287              		.thumb
 288              		.thumb_func
 289              		.type	adc_update, %function
 290              	adc_update:
 291              	.LFB66:
  50:main.c        **** 
  51:main.c        **** 
  52:main.c        **** int data_read_mode = 0;
  53:main.c        **** 
  54:main.c        **** volatile int new_pos_set[CYL_NO];
  55:main.c        **** int new_pos[CYL_NO];
  56:main.c        **** int pos[CYL_NO];
  57:main.c        **** int pulse[CYL_NO];
  58:main.c        **** int pulse_temp[CYL_NO];
  59:main.c        **** double err[CYL_NO];
  60:main.c        **** uint16 adcValue[CYL_NO];
  61:main.c        **** double der[CYL_NO];
  62:main.c        **** double prev_err[CYL_NO];
  63:main.c        **** double pid_integral[CYL_NO];
  64:main.c        **** 
  65:main.c        **** int cyl_set = 0;
  66:main.c        **** char cyl_tmp[1];
  67:main.c        **** double dts[30];
  68:main.c        **** int dts_ct = 0;
  69:main.c        **** 
  70:main.c        **** int offsets[4][2] = {{0,0},{0,0},{0,0},{0,0}}; //{lower,upper} - both positive
  71:main.c        **** 
  72:main.c        **** char sendValue[100];
  73:main.c        **** char temp[20];
  74:main.c        **** int nn=0;
  75:main.c        **** double pid[3] = {0.3,0.001,0.0};
  76:main.c        **** 
  77:main.c        **** char help[100];
  78:main.c        **** int tt = 0;
  79:main.c        **** 
  80:main.c        **** int start_calib = 0;
  81:main.c        **** int cyl_no = 0;
  82:main.c        **** 
  83:main.c        **** uint16 moving_median[CYL_NO][filter_size] = {0};
  84:main.c        **** uint16 tempArray[filter_size];
  85:main.c        **** uint16 tmp;
  86:main.c        **** 
  87:main.c        **** CY_ISR(adc_update){
 292              		.loc 1 87 0
 293              		.cfi_startproc
 294              		@ args = 0, pretend = 0, frame = 24
 295              		@ frame_needed = 1, uses_anonymous_args = 0
 296 0000 80B5     		push	{r7, lr}
 297              		.cfi_def_cfa_offset 8
 298              		.cfi_offset 7, -8
 299              		.cfi_offset 14, -4
 300 0002 86B0     		sub	sp, sp, #24
 301              		.cfi_def_cfa_offset 32
 302 0004 00AF     		add	r7, sp, #0
 303              		.cfi_def_cfa_register 7
 304              	.LBB2:
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccKv0qGd.s 			page 8


  88:main.c        ****     for(int c = 0;c<CYL_NO;c++){
 305              		.loc 1 88 0
 306 0006 0023     		movs	r3, #0
 307 0008 7B61     		str	r3, [r7, #20]
 308 000a 9DE0     		b	.L18
 309              	.L28:
  89:main.c        ****         AMux_0_FastSelect(c);
 310              		.loc 1 89 0
 311 000c 7B69     		ldr	r3, [r7, #20]
 312 000e DBB2     		uxtb	r3, r3
 313 0010 1846     		mov	r0, r3
 314 0012 FFF7FEFF 		bl	AMux_0_FastSelect
 315              	.LBB3:
  90:main.c        ****         
  91:main.c        ****         for(int j=0;j<filter_size-1;j++){
 316              		.loc 1 91 0
 317 0016 0023     		movs	r3, #0
 318 0018 3B61     		str	r3, [r7, #16]
 319 001a 16E0     		b	.L19
 320              	.L20:
  92:main.c        ****                 moving_median[c][j] = moving_median[c][j+1]; 
 321              		.loc 1 92 0 discriminator 3
 322 001c 3B69     		ldr	r3, [r7, #16]
 323 001e 591C     		adds	r1, r3, #1
 324 0020 4E48     		ldr	r0, .L29
 325 0022 7A69     		ldr	r2, [r7, #20]
 326 0024 1346     		mov	r3, r2
 327 0026 DB00     		lsls	r3, r3, #3
 328 0028 9B1A     		subs	r3, r3, r2
 329 002a 0B44     		add	r3, r3, r1
 330 002c 30F81300 		ldrh	r0, [r0, r3, lsl #1]
 331 0030 4A49     		ldr	r1, .L29
 332 0032 7A69     		ldr	r2, [r7, #20]
 333 0034 1346     		mov	r3, r2
 334 0036 DB00     		lsls	r3, r3, #3
 335 0038 9B1A     		subs	r3, r3, r2
 336 003a 3A69     		ldr	r2, [r7, #16]
 337 003c 1344     		add	r3, r3, r2
 338 003e 0246     		mov	r2, r0	@ movhi
 339 0040 21F81320 		strh	r2, [r1, r3, lsl #1]	@ movhi
  91:main.c        ****                 moving_median[c][j] = moving_median[c][j+1]; 
 340              		.loc 1 91 0 discriminator 3
 341 0044 3B69     		ldr	r3, [r7, #16]
 342 0046 0133     		adds	r3, r3, #1
 343 0048 3B61     		str	r3, [r7, #16]
 344              	.L19:
  91:main.c        ****                 moving_median[c][j] = moving_median[c][j+1]; 
 345              		.loc 1 91 0 is_stmt 0 discriminator 1
 346 004a 3B69     		ldr	r3, [r7, #16]
 347 004c 052B     		cmp	r3, #5
 348 004e E5DD     		ble	.L20
 349              	.LBE3:
  93:main.c        ****         }
  94:main.c        ****         
  95:main.c        ****         moving_median[c][filter_size-1] = ADC_0_GetResult16();
 350              		.loc 1 95 0 is_stmt 1
 351 0050 FFF7FEFF 		bl	ADC_0_GetResult16
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccKv0qGd.s 			page 9


 352 0054 0346     		mov	r3, r0
 353 0056 98B2     		uxth	r0, r3
 354 0058 4049     		ldr	r1, .L29
 355 005a 7A69     		ldr	r2, [r7, #20]
 356 005c 1346     		mov	r3, r2
 357 005e DB00     		lsls	r3, r3, #3
 358 0060 9B1A     		subs	r3, r3, r2
 359 0062 5B00     		lsls	r3, r3, #1
 360 0064 0B44     		add	r3, r3, r1
 361 0066 0C33     		adds	r3, r3, #12
 362 0068 0246     		mov	r2, r0	@ movhi
 363 006a 1A80     		strh	r2, [r3]	@ movhi
  96:main.c        ****         moving_median[c][filter_size-1] = ADC_0_GetResult16();
 364              		.loc 1 96 0
 365 006c FFF7FEFF 		bl	ADC_0_GetResult16
 366 0070 0346     		mov	r3, r0
 367 0072 98B2     		uxth	r0, r3
 368 0074 3949     		ldr	r1, .L29
 369 0076 7A69     		ldr	r2, [r7, #20]
 370 0078 1346     		mov	r3, r2
 371 007a DB00     		lsls	r3, r3, #3
 372 007c 9B1A     		subs	r3, r3, r2
 373 007e 5B00     		lsls	r3, r3, #1
 374 0080 0B44     		add	r3, r3, r1
 375 0082 0C33     		adds	r3, r3, #12
 376 0084 0246     		mov	r2, r0	@ movhi
 377 0086 1A80     		strh	r2, [r3]	@ movhi
  97:main.c        ****         ADC_0_IsEndConversion(ADC_0_WAIT_FOR_RESULT);
 378              		.loc 1 97 0
 379 0088 0020     		movs	r0, #0
 380 008a FFF7FEFF 		bl	ADC_0_IsEndConversion
  98:main.c        ****         moving_median[c][filter_size-1] = ADC_0_GetResult16();
 381              		.loc 1 98 0
 382 008e FFF7FEFF 		bl	ADC_0_GetResult16
 383 0092 0346     		mov	r3, r0
 384 0094 98B2     		uxth	r0, r3
 385 0096 3149     		ldr	r1, .L29
 386 0098 7A69     		ldr	r2, [r7, #20]
 387 009a 1346     		mov	r3, r2
 388 009c DB00     		lsls	r3, r3, #3
 389 009e 9B1A     		subs	r3, r3, r2
 390 00a0 5B00     		lsls	r3, r3, #1
 391 00a2 0B44     		add	r3, r3, r1
 392 00a4 0C33     		adds	r3, r3, #12
 393 00a6 0246     		mov	r2, r0	@ movhi
 394 00a8 1A80     		strh	r2, [r3]	@ movhi
 395              	.LBB4:
  99:main.c        ****         
 100:main.c        ****         for(int j=0;j<filter_size;j++){
 396              		.loc 1 100 0
 397 00aa 0023     		movs	r3, #0
 398 00ac FB60     		str	r3, [r7, #12]
 399 00ae 0FE0     		b	.L21
 400              	.L22:
 101:main.c        ****                 tempArray[j] = moving_median[c][j]; 
 401              		.loc 1 101 0 discriminator 3
 402 00b0 2A49     		ldr	r1, .L29
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccKv0qGd.s 			page 10


 403 00b2 7A69     		ldr	r2, [r7, #20]
 404 00b4 1346     		mov	r3, r2
 405 00b6 DB00     		lsls	r3, r3, #3
 406 00b8 9B1A     		subs	r3, r3, r2
 407 00ba FA68     		ldr	r2, [r7, #12]
 408 00bc 1344     		add	r3, r3, r2
 409 00be 31F81310 		ldrh	r1, [r1, r3, lsl #1]
 410 00c2 274A     		ldr	r2, .L29+4
 411 00c4 FB68     		ldr	r3, [r7, #12]
 412 00c6 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
 100:main.c        ****                 tempArray[j] = moving_median[c][j]; 
 413              		.loc 1 100 0 discriminator 3
 414 00ca FB68     		ldr	r3, [r7, #12]
 415 00cc 0133     		adds	r3, r3, #1
 416 00ce FB60     		str	r3, [r7, #12]
 417              	.L21:
 100:main.c        ****                 tempArray[j] = moving_median[c][j]; 
 418              		.loc 1 100 0 is_stmt 0 discriminator 1
 419 00d0 FB68     		ldr	r3, [r7, #12]
 420 00d2 062B     		cmp	r3, #6
 421 00d4 ECDD     		ble	.L22
 422              	.LBE4:
 423              	.LBB5:
 102:main.c        ****         }
 103:main.c        ****         for(int i = 0; i < filter_size; i++){                     //Loop for ascending ordering
 424              		.loc 1 103 0 is_stmt 1
 425 00d6 0023     		movs	r3, #0
 426 00d8 BB60     		str	r3, [r7, #8]
 427 00da 29E0     		b	.L23
 428              	.L27:
 429              	.LBB6:
 104:main.c        ****         	for (int j = 0; j < filter_size; j++)             //Loop for comparing other values
 430              		.loc 1 104 0
 431 00dc 0023     		movs	r3, #0
 432 00de 7B60     		str	r3, [r7, #4]
 433 00e0 20E0     		b	.L24
 434              	.L26:
 105:main.c        ****         	{
 106:main.c        ****         		if (tempArray[j] > tempArray[i])                //Comparing other array elements
 435              		.loc 1 106 0
 436 00e2 1F4A     		ldr	r2, .L29+4
 437 00e4 7B68     		ldr	r3, [r7, #4]
 438 00e6 32F81320 		ldrh	r2, [r2, r3, lsl #1]
 439 00ea 1D49     		ldr	r1, .L29+4
 440 00ec BB68     		ldr	r3, [r7, #8]
 441 00ee 31F81330 		ldrh	r3, [r1, r3, lsl #1]
 442 00f2 9A42     		cmp	r2, r3
 443 00f4 13D9     		bls	.L25
 107:main.c        ****         		{
 108:main.c        ****         			tmp = tempArray[i];         //Using temporary variable for storing last value
 444              		.loc 1 108 0
 445 00f6 1A4A     		ldr	r2, .L29+4
 446 00f8 BB68     		ldr	r3, [r7, #8]
 447 00fa 32F81320 		ldrh	r2, [r2, r3, lsl #1]
 448 00fe 194B     		ldr	r3, .L29+8
 449 0100 1A80     		strh	r2, [r3]	@ movhi
 109:main.c        ****         			tempArray[i] = tempArray[j];            //replacing value
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccKv0qGd.s 			page 11


 450              		.loc 1 109 0
 451 0102 174A     		ldr	r2, .L29+4
 452 0104 7B68     		ldr	r3, [r7, #4]
 453 0106 32F81310 		ldrh	r1, [r2, r3, lsl #1]
 454 010a 154A     		ldr	r2, .L29+4
 455 010c BB68     		ldr	r3, [r7, #8]
 456 010e 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
 110:main.c        ****         			tempArray[j] = tmp;             //storing last value
 457              		.loc 1 110 0
 458 0112 144B     		ldr	r3, .L29+8
 459 0114 1988     		ldrh	r1, [r3]
 460 0116 124A     		ldr	r2, .L29+4
 461 0118 7B68     		ldr	r3, [r7, #4]
 462 011a 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
 463              	.L25:
 104:main.c        ****         	{
 464              		.loc 1 104 0 discriminator 2
 465 011e 7B68     		ldr	r3, [r7, #4]
 466 0120 0133     		adds	r3, r3, #1
 467 0122 7B60     		str	r3, [r7, #4]
 468              	.L24:
 104:main.c        ****         	{
 469              		.loc 1 104 0 is_stmt 0 discriminator 1
 470 0124 7B68     		ldr	r3, [r7, #4]
 471 0126 062B     		cmp	r3, #6
 472 0128 DBDD     		ble	.L26
 473              	.LBE6:
 103:main.c        ****         	for (int j = 0; j < filter_size; j++)             //Loop for comparing other values
 474              		.loc 1 103 0 is_stmt 1 discriminator 2
 475 012a BB68     		ldr	r3, [r7, #8]
 476 012c 0133     		adds	r3, r3, #1
 477 012e BB60     		str	r3, [r7, #8]
 478              	.L23:
 103:main.c        ****         	for (int j = 0; j < filter_size; j++)             //Loop for comparing other values
 479              		.loc 1 103 0 is_stmt 0 discriminator 1
 480 0130 BB68     		ldr	r3, [r7, #8]
 481 0132 062B     		cmp	r3, #6
 482 0134 D2DD     		ble	.L27
 483              	.LBE5:
 111:main.c        ****         		}  
 112:main.c        ****         	}
 113:main.c        ****         }
 114:main.c        ****         adcValue[c] = tempArray[(filter_size-1)/2];
 484              		.loc 1 114 0 is_stmt 1 discriminator 2
 485 0136 0A4B     		ldr	r3, .L29+4
 486 0138 D988     		ldrh	r1, [r3, #6]
 487 013a 0B4A     		ldr	r2, .L29+12
 488 013c 7B69     		ldr	r3, [r7, #20]
 489 013e 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
  88:main.c        ****         AMux_0_FastSelect(c);
 490              		.loc 1 88 0 discriminator 2
 491 0142 7B69     		ldr	r3, [r7, #20]
 492 0144 0133     		adds	r3, r3, #1
 493 0146 7B61     		str	r3, [r7, #20]
 494              	.L18:
  88:main.c        ****         AMux_0_FastSelect(c);
 495              		.loc 1 88 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccKv0qGd.s 			page 12


 496 0148 7B69     		ldr	r3, [r7, #20]
 497 014a 032B     		cmp	r3, #3
 498 014c 7FF75EAF 		ble	.L28
 499              	.LBE2:
 115:main.c        ****     }
 116:main.c        ****     update_median_isr_ClearPending();
 500              		.loc 1 116 0 is_stmt 1
 501 0150 FFF7FEFF 		bl	update_median_isr_ClearPending
 117:main.c        ****     
 118:main.c        **** }
 502              		.loc 1 118 0
 503 0154 00BF     		nop
 504 0156 1837     		adds	r7, r7, #24
 505              		.cfi_def_cfa_offset 8
 506 0158 BD46     		mov	sp, r7
 507              		.cfi_def_cfa_register 13
 508              		@ sp needed
 509 015a 80BD     		pop	{r7, pc}
 510              	.L30:
 511              		.align	2
 512              	.L29:
 513 015c 00000000 		.word	moving_median
 514 0160 00000000 		.word	tempArray
 515 0164 00000000 		.word	tmp
 516 0168 00000000 		.word	adcValue
 517              		.cfi_endproc
 518              	.LFE66:
 519              		.size	adc_update, .-adc_update
 520              		.section	.rodata
 521              		.align	2
 522              	.LC0:
 523 0000 256400   		.ascii	"%d\000"
 524              		.section	.text.RxIsr,"ax",%progbits
 525              		.align	2
 526              		.global	RxIsr
 527              		.thumb
 528              		.thumb_func
 529              		.type	RxIsr, %function
 530              	RxIsr:
 531              	.LFB67:
 119:main.c        **** 
 120:main.c        **** 
 121:main.c        **** CY_ISR(RxIsr)
 122:main.c        **** {
 532              		.loc 1 122 0
 533              		.cfi_startproc
 534              		@ args = 0, pretend = 0, frame = 8
 535              		@ frame_needed = 1, uses_anonymous_args = 0
 536 0000 90B5     		push	{r4, r7, lr}
 537              		.cfi_def_cfa_offset 12
 538              		.cfi_offset 4, -12
 539              		.cfi_offset 7, -8
 540              		.cfi_offset 14, -4
 541 0002 83B0     		sub	sp, sp, #12
 542              		.cfi_def_cfa_offset 24
 543 0004 00AF     		add	r7, sp, #0
 544              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccKv0qGd.s 			page 13


 545              	.L66:
 123:main.c        ****     uint8 rxStatus;         
 124:main.c        ****     uint8 rxData;           
 125:main.c        ****     
 126:main.c        ****     do
 127:main.c        ****     {
 128:main.c        ****         /* Read receiver status register */
 129:main.c        ****         rxStatus = UART_RXSTATUS_REG;
 546              		.loc 1 129 0
 547 0006 9F4B     		ldr	r3, .L69
 548 0008 1B78     		ldrb	r3, [r3]
 549 000a FB70     		strb	r3, [r7, #3]
 130:main.c        **** 
 131:main.c        ****         if((rxStatus & (UART_RX_STS_BREAK      | UART_RX_STS_PAR_ERROR |
 132:main.c        ****                         UART_RX_STS_STOP_ERROR | UART_RX_STS_OVERRUN)) != 0u)
 550              		.loc 1 132 0
 551 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 552 000e 03F01E03 		and	r3, r3, #30
 131:main.c        ****                         UART_RX_STS_STOP_ERROR | UART_RX_STS_OVERRUN)) != 0u)
 553              		.loc 1 131 0
 554 0012 002B     		cmp	r3, #0
 555 0014 0CD0     		beq	.L32
 133:main.c        ****         {
 134:main.c        ****             /* ERROR handling. */
 135:main.c        ****             errorStatus |= rxStatus & ( UART_RX_STS_BREAK      | UART_RX_STS_PAR_ERROR | 
 556              		.loc 1 135 0
 557 0016 97F90330 		ldrsb	r3, [r7, #3]
 558 001a 03F01E03 		and	r3, r3, #30
 559 001e 5AB2     		sxtb	r2, r3
 560 0020 994B     		ldr	r3, .L69+4
 561 0022 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 562 0024 5BB2     		sxtb	r3, r3
 563 0026 1343     		orrs	r3, r3, r2
 564 0028 5BB2     		sxtb	r3, r3
 565 002a DAB2     		uxtb	r2, r3
 566 002c 964B     		ldr	r3, .L69+4
 567 002e 1A70     		strb	r2, [r3]
 568              	.L32:
 136:main.c        ****                                         UART_RX_STS_STOP_ERROR | UART_RX_STS_OVERRUN);
 137:main.c        ****         }
 138:main.c        ****         
 139:main.c        ****         if((rxStatus & UART_RX_STS_FIFO_NOTEMPTY) != 0u)
 569              		.loc 1 139 0
 570 0030 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 571 0032 03F02003 		and	r3, r3, #32
 572 0036 002B     		cmp	r3, #0
 573 0038 00F06D81 		beq	.L33
 140:main.c        ****         {
 141:main.c        ****             /* Read data from the RX data register */
 142:main.c        ****             rxData = UART_RXDATA_REG;
 574              		.loc 1 142 0
 575 003c 934B     		ldr	r3, .L69+8
 576 003e 1B78     		ldrb	r3, [r3]
 577 0040 BB70     		strb	r3, [r7, #2]
 143:main.c        ****             help[tt] = rxData;
 578              		.loc 1 143 0
 579 0042 934B     		ldr	r3, .L69+12
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccKv0qGd.s 			page 14


 580 0044 1B68     		ldr	r3, [r3]
 581 0046 9349     		ldr	r1, .L69+16
 582 0048 BA78     		ldrb	r2, [r7, #2]
 583 004a CA54     		strb	r2, [r1, r3]
 144:main.c        ****             tt++;
 584              		.loc 1 144 0
 585 004c 904B     		ldr	r3, .L69+12
 586 004e 1B68     		ldr	r3, [r3]
 587 0050 0133     		adds	r3, r3, #1
 588 0052 8F4A     		ldr	r2, .L69+12
 589 0054 1360     		str	r3, [r2]
 145:main.c        ****             if(tt==99){tt=0;}
 590              		.loc 1 145 0
 591 0056 8E4B     		ldr	r3, .L69+12
 592 0058 1B68     		ldr	r3, [r3]
 593 005a 632B     		cmp	r3, #99
 594 005c 02D1     		bne	.L34
 595              		.loc 1 145 0 is_stmt 0 discriminator 1
 596 005e 8C4B     		ldr	r3, .L69+12
 597 0060 0022     		movs	r2, #0
 598 0062 1A60     		str	r2, [r3]
 599              	.L34:
 146:main.c        ****             if(rxData=='b' ){start_calib=1;};
 600              		.loc 1 146 0 is_stmt 1
 601 0064 BB78     		ldrb	r3, [r7, #2]	@ zero_extendqisi2
 602 0066 622B     		cmp	r3, #98
 603 0068 02D1     		bne	.L35
 604              		.loc 1 146 0 is_stmt 0 discriminator 1
 605 006a 8B4B     		ldr	r3, .L69+20
 606 006c 0122     		movs	r2, #1
 607 006e 1A60     		str	r2, [r3]
 608              	.L35:
 147:main.c        ****             switch(data_read_mode)
 609              		.loc 1 147 0 is_stmt 1
 610 0070 8A4B     		ldr	r3, .L69+24
 611 0072 1B68     		ldr	r3, [r3]
 612 0074 072B     		cmp	r3, #7
 613 0076 00F24E81 		bhi	.L33
 614 007a 01A2     		adr	r2, .L38
 615 007c 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 616              		.p2align 2
 617              	.L38:
 618 0080 A1000000 		.word	.L37+1
 619 0084 D7000000 		.word	.L39+1
 620 0088 2D010000 		.word	.L40+1
 621 008c A1010000 		.word	.L41+1
 622 0090 E3010000 		.word	.L42+1
 623 0094 25020000 		.word	.L43+1
 624 0098 67020000 		.word	.L44+1
 625 009c E1020000 		.word	.L45+1
 626              		.p2align 1
 627              	.L37:
 148:main.c        ****             {
 149:main.c        ****                 case 0:
 150:main.c        ****                     if(rxData=='{' )
 628              		.loc 1 150 0
 629 00a0 BB78     		ldrb	r3, [r7, #2]	@ zero_extendqisi2
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccKv0qGd.s 			page 15


 630 00a2 7B2B     		cmp	r3, #123
 631 00a4 40F03481 		bne	.L67
 632              	.LBB7:
 151:main.c        ****                     {
 152:main.c        ****                         //aaaa
 153:main.c        ****                         for(int pp=1;pp<20;pp++){
 633              		.loc 1 153 0
 634 00a8 0123     		movs	r3, #1
 635 00aa 7B60     		str	r3, [r7, #4]
 636 00ac 07E0     		b	.L47
 637              	.L48:
 154:main.c        ****                             temp[pp] = ' ';
 638              		.loc 1 154 0 discriminator 3
 639 00ae 7C4A     		ldr	r2, .L69+28
 640 00b0 7B68     		ldr	r3, [r7, #4]
 641 00b2 1344     		add	r3, r3, r2
 642 00b4 2022     		movs	r2, #32
 643 00b6 1A70     		strb	r2, [r3]
 153:main.c        ****                             temp[pp] = ' ';
 644              		.loc 1 153 0 discriminator 3
 645 00b8 7B68     		ldr	r3, [r7, #4]
 646 00ba 0133     		adds	r3, r3, #1
 647 00bc 7B60     		str	r3, [r7, #4]
 648              	.L47:
 153:main.c        ****                             temp[pp] = ' ';
 649              		.loc 1 153 0 is_stmt 0 discriminator 1
 650 00be 7B68     		ldr	r3, [r7, #4]
 651 00c0 132B     		cmp	r3, #19
 652 00c2 F4DD     		ble	.L48
 653              	.LBE7:
 155:main.c        ****                         }
 156:main.c        ****                         temp[0] = '\0';
 654              		.loc 1 156 0 is_stmt 1
 655 00c4 764B     		ldr	r3, .L69+28
 656 00c6 0022     		movs	r2, #0
 657 00c8 1A70     		strb	r2, [r3]
 157:main.c        ****                         data_read_mode++;
 658              		.loc 1 157 0
 659 00ca 744B     		ldr	r3, .L69+24
 660 00cc 1B68     		ldr	r3, [r3]
 661 00ce 0133     		adds	r3, r3, #1
 662 00d0 724A     		ldr	r2, .L69+24
 663 00d2 1360     		str	r3, [r2]
 158:main.c        ****                     }
 159:main.c        ****                 break;
 664              		.loc 1 159 0
 665 00d4 1CE1     		b	.L67
 666              	.L39:
 160:main.c        ****                 case 1:
 161:main.c        ****                     if(rxData=='x'){
 667              		.loc 1 161 0
 668 00d6 BB78     		ldrb	r3, [r7, #2]	@ zero_extendqisi2
 669 00d8 782B     		cmp	r3, #120
 670 00da 03D1     		bne	.L49
 162:main.c        ****                         data_read_mode = 2;}
 671              		.loc 1 162 0
 672 00dc 6F4B     		ldr	r3, .L69+24
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccKv0qGd.s 			page 16


 673 00de 0222     		movs	r2, #2
 674 00e0 1A60     		str	r2, [r3]
 163:main.c        ****                     else if(rxData=='p'){
 164:main.c        ****                         data_read_mode = 3;}
 165:main.c        ****                     else if(rxData=='i'){
 166:main.c        ****                         data_read_mode = 4;}
 167:main.c        ****                     else if(rxData=='d'){
 168:main.c        ****                         data_read_mode = 5;}
 169:main.c        ****                     else if(rxData=='c'){
 170:main.c        ****                         data_read_mode = 6;}
 171:main.c        ****                     else if(rxData=='w'){
 172:main.c        ****                         data_read_mode = 7;}
 173:main.c        ****                 break;
 675              		.loc 1 173 0
 676 00e2 17E1     		b	.L68
 677              	.L49:
 163:main.c        ****                     else if(rxData=='p'){
 678              		.loc 1 163 0
 679 00e4 BB78     		ldrb	r3, [r7, #2]	@ zero_extendqisi2
 680 00e6 702B     		cmp	r3, #112
 681 00e8 03D1     		bne	.L51
 164:main.c        ****                     else if(rxData=='i'){
 682              		.loc 1 164 0
 683 00ea 6C4B     		ldr	r3, .L69+24
 684 00ec 0322     		movs	r2, #3
 685 00ee 1A60     		str	r2, [r3]
 686              		.loc 1 173 0
 687 00f0 10E1     		b	.L68
 688              	.L51:
 165:main.c        ****                         data_read_mode = 4;}
 689              		.loc 1 165 0
 690 00f2 BB78     		ldrb	r3, [r7, #2]	@ zero_extendqisi2
 691 00f4 692B     		cmp	r3, #105
 692 00f6 03D1     		bne	.L52
 166:main.c        ****                     else if(rxData=='d'){
 693              		.loc 1 166 0
 694 00f8 684B     		ldr	r3, .L69+24
 695 00fa 0422     		movs	r2, #4
 696 00fc 1A60     		str	r2, [r3]
 697              		.loc 1 173 0
 698 00fe 09E1     		b	.L68
 699              	.L52:
 167:main.c        ****                         data_read_mode = 5;}
 700              		.loc 1 167 0
 701 0100 BB78     		ldrb	r3, [r7, #2]	@ zero_extendqisi2
 702 0102 642B     		cmp	r3, #100
 703 0104 03D1     		bne	.L53
 168:main.c        ****                     else if(rxData=='c'){
 704              		.loc 1 168 0
 705 0106 654B     		ldr	r3, .L69+24
 706 0108 0522     		movs	r2, #5
 707 010a 1A60     		str	r2, [r3]
 708              		.loc 1 173 0
 709 010c 02E1     		b	.L68
 710              	.L53:
 169:main.c        ****                         data_read_mode = 6;}
 711              		.loc 1 169 0
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccKv0qGd.s 			page 17


 712 010e BB78     		ldrb	r3, [r7, #2]	@ zero_extendqisi2
 713 0110 632B     		cmp	r3, #99
 714 0112 03D1     		bne	.L54
 170:main.c        ****                     else if(rxData=='w'){
 715              		.loc 1 170 0
 716 0114 614B     		ldr	r3, .L69+24
 717 0116 0622     		movs	r2, #6
 718 0118 1A60     		str	r2, [r3]
 719              		.loc 1 173 0
 720 011a FBE0     		b	.L68
 721              	.L54:
 171:main.c        ****                         data_read_mode = 7;}
 722              		.loc 1 171 0
 723 011c BB78     		ldrb	r3, [r7, #2]	@ zero_extendqisi2
 724 011e 772B     		cmp	r3, #119
 725 0120 40F0F880 		bne	.L68
 172:main.c        ****                 break;
 726              		.loc 1 172 0
 727 0124 5D4B     		ldr	r3, .L69+24
 728 0126 0722     		movs	r2, #7
 729 0128 1A60     		str	r2, [r3]
 730              		.loc 1 173 0
 731 012a F3E0     		b	.L68
 732              	.L40:
 174:main.c        ****                 case 2: //x
 175:main.c        ****                     if(rxData != '}'){
 733              		.loc 1 175 0
 734 012c BB78     		ldrb	r3, [r7, #2]	@ zero_extendqisi2
 735 012e 7D2B     		cmp	r3, #125
 736 0130 0AD0     		beq	.L55
 176:main.c        ****                         temp[nn] = rxData;
 737              		.loc 1 176 0
 738 0132 5C4B     		ldr	r3, .L69+32
 739 0134 1B68     		ldr	r3, [r3]
 740 0136 5A49     		ldr	r1, .L69+28
 741 0138 BA78     		ldrb	r2, [r7, #2]
 742 013a CA54     		strb	r2, [r1, r3]
 177:main.c        ****                         nn++;
 743              		.loc 1 177 0
 744 013c 594B     		ldr	r3, .L69+32
 745 013e 1B68     		ldr	r3, [r3]
 746 0140 0133     		adds	r3, r3, #1
 747 0142 584A     		ldr	r2, .L69+32
 748 0144 1360     		str	r3, [r2]
 178:main.c        ****                     }
 179:main.c        ****                     else {
 180:main.c        ****                         new_pos[cyl_no] = (int) strtol(temp, (char **)NULL, 10);
 181:main.c        ****                         if(new_pos[cyl_no]==0){
 182:main.c        ****                             new_pos[cyl_no] = pos[cyl_no];
 183:main.c        ****                         }
 184:main.c        ****                         new_pos_set[cyl_no] = 1;
 185:main.c        ****                         nn=0; 
 186:main.c        ****                         temp[0] = '\0';
 187:main.c        ****                         data_read_mode = 0;
 188:main.c        ****                         
 189:main.c        ****                     }
 190:main.c        ****                   
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccKv0qGd.s 			page 18


 191:main.c        ****                 break;
 749              		.loc 1 191 0
 750 0146 E6E0     		b	.L33
 751              	.L55:
 180:main.c        ****                         if(new_pos[cyl_no]==0){
 752              		.loc 1 180 0
 753 0148 574B     		ldr	r3, .L69+36
 754 014a 1C68     		ldr	r4, [r3]
 755 014c 0A22     		movs	r2, #10
 756 014e 0021     		movs	r1, #0
 757 0150 5348     		ldr	r0, .L69+28
 758 0152 FFF7FEFF 		bl	strtol
 759 0156 0246     		mov	r2, r0
 760 0158 544B     		ldr	r3, .L69+40
 761 015a 43F82420 		str	r2, [r3, r4, lsl #2]
 181:main.c        ****                             new_pos[cyl_no] = pos[cyl_no];
 762              		.loc 1 181 0
 763 015e 524B     		ldr	r3, .L69+36
 764 0160 1B68     		ldr	r3, [r3]
 765 0162 524A     		ldr	r2, .L69+40
 766 0164 52F82330 		ldr	r3, [r2, r3, lsl #2]
 767 0168 002B     		cmp	r3, #0
 768 016a 09D1     		bne	.L57
 182:main.c        ****                         }
 769              		.loc 1 182 0
 770 016c 4E4B     		ldr	r3, .L69+36
 771 016e 1B68     		ldr	r3, [r3]
 772 0170 4D4A     		ldr	r2, .L69+36
 773 0172 1268     		ldr	r2, [r2]
 774 0174 4E49     		ldr	r1, .L69+44
 775 0176 51F82220 		ldr	r2, [r1, r2, lsl #2]
 776 017a 4C49     		ldr	r1, .L69+40
 777 017c 41F82320 		str	r2, [r1, r3, lsl #2]
 778              	.L57:
 184:main.c        ****                         nn=0; 
 779              		.loc 1 184 0
 780 0180 494B     		ldr	r3, .L69+36
 781 0182 1B68     		ldr	r3, [r3]
 782 0184 4B4A     		ldr	r2, .L69+48
 783 0186 0121     		movs	r1, #1
 784 0188 42F82310 		str	r1, [r2, r3, lsl #2]
 185:main.c        ****                         temp[0] = '\0';
 785              		.loc 1 185 0
 786 018c 454B     		ldr	r3, .L69+32
 787 018e 0022     		movs	r2, #0
 788 0190 1A60     		str	r2, [r3]
 186:main.c        ****                         data_read_mode = 0;
 789              		.loc 1 186 0
 790 0192 434B     		ldr	r3, .L69+28
 791 0194 0022     		movs	r2, #0
 792 0196 1A70     		strb	r2, [r3]
 187:main.c        ****                         
 793              		.loc 1 187 0
 794 0198 404B     		ldr	r3, .L69+24
 795 019a 0022     		movs	r2, #0
 796 019c 1A60     		str	r2, [r3]
 797              		.loc 1 191 0
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccKv0qGd.s 			page 19


 798 019e BAE0     		b	.L33
 799              	.L41:
 192:main.c        ****                 case 3: //p
 193:main.c        ****                     if(rxData != '}'){
 800              		.loc 1 193 0
 801 01a0 BB78     		ldrb	r3, [r7, #2]	@ zero_extendqisi2
 802 01a2 7D2B     		cmp	r3, #125
 803 01a4 0AD0     		beq	.L58
 194:main.c        ****                         temp[nn] = rxData;
 804              		.loc 1 194 0
 805 01a6 3F4B     		ldr	r3, .L69+32
 806 01a8 1B68     		ldr	r3, [r3]
 807 01aa 3D49     		ldr	r1, .L69+28
 808 01ac BA78     		ldrb	r2, [r7, #2]
 809 01ae CA54     		strb	r2, [r1, r3]
 195:main.c        ****                         nn++;
 810              		.loc 1 195 0
 811 01b0 3C4B     		ldr	r3, .L69+32
 812 01b2 1B68     		ldr	r3, [r3]
 813 01b4 0133     		adds	r3, r3, #1
 814 01b6 3B4A     		ldr	r2, .L69+32
 815 01b8 1360     		str	r3, [r2]
 196:main.c        ****                     }
 197:main.c        ****                     else {
 198:main.c        ****                         pid[0] = strtod(temp, NULL);
 199:main.c        ****                         nn=0;
 200:main.c        ****                         temp[0] = '\0';
 201:main.c        ****                         data_read_mode = 0;
 202:main.c        ****                     }
 203:main.c        ****                     
 204:main.c        ****                 break;
 816              		.loc 1 204 0
 817 01ba ACE0     		b	.L33
 818              	.L58:
 198:main.c        ****                         nn=0;
 819              		.loc 1 198 0
 820 01bc 0021     		movs	r1, #0
 821 01be 3848     		ldr	r0, .L69+28
 822 01c0 FFF7FEFF 		bl	strtod
 823 01c4 0346     		mov	r3, r0
 824 01c6 0C46     		mov	r4, r1
 825 01c8 3B4A     		ldr	r2, .L69+52
 826 01ca C2E90034 		strd	r3, [r2]
 199:main.c        ****                         temp[0] = '\0';
 827              		.loc 1 199 0
 828 01ce 354B     		ldr	r3, .L69+32
 829 01d0 0022     		movs	r2, #0
 830 01d2 1A60     		str	r2, [r3]
 200:main.c        ****                         data_read_mode = 0;
 831              		.loc 1 200 0
 832 01d4 324B     		ldr	r3, .L69+28
 833 01d6 0022     		movs	r2, #0
 834 01d8 1A70     		strb	r2, [r3]
 201:main.c        ****                     }
 835              		.loc 1 201 0
 836 01da 304B     		ldr	r3, .L69+24
 837 01dc 0022     		movs	r2, #0
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccKv0qGd.s 			page 20


 838 01de 1A60     		str	r2, [r3]
 839              		.loc 1 204 0
 840 01e0 99E0     		b	.L33
 841              	.L42:
 205:main.c        ****                 case 4: //i
 206:main.c        ****                     if(rxData != '}'){
 842              		.loc 1 206 0
 843 01e2 BB78     		ldrb	r3, [r7, #2]	@ zero_extendqisi2
 844 01e4 7D2B     		cmp	r3, #125
 845 01e6 0AD0     		beq	.L60
 207:main.c        ****                         temp[nn] = rxData;
 846              		.loc 1 207 0
 847 01e8 2E4B     		ldr	r3, .L69+32
 848 01ea 1B68     		ldr	r3, [r3]
 849 01ec 2C49     		ldr	r1, .L69+28
 850 01ee BA78     		ldrb	r2, [r7, #2]
 851 01f0 CA54     		strb	r2, [r1, r3]
 208:main.c        ****                         nn++;
 852              		.loc 1 208 0
 853 01f2 2C4B     		ldr	r3, .L69+32
 854 01f4 1B68     		ldr	r3, [r3]
 855 01f6 0133     		adds	r3, r3, #1
 856 01f8 2A4A     		ldr	r2, .L69+32
 857 01fa 1360     		str	r3, [r2]
 209:main.c        ****                     }
 210:main.c        ****                     else {
 211:main.c        ****                         pid[1] = strtod(temp, NULL);
 212:main.c        ****                         nn=0;
 213:main.c        ****                         temp[0] = '\0';
 214:main.c        ****                         data_read_mode = 0;
 215:main.c        ****                     }
 216:main.c        ****                 break;
 858              		.loc 1 216 0
 859 01fc 8BE0     		b	.L33
 860              	.L60:
 211:main.c        ****                         nn=0;
 861              		.loc 1 211 0
 862 01fe 0021     		movs	r1, #0
 863 0200 2748     		ldr	r0, .L69+28
 864 0202 FFF7FEFF 		bl	strtod
 865 0206 0346     		mov	r3, r0
 866 0208 0C46     		mov	r4, r1
 867 020a 2B4A     		ldr	r2, .L69+52
 868 020c C2E90234 		strd	r3, [r2, #8]
 212:main.c        ****                         temp[0] = '\0';
 869              		.loc 1 212 0
 870 0210 244B     		ldr	r3, .L69+32
 871 0212 0022     		movs	r2, #0
 872 0214 1A60     		str	r2, [r3]
 213:main.c        ****                         data_read_mode = 0;
 873              		.loc 1 213 0
 874 0216 224B     		ldr	r3, .L69+28
 875 0218 0022     		movs	r2, #0
 876 021a 1A70     		strb	r2, [r3]
 214:main.c        ****                     }
 877              		.loc 1 214 0
 878 021c 1F4B     		ldr	r3, .L69+24
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccKv0qGd.s 			page 21


 879 021e 0022     		movs	r2, #0
 880 0220 1A60     		str	r2, [r3]
 881              		.loc 1 216 0
 882 0222 78E0     		b	.L33
 883              	.L43:
 217:main.c        ****                 case 5: //d
 218:main.c        ****                     if(rxData != '}'){
 884              		.loc 1 218 0
 885 0224 BB78     		ldrb	r3, [r7, #2]	@ zero_extendqisi2
 886 0226 7D2B     		cmp	r3, #125
 887 0228 0AD0     		beq	.L62
 219:main.c        ****                         temp[nn] = rxData;
 888              		.loc 1 219 0
 889 022a 1E4B     		ldr	r3, .L69+32
 890 022c 1B68     		ldr	r3, [r3]
 891 022e 1C49     		ldr	r1, .L69+28
 892 0230 BA78     		ldrb	r2, [r7, #2]
 893 0232 CA54     		strb	r2, [r1, r3]
 220:main.c        ****                         nn++;
 894              		.loc 1 220 0
 895 0234 1B4B     		ldr	r3, .L69+32
 896 0236 1B68     		ldr	r3, [r3]
 897 0238 0133     		adds	r3, r3, #1
 898 023a 1A4A     		ldr	r2, .L69+32
 899 023c 1360     		str	r3, [r2]
 221:main.c        ****                     }
 222:main.c        ****                     else {
 223:main.c        ****                         pid[2] = strtod(temp, NULL);
 224:main.c        ****                         nn=0;
 225:main.c        ****                         temp[0] = '\0';
 226:main.c        ****                         data_read_mode = 0;
 227:main.c        ****                     }
 228:main.c        ****                 break;
 900              		.loc 1 228 0
 901 023e 6AE0     		b	.L33
 902              	.L62:
 223:main.c        ****                         nn=0;
 903              		.loc 1 223 0
 904 0240 0021     		movs	r1, #0
 905 0242 1748     		ldr	r0, .L69+28
 906 0244 FFF7FEFF 		bl	strtod
 907 0248 0346     		mov	r3, r0
 908 024a 0C46     		mov	r4, r1
 909 024c 1A4A     		ldr	r2, .L69+52
 910 024e C2E90434 		strd	r3, [r2, #16]
 224:main.c        ****                         temp[0] = '\0';
 911              		.loc 1 224 0
 912 0252 144B     		ldr	r3, .L69+32
 913 0254 0022     		movs	r2, #0
 914 0256 1A60     		str	r2, [r3]
 225:main.c        ****                         data_read_mode = 0;
 915              		.loc 1 225 0
 916 0258 114B     		ldr	r3, .L69+28
 917 025a 0022     		movs	r2, #0
 918 025c 1A70     		strb	r2, [r3]
 226:main.c        ****                     }
 919              		.loc 1 226 0
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccKv0qGd.s 			page 22


 920 025e 0F4B     		ldr	r3, .L69+24
 921 0260 0022     		movs	r2, #0
 922 0262 1A60     		str	r2, [r3]
 923              		.loc 1 228 0
 924 0264 57E0     		b	.L33
 925              	.L44:
 229:main.c        ****                 case 6: //c
 230:main.c        ****                     if(rxData != '}'){
 926              		.loc 1 230 0
 927 0266 BB78     		ldrb	r3, [r7, #2]	@ zero_extendqisi2
 928 0268 7D2B     		cmp	r3, #125
 929 026a 27D0     		beq	.L64
 231:main.c        ****                         temp[nn] = rxData;
 930              		.loc 1 231 0
 931 026c 0D4B     		ldr	r3, .L69+32
 932 026e 1B68     		ldr	r3, [r3]
 933 0270 0B49     		ldr	r1, .L69+28
 934 0272 BA78     		ldrb	r2, [r7, #2]
 935 0274 CA54     		strb	r2, [r1, r3]
 232:main.c        ****                         nn++;
 936              		.loc 1 232 0
 937 0276 0B4B     		ldr	r3, .L69+32
 938 0278 1B68     		ldr	r3, [r3]
 939 027a 0133     		adds	r3, r3, #1
 940 027c 094A     		ldr	r2, .L69+32
 941 027e 1360     		str	r3, [r2]
 233:main.c        ****                     }
 234:main.c        ****                     else {
 235:main.c        ****                         cyl_no = (int) strtol(temp, (char **)NULL, 10);
 236:main.c        ****                         nn=0; 
 237:main.c        ****                         temp[0] = '\0';
 238:main.c        ****                         data_read_mode = 0;
 239:main.c        ****                     }
 240:main.c        ****                   
 241:main.c        ****                 break;
 942              		.loc 1 241 0
 943 0280 49E0     		b	.L33
 944              	.L70:
 945 0282 00BF     		.align	2
 946              	.L69:
 947 0284 69650040 		.word	1073767785
 948 0288 00000000 		.word	errorStatus
 949 028c 4A650040 		.word	1073767754
 950 0290 00000000 		.word	tt
 951 0294 00000000 		.word	help
 952 0298 00000000 		.word	start_calib
 953 029c 00000000 		.word	data_read_mode
 954 02a0 00000000 		.word	temp
 955 02a4 00000000 		.word	nn
 956 02a8 00000000 		.word	cyl_no
 957 02ac 00000000 		.word	new_pos
 958 02b0 00000000 		.word	pos
 959 02b4 00000000 		.word	new_pos_set
 960 02b8 00000000 		.word	pid
 961              	.L64:
 235:main.c        ****                         nn=0; 
 962              		.loc 1 235 0
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccKv0qGd.s 			page 23


 963 02bc 0A22     		movs	r2, #10
 964 02be 0021     		movs	r1, #0
 965 02c0 1A48     		ldr	r0, .L71
 966 02c2 FFF7FEFF 		bl	strtol
 967 02c6 0246     		mov	r2, r0
 968 02c8 194B     		ldr	r3, .L71+4
 969 02ca 1A60     		str	r2, [r3]
 236:main.c        ****                         temp[0] = '\0';
 970              		.loc 1 236 0
 971 02cc 194B     		ldr	r3, .L71+8
 972 02ce 0022     		movs	r2, #0
 973 02d0 1A60     		str	r2, [r3]
 237:main.c        ****                         data_read_mode = 0;
 974              		.loc 1 237 0
 975 02d2 164B     		ldr	r3, .L71
 976 02d4 0022     		movs	r2, #0
 977 02d6 1A70     		strb	r2, [r3]
 238:main.c        ****                     }
 978              		.loc 1 238 0
 979 02d8 174B     		ldr	r3, .L71+12
 980 02da 0022     		movs	r2, #0
 981 02dc 1A60     		str	r2, [r3]
 982              		.loc 1 241 0
 983 02de 1AE0     		b	.L33
 984              	.L45:
 242:main.c        ****                 case 7: //w - id request
 243:main.c        ****                     sprintf(psoc_id_string,"%d",psoc_id);
 985              		.loc 1 243 0
 986 02e0 164B     		ldr	r3, .L71+16
 987 02e2 1B68     		ldr	r3, [r3]
 988 02e4 1A46     		mov	r2, r3
 989 02e6 1649     		ldr	r1, .L71+20
 990 02e8 1648     		ldr	r0, .L71+24
 991 02ea FFF7FEFF 		bl	sprintf
 244:main.c        ****                     UART_ClearTxBuffer();
 992              		.loc 1 244 0
 993 02ee FFF7FEFF 		bl	UART_ClearTxBuffer
 245:main.c        ****                     CyDelay(500);
 994              		.loc 1 245 0
 995 02f2 4FF4FA70 		mov	r0, #500
 996 02f6 FFF7FEFF 		bl	CyDelay
 246:main.c        ****                     UART_PutString(psoc_id_string);
 997              		.loc 1 246 0
 998 02fa 1248     		ldr	r0, .L71+24
 999 02fc FFF7FEFF 		bl	UART_PutString
 247:main.c        ****                     temp[0] = '\0';
 1000              		.loc 1 247 0
 1001 0300 0A4B     		ldr	r3, .L71
 1002 0302 0022     		movs	r2, #0
 1003 0304 1A70     		strb	r2, [r3]
 248:main.c        ****                     data_read_mode = 0;
 1004              		.loc 1 248 0
 1005 0306 0C4B     		ldr	r3, .L71+12
 1006 0308 0022     		movs	r2, #0
 1007 030a 1A60     		str	r2, [r3]
 249:main.c        ****                 break;
 1008              		.loc 1 249 0
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccKv0qGd.s 			page 24


 1009 030c 00BF     		nop
 1010 030e 02E0     		b	.L33
 1011              	.L67:
 159:main.c        ****                 case 1:
 1012              		.loc 1 159 0
 1013 0310 00BF     		nop
 1014 0312 00E0     		b	.L33
 1015              	.L68:
 173:main.c        ****                 case 2: //x
 1016              		.loc 1 173 0
 1017 0314 00BF     		nop
 1018              	.L33:
 250:main.c        ****             }
 251:main.c        ****             
 252:main.c        ****             if(errorStatus == 0u)
 253:main.c        ****             {
 254:main.c        ****                 /* Send data backward */
 255:main.c        ****                 //UART_TXDATA_REG = rxData;
 256:main.c        ****             }
 257:main.c        ****         }
 258:main.c        ****     }while((rxStatus & UART_RX_STS_FIFO_NOTEMPTY) != 0u);
 1019              		.loc 1 258 0
 1020 0316 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1021 0318 03F02003 		and	r3, r3, #32
 1022 031c 002B     		cmp	r3, #0
 1023 031e 7FF472AE 		bne	.L66
 259:main.c        **** }
 1024              		.loc 1 259 0
 1025 0322 00BF     		nop
 1026 0324 0C37     		adds	r7, r7, #12
 1027              		.cfi_def_cfa_offset 12
 1028 0326 BD46     		mov	sp, r7
 1029              		.cfi_def_cfa_register 13
 1030              		@ sp needed
 1031 0328 90BD     		pop	{r4, r7, pc}
 1032              	.L72:
 1033 032a 00BF     		.align	2
 1034              	.L71:
 1035 032c 00000000 		.word	temp
 1036 0330 00000000 		.word	cyl_no
 1037 0334 00000000 		.word	nn
 1038 0338 00000000 		.word	data_read_mode
 1039 033c 00000000 		.word	psoc_id
 1040 0340 00000000 		.word	.LC0
 1041 0344 00000000 		.word	psoc_id_string
 1042              		.cfi_endproc
 1043              	.LFE67:
 1044              		.size	RxIsr, .-RxIsr
 1045              		.section	.rodata
 1046 0003 00       		.align	2
 1047              	.LC1:
 1048 0004 25303564 		.ascii	"%05d\011%05d\011%05d\011%05d\011%05d\011%05d\011%05"
 1048      09253035 
 1048      64092530 
 1048      35640925 
 1048      30356409 
 1049 0025 64092530 		.ascii	"d\011%05d\011\000"
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccKv0qGd.s 			page 25


 1049      35640900 
 1050              		.global	__aeabi_i2d
 1051              		.global	__aeabi_dsub
 1052              		.global	__aeabi_dmul
 1053              		.global	__aeabi_dadd
 1054              		.global	__aeabi_dcmpgt
 1055              		.global	__aeabi_dcmplt
 1056              		.global	__aeabi_ddiv
 1057              		.global	__aeabi_d2iz
 1058 002d 000000   		.align	2
 1059              	.LC2:
 1060 0030 55505045 		.ascii	"UPPER:\011Lower Offset: %d \011Upper Offset: %d \011"
 1060      523A094C 
 1060      6F776572 
 1060      204F6666 
 1060      7365743A 
 1061 005b 20414443 		.ascii	" ADC Diff: %d\012\000"
 1061      20446966 
 1061      663A2025 
 1061      640A00
 1062 006a 0000     		.align	2
 1063              	.LC3:
 1064 006c 4C4F5745 		.ascii	"LOWER:\011Lower Offset: %d \011Upper Offset: %d \011"
 1064      523A094C 
 1064      6F776572 
 1064      204F6666 
 1064      7365743A 
 1065 0097 20414443 		.ascii	" ADC Diff: %d\012\000"
 1065      20446966 
 1065      663A2025 
 1065      640A00
 1066 00a6 0000     		.align	2
 1067              	.LC4:
 1068 00a8 4C6F7765 		.ascii	"Lower Offset: %d \011 Upper Offset: %d \012\000"
 1068      72204F66 
 1068      66736574 
 1068      3A202564 
 1068      20092055 
 1069              		.global	__aeabi_ui2d
 1070              		.section	.text.main,"ax",%progbits
 1071              		.align	2
 1072              		.global	main
 1073              		.thumb
 1074              		.thumb_func
 1075              		.type	main, %function
 1076              	main:
 1077              	.LFB68:
 260:main.c        **** 
 261:main.c        **** int main()
 262:main.c        **** {
 1078              		.loc 1 262 0
 1079              		.cfi_startproc
 1080              		@ args = 0, pretend = 0, frame = 64
 1081              		@ frame_needed = 1, uses_anonymous_args = 0
 1082 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1083              		.cfi_def_cfa_offset 20
 1084              		.cfi_offset 4, -20
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccKv0qGd.s 			page 26


 1085              		.cfi_offset 5, -16
 1086              		.cfi_offset 6, -12
 1087              		.cfi_offset 7, -8
 1088              		.cfi_offset 14, -4
 1089 0002 97B0     		sub	sp, sp, #92
 1090              		.cfi_def_cfa_offset 112
 1091 0004 06AF     		add	r7, sp, #24
 1092              		.cfi_def_cfa 7, 88
 263:main.c        ****     
 264:main.c        ****     EEPROM_Start();
 1093              		.loc 1 264 0
 1094 0006 FFF7FEFF 		bl	EEPROM_Start
 265:main.c        ****     EEPROM_UpdateTemperature();
 1095              		.loc 1 265 0
 1096 000a FFF7FEFF 		bl	EEPROM_UpdateTemperature
 266:main.c        ****     psoc_id = EEPROM_ReadByte(PSOC_ID_BYTE_ADDRESS);
 1097              		.loc 1 266 0
 1098 000e 2020     		movs	r0, #32
 1099 0010 FFF7FEFF 		bl	EEPROM_ReadByte
 1100 0014 0346     		mov	r3, r0
 1101 0016 1A46     		mov	r2, r3
 1102 0018 A94B     		ldr	r3, .L103+16
 1103 001a 1A60     		str	r2, [r3]
 267:main.c        ****     switch(psoc_id){
 1104              		.loc 1 267 0
 1105 001c A84B     		ldr	r3, .L103+16
 1106 001e 1B68     		ldr	r3, [r3]
 1107 0020 102B     		cmp	r3, #16
 1108 0022 02D0     		beq	.L75
 1109 0024 112B     		cmp	r3, #17
 1110 0026 19D0     		beq	.L76
 1111 0028 31E0     		b	.L74
 1112              	.L75:
 268:main.c        ****         case 16:
 269:main.c        ****             offsets[0][0] = 125;offsets[0][1] = 179;
 1113              		.loc 1 269 0
 1114 002a A64B     		ldr	r3, .L103+20
 1115 002c 7D22     		movs	r2, #125
 1116 002e 1A60     		str	r2, [r3]
 1117 0030 A44B     		ldr	r3, .L103+20
 1118 0032 B322     		movs	r2, #179
 1119 0034 5A60     		str	r2, [r3, #4]
 270:main.c        ****             offsets[1][0] = 132;offsets[1][1] = 176;
 1120              		.loc 1 270 0
 1121 0036 A34B     		ldr	r3, .L103+20
 1122 0038 8422     		movs	r2, #132
 1123 003a 9A60     		str	r2, [r3, #8]
 1124 003c A14B     		ldr	r3, .L103+20
 1125 003e B022     		movs	r2, #176
 1126 0040 DA60     		str	r2, [r3, #12]
 271:main.c        ****             offsets[2][0] = 165;offsets[2][1] = 165;
 1127              		.loc 1 271 0
 1128 0042 A04B     		ldr	r3, .L103+20
 1129 0044 A522     		movs	r2, #165
 1130 0046 1A61     		str	r2, [r3, #16]
 1131 0048 9E4B     		ldr	r3, .L103+20
 1132 004a A522     		movs	r2, #165
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccKv0qGd.s 			page 27


 1133 004c 5A61     		str	r2, [r3, #20]
 272:main.c        ****             offsets[3][0] = 180;offsets[3][1] = 180;
 1134              		.loc 1 272 0
 1135 004e 9D4B     		ldr	r3, .L103+20
 1136 0050 B422     		movs	r2, #180
 1137 0052 9A61     		str	r2, [r3, #24]
 1138 0054 9B4B     		ldr	r3, .L103+20
 1139 0056 B422     		movs	r2, #180
 1140 0058 DA61     		str	r2, [r3, #28]
 273:main.c        ****             break;
 1141              		.loc 1 273 0
 1142 005a 18E0     		b	.L74
 1143              	.L76:
 274:main.c        ****         case 17:
 275:main.c        ****             offsets[0][0] = 125;offsets[0][1] = 179;
 1144              		.loc 1 275 0
 1145 005c 994B     		ldr	r3, .L103+20
 1146 005e 7D22     		movs	r2, #125
 1147 0060 1A60     		str	r2, [r3]
 1148 0062 984B     		ldr	r3, .L103+20
 1149 0064 B322     		movs	r2, #179
 1150 0066 5A60     		str	r2, [r3, #4]
 276:main.c        ****             offsets[1][0] = 132;offsets[1][1] = 176;
 1151              		.loc 1 276 0
 1152 0068 964B     		ldr	r3, .L103+20
 1153 006a 8422     		movs	r2, #132
 1154 006c 9A60     		str	r2, [r3, #8]
 1155 006e 954B     		ldr	r3, .L103+20
 1156 0070 B022     		movs	r2, #176
 1157 0072 DA60     		str	r2, [r3, #12]
 277:main.c        ****             offsets[2][0] = 185;offsets[2][1] = 172;
 1158              		.loc 1 277 0
 1159 0074 934B     		ldr	r3, .L103+20
 1160 0076 B922     		movs	r2, #185
 1161 0078 1A61     		str	r2, [r3, #16]
 1162 007a 924B     		ldr	r3, .L103+20
 1163 007c AC22     		movs	r2, #172
 1164 007e 5A61     		str	r2, [r3, #20]
 278:main.c        ****             offsets[3][0] = 195;offsets[3][1] = 169;
 1165              		.loc 1 278 0
 1166 0080 904B     		ldr	r3, .L103+20
 1167 0082 C322     		movs	r2, #195
 1168 0084 9A61     		str	r2, [r3, #24]
 1169 0086 8F4B     		ldr	r3, .L103+20
 1170 0088 A922     		movs	r2, #169
 1171 008a DA61     		str	r2, [r3, #28]
 279:main.c        ****             break;
 1172              		.loc 1 279 0
 1173 008c 00BF     		nop
 1174              	.L74:
 1175              	.LBB8:
 280:main.c        ****     }
 281:main.c        ****     
 282:main.c        ****     //initializing variables
 283:main.c        ****     for(int g = 0;g<CYL_NO;g++){
 1176              		.loc 1 283 0
 1177 008e 0023     		movs	r3, #0
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccKv0qGd.s 			page 28


 1178 0090 FB63     		str	r3, [r7, #60]
 1179 0092 49E0     		b	.L77
 1180              	.L78:
 284:main.c        ****         new_pos_set[g]  = 0;
 1181              		.loc 1 284 0 discriminator 3
 1182 0094 8C4A     		ldr	r2, .L103+24
 1183 0096 FB6B     		ldr	r3, [r7, #60]
 1184 0098 0021     		movs	r1, #0
 1185 009a 42F82310 		str	r1, [r2, r3, lsl #2]
 285:main.c        ****         new_pos[g]      = 0;
 1186              		.loc 1 285 0 discriminator 3
 1187 009e 8B4A     		ldr	r2, .L103+28
 1188 00a0 FB6B     		ldr	r3, [r7, #60]
 1189 00a2 0021     		movs	r1, #0
 1190 00a4 42F82310 		str	r1, [r2, r3, lsl #2]
 286:main.c        ****         pos[g]          = 1300;
 1191              		.loc 1 286 0 discriminator 3
 1192 00a8 894A     		ldr	r2, .L103+32
 1193 00aa FB6B     		ldr	r3, [r7, #60]
 1194 00ac 40F21451 		movw	r1, #1300
 1195 00b0 42F82310 		str	r1, [r2, r3, lsl #2]
 287:main.c        ****         pulse[g]        = 0;
 1196              		.loc 1 287 0 discriminator 3
 1197 00b4 874A     		ldr	r2, .L103+36
 1198 00b6 FB6B     		ldr	r3, [r7, #60]
 1199 00b8 0021     		movs	r1, #0
 1200 00ba 42F82310 		str	r1, [r2, r3, lsl #2]
 288:main.c        ****         pulse_temp[g]   = 0;
 1201              		.loc 1 288 0 discriminator 3
 1202 00be 864A     		ldr	r2, .L103+40
 1203 00c0 FB6B     		ldr	r3, [r7, #60]
 1204 00c2 0021     		movs	r1, #0
 1205 00c4 42F82310 		str	r1, [r2, r3, lsl #2]
 289:main.c        ****         err[g]          = 0;
 1206              		.loc 1 289 0 discriminator 3
 1207 00c8 844A     		ldr	r2, .L103+44
 1208 00ca FB6B     		ldr	r3, [r7, #60]
 1209 00cc DB00     		lsls	r3, r3, #3
 1210 00ce 1A44     		add	r2, r2, r3
 1211 00d0 4FF00003 		mov	r3, #0
 1212 00d4 4FF00004 		mov	r4, #0
 1213 00d8 C2E90034 		strd	r3, [r2]
 290:main.c        ****         adcValue[g]     = 0;
 1214              		.loc 1 290 0 discriminator 3
 1215 00dc 804A     		ldr	r2, .L103+48
 1216 00de FB6B     		ldr	r3, [r7, #60]
 1217 00e0 0021     		movs	r1, #0
 1218 00e2 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
 291:main.c        ****         der[g]          = 0;
 1219              		.loc 1 291 0 discriminator 3
 1220 00e6 7F4A     		ldr	r2, .L103+52
 1221 00e8 FB6B     		ldr	r3, [r7, #60]
 1222 00ea DB00     		lsls	r3, r3, #3
 1223 00ec 1A44     		add	r2, r2, r3
 1224 00ee 4FF00003 		mov	r3, #0
 1225 00f2 4FF00004 		mov	r4, #0
 1226 00f6 C2E90034 		strd	r3, [r2]
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccKv0qGd.s 			page 29


 292:main.c        ****         prev_err[g]     = 0;
 1227              		.loc 1 292 0 discriminator 3
 1228 00fa 7B4A     		ldr	r2, .L103+56
 1229 00fc FB6B     		ldr	r3, [r7, #60]
 1230 00fe DB00     		lsls	r3, r3, #3
 1231 0100 1A44     		add	r2, r2, r3
 1232 0102 4FF00003 		mov	r3, #0
 1233 0106 4FF00004 		mov	r4, #0
 1234 010a C2E90034 		strd	r3, [r2]
 293:main.c        ****         pid_integral[g] = 0;
 1235              		.loc 1 293 0 discriminator 3
 1236 010e 774A     		ldr	r2, .L103+60
 1237 0110 FB6B     		ldr	r3, [r7, #60]
 1238 0112 DB00     		lsls	r3, r3, #3
 1239 0114 1A44     		add	r2, r2, r3
 1240 0116 4FF00003 		mov	r3, #0
 1241 011a 4FF00004 		mov	r4, #0
 1242 011e C2E90034 		strd	r3, [r2]
 283:main.c        ****         new_pos_set[g]  = 0;
 1243              		.loc 1 283 0 discriminator 3
 1244 0122 FB6B     		ldr	r3, [r7, #60]
 1245 0124 0133     		adds	r3, r3, #1
 1246 0126 FB63     		str	r3, [r7, #60]
 1247              	.L77:
 283:main.c        ****         new_pos_set[g]  = 0;
 1248              		.loc 1 283 0 is_stmt 0 discriminator 1
 1249 0128 FB6B     		ldr	r3, [r7, #60]
 1250 012a 032B     		cmp	r3, #3
 1251 012c B2DD     		ble	.L78
 1252              	.LBE8:
 294:main.c        ****     }
 295:main.c        ****     //PWM variables
 296:main.c        ****     PWM_0_Start();
 1253              		.loc 1 296 0 is_stmt 1
 1254 012e FFF7FEFF 		bl	PWM_0_Start
 297:main.c        ****     PWM_1_Start();
 1255              		.loc 1 297 0
 1256 0132 FFF7FEFF 		bl	PWM_1_Start
 298:main.c        ****     PWM_2_Start();
 1257              		.loc 1 298 0
 1258 0136 FFF7FEFF 		bl	PWM_2_Start
 299:main.c        ****     PWM_3_Start();
 1259              		.loc 1 299 0
 1260 013a FFF7FEFF 		bl	PWM_3_Start
 300:main.c        ****     ADC_0_Start();
 1261              		.loc 1 300 0
 1262 013e FFF7FEFF 		bl	ADC_0_Start
 301:main.c        ****     ADC_0_StartConvert();
 1263              		.loc 1 301 0
 1264 0142 FFF7FEFF 		bl	ADC_0_StartConvert
 302:main.c        ****     AMux_0_Init();
 1265              		.loc 1 302 0
 1266 0146 FFF7FEFF 		bl	AMux_0_Start
 303:main.c        ****     
 304:main.c        ****     UART_Start();           /* Start communication component */
 1267              		.loc 1 304 0
 1268 014a FFF7FEFF 		bl	UART_Start
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccKv0qGd.s 			page 30


 305:main.c        **** 
 306:main.c        **** #if(INTERRUPT_CODE_ENABLED == ENABLED)
 307:main.c        ****     isr_rx_StartEx(RxIsr);
 1269              		.loc 1 307 0
 1270 014e 6848     		ldr	r0, .L103+64
 1271 0150 FFF7FEFF 		bl	isr_rx_StartEx
 308:main.c        ****     update_median_isr_StartEx(adc_update);
 1272              		.loc 1 308 0
 1273 0154 6748     		ldr	r0, .L103+68
 1274 0156 FFF7FEFF 		bl	update_median_isr_StartEx
 309:main.c        **** #endif /* INTERRUPT_CODE_ENABLED == ENABLED */
 310:main.c        ****     
 311:main.c        ****     CyGlobalIntEnable;      /* Enable global interrupts. */
 1275              		.loc 1 311 0
 1276              		.syntax unified
 1277              	@ 311 "main.c" 1
 1278 015a 62B6     		CPSIE   i
 1279              	@ 0 "" 2
 312:main.c        ****     
 313:main.c        ****     double dt;
 314:main.c        ****     double time;
 315:main.c        ****     
 316:main.c        ****     dt = 0.025; //initialised dt, corrected by timer  below
 1280              		.loc 1 316 0
 1281              		.thumb
 1282              		.syntax unified
 1283 015c 54A4     		adr	r4, .L103
 1284 015e D4E90034 		ldrd	r3, [r4]
 1285 0162 C7E90C34 		strd	r3, [r7, #48]
 317:main.c        **** 
 318:main.c        ****     //sprintf(sendValue,"%08d\t%08.2f\t%08d\t%08.2f",adcValue[0],err[0],adcValue[1],err[1]);
 319:main.c        ****     //UART_PutString(sendValue);
 320:main.c        ****     
 321:main.c        ****     median_timer_Start();
 1286              		.loc 1 321 0
 1287 0166 FFF7FEFF 		bl	median_timer_Start
 322:main.c        ****     Timer_1_Start();
 1288              		.loc 1 322 0
 1289 016a FFF7FEFF 		bl	Timer_1_Start
 1290              	.L99:
 323:main.c        ****     
 324:main.c        ****     for(;;)
 325:main.c        ****     {
 326:main.c        ****         /*for(;;){
 327:main.c        ****             for(int i = 0;i<4;i++){
 328:main.c        ****                 writePWM(i,499);
 329:main.c        ****             }
 330:main.c        ****                 CyDelay(500);
 331:main.c        ****                 for(int i = 0;i<4;i++){
 332:main.c        ****                 writePWM(i,-499);
 333:main.c        ****             }
 334:main.c        ****                 CyDelay(500);
 335:main.c        ****                 for(int i = 0;i<4;i++){
 336:main.c        ****                 writePWM(i,0);
 337:main.c        ****             }
 338:main.c        ****                 CyDelay(1000);
 339:main.c        ****         }*/
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccKv0qGd.s 			page 31


 340:main.c        ****         
 341:main.c        ****         Timer_1_WriteCounter(65535);
 1291              		.loc 1 341 0
 1292 016e 4FF6FF70 		movw	r0, #65535
 1293 0172 FFF7FEFF 		bl	Timer_1_WriteCounter
 342:main.c        ****         //sprintf(sendValue,"%08d\t%08.2f\t%08d\t%08.2f",adcValue[0],err[0],adcValue[1],err[1]);
 343:main.c        ****         sprintf(sendValue,"%05d\t%05d\t%05d\t%05d\t%05d\t%05d\t%05d\t%05d\t",adcValue[0],adcValue[1
 1294              		.loc 1 343 0
 1295 0176 5A4B     		ldr	r3, .L103+48
 1296 0178 1B88     		ldrh	r3, [r3]
 1297 017a 1E46     		mov	r6, r3
 1298 017c 584B     		ldr	r3, .L103+48
 1299 017e 5B88     		ldrh	r3, [r3, #2]
 1300 0180 9E46     		mov	lr, r3
 1301 0182 574B     		ldr	r3, .L103+48
 1302 0184 9B88     		ldrh	r3, [r3, #4]
 1303 0186 1C46     		mov	r4, r3
 1304 0188 554B     		ldr	r3, .L103+48
 1305 018a DB88     		ldrh	r3, [r3, #6]
 1306 018c 1D46     		mov	r5, r3
 1307 018e 504B     		ldr	r3, .L103+32
 1308 0190 1B68     		ldr	r3, [r3]
 1309 0192 4F4A     		ldr	r2, .L103+32
 1310 0194 5268     		ldr	r2, [r2, #4]
 1311 0196 4E49     		ldr	r1, .L103+32
 1312 0198 8968     		ldr	r1, [r1, #8]
 1313 019a 4D48     		ldr	r0, .L103+32
 1314 019c C068     		ldr	r0, [r0, #12]
 1315 019e 0590     		str	r0, [sp, #20]
 1316 01a0 0491     		str	r1, [sp, #16]
 1317 01a2 0392     		str	r2, [sp, #12]
 1318 01a4 0293     		str	r3, [sp, #8]
 1319 01a6 0195     		str	r5, [sp, #4]
 1320 01a8 0094     		str	r4, [sp]
 1321 01aa 7346     		mov	r3, lr
 1322 01ac 3246     		mov	r2, r6
 1323 01ae 5249     		ldr	r1, .L103+72
 1324 01b0 5248     		ldr	r0, .L103+76
 1325 01b2 FFF7FEFF 		bl	sprintf
 344:main.c        ****         
 345:main.c        ****         UART_PutString(sendValue);
 1326              		.loc 1 345 0
 1327 01b6 5148     		ldr	r0, .L103+76
 1328 01b8 FFF7FEFF 		bl	UART_PutString
 1329              	.LBB9:
 346:main.c        ****         //sprintf(sendValue,"%08d\t%08.2f\t%08d\t%08.2f",adcValue[0],err[0],adcValue[1],err[1]);
 347:main.c        ****         //UART_PutString(sendValue);
 348:main.c        ****         /* START PID CODE */
 349:main.c        ****         for(int cyl = 0;cyl<CYL_NO;cyl++){
 1330              		.loc 1 349 0
 1331 01bc 0023     		movs	r3, #0
 1332 01be FB62     		str	r3, [r7, #44]
 1333 01c0 2FE1     		b	.L79
 1334              	.L85:
 350:main.c        ****             if(new_pos_set[cyl]){
 1335              		.loc 1 350 0
 1336 01c2 414A     		ldr	r2, .L103+24
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccKv0qGd.s 			page 32


 1337 01c4 FB6A     		ldr	r3, [r7, #44]
 1338 01c6 52F82330 		ldr	r3, [r2, r3, lsl #2]
 1339 01ca 002B     		cmp	r3, #0
 1340 01cc 0CD0     		beq	.L80
 351:main.c        ****                 pos[cyl] = new_pos[cyl];
 1341              		.loc 1 351 0
 1342 01ce 3F4A     		ldr	r2, .L103+28
 1343 01d0 FB6A     		ldr	r3, [r7, #44]
 1344 01d2 52F82320 		ldr	r2, [r2, r3, lsl #2]
 1345 01d6 3E49     		ldr	r1, .L103+32
 1346 01d8 FB6A     		ldr	r3, [r7, #44]
 1347 01da 41F82320 		str	r2, [r1, r3, lsl #2]
 352:main.c        ****                 new_pos_set[cyl] = 0;
 1348              		.loc 1 352 0
 1349 01de 3A4A     		ldr	r2, .L103+24
 1350 01e0 FB6A     		ldr	r3, [r7, #44]
 1351 01e2 0021     		movs	r1, #0
 1352 01e4 42F82310 		str	r1, [r2, r3, lsl #2]
 1353              	.L80:
 353:main.c        ****             }
 354:main.c        ****             
 355:main.c        ****             err[cyl] = -pos[cyl] + adcValue[cyl];
 1354              		.loc 1 355 0
 1355 01e8 3D4A     		ldr	r2, .L103+48
 1356 01ea FB6A     		ldr	r3, [r7, #44]
 1357 01ec 32F81330 		ldrh	r3, [r2, r3, lsl #1]
 1358 01f0 1946     		mov	r1, r3
 1359 01f2 374A     		ldr	r2, .L103+32
 1360 01f4 FB6A     		ldr	r3, [r7, #44]
 1361 01f6 52F82330 		ldr	r3, [r2, r3, lsl #2]
 1362 01fa CB1A     		subs	r3, r1, r3
 1363 01fc 1846     		mov	r0, r3
 1364 01fe FFF7FEFF 		bl	__aeabi_i2d
 1365 0202 0346     		mov	r3, r0
 1366 0204 0C46     		mov	r4, r1
 1367 0206 3549     		ldr	r1, .L103+44
 1368 0208 FA6A     		ldr	r2, [r7, #44]
 1369 020a D200     		lsls	r2, r2, #3
 1370 020c 0A44     		add	r2, r2, r1
 1371 020e C2E90034 		strd	r3, [r2]
 356:main.c        ****             der[cyl] = err[cyl] - prev_err[cyl];
 1372              		.loc 1 356 0
 1373 0212 324A     		ldr	r2, .L103+44
 1374 0214 FB6A     		ldr	r3, [r7, #44]
 1375 0216 DB00     		lsls	r3, r3, #3
 1376 0218 1344     		add	r3, r3, r2
 1377 021a D3E90001 		ldrd	r0, [r3]
 1378 021e 324A     		ldr	r2, .L103+56
 1379 0220 FB6A     		ldr	r3, [r7, #44]
 1380 0222 DB00     		lsls	r3, r3, #3
 1381 0224 1344     		add	r3, r3, r2
 1382 0226 18CB     		ldmia	r3, {r3-r4}
 1383 0228 1A46     		mov	r2, r3
 1384 022a 2346     		mov	r3, r4
 1385 022c FFF7FEFF 		bl	__aeabi_dsub
 1386 0230 0346     		mov	r3, r0
 1387 0232 0C46     		mov	r4, r1
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccKv0qGd.s 			page 33


 1388 0234 2B49     		ldr	r1, .L103+52
 1389 0236 FA6A     		ldr	r2, [r7, #44]
 1390 0238 D200     		lsls	r2, r2, #3
 1391 023a 0A44     		add	r2, r2, r1
 1392 023c C2E90034 		strd	r3, [r2]
 357:main.c        ****             pid_integral[cyl] = err[cyl]* dt + pid_integral[cyl];
 1393              		.loc 1 357 0
 1394 0240 264A     		ldr	r2, .L103+44
 1395 0242 FB6A     		ldr	r3, [r7, #44]
 1396 0244 DB00     		lsls	r3, r3, #3
 1397 0246 1344     		add	r3, r3, r2
 1398 0248 D3E90001 		ldrd	r0, [r3]
 1399 024c D7E90C23 		ldrd	r2, [r7, #48]
 1400 0250 FFF7FEFF 		bl	__aeabi_dmul
 1401 0254 0346     		mov	r3, r0
 1402 0256 0C46     		mov	r4, r1
 1403 0258 1846     		mov	r0, r3
 1404 025a 2146     		mov	r1, r4
 1405 025c 234A     		ldr	r2, .L103+60
 1406 025e FB6A     		ldr	r3, [r7, #44]
 1407 0260 DB00     		lsls	r3, r3, #3
 1408 0262 1344     		add	r3, r3, r2
 1409 0264 18CB     		ldmia	r3, {r3-r4}
 1410 0266 1A46     		mov	r2, r3
 1411 0268 2346     		mov	r3, r4
 1412 026a FFF7FEFF 		bl	__aeabi_dadd
 1413 026e 0346     		mov	r3, r0
 1414 0270 0C46     		mov	r4, r1
 1415 0272 1E49     		ldr	r1, .L103+60
 1416 0274 FA6A     		ldr	r2, [r7, #44]
 1417 0276 D200     		lsls	r2, r2, #3
 1418 0278 0A44     		add	r2, r2, r1
 1419 027a C2E90034 		strd	r3, [r2]
 358:main.c        ****             if(pid_integral[cyl]>35000){
 1420              		.loc 1 358 0
 1421 027e 1B4A     		ldr	r2, .L103+60
 1422 0280 FB6A     		ldr	r3, [r7, #44]
 1423 0282 DB00     		lsls	r3, r3, #3
 1424 0284 1344     		add	r3, r3, r2
 1425 0286 D3E90001 		ldrd	r0, [r3]
 1426 028a 0BA3     		adr	r3, .L103+8
 1427 028c D3E90023 		ldrd	r2, [r3]
 1428 0290 FFF7FEFF 		bl	__aeabi_dcmpgt
 1429 0294 0346     		mov	r3, r0
 1430 0296 002B     		cmp	r3, #0
 1431 0298 32D0     		beq	.L102
 359:main.c        ****                 pid_integral[cyl] = 35000;
 1432              		.loc 1 359 0
 1433 029a 144A     		ldr	r2, .L103+60
 1434 029c FB6A     		ldr	r3, [r7, #44]
 1435 029e DB00     		lsls	r3, r3, #3
 1436 02a0 1A44     		add	r2, r2, r3
 1437 02a2 05A4     		adr	r4, .L103+8
 1438 02a4 D4E90034 		ldrd	r3, [r4]
 1439 02a8 C2E90034 		strd	r3, [r2]
 1440 02ac 3FE0     		b	.L83
 1441              	.L104:
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccKv0qGd.s 			page 34


 1442 02ae 00BF     		.align	3
 1443              	.L103:
 1444 02b0 9A999999 		.word	-1717986918
 1445 02b4 9999993F 		.word	1067030937
 1446 02b8 00000000 		.word	0
 1447 02bc 0017E140 		.word	1088493312
 1448 02c0 00000000 		.word	psoc_id
 1449 02c4 00000000 		.word	offsets
 1450 02c8 00000000 		.word	new_pos_set
 1451 02cc 00000000 		.word	new_pos
 1452 02d0 00000000 		.word	pos
 1453 02d4 00000000 		.word	pulse
 1454 02d8 00000000 		.word	pulse_temp
 1455 02dc 00000000 		.word	err
 1456 02e0 00000000 		.word	adcValue
 1457 02e4 00000000 		.word	der
 1458 02e8 00000000 		.word	prev_err
 1459 02ec 00000000 		.word	pid_integral
 1460 02f0 00000000 		.word	RxIsr
 1461 02f4 00000000 		.word	adc_update
 1462 02f8 04000000 		.word	.LC1
 1463 02fc 00000000 		.word	sendValue
 1464              	.L102:
 360:main.c        ****             } else if(pid_integral[cyl]<-35000){
 1465              		.loc 1 360 0
 1466 0300 8D4A     		ldr	r2, .L105+8
 1467 0302 FB6A     		ldr	r3, [r7, #44]
 1468 0304 DB00     		lsls	r3, r3, #3
 1469 0306 1344     		add	r3, r3, r2
 1470 0308 D3E90001 		ldrd	r0, [r3]
 1471 030c 88A3     		adr	r3, .L105
 1472 030e D3E90023 		ldrd	r2, [r3]
 1473 0312 FFF7FEFF 		bl	__aeabi_dcmplt
 1474 0316 0346     		mov	r3, r0
 1475 0318 002B     		cmp	r3, #0
 1476 031a 08D0     		beq	.L83
 361:main.c        ****                 pid_integral[cyl] = -35000;
 1477              		.loc 1 361 0
 1478 031c 864A     		ldr	r2, .L105+8
 1479 031e FB6A     		ldr	r3, [r7, #44]
 1480 0320 DB00     		lsls	r3, r3, #3
 1481 0322 1A44     		add	r2, r2, r3
 1482 0324 82A4     		adr	r4, .L105
 1483 0326 D4E90034 		ldrd	r3, [r4]
 1484 032a C2E90034 		strd	r3, [r2]
 1485              	.L83:
 362:main.c        ****             }
 363:main.c        ****             pulse_temp[cyl] = pid[0] * err[cyl] + ( pid[1] * pid_integral[cyl] ) + ( pid[2] * der[c
 1486              		.loc 1 363 0 discriminator 2
 1487 032e 834B     		ldr	r3, .L105+12
 1488 0330 D3E90001 		ldrd	r0, [r3]
 1489 0334 824A     		ldr	r2, .L105+16
 1490 0336 FB6A     		ldr	r3, [r7, #44]
 1491 0338 DB00     		lsls	r3, r3, #3
 1492 033a 1344     		add	r3, r3, r2
 1493 033c 18CB     		ldmia	r3, {r3-r4}
 1494 033e 1A46     		mov	r2, r3
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccKv0qGd.s 			page 35


 1495 0340 2346     		mov	r3, r4
 1496 0342 FFF7FEFF 		bl	__aeabi_dmul
 1497 0346 0346     		mov	r3, r0
 1498 0348 0C46     		mov	r4, r1
 1499 034a 1D46     		mov	r5, r3
 1500 034c 2646     		mov	r6, r4
 1501 034e 7B4B     		ldr	r3, .L105+12
 1502 0350 D3E90201 		ldrd	r0, [r3, #8]
 1503 0354 784A     		ldr	r2, .L105+8
 1504 0356 FB6A     		ldr	r3, [r7, #44]
 1505 0358 DB00     		lsls	r3, r3, #3
 1506 035a 1344     		add	r3, r3, r2
 1507 035c 18CB     		ldmia	r3, {r3-r4}
 1508 035e 1A46     		mov	r2, r3
 1509 0360 2346     		mov	r3, r4
 1510 0362 FFF7FEFF 		bl	__aeabi_dmul
 1511 0366 0346     		mov	r3, r0
 1512 0368 0C46     		mov	r4, r1
 1513 036a 1A46     		mov	r2, r3
 1514 036c 2346     		mov	r3, r4
 1515 036e 2846     		mov	r0, r5
 1516 0370 3146     		mov	r1, r6
 1517 0372 FFF7FEFF 		bl	__aeabi_dadd
 1518 0376 0346     		mov	r3, r0
 1519 0378 0C46     		mov	r4, r1
 1520 037a 1D46     		mov	r5, r3
 1521 037c 2646     		mov	r6, r4
 1522 037e 6F4B     		ldr	r3, .L105+12
 1523 0380 D3E90401 		ldrd	r0, [r3, #16]
 1524 0384 6F4A     		ldr	r2, .L105+20
 1525 0386 FB6A     		ldr	r3, [r7, #44]
 1526 0388 DB00     		lsls	r3, r3, #3
 1527 038a 1344     		add	r3, r3, r2
 1528 038c 18CB     		ldmia	r3, {r3-r4}
 1529 038e 1A46     		mov	r2, r3
 1530 0390 2346     		mov	r3, r4
 1531 0392 FFF7FEFF 		bl	__aeabi_dmul
 1532 0396 0346     		mov	r3, r0
 1533 0398 0C46     		mov	r4, r1
 1534 039a 1846     		mov	r0, r3
 1535 039c 2146     		mov	r1, r4
 1536 039e D7E90C23 		ldrd	r2, [r7, #48]
 1537 03a2 FFF7FEFF 		bl	__aeabi_ddiv
 1538 03a6 0346     		mov	r3, r0
 1539 03a8 0C46     		mov	r4, r1
 1540 03aa 1A46     		mov	r2, r3
 1541 03ac 2346     		mov	r3, r4
 1542 03ae 2846     		mov	r0, r5
 1543 03b0 3146     		mov	r1, r6
 1544 03b2 FFF7FEFF 		bl	__aeabi_dadd
 1545 03b6 0346     		mov	r3, r0
 1546 03b8 0C46     		mov	r4, r1
 1547 03ba 1846     		mov	r0, r3
 1548 03bc 2146     		mov	r1, r4
 1549 03be FFF7FEFF 		bl	__aeabi_d2iz
 1550 03c2 0146     		mov	r1, r0
 1551 03c4 604A     		ldr	r2, .L105+24
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccKv0qGd.s 			page 36


 1552 03c6 FB6A     		ldr	r3, [r7, #44]
 1553 03c8 42F82310 		str	r1, [r2, r3, lsl #2]
 364:main.c        ****             
 365:main.c        ****             pulse[cyl] = pulseCheck(pulse_temp[cyl],offsets[cyl][1],offsets[cyl][0]);
 1554              		.loc 1 365 0 discriminator 2
 1555 03cc 5E4A     		ldr	r2, .L105+24
 1556 03ce FB6A     		ldr	r3, [r7, #44]
 1557 03d0 52F82300 		ldr	r0, [r2, r3, lsl #2]
 1558 03d4 5D4A     		ldr	r2, .L105+28
 1559 03d6 FB6A     		ldr	r3, [r7, #44]
 1560 03d8 DB00     		lsls	r3, r3, #3
 1561 03da 1344     		add	r3, r3, r2
 1562 03dc 5968     		ldr	r1, [r3, #4]
 1563 03de 5B4A     		ldr	r2, .L105+28
 1564 03e0 FB6A     		ldr	r3, [r7, #44]
 1565 03e2 52F83330 		ldr	r3, [r2, r3, lsl #3]
 1566 03e6 1A46     		mov	r2, r3
 1567 03e8 FFF7FEFF 		bl	pulseCheck
 1568 03ec 0146     		mov	r1, r0
 1569 03ee 584A     		ldr	r2, .L105+32
 1570 03f0 FB6A     		ldr	r3, [r7, #44]
 1571 03f2 42F82310 		str	r1, [r2, r3, lsl #2]
 366:main.c        ****             
 367:main.c        ****             writePWM(cyl,pulse[cyl]);
 1572              		.loc 1 367 0 discriminator 2
 1573 03f6 564A     		ldr	r2, .L105+32
 1574 03f8 FB6A     		ldr	r3, [r7, #44]
 1575 03fa 52F82330 		ldr	r3, [r2, r3, lsl #2]
 1576 03fe 1946     		mov	r1, r3
 1577 0400 F86A     		ldr	r0, [r7, #44]
 1578 0402 FFF7FEFF 		bl	writePWM
 368:main.c        ****             prev_err[cyl] = err[cyl];
 1579              		.loc 1 368 0 discriminator 2
 1580 0406 4E4A     		ldr	r2, .L105+16
 1581 0408 FB6A     		ldr	r3, [r7, #44]
 1582 040a DB00     		lsls	r3, r3, #3
 1583 040c 1344     		add	r3, r3, r2
 1584 040e 18CB     		ldmia	r3, {r3-r4}
 1585 0410 5049     		ldr	r1, .L105+36
 1586 0412 FA6A     		ldr	r2, [r7, #44]
 1587 0414 D200     		lsls	r2, r2, #3
 1588 0416 0A44     		add	r2, r2, r1
 1589 0418 C2E90034 		strd	r3, [r2]
 349:main.c        ****             if(new_pos_set[cyl]){
 1590              		.loc 1 349 0 discriminator 2
 1591 041c FB6A     		ldr	r3, [r7, #44]
 1592 041e 0133     		adds	r3, r3, #1
 1593 0420 FB62     		str	r3, [r7, #44]
 1594              	.L79:
 349:main.c        ****             if(new_pos_set[cyl]){
 1595              		.loc 1 349 0 is_stmt 0 discriminator 1
 1596 0422 FB6A     		ldr	r3, [r7, #44]
 1597 0424 032B     		cmp	r3, #3
 1598 0426 7FF7CCAE 		ble	.L85
 1599              	.LBE9:
 369:main.c        ****         }
 370:main.c        ****         
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccKv0qGd.s 			page 37


 371:main.c        ****         
 372:main.c        ****         /* END PID CODE */
 373:main.c        ****         if(start_calib){
 1600              		.loc 1 373 0 is_stmt 1
 1601 042a 4B4B     		ldr	r3, .L105+40
 1602 042c 1B68     		ldr	r3, [r3]
 1603 042e 002B     		cmp	r3, #0
 1604 0430 00F0D480 		beq	.L86
 1605              	.LBB10:
 374:main.c        ****                 
 375:main.c        ****             int calib_cyl = 0;
 1606              		.loc 1 375 0
 1607 0434 0023     		movs	r3, #0
 1608 0436 FB60     		str	r3, [r7, #12]
 376:main.c        ****             int upper_offset_set = 0;
 1609              		.loc 1 376 0
 1610 0438 0023     		movs	r3, #0
 1611 043a BB62     		str	r3, [r7, #40]
 377:main.c        ****             int lower_offset_set = 0;
 1612              		.loc 1 377 0
 1613 043c 0023     		movs	r3, #0
 1614 043e 7B62     		str	r3, [r7, #36]
 378:main.c        ****             int upper_offset = 160;
 1615              		.loc 1 378 0
 1616 0440 A023     		movs	r3, #160
 1617 0442 3B62     		str	r3, [r7, #32]
 379:main.c        ****             int lower_offset = -110;
 1618              		.loc 1 379 0
 1619 0444 6FF06D03 		mvn	r3, #109
 1620 0448 FB61     		str	r3, [r7, #28]
 380:main.c        ****             int lower_check_no = 0;
 1621              		.loc 1 380 0
 1622 044a 0023     		movs	r3, #0
 1623 044c BB61     		str	r3, [r7, #24]
 381:main.c        ****             int upper_check_no = 0;
 1624              		.loc 1 381 0
 1625 044e 0023     		movs	r3, #0
 1626 0450 7B61     		str	r3, [r7, #20]
 382:main.c        ****             uint16 prev_adcValue = adcValue[0];
 1627              		.loc 1 382 0
 1628 0452 424B     		ldr	r3, .L105+44
 1629 0454 1B88     		ldrh	r3, [r3]	@ movhi
 1630 0456 7B81     		strh	r3, [r7, #10]	@ movhi
 383:main.c        ****             uint16 diff = 0;
 1631              		.loc 1 383 0
 1632 0458 0023     		movs	r3, #0
 1633 045a 3B81     		strh	r3, [r7, #8]	@ movhi
 1634              	.LBB11:
 384:main.c        ****             for(int g = 0;g<CYL_NO;g++)
 1635              		.loc 1 384 0
 1636 045c 0023     		movs	r3, #0
 1637 045e 3B61     		str	r3, [r7, #16]
 1638 0460 06E0     		b	.L87
 1639              	.L88:
 385:main.c        ****                 writePWM(g,0);
 1640              		.loc 1 385 0 discriminator 3
 1641 0462 0021     		movs	r1, #0
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccKv0qGd.s 			page 38


 1642 0464 3869     		ldr	r0, [r7, #16]
 1643 0466 FFF7FEFF 		bl	writePWM
 384:main.c        ****             for(int g = 0;g<CYL_NO;g++)
 1644              		.loc 1 384 0 discriminator 3
 1645 046a 3B69     		ldr	r3, [r7, #16]
 1646 046c 0133     		adds	r3, r3, #1
 1647 046e 3B61     		str	r3, [r7, #16]
 1648              	.L87:
 384:main.c        ****             for(int g = 0;g<CYL_NO;g++)
 1649              		.loc 1 384 0 is_stmt 0 discriminator 1
 1650 0470 3B69     		ldr	r3, [r7, #16]
 1651 0472 032B     		cmp	r3, #3
 1652 0474 F5DD     		ble	.L88
 1653              	.LBE11:
 386:main.c        ****                 
 387:main.c        ****             CyDelay(1000);
 1654              		.loc 1 387 0 is_stmt 1
 1655 0476 4FF47A70 		mov	r0, #1000
 1656 047a FFF7FEFF 		bl	CyDelay
 388:main.c        ****         
 389:main.c        ****             while(upper_offset_set==0 || lower_offset_set==0){
 1657              		.loc 1 389 0
 1658 047e 95E0     		b	.L89
 1659              	.L97:
 390:main.c        ****                 
 391:main.c        ****                 prev_adcValue = adcValue[calib_cyl];
 1660              		.loc 1 391 0
 1661 0480 364A     		ldr	r2, .L105+44
 1662 0482 FB68     		ldr	r3, [r7, #12]
 1663 0484 32F81330 		ldrh	r3, [r2, r3, lsl #1]	@ movhi
 1664 0488 7B81     		strh	r3, [r7, #10]	@ movhi
 392:main.c        ****                 if(upper_offset_set==0){
 1665              		.loc 1 392 0
 1666 048a BB6A     		ldr	r3, [r7, #40]
 1667 048c 002B     		cmp	r3, #0
 1668 048e 2FD1     		bne	.L90
 393:main.c        ****                     writePWM(calib_cyl,upper_offset);
 1669              		.loc 1 393 0
 1670 0490 396A     		ldr	r1, [r7, #32]
 1671 0492 F868     		ldr	r0, [r7, #12]
 1672 0494 FFF7FEFF 		bl	writePWM
 394:main.c        ****                     CyDelay(200);
 1673              		.loc 1 394 0
 1674 0498 C820     		movs	r0, #200
 1675 049a FFF7FEFF 		bl	CyDelay
 395:main.c        ****                     diff = abs(prev_adcValue-adcValue[calib_cyl]);
 1676              		.loc 1 395 0
 1677 049e 7B89     		ldrh	r3, [r7, #10]
 1678 04a0 2E49     		ldr	r1, .L105+44
 1679 04a2 FA68     		ldr	r2, [r7, #12]
 1680 04a4 31F81220 		ldrh	r2, [r1, r2, lsl #1]
 1681 04a8 9B1A     		subs	r3, r3, r2
 1682 04aa 002B     		cmp	r3, #0
 1683 04ac B8BF     		it	lt
 1684 04ae 5B42     		rsblt	r3, r3, #0
 1685 04b0 3B81     		strh	r3, [r7, #8]	@ movhi
 396:main.c        ****                     if(diff>10){
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccKv0qGd.s 			page 39


 1686              		.loc 1 396 0
 1687 04b2 3B89     		ldrh	r3, [r7, #8]
 1688 04b4 0A2B     		cmp	r3, #10
 1689 04b6 03D9     		bls	.L91
 397:main.c        ****                         upper_check_no ++;;
 1690              		.loc 1 397 0
 1691 04b8 7B69     		ldr	r3, [r7, #20]
 1692 04ba 0133     		adds	r3, r3, #1
 1693 04bc 7B61     		str	r3, [r7, #20]
 1694 04be 04E0     		b	.L92
 1695              	.L91:
 398:main.c        ****                     }else{
 399:main.c        ****                         upper_offset = upper_offset + 1;
 1696              		.loc 1 399 0
 1697 04c0 3B6A     		ldr	r3, [r7, #32]
 1698 04c2 0133     		adds	r3, r3, #1
 1699 04c4 3B62     		str	r3, [r7, #32]
 400:main.c        ****                         upper_check_no=0;
 1700              		.loc 1 400 0
 1701 04c6 0023     		movs	r3, #0
 1702 04c8 7B61     		str	r3, [r7, #20]
 1703              	.L92:
 401:main.c        ****                     }
 402:main.c        ****                     sprintf(sendValue,"UPPER:\tLower Offset: %d \tUpper Offset: %d \t ADC Diff: %d\
 1704              		.loc 1 402 0
 1705 04ca 3B89     		ldrh	r3, [r7, #8]
 1706 04cc 0093     		str	r3, [sp]
 1707 04ce 3B6A     		ldr	r3, [r7, #32]
 1708 04d0 FA69     		ldr	r2, [r7, #28]
 1709 04d2 2349     		ldr	r1, .L105+48
 1710 04d4 2348     		ldr	r0, .L105+52
 1711 04d6 FFF7FEFF 		bl	sprintf
 403:main.c        ****                     UART_PutString(sendValue);
 1712              		.loc 1 403 0
 1713 04da 2248     		ldr	r0, .L105+52
 1714 04dc FFF7FEFF 		bl	UART_PutString
 404:main.c        ****                     writePWM(calib_cyl,0);
 1715              		.loc 1 404 0
 1716 04e0 0021     		movs	r1, #0
 1717 04e2 F868     		ldr	r0, [r7, #12]
 1718 04e4 FFF7FEFF 		bl	writePWM
 405:main.c        ****                     CyDelay(500);
 1719              		.loc 1 405 0
 1720 04e8 4FF4FA70 		mov	r0, #500
 1721 04ec FFF7FEFF 		bl	CyDelay
 1722              	.L90:
 406:main.c        ****                 }
 407:main.c        ****                 
 408:main.c        ****                 prev_adcValue = adcValue[calib_cyl];
 1723              		.loc 1 408 0
 1724 04f0 1A4A     		ldr	r2, .L105+44
 1725 04f2 FB68     		ldr	r3, [r7, #12]
 1726 04f4 32F81330 		ldrh	r3, [r2, r3, lsl #1]	@ movhi
 1727 04f8 7B81     		strh	r3, [r7, #10]	@ movhi
 409:main.c        ****                 if(lower_offset_set==0){
 1728              		.loc 1 409 0
 1729 04fa 7B6A     		ldr	r3, [r7, #36]
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccKv0qGd.s 			page 40


 1730 04fc 002B     		cmp	r3, #0
 1731 04fe 4BD1     		bne	.L93
 410:main.c        ****                     writePWM(calib_cyl,lower_offset);
 1732              		.loc 1 410 0
 1733 0500 F969     		ldr	r1, [r7, #28]
 1734 0502 F868     		ldr	r0, [r7, #12]
 1735 0504 FFF7FEFF 		bl	writePWM
 411:main.c        ****                     CyDelay(200);
 1736              		.loc 1 411 0
 1737 0508 C820     		movs	r0, #200
 1738 050a FFF7FEFF 		bl	CyDelay
 412:main.c        ****                     diff = abs(prev_adcValue-adcValue[calib_cyl]);
 1739              		.loc 1 412 0
 1740 050e 7B89     		ldrh	r3, [r7, #10]
 1741 0510 1249     		ldr	r1, .L105+44
 1742 0512 FA68     		ldr	r2, [r7, #12]
 1743 0514 31F81220 		ldrh	r2, [r1, r2, lsl #1]
 1744 0518 9B1A     		subs	r3, r3, r2
 1745 051a 002B     		cmp	r3, #0
 1746 051c B8BF     		it	lt
 1747 051e 5B42     		rsblt	r3, r3, #0
 1748 0520 3B81     		strh	r3, [r7, #8]	@ movhi
 413:main.c        ****                     if(diff>10){
 1749              		.loc 1 413 0
 1750 0522 3B89     		ldrh	r3, [r7, #8]
 1751 0524 0A2B     		cmp	r3, #10
 1752 0526 1FD9     		bls	.L94
 414:main.c        ****                         lower_check_no++;
 1753              		.loc 1 414 0
 1754 0528 BB69     		ldr	r3, [r7, #24]
 1755 052a 0133     		adds	r3, r3, #1
 1756 052c BB61     		str	r3, [r7, #24]
 1757 052e 20E0     		b	.L95
 1758              	.L106:
 1759              		.align	3
 1760              	.L105:
 1761 0530 00000000 		.word	0
 1762 0534 0017E1C0 		.word	-1058990336
 1763 0538 00000000 		.word	pid_integral
 1764 053c 00000000 		.word	pid
 1765 0540 00000000 		.word	err
 1766 0544 00000000 		.word	der
 1767 0548 00000000 		.word	pulse_temp
 1768 054c 00000000 		.word	offsets
 1769 0550 00000000 		.word	pulse
 1770 0554 00000000 		.word	prev_err
 1771 0558 00000000 		.word	start_calib
 1772 055c 00000000 		.word	adcValue
 1773 0560 30000000 		.word	.LC2
 1774 0564 00000000 		.word	sendValue
 1775              	.L94:
 415:main.c        ****                     }else{
 416:main.c        ****                         lower_offset = lower_offset - 1;
 1776              		.loc 1 416 0
 1777 0568 FB69     		ldr	r3, [r7, #28]
 1778 056a 013B     		subs	r3, r3, #1
 1779 056c FB61     		str	r3, [r7, #28]
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccKv0qGd.s 			page 41


 417:main.c        ****                         lower_check_no = 0;
 1780              		.loc 1 417 0
 1781 056e 0023     		movs	r3, #0
 1782 0570 BB61     		str	r3, [r7, #24]
 1783              	.L95:
 418:main.c        ****                     }
 419:main.c        ****                     sprintf(sendValue,"LOWER:\tLower Offset: %d \tUpper Offset: %d \t ADC Diff: %d\
 1784              		.loc 1 419 0
 1785 0572 3B89     		ldrh	r3, [r7, #8]
 1786 0574 0093     		str	r3, [sp]
 1787 0576 3B6A     		ldr	r3, [r7, #32]
 1788 0578 FA69     		ldr	r2, [r7, #28]
 1789 057a 3949     		ldr	r1, .L107+16
 1790 057c 3948     		ldr	r0, .L107+20
 1791 057e FFF7FEFF 		bl	sprintf
 420:main.c        ****                     UART_PutString(sendValue);
 1792              		.loc 1 420 0
 1793 0582 3848     		ldr	r0, .L107+20
 1794 0584 FFF7FEFF 		bl	UART_PutString
 421:main.c        ****                     writePWM(calib_cyl,0);
 1795              		.loc 1 421 0
 1796 0588 0021     		movs	r1, #0
 1797 058a F868     		ldr	r0, [r7, #12]
 1798 058c FFF7FEFF 		bl	writePWM
 422:main.c        ****                     CyDelay(500);
 1799              		.loc 1 422 0
 1800 0590 4FF4FA70 		mov	r0, #500
 1801 0594 FFF7FEFF 		bl	CyDelay
 1802              	.L93:
 423:main.c        ****                 }
 424:main.c        ****                 
 425:main.c        ****                 if(upper_check_no>2){
 1803              		.loc 1 425 0
 1804 0598 7B69     		ldr	r3, [r7, #20]
 1805 059a 022B     		cmp	r3, #2
 1806 059c 01DD     		ble	.L96
 426:main.c        ****                     upper_offset_set=1;}
 1807              		.loc 1 426 0
 1808 059e 0123     		movs	r3, #1
 1809 05a0 BB62     		str	r3, [r7, #40]
 1810              	.L96:
 427:main.c        ****                 if(lower_check_no>2){
 1811              		.loc 1 427 0
 1812 05a2 BB69     		ldr	r3, [r7, #24]
 1813 05a4 022B     		cmp	r3, #2
 1814 05a6 01DD     		ble	.L89
 428:main.c        ****                     lower_offset_set=1;}
 1815              		.loc 1 428 0
 1816 05a8 0123     		movs	r3, #1
 1817 05aa 7B62     		str	r3, [r7, #36]
 1818              	.L89:
 389:main.c        ****                 
 1819              		.loc 1 389 0
 1820 05ac BB6A     		ldr	r3, [r7, #40]
 1821 05ae 002B     		cmp	r3, #0
 1822 05b0 3FF466AF 		beq	.L97
 389:main.c        ****                 
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccKv0qGd.s 			page 42


 1823              		.loc 1 389 0 is_stmt 0 discriminator 1
 1824 05b4 7B6A     		ldr	r3, [r7, #36]
 1825 05b6 002B     		cmp	r3, #0
 1826 05b8 3FF462AF 		beq	.L97
 429:main.c        ****         
 430:main.c        ****             }
 431:main.c        ****             
 432:main.c        ****             sprintf(sendValue,"Lower Offset: %d \t Upper Offset: %d \n",lower_offset,upper_offset);
 1827              		.loc 1 432 0 is_stmt 1
 1828 05bc 3B6A     		ldr	r3, [r7, #32]
 1829 05be FA69     		ldr	r2, [r7, #28]
 1830 05c0 2949     		ldr	r1, .L107+24
 1831 05c2 2848     		ldr	r0, .L107+20
 1832 05c4 FFF7FEFF 		bl	sprintf
 433:main.c        ****             UART_PutString(sendValue);
 1833              		.loc 1 433 0
 1834 05c8 2648     		ldr	r0, .L107+20
 1835 05ca FFF7FEFF 		bl	UART_PutString
 434:main.c        ****             
 435:main.c        ****             //while(1){CyDelay(100);};
 436:main.c        ****             start_calib = 0;
 1836              		.loc 1 436 0
 1837 05ce 274B     		ldr	r3, .L107+28
 1838 05d0 0022     		movs	r2, #0
 1839 05d2 1A60     		str	r2, [r3]
 437:main.c        ****             CyDelay(15000);
 1840              		.loc 1 437 0
 1841 05d4 43F69820 		movw	r0, #15000
 1842 05d8 FFF7FEFF 		bl	CyDelay
 1843              	.L86:
 1844              	.LBE10:
 438:main.c        ****         }
 439:main.c        ****         CyDelay(1);
 1845              		.loc 1 439 0
 1846 05dc 0120     		movs	r0, #1
 1847 05de FFF7FEFF 		bl	CyDelay
 440:main.c        ****         
 441:main.c        ****         time = Timer_1_ReadCounter();
 1848              		.loc 1 441 0
 1849 05e2 FFF7FEFF 		bl	Timer_1_ReadCounter
 1850 05e6 0346     		mov	r3, r0
 1851 05e8 1846     		mov	r0, r3
 1852 05ea FFF7FEFF 		bl	__aeabi_ui2d
 1853 05ee 0346     		mov	r3, r0
 1854 05f0 0C46     		mov	r4, r1
 1855 05f2 C7E90034 		strd	r3, [r7]
 442:main.c        ****         dt=(double)(65535-time)/1000000;
 1856              		.loc 1 442 0
 1857 05f6 D7E90023 		ldrd	r2, [r7]
 1858 05fa 15A1     		adr	r1, .L107
 1859 05fc D1E90001 		ldrd	r0, [r1]
 1860 0600 FFF7FEFF 		bl	__aeabi_dsub
 1861 0604 0346     		mov	r3, r0
 1862 0606 0C46     		mov	r4, r1
 1863 0608 1846     		mov	r0, r3
 1864 060a 2146     		mov	r1, r4
 1865 060c 12A3     		adr	r3, .L107+8
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccKv0qGd.s 			page 43


 1866 060e D3E90023 		ldrd	r2, [r3]
 1867 0612 FFF7FEFF 		bl	__aeabi_ddiv
 1868 0616 0346     		mov	r3, r0
 1869 0618 0C46     		mov	r4, r1
 1870 061a C7E90C34 		strd	r3, [r7, #48]
 443:main.c        ****         dts[dts_ct] = dt;
 1871              		.loc 1 443 0
 1872 061e 144B     		ldr	r3, .L107+32
 1873 0620 1B68     		ldr	r3, [r3]
 1874 0622 144A     		ldr	r2, .L107+36
 1875 0624 DB00     		lsls	r3, r3, #3
 1876 0626 1A44     		add	r2, r2, r3
 1877 0628 D7E90C34 		ldrd	r3, [r7, #48]
 1878 062c C2E90034 		strd	r3, [r2]
 444:main.c        ****         dts_ct++;
 1879              		.loc 1 444 0
 1880 0630 0F4B     		ldr	r3, .L107+32
 1881 0632 1B68     		ldr	r3, [r3]
 1882 0634 0133     		adds	r3, r3, #1
 1883 0636 0E4A     		ldr	r2, .L107+32
 1884 0638 1360     		str	r3, [r2]
 445:main.c        ****         if(dts_ct>29){
 1885              		.loc 1 445 0
 1886 063a 0D4B     		ldr	r3, .L107+32
 1887 063c 1B68     		ldr	r3, [r3]
 1888 063e 1D2B     		cmp	r3, #29
 1889 0640 7FF795AD 		ble	.L99
 446:main.c        ****             dts_ct=0;
 1890              		.loc 1 446 0
 1891 0644 0A4B     		ldr	r3, .L107+32
 1892 0646 0022     		movs	r2, #0
 1893 0648 1A60     		str	r2, [r3]
 447:main.c        ****         }
 448:main.c        ****         
 449:main.c        ****     }
 1894              		.loc 1 449 0
 1895 064a 90E5     		b	.L99
 1896              	.L108:
 1897 064c AFF30080 		.align	3
 1898              	.L107:
 1899 0650 00000000 		.word	0
 1900 0654 E0FFEF40 		.word	1089470432
 1901 0658 00000000 		.word	0
 1902 065c 80842E41 		.word	1093567616
 1903 0660 6C000000 		.word	.LC3
 1904 0664 00000000 		.word	sendValue
 1905 0668 A8000000 		.word	.LC4
 1906 066c 00000000 		.word	start_calib
 1907 0670 00000000 		.word	dts_ct
 1908 0674 00000000 		.word	dts
 1909              		.cfi_endproc
 1910              	.LFE68:
 1911              		.size	main, .-main
 1912              		.text
 1913              	.Letext0:
 1914              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 1915              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccKv0qGd.s 			page 44


 1916              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 1917              		.file 5 "Generated_Source\\PSoC5/core_cm3.h"
 1918              		.section	.debug_info,"",%progbits
 1919              	.Ldebug_info0:
 1920 0000 26060000 		.4byte	0x626
 1921 0004 0400     		.2byte	0x4
 1922 0006 00000000 		.4byte	.Ldebug_abbrev0
 1923 000a 04       		.byte	0x4
 1924 000b 01       		.uleb128 0x1
 1925 000c 77000000 		.4byte	.LASF61
 1926 0010 0C       		.byte	0xc
 1927 0011 A3020000 		.4byte	.LASF62
 1928 0015 31020000 		.4byte	.LASF63
 1929 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1930 001d 00000000 		.4byte	0
 1931 0021 00000000 		.4byte	.Ldebug_line0
 1932 0025 02       		.uleb128 0x2
 1933 0026 01       		.byte	0x1
 1934 0027 06       		.byte	0x6
 1935 0028 4F010000 		.4byte	.LASF0
 1936 002c 02       		.uleb128 0x2
 1937 002d 01       		.byte	0x1
 1938 002e 08       		.byte	0x8
 1939 002f A0010000 		.4byte	.LASF1
 1940 0033 02       		.uleb128 0x2
 1941 0034 02       		.byte	0x2
 1942 0035 05       		.byte	0x5
 1943 0036 52000000 		.4byte	.LASF2
 1944 003a 02       		.uleb128 0x2
 1945 003b 02       		.byte	0x2
 1946 003c 07       		.byte	0x7
 1947 003d 1E020000 		.4byte	.LASF3
 1948 0041 03       		.uleb128 0x3
 1949 0042 DC020000 		.4byte	.LASF9
 1950 0046 02       		.byte	0x2
 1951 0047 3F       		.byte	0x3f
 1952 0048 4C000000 		.4byte	0x4c
 1953 004c 02       		.uleb128 0x2
 1954 004d 04       		.byte	0x4
 1955 004e 05       		.byte	0x5
 1956 004f 7F010000 		.4byte	.LASF4
 1957 0053 02       		.uleb128 0x2
 1958 0054 04       		.byte	0x4
 1959 0055 07       		.byte	0x7
 1960 0056 AF020000 		.4byte	.LASF5
 1961 005a 02       		.uleb128 0x2
 1962 005b 08       		.byte	0x8
 1963 005c 05       		.byte	0x5
 1964 005d 05010000 		.4byte	.LASF6
 1965 0061 02       		.uleb128 0x2
 1966 0062 08       		.byte	0x8
 1967 0063 07       		.byte	0x7
 1968 0064 E0010000 		.4byte	.LASF7
 1969 0068 04       		.uleb128 0x4
 1970 0069 04       		.byte	0x4
 1971 006a 05       		.byte	0x5
 1972 006b 696E7400 		.ascii	"int\000"
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccKv0qGd.s 			page 45


 1973 006f 02       		.uleb128 0x2
 1974 0070 04       		.byte	0x4
 1975 0071 07       		.byte	0x7
 1976 0072 F7010000 		.4byte	.LASF8
 1977 0076 03       		.uleb128 0x3
 1978 0077 8C020000 		.4byte	.LASF10
 1979 007b 03       		.byte	0x3
 1980 007c 2C       		.byte	0x2c
 1981 007d 41000000 		.4byte	0x41
 1982 0081 05       		.uleb128 0x5
 1983 0082 34010000 		.4byte	.LASF11
 1984 0086 04       		.byte	0x4
 1985 0087 9201     		.2byte	0x192
 1986 0089 2C000000 		.4byte	0x2c
 1987 008d 05       		.uleb128 0x5
 1988 008e 18010000 		.4byte	.LASF12
 1989 0092 04       		.byte	0x4
 1990 0093 9301     		.2byte	0x193
 1991 0095 3A000000 		.4byte	0x3a
 1992 0099 02       		.uleb128 0x2
 1993 009a 04       		.byte	0x4
 1994 009b 04       		.byte	0x4
 1995 009c 5B010000 		.4byte	.LASF13
 1996 00a0 02       		.uleb128 0x2
 1997 00a1 08       		.byte	0x8
 1998 00a2 04       		.byte	0x4
 1999 00a3 3E030000 		.4byte	.LASF14
 2000 00a7 02       		.uleb128 0x2
 2001 00a8 01       		.byte	0x1
 2002 00a9 08       		.byte	0x8
 2003 00aa 7D020000 		.4byte	.LASF15
 2004 00ae 05       		.uleb128 0x5
 2005 00af AA020000 		.4byte	.LASF16
 2006 00b3 04       		.byte	0x4
 2007 00b4 3C02     		.2byte	0x23c
 2008 00b6 BA000000 		.4byte	0xba
 2009 00ba 06       		.uleb128 0x6
 2010 00bb 81000000 		.4byte	0x81
 2011 00bf 02       		.uleb128 0x2
 2012 00c0 08       		.byte	0x8
 2013 00c1 04       		.byte	0x4
 2014 00c2 00000000 		.4byte	.LASF17
 2015 00c6 02       		.uleb128 0x2
 2016 00c7 04       		.byte	0x4
 2017 00c8 07       		.byte	0x7
 2018 00c9 69000000 		.4byte	.LASF18
 2019 00cd 07       		.uleb128 0x7
 2020 00ce 61010000 		.4byte	.LASF23
 2021 00d2 01       		.byte	0x1
 2022 00d3 1A       		.byte	0x1a
 2023 00d4 00000000 		.4byte	.LFB64
 2024 00d8 78000000 		.4byte	.LFE64-.LFB64
 2025 00dc 01       		.uleb128 0x1
 2026 00dd 9C       		.byte	0x9c
 2027 00de FF000000 		.4byte	0xff
 2028 00e2 08       		.uleb128 0x8
 2029 00e3 3A010000 		.4byte	.LASF19
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccKv0qGd.s 			page 46


 2030 00e7 01       		.byte	0x1
 2031 00e8 1A       		.byte	0x1a
 2032 00e9 68000000 		.4byte	0x68
 2033 00ed 02       		.uleb128 0x2
 2034 00ee 91       		.byte	0x91
 2035 00ef 74       		.sleb128 -12
 2036 00f0 08       		.uleb128 0x8
 2037 00f1 2E010000 		.4byte	.LASF20
 2038 00f5 01       		.byte	0x1
 2039 00f6 1A       		.byte	0x1a
 2040 00f7 68000000 		.4byte	0x68
 2041 00fb 02       		.uleb128 0x2
 2042 00fc 91       		.byte	0x91
 2043 00fd 70       		.sleb128 -16
 2044 00fe 00       		.byte	0
 2045 00ff 09       		.uleb128 0x9
 2046 0100 F3020000 		.4byte	.LASF64
 2047 0104 01       		.byte	0x1
 2048 0105 2B       		.byte	0x2b
 2049 0106 68000000 		.4byte	0x68
 2050 010a 00000000 		.4byte	.LFB65
 2051 010e 54000000 		.4byte	.LFE65-.LFB65
 2052 0112 01       		.uleb128 0x1
 2053 0113 9C       		.byte	0x9c
 2054 0114 43010000 		.4byte	0x143
 2055 0118 08       		.uleb128 0x8
 2056 0119 2E010000 		.4byte	.LASF20
 2057 011d 01       		.byte	0x1
 2058 011e 2B       		.byte	0x2b
 2059 011f 68000000 		.4byte	0x68
 2060 0123 02       		.uleb128 0x2
 2061 0124 91       		.byte	0x91
 2062 0125 74       		.sleb128 -12
 2063 0126 08       		.uleb128 0x8
 2064 0127 E6020000 		.4byte	.LASF21
 2065 012b 01       		.byte	0x1
 2066 012c 2B       		.byte	0x2b
 2067 012d 68000000 		.4byte	0x68
 2068 0131 02       		.uleb128 0x2
 2069 0132 91       		.byte	0x91
 2070 0133 70       		.sleb128 -16
 2071 0134 08       		.uleb128 0x8
 2072 0135 5C000000 		.4byte	.LASF22
 2073 0139 01       		.byte	0x1
 2074 013a 2B       		.byte	0x2b
 2075 013b 68000000 		.4byte	0x68
 2076 013f 02       		.uleb128 0x2
 2077 0140 91       		.byte	0x91
 2078 0141 6C       		.sleb128 -20
 2079 0142 00       		.byte	0
 2080 0143 07       		.uleb128 0x7
 2081 0144 0A030000 		.4byte	.LASF24
 2082 0148 01       		.byte	0x1
 2083 0149 57       		.byte	0x57
 2084 014a 00000000 		.4byte	.LFB66
 2085 014e 6C010000 		.4byte	.LFE66-.LFB66
 2086 0152 01       		.uleb128 0x1
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccKv0qGd.s 			page 47


 2087 0153 9C       		.byte	0x9c
 2088 0154 CF010000 		.4byte	0x1cf
 2089 0158 0A       		.uleb128 0xa
 2090 0159 06000000 		.4byte	.LBB2
 2091 015d 4A010000 		.4byte	.LBE2-.LBB2
 2092 0161 0B       		.uleb128 0xb
 2093 0162 6300     		.ascii	"c\000"
 2094 0164 01       		.byte	0x1
 2095 0165 58       		.byte	0x58
 2096 0166 68000000 		.4byte	0x68
 2097 016a 02       		.uleb128 0x2
 2098 016b 91       		.byte	0x91
 2099 016c 74       		.sleb128 -12
 2100 016d 0C       		.uleb128 0xc
 2101 016e 16000000 		.4byte	.LBB3
 2102 0172 3A000000 		.4byte	.LBE3-.LBB3
 2103 0176 87010000 		.4byte	0x187
 2104 017a 0B       		.uleb128 0xb
 2105 017b 6A00     		.ascii	"j\000"
 2106 017d 01       		.byte	0x1
 2107 017e 5B       		.byte	0x5b
 2108 017f 68000000 		.4byte	0x68
 2109 0183 02       		.uleb128 0x2
 2110 0184 91       		.byte	0x91
 2111 0185 70       		.sleb128 -16
 2112 0186 00       		.byte	0
 2113 0187 0C       		.uleb128 0xc
 2114 0188 AA000000 		.4byte	.LBB4
 2115 018c 2C000000 		.4byte	.LBE4-.LBB4
 2116 0190 A1010000 		.4byte	0x1a1
 2117 0194 0B       		.uleb128 0xb
 2118 0195 6A00     		.ascii	"j\000"
 2119 0197 01       		.byte	0x1
 2120 0198 64       		.byte	0x64
 2121 0199 68000000 		.4byte	0x68
 2122 019d 02       		.uleb128 0x2
 2123 019e 91       		.byte	0x91
 2124 019f 6C       		.sleb128 -20
 2125 01a0 00       		.byte	0
 2126 01a1 0A       		.uleb128 0xa
 2127 01a2 D6000000 		.4byte	.LBB5
 2128 01a6 60000000 		.4byte	.LBE5-.LBB5
 2129 01aa 0B       		.uleb128 0xb
 2130 01ab 6900     		.ascii	"i\000"
 2131 01ad 01       		.byte	0x1
 2132 01ae 67       		.byte	0x67
 2133 01af 68000000 		.4byte	0x68
 2134 01b3 02       		.uleb128 0x2
 2135 01b4 91       		.byte	0x91
 2136 01b5 68       		.sleb128 -24
 2137 01b6 0A       		.uleb128 0xa
 2138 01b7 DC000000 		.4byte	.LBB6
 2139 01bb 4E000000 		.4byte	.LBE6-.LBB6
 2140 01bf 0B       		.uleb128 0xb
 2141 01c0 6A00     		.ascii	"j\000"
 2142 01c2 01       		.byte	0x1
 2143 01c3 68       		.byte	0x68
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccKv0qGd.s 			page 48


 2144 01c4 68000000 		.4byte	0x68
 2145 01c8 02       		.uleb128 0x2
 2146 01c9 91       		.byte	0x91
 2147 01ca 64       		.sleb128 -28
 2148 01cb 00       		.byte	0
 2149 01cc 00       		.byte	0
 2150 01cd 00       		.byte	0
 2151 01ce 00       		.byte	0
 2152 01cf 07       		.uleb128 0x7
 2153 01d0 18020000 		.4byte	.LASF25
 2154 01d4 01       		.byte	0x1
 2155 01d5 79       		.byte	0x79
 2156 01d6 00000000 		.4byte	.LFB67
 2157 01da 48030000 		.4byte	.LFE67-.LFB67
 2158 01de 01       		.uleb128 0x1
 2159 01df 9C       		.byte	0x9c
 2160 01e0 18020000 		.4byte	0x218
 2161 01e4 0D       		.uleb128 0xd
 2162 01e5 C6010000 		.4byte	.LASF26
 2163 01e9 01       		.byte	0x1
 2164 01ea 7B       		.byte	0x7b
 2165 01eb 81000000 		.4byte	0x81
 2166 01ef 02       		.uleb128 0x2
 2167 01f0 91       		.byte	0x91
 2168 01f1 6B       		.sleb128 -21
 2169 01f2 0D       		.uleb128 0xd
 2170 01f3 15030000 		.4byte	.LASF27
 2171 01f7 01       		.byte	0x1
 2172 01f8 7C       		.byte	0x7c
 2173 01f9 81000000 		.4byte	0x81
 2174 01fd 02       		.uleb128 0x2
 2175 01fe 91       		.byte	0x91
 2176 01ff 6A       		.sleb128 -22
 2177 0200 0A       		.uleb128 0xa
 2178 0201 A8000000 		.4byte	.LBB7
 2179 0205 1C000000 		.4byte	.LBE7-.LBB7
 2180 0209 0B       		.uleb128 0xb
 2181 020a 707000   		.ascii	"pp\000"
 2182 020d 01       		.byte	0x1
 2183 020e 99       		.byte	0x99
 2184 020f 68000000 		.4byte	0x68
 2185 0213 02       		.uleb128 0x2
 2186 0214 91       		.byte	0x91
 2187 0215 6C       		.sleb128 -20
 2188 0216 00       		.byte	0
 2189 0217 00       		.byte	0
 2190 0218 0E       		.uleb128 0xe
 2191 0219 72000000 		.4byte	.LASF28
 2192 021d 01       		.byte	0x1
 2193 021e 0501     		.2byte	0x105
 2194 0220 68000000 		.4byte	0x68
 2195 0224 00000000 		.4byte	.LFB68
 2196 0228 78060000 		.4byte	.LFE68-.LFB68
 2197 022c 01       		.uleb128 0x1
 2198 022d 9C       		.byte	0x9c
 2199 022e 36030000 		.4byte	0x336
 2200 0232 0F       		.uleb128 0xf
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccKv0qGd.s 			page 49


 2201 0233 647400   		.ascii	"dt\000"
 2202 0236 01       		.byte	0x1
 2203 0237 3901     		.2byte	0x139
 2204 0239 A0000000 		.4byte	0xa0
 2205 023d 02       		.uleb128 0x2
 2206 023e 91       		.byte	0x91
 2207 023f 58       		.sleb128 -40
 2208 0240 10       		.uleb128 0x10
 2209 0241 04020000 		.4byte	.LASF29
 2210 0245 01       		.byte	0x1
 2211 0246 3A01     		.2byte	0x13a
 2212 0248 A0000000 		.4byte	0xa0
 2213 024c 03       		.uleb128 0x3
 2214 024d 91       		.byte	0x91
 2215 024e A87F     		.sleb128 -88
 2216 0250 0C       		.uleb128 0xc
 2217 0251 8E000000 		.4byte	.LBB8
 2218 0255 A0000000 		.4byte	.LBE8-.LBB8
 2219 0259 6B020000 		.4byte	0x26b
 2220 025d 0F       		.uleb128 0xf
 2221 025e 6700     		.ascii	"g\000"
 2222 0260 01       		.byte	0x1
 2223 0261 1B01     		.2byte	0x11b
 2224 0263 68000000 		.4byte	0x68
 2225 0267 02       		.uleb128 0x2
 2226 0268 91       		.byte	0x91
 2227 0269 64       		.sleb128 -28
 2228 026a 00       		.byte	0
 2229 026b 0C       		.uleb128 0xc
 2230 026c BC010000 		.4byte	.LBB9
 2231 0270 6E020000 		.4byte	.LBE9-.LBB9
 2232 0274 88020000 		.4byte	0x288
 2233 0278 0F       		.uleb128 0xf
 2234 0279 63796C00 		.ascii	"cyl\000"
 2235 027d 01       		.byte	0x1
 2236 027e 5D01     		.2byte	0x15d
 2237 0280 68000000 		.4byte	0x68
 2238 0284 02       		.uleb128 0x2
 2239 0285 91       		.byte	0x91
 2240 0286 54       		.sleb128 -44
 2241 0287 00       		.byte	0
 2242 0288 0A       		.uleb128 0xa
 2243 0289 34040000 		.4byte	.LBB10
 2244 028d A8010000 		.4byte	.LBE10-.LBB10
 2245 0291 10       		.uleb128 0x10
 2246 0292 82020000 		.4byte	.LASF30
 2247 0296 01       		.byte	0x1
 2248 0297 7701     		.2byte	0x177
 2249 0299 68000000 		.4byte	0x68
 2250 029d 03       		.uleb128 0x3
 2251 029e 91       		.byte	0x91
 2252 029f B47F     		.sleb128 -76
 2253 02a1 10       		.uleb128 0x10
 2254 02a2 59030000 		.4byte	.LASF31
 2255 02a6 01       		.byte	0x1
 2256 02a7 7801     		.2byte	0x178
 2257 02a9 68000000 		.4byte	0x68
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccKv0qGd.s 			page 50


 2258 02ad 02       		.uleb128 0x2
 2259 02ae 91       		.byte	0x91
 2260 02af 50       		.sleb128 -48
 2261 02b0 10       		.uleb128 0x10
 2262 02b1 8F010000 		.4byte	.LASF32
 2263 02b5 01       		.byte	0x1
 2264 02b6 7901     		.2byte	0x179
 2265 02b8 68000000 		.4byte	0x68
 2266 02bc 02       		.uleb128 0x2
 2267 02bd 91       		.byte	0x91
 2268 02be 4C       		.sleb128 -52
 2269 02bf 10       		.uleb128 0x10
 2270 02c0 72010000 		.4byte	.LASF33
 2271 02c4 01       		.byte	0x1
 2272 02c5 7A01     		.2byte	0x17a
 2273 02c7 68000000 		.4byte	0x68
 2274 02cb 02       		.uleb128 0x2
 2275 02cc 91       		.byte	0x91
 2276 02cd 48       		.sleb128 -56
 2277 02ce 10       		.uleb128 0x10
 2278 02cf B9010000 		.4byte	.LASF34
 2279 02d3 01       		.byte	0x1
 2280 02d4 7B01     		.2byte	0x17b
 2281 02d6 68000000 		.4byte	0x68
 2282 02da 02       		.uleb128 0x2
 2283 02db 91       		.byte	0x91
 2284 02dc 44       		.sleb128 -60
 2285 02dd 10       		.uleb128 0x10
 2286 02de 0C000000 		.4byte	.LASF35
 2287 02e2 01       		.byte	0x1
 2288 02e3 7C01     		.2byte	0x17c
 2289 02e5 68000000 		.4byte	0x68
 2290 02e9 02       		.uleb128 0x2
 2291 02ea 91       		.byte	0x91
 2292 02eb 40       		.sleb128 -64
 2293 02ec 10       		.uleb128 0x10
 2294 02ed 94020000 		.4byte	.LASF36
 2295 02f1 01       		.byte	0x1
 2296 02f2 7D01     		.2byte	0x17d
 2297 02f4 68000000 		.4byte	0x68
 2298 02f8 03       		.uleb128 0x3
 2299 02f9 91       		.byte	0x91
 2300 02fa BC7F     		.sleb128 -68
 2301 02fc 10       		.uleb128 0x10
 2302 02fd CE020000 		.4byte	.LASF37
 2303 0301 01       		.byte	0x1
 2304 0302 7E01     		.2byte	0x17e
 2305 0304 8D000000 		.4byte	0x8d
 2306 0308 03       		.uleb128 0x3
 2307 0309 91       		.byte	0x91
 2308 030a B27F     		.sleb128 -78
 2309 030c 10       		.uleb128 0x10
 2310 030d 3C000000 		.4byte	.LASF38
 2311 0311 01       		.byte	0x1
 2312 0312 7F01     		.2byte	0x17f
 2313 0314 8D000000 		.4byte	0x8d
 2314 0318 03       		.uleb128 0x3
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccKv0qGd.s 			page 51


 2315 0319 91       		.byte	0x91
 2316 031a B07F     		.sleb128 -80
 2317 031c 0A       		.uleb128 0xa
 2318 031d 5C040000 		.4byte	.LBB11
 2319 0321 1A000000 		.4byte	.LBE11-.LBB11
 2320 0325 0F       		.uleb128 0xf
 2321 0326 6700     		.ascii	"g\000"
 2322 0328 01       		.byte	0x1
 2323 0329 8001     		.2byte	0x180
 2324 032b 68000000 		.4byte	0x68
 2325 032f 03       		.uleb128 0x3
 2326 0330 91       		.byte	0x91
 2327 0331 B87F     		.sleb128 -72
 2328 0333 00       		.byte	0
 2329 0334 00       		.byte	0
 2330 0335 00       		.byte	0
 2331 0336 11       		.uleb128 0x11
 2332 0337 4C030000 		.4byte	.LASF39
 2333 033b 05       		.byte	0x5
 2334 033c 1207     		.2byte	0x712
 2335 033e 42030000 		.4byte	0x342
 2336 0342 06       		.uleb128 0x6
 2337 0343 76000000 		.4byte	0x76
 2338 0347 12       		.uleb128 0x12
 2339 0348 2B000000 		.4byte	.LASF40
 2340 034c 01       		.byte	0x1
 2341 034d 0E       		.byte	0xe
 2342 034e 68000000 		.4byte	0x68
 2343 0352 05       		.uleb128 0x5
 2344 0353 03       		.byte	0x3
 2345 0354 00000000 		.4byte	psoc_id
 2346 0358 13       		.uleb128 0x13
 2347 0359 A7000000 		.4byte	0xa7
 2348 035d 68030000 		.4byte	0x368
 2349 0361 14       		.uleb128 0x14
 2350 0362 C6000000 		.4byte	0xc6
 2351 0366 01       		.byte	0x1
 2352 0367 00       		.byte	0
 2353 0368 12       		.uleb128 0x12
 2354 0369 09020000 		.4byte	.LASF41
 2355 036d 01       		.byte	0x1
 2356 036e 0F       		.byte	0xf
 2357 036f 58030000 		.4byte	0x358
 2358 0373 05       		.uleb128 0x5
 2359 0374 03       		.byte	0x3
 2360 0375 00000000 		.4byte	psoc_id_string
 2361 0379 12       		.uleb128 0x12
 2362 037a 43010000 		.4byte	.LASF42
 2363 037e 01       		.byte	0x1
 2364 037f 18       		.byte	0x18
 2365 0380 81000000 		.4byte	0x81
 2366 0384 05       		.uleb128 0x5
 2367 0385 03       		.byte	0x3
 2368 0386 00000000 		.4byte	errorStatus
 2369 038a 12       		.uleb128 0x12
 2370 038b 1F010000 		.4byte	.LASF43
 2371 038f 01       		.byte	0x1
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccKv0qGd.s 			page 52


 2372 0390 34       		.byte	0x34
 2373 0391 68000000 		.4byte	0x68
 2374 0395 05       		.uleb128 0x5
 2375 0396 03       		.byte	0x3
 2376 0397 00000000 		.4byte	data_read_mode
 2377 039b 13       		.uleb128 0x13
 2378 039c AB030000 		.4byte	0x3ab
 2379 03a0 AB030000 		.4byte	0x3ab
 2380 03a4 14       		.uleb128 0x14
 2381 03a5 C6000000 		.4byte	0xc6
 2382 03a9 03       		.byte	0x3
 2383 03aa 00       		.byte	0
 2384 03ab 06       		.uleb128 0x6
 2385 03ac 68000000 		.4byte	0x68
 2386 03b0 12       		.uleb128 0x12
 2387 03b1 41000000 		.4byte	.LASF44
 2388 03b5 01       		.byte	0x1
 2389 03b6 36       		.byte	0x36
 2390 03b7 C1030000 		.4byte	0x3c1
 2391 03bb 05       		.uleb128 0x5
 2392 03bc 03       		.byte	0x3
 2393 03bd 00000000 		.4byte	new_pos_set
 2394 03c1 06       		.uleb128 0x6
 2395 03c2 9B030000 		.4byte	0x39b
 2396 03c6 13       		.uleb128 0x13
 2397 03c7 68000000 		.4byte	0x68
 2398 03cb D6030000 		.4byte	0x3d6
 2399 03cf 14       		.uleb128 0x14
 2400 03d0 C6000000 		.4byte	0xc6
 2401 03d4 03       		.byte	0x3
 2402 03d5 00       		.byte	0
 2403 03d6 12       		.uleb128 0x12
 2404 03d7 CF010000 		.4byte	.LASF45
 2405 03db 01       		.byte	0x1
 2406 03dc 37       		.byte	0x37
 2407 03dd C6030000 		.4byte	0x3c6
 2408 03e1 05       		.uleb128 0x5
 2409 03e2 03       		.byte	0x3
 2410 03e3 00000000 		.4byte	new_pos
 2411 03e7 15       		.uleb128 0x15
 2412 03e8 706F7300 		.ascii	"pos\000"
 2413 03ec 01       		.byte	0x1
 2414 03ed 38       		.byte	0x38
 2415 03ee C6030000 		.4byte	0x3c6
 2416 03f2 05       		.uleb128 0x5
 2417 03f3 03       		.byte	0x3
 2418 03f4 00000000 		.4byte	pos
 2419 03f8 12       		.uleb128 0x12
 2420 03f9 2E010000 		.4byte	.LASF20
 2421 03fd 01       		.byte	0x1
 2422 03fe 39       		.byte	0x39
 2423 03ff C6030000 		.4byte	0x3c6
 2424 0403 05       		.uleb128 0x5
 2425 0404 03       		.byte	0x3
 2426 0405 00000000 		.4byte	pulse
 2427 0409 12       		.uleb128 0x12
 2428 040a AE010000 		.4byte	.LASF46
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccKv0qGd.s 			page 53


 2429 040e 01       		.byte	0x1
 2430 040f 3A       		.byte	0x3a
 2431 0410 C6030000 		.4byte	0x3c6
 2432 0414 05       		.uleb128 0x5
 2433 0415 03       		.byte	0x3
 2434 0416 00000000 		.4byte	pulse_temp
 2435 041a 13       		.uleb128 0x13
 2436 041b A0000000 		.4byte	0xa0
 2437 041f 2A040000 		.4byte	0x42a
 2438 0423 14       		.uleb128 0x14
 2439 0424 C6000000 		.4byte	0xc6
 2440 0428 03       		.byte	0x3
 2441 0429 00       		.byte	0
 2442 042a 15       		.uleb128 0x15
 2443 042b 65727200 		.ascii	"err\000"
 2444 042f 01       		.byte	0x1
 2445 0430 3B       		.byte	0x3b
 2446 0431 1A040000 		.4byte	0x41a
 2447 0435 05       		.uleb128 0x5
 2448 0436 03       		.byte	0x3
 2449 0437 00000000 		.4byte	err
 2450 043b 13       		.uleb128 0x13
 2451 043c 8D000000 		.4byte	0x8d
 2452 0440 4B040000 		.4byte	0x44b
 2453 0444 14       		.uleb128 0x14
 2454 0445 C6000000 		.4byte	0xc6
 2455 0449 03       		.byte	0x3
 2456 044a 00       		.byte	0
 2457 044b 12       		.uleb128 0x12
 2458 044c D7010000 		.4byte	.LASF47
 2459 0450 01       		.byte	0x1
 2460 0451 3C       		.byte	0x3c
 2461 0452 3B040000 		.4byte	0x43b
 2462 0456 05       		.uleb128 0x5
 2463 0457 03       		.byte	0x3
 2464 0458 00000000 		.4byte	adcValue
 2465 045c 15       		.uleb128 0x15
 2466 045d 64657200 		.ascii	"der\000"
 2467 0461 01       		.byte	0x1
 2468 0462 3D       		.byte	0x3d
 2469 0463 1A040000 		.4byte	0x41a
 2470 0467 05       		.uleb128 0x5
 2471 0468 03       		.byte	0x3
 2472 0469 00000000 		.4byte	der
 2473 046d 12       		.uleb128 0x12
 2474 046e 33000000 		.4byte	.LASF48
 2475 0472 01       		.byte	0x1
 2476 0473 3E       		.byte	0x3e
 2477 0474 1A040000 		.4byte	0x41a
 2478 0478 05       		.uleb128 0x5
 2479 0479 03       		.byte	0x3
 2480 047a 00000000 		.4byte	prev_err
 2481 047e 12       		.uleb128 0x12
 2482 047f C1020000 		.4byte	.LASF49
 2483 0483 01       		.byte	0x1
 2484 0484 3F       		.byte	0x3f
 2485 0485 1A040000 		.4byte	0x41a
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccKv0qGd.s 			page 54


 2486 0489 05       		.uleb128 0x5
 2487 048a 03       		.byte	0x3
 2488 048b 00000000 		.4byte	pid_integral
 2489 048f 12       		.uleb128 0x12
 2490 0490 1B000000 		.4byte	.LASF50
 2491 0494 01       		.byte	0x1
 2492 0495 41       		.byte	0x41
 2493 0496 68000000 		.4byte	0x68
 2494 049a 05       		.uleb128 0x5
 2495 049b 03       		.byte	0x3
 2496 049c 00000000 		.4byte	cyl_set
 2497 04a0 13       		.uleb128 0x13
 2498 04a1 A7000000 		.4byte	0xa7
 2499 04a5 B0040000 		.4byte	0x4b0
 2500 04a9 14       		.uleb128 0x14
 2501 04aa C6000000 		.4byte	0xc6
 2502 04ae 00       		.byte	0
 2503 04af 00       		.byte	0
 2504 04b0 12       		.uleb128 0x12
 2505 04b1 23000000 		.4byte	.LASF51
 2506 04b5 01       		.byte	0x1
 2507 04b6 42       		.byte	0x42
 2508 04b7 A0040000 		.4byte	0x4a0
 2509 04bb 05       		.uleb128 0x5
 2510 04bc 03       		.byte	0x3
 2511 04bd 00000000 		.4byte	cyl_tmp
 2512 04c1 13       		.uleb128 0x13
 2513 04c2 A0000000 		.4byte	0xa0
 2514 04c6 D1040000 		.4byte	0x4d1
 2515 04ca 14       		.uleb128 0x14
 2516 04cb C6000000 		.4byte	0xc6
 2517 04cf 1D       		.byte	0x1d
 2518 04d0 00       		.byte	0
 2519 04d1 15       		.uleb128 0x15
 2520 04d2 64747300 		.ascii	"dts\000"
 2521 04d6 01       		.byte	0x1
 2522 04d7 43       		.byte	0x43
 2523 04d8 C1040000 		.4byte	0x4c1
 2524 04dc 05       		.uleb128 0x5
 2525 04dd 03       		.byte	0x3
 2526 04de 00000000 		.4byte	dts
 2527 04e2 12       		.uleb128 0x12
 2528 04e3 45030000 		.4byte	.LASF52
 2529 04e7 01       		.byte	0x1
 2530 04e8 44       		.byte	0x44
 2531 04e9 68000000 		.4byte	0x68
 2532 04ed 05       		.uleb128 0x5
 2533 04ee 03       		.byte	0x3
 2534 04ef 00000000 		.4byte	dts_ct
 2535 04f3 13       		.uleb128 0x13
 2536 04f4 68000000 		.4byte	0x68
 2537 04f8 09050000 		.4byte	0x509
 2538 04fc 14       		.uleb128 0x14
 2539 04fd C6000000 		.4byte	0xc6
 2540 0501 03       		.byte	0x3
 2541 0502 14       		.uleb128 0x14
 2542 0503 C6000000 		.4byte	0xc6
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccKv0qGd.s 			page 55


 2543 0507 01       		.byte	0x1
 2544 0508 00       		.byte	0
 2545 0509 12       		.uleb128 0x12
 2546 050a 6A010000 		.4byte	.LASF53
 2547 050e 01       		.byte	0x1
 2548 050f 46       		.byte	0x46
 2549 0510 F3040000 		.4byte	0x4f3
 2550 0514 05       		.uleb128 0x5
 2551 0515 03       		.byte	0x3
 2552 0516 00000000 		.4byte	offsets
 2553 051a 13       		.uleb128 0x13
 2554 051b A7000000 		.4byte	0xa7
 2555 051f 2A050000 		.4byte	0x52a
 2556 0523 14       		.uleb128 0x14
 2557 0524 C6000000 		.4byte	0xc6
 2558 0528 63       		.byte	0x63
 2559 0529 00       		.byte	0
 2560 052a 12       		.uleb128 0x12
 2561 052b 34030000 		.4byte	.LASF54
 2562 052f 01       		.byte	0x1
 2563 0530 48       		.byte	0x48
 2564 0531 1A050000 		.4byte	0x51a
 2565 0535 05       		.uleb128 0x5
 2566 0536 03       		.byte	0x3
 2567 0537 00000000 		.4byte	sendValue
 2568 053b 13       		.uleb128 0x13
 2569 053c A7000000 		.4byte	0xa7
 2570 0540 4B050000 		.4byte	0x54b
 2571 0544 14       		.uleb128 0x14
 2572 0545 C6000000 		.4byte	0xc6
 2573 0549 13       		.byte	0x13
 2574 054a 00       		.byte	0
 2575 054b 12       		.uleb128 0x12
 2576 054c 4D000000 		.4byte	.LASF55
 2577 0550 01       		.byte	0x1
 2578 0551 49       		.byte	0x49
 2579 0552 3B050000 		.4byte	0x53b
 2580 0556 05       		.uleb128 0x5
 2581 0557 03       		.byte	0x3
 2582 0558 00000000 		.4byte	temp
 2583 055c 15       		.uleb128 0x15
 2584 055d 6E6E00   		.ascii	"nn\000"
 2585 0560 01       		.byte	0x1
 2586 0561 4A       		.byte	0x4a
 2587 0562 68000000 		.4byte	0x68
 2588 0566 05       		.uleb128 0x5
 2589 0567 03       		.byte	0x3
 2590 0568 00000000 		.4byte	nn
 2591 056c 13       		.uleb128 0x13
 2592 056d A0000000 		.4byte	0xa0
 2593 0571 7C050000 		.4byte	0x57c
 2594 0575 14       		.uleb128 0x14
 2595 0576 C6000000 		.4byte	0xc6
 2596 057a 02       		.byte	0x2
 2597 057b 00       		.byte	0
 2598 057c 15       		.uleb128 0x15
 2599 057d 70696400 		.ascii	"pid\000"
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccKv0qGd.s 			page 56


 2600 0581 01       		.byte	0x1
 2601 0582 4B       		.byte	0x4b
 2602 0583 6C050000 		.4byte	0x56c
 2603 0587 05       		.uleb128 0x5
 2604 0588 03       		.byte	0x3
 2605 0589 00000000 		.4byte	pid
 2606 058d 12       		.uleb128 0x12
 2607 058e 13010000 		.4byte	.LASF56
 2608 0592 01       		.byte	0x1
 2609 0593 4D       		.byte	0x4d
 2610 0594 1A050000 		.4byte	0x51a
 2611 0598 05       		.uleb128 0x5
 2612 0599 03       		.byte	0x3
 2613 059a 00000000 		.4byte	help
 2614 059e 15       		.uleb128 0x15
 2615 059f 747400   		.ascii	"tt\000"
 2616 05a2 01       		.byte	0x1
 2617 05a3 4E       		.byte	0x4e
 2618 05a4 68000000 		.4byte	0x68
 2619 05a8 05       		.uleb128 0x5
 2620 05a9 03       		.byte	0x3
 2621 05aa 00000000 		.4byte	tt
 2622 05ae 12       		.uleb128 0x12
 2623 05af FE020000 		.4byte	.LASF57
 2624 05b3 01       		.byte	0x1
 2625 05b4 50       		.byte	0x50
 2626 05b5 68000000 		.4byte	0x68
 2627 05b9 05       		.uleb128 0x5
 2628 05ba 03       		.byte	0x3
 2629 05bb 00000000 		.4byte	start_calib
 2630 05bf 12       		.uleb128 0x12
 2631 05c0 88010000 		.4byte	.LASF58
 2632 05c4 01       		.byte	0x1
 2633 05c5 51       		.byte	0x51
 2634 05c6 68000000 		.4byte	0x68
 2635 05ca 05       		.uleb128 0x5
 2636 05cb 03       		.byte	0x3
 2637 05cc 00000000 		.4byte	cyl_no
 2638 05d0 13       		.uleb128 0x13
 2639 05d1 8D000000 		.4byte	0x8d
 2640 05d5 E6050000 		.4byte	0x5e6
 2641 05d9 14       		.uleb128 0x14
 2642 05da C6000000 		.4byte	0xc6
 2643 05de 03       		.byte	0x3
 2644 05df 14       		.uleb128 0x14
 2645 05e0 C6000000 		.4byte	0xc6
 2646 05e4 06       		.byte	0x6
 2647 05e5 00       		.byte	0
 2648 05e6 12       		.uleb128 0x12
 2649 05e7 1C030000 		.4byte	.LASF59
 2650 05eb 01       		.byte	0x1
 2651 05ec 53       		.byte	0x53
 2652 05ed D0050000 		.4byte	0x5d0
 2653 05f1 05       		.uleb128 0x5
 2654 05f2 03       		.byte	0x3
 2655 05f3 00000000 		.4byte	moving_median
 2656 05f7 13       		.uleb128 0x13
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccKv0qGd.s 			page 57


 2657 05f8 8D000000 		.4byte	0x8d
 2658 05fc 07060000 		.4byte	0x607
 2659 0600 14       		.uleb128 0x14
 2660 0601 C6000000 		.4byte	0xc6
 2661 0605 06       		.byte	0x6
 2662 0606 00       		.byte	0
 2663 0607 12       		.uleb128 0x12
 2664 0608 2A030000 		.4byte	.LASF60
 2665 060c 01       		.byte	0x1
 2666 060d 54       		.byte	0x54
 2667 060e F7050000 		.4byte	0x5f7
 2668 0612 05       		.uleb128 0x5
 2669 0613 03       		.byte	0x3
 2670 0614 00000000 		.4byte	tempArray
 2671 0618 15       		.uleb128 0x15
 2672 0619 746D7000 		.ascii	"tmp\000"
 2673 061d 01       		.byte	0x1
 2674 061e 55       		.byte	0x55
 2675 061f 8D000000 		.4byte	0x8d
 2676 0623 05       		.uleb128 0x5
 2677 0624 03       		.byte	0x3
 2678 0625 00000000 		.4byte	tmp
 2679 0629 00       		.byte	0
 2680              		.section	.debug_abbrev,"",%progbits
 2681              	.Ldebug_abbrev0:
 2682 0000 01       		.uleb128 0x1
 2683 0001 11       		.uleb128 0x11
 2684 0002 01       		.byte	0x1
 2685 0003 25       		.uleb128 0x25
 2686 0004 0E       		.uleb128 0xe
 2687 0005 13       		.uleb128 0x13
 2688 0006 0B       		.uleb128 0xb
 2689 0007 03       		.uleb128 0x3
 2690 0008 0E       		.uleb128 0xe
 2691 0009 1B       		.uleb128 0x1b
 2692 000a 0E       		.uleb128 0xe
 2693 000b 55       		.uleb128 0x55
 2694 000c 17       		.uleb128 0x17
 2695 000d 11       		.uleb128 0x11
 2696 000e 01       		.uleb128 0x1
 2697 000f 10       		.uleb128 0x10
 2698 0010 17       		.uleb128 0x17
 2699 0011 00       		.byte	0
 2700 0012 00       		.byte	0
 2701 0013 02       		.uleb128 0x2
 2702 0014 24       		.uleb128 0x24
 2703 0015 00       		.byte	0
 2704 0016 0B       		.uleb128 0xb
 2705 0017 0B       		.uleb128 0xb
 2706 0018 3E       		.uleb128 0x3e
 2707 0019 0B       		.uleb128 0xb
 2708 001a 03       		.uleb128 0x3
 2709 001b 0E       		.uleb128 0xe
 2710 001c 00       		.byte	0
 2711 001d 00       		.byte	0
 2712 001e 03       		.uleb128 0x3
 2713 001f 16       		.uleb128 0x16
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccKv0qGd.s 			page 58


 2714 0020 00       		.byte	0
 2715 0021 03       		.uleb128 0x3
 2716 0022 0E       		.uleb128 0xe
 2717 0023 3A       		.uleb128 0x3a
 2718 0024 0B       		.uleb128 0xb
 2719 0025 3B       		.uleb128 0x3b
 2720 0026 0B       		.uleb128 0xb
 2721 0027 49       		.uleb128 0x49
 2722 0028 13       		.uleb128 0x13
 2723 0029 00       		.byte	0
 2724 002a 00       		.byte	0
 2725 002b 04       		.uleb128 0x4
 2726 002c 24       		.uleb128 0x24
 2727 002d 00       		.byte	0
 2728 002e 0B       		.uleb128 0xb
 2729 002f 0B       		.uleb128 0xb
 2730 0030 3E       		.uleb128 0x3e
 2731 0031 0B       		.uleb128 0xb
 2732 0032 03       		.uleb128 0x3
 2733 0033 08       		.uleb128 0x8
 2734 0034 00       		.byte	0
 2735 0035 00       		.byte	0
 2736 0036 05       		.uleb128 0x5
 2737 0037 16       		.uleb128 0x16
 2738 0038 00       		.byte	0
 2739 0039 03       		.uleb128 0x3
 2740 003a 0E       		.uleb128 0xe
 2741 003b 3A       		.uleb128 0x3a
 2742 003c 0B       		.uleb128 0xb
 2743 003d 3B       		.uleb128 0x3b
 2744 003e 05       		.uleb128 0x5
 2745 003f 49       		.uleb128 0x49
 2746 0040 13       		.uleb128 0x13
 2747 0041 00       		.byte	0
 2748 0042 00       		.byte	0
 2749 0043 06       		.uleb128 0x6
 2750 0044 35       		.uleb128 0x35
 2751 0045 00       		.byte	0
 2752 0046 49       		.uleb128 0x49
 2753 0047 13       		.uleb128 0x13
 2754 0048 00       		.byte	0
 2755 0049 00       		.byte	0
 2756 004a 07       		.uleb128 0x7
 2757 004b 2E       		.uleb128 0x2e
 2758 004c 01       		.byte	0x1
 2759 004d 3F       		.uleb128 0x3f
 2760 004e 19       		.uleb128 0x19
 2761 004f 03       		.uleb128 0x3
 2762 0050 0E       		.uleb128 0xe
 2763 0051 3A       		.uleb128 0x3a
 2764 0052 0B       		.uleb128 0xb
 2765 0053 3B       		.uleb128 0x3b
 2766 0054 0B       		.uleb128 0xb
 2767 0055 27       		.uleb128 0x27
 2768 0056 19       		.uleb128 0x19
 2769 0057 11       		.uleb128 0x11
 2770 0058 01       		.uleb128 0x1
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccKv0qGd.s 			page 59


 2771 0059 12       		.uleb128 0x12
 2772 005a 06       		.uleb128 0x6
 2773 005b 40       		.uleb128 0x40
 2774 005c 18       		.uleb128 0x18
 2775 005d 9642     		.uleb128 0x2116
 2776 005f 19       		.uleb128 0x19
 2777 0060 01       		.uleb128 0x1
 2778 0061 13       		.uleb128 0x13
 2779 0062 00       		.byte	0
 2780 0063 00       		.byte	0
 2781 0064 08       		.uleb128 0x8
 2782 0065 05       		.uleb128 0x5
 2783 0066 00       		.byte	0
 2784 0067 03       		.uleb128 0x3
 2785 0068 0E       		.uleb128 0xe
 2786 0069 3A       		.uleb128 0x3a
 2787 006a 0B       		.uleb128 0xb
 2788 006b 3B       		.uleb128 0x3b
 2789 006c 0B       		.uleb128 0xb
 2790 006d 49       		.uleb128 0x49
 2791 006e 13       		.uleb128 0x13
 2792 006f 02       		.uleb128 0x2
 2793 0070 18       		.uleb128 0x18
 2794 0071 00       		.byte	0
 2795 0072 00       		.byte	0
 2796 0073 09       		.uleb128 0x9
 2797 0074 2E       		.uleb128 0x2e
 2798 0075 01       		.byte	0x1
 2799 0076 3F       		.uleb128 0x3f
 2800 0077 19       		.uleb128 0x19
 2801 0078 03       		.uleb128 0x3
 2802 0079 0E       		.uleb128 0xe
 2803 007a 3A       		.uleb128 0x3a
 2804 007b 0B       		.uleb128 0xb
 2805 007c 3B       		.uleb128 0x3b
 2806 007d 0B       		.uleb128 0xb
 2807 007e 27       		.uleb128 0x27
 2808 007f 19       		.uleb128 0x19
 2809 0080 49       		.uleb128 0x49
 2810 0081 13       		.uleb128 0x13
 2811 0082 11       		.uleb128 0x11
 2812 0083 01       		.uleb128 0x1
 2813 0084 12       		.uleb128 0x12
 2814 0085 06       		.uleb128 0x6
 2815 0086 40       		.uleb128 0x40
 2816 0087 18       		.uleb128 0x18
 2817 0088 9742     		.uleb128 0x2117
 2818 008a 19       		.uleb128 0x19
 2819 008b 01       		.uleb128 0x1
 2820 008c 13       		.uleb128 0x13
 2821 008d 00       		.byte	0
 2822 008e 00       		.byte	0
 2823 008f 0A       		.uleb128 0xa
 2824 0090 0B       		.uleb128 0xb
 2825 0091 01       		.byte	0x1
 2826 0092 11       		.uleb128 0x11
 2827 0093 01       		.uleb128 0x1
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccKv0qGd.s 			page 60


 2828 0094 12       		.uleb128 0x12
 2829 0095 06       		.uleb128 0x6
 2830 0096 00       		.byte	0
 2831 0097 00       		.byte	0
 2832 0098 0B       		.uleb128 0xb
 2833 0099 34       		.uleb128 0x34
 2834 009a 00       		.byte	0
 2835 009b 03       		.uleb128 0x3
 2836 009c 08       		.uleb128 0x8
 2837 009d 3A       		.uleb128 0x3a
 2838 009e 0B       		.uleb128 0xb
 2839 009f 3B       		.uleb128 0x3b
 2840 00a0 0B       		.uleb128 0xb
 2841 00a1 49       		.uleb128 0x49
 2842 00a2 13       		.uleb128 0x13
 2843 00a3 02       		.uleb128 0x2
 2844 00a4 18       		.uleb128 0x18
 2845 00a5 00       		.byte	0
 2846 00a6 00       		.byte	0
 2847 00a7 0C       		.uleb128 0xc
 2848 00a8 0B       		.uleb128 0xb
 2849 00a9 01       		.byte	0x1
 2850 00aa 11       		.uleb128 0x11
 2851 00ab 01       		.uleb128 0x1
 2852 00ac 12       		.uleb128 0x12
 2853 00ad 06       		.uleb128 0x6
 2854 00ae 01       		.uleb128 0x1
 2855 00af 13       		.uleb128 0x13
 2856 00b0 00       		.byte	0
 2857 00b1 00       		.byte	0
 2858 00b2 0D       		.uleb128 0xd
 2859 00b3 34       		.uleb128 0x34
 2860 00b4 00       		.byte	0
 2861 00b5 03       		.uleb128 0x3
 2862 00b6 0E       		.uleb128 0xe
 2863 00b7 3A       		.uleb128 0x3a
 2864 00b8 0B       		.uleb128 0xb
 2865 00b9 3B       		.uleb128 0x3b
 2866 00ba 0B       		.uleb128 0xb
 2867 00bb 49       		.uleb128 0x49
 2868 00bc 13       		.uleb128 0x13
 2869 00bd 02       		.uleb128 0x2
 2870 00be 18       		.uleb128 0x18
 2871 00bf 00       		.byte	0
 2872 00c0 00       		.byte	0
 2873 00c1 0E       		.uleb128 0xe
 2874 00c2 2E       		.uleb128 0x2e
 2875 00c3 01       		.byte	0x1
 2876 00c4 3F       		.uleb128 0x3f
 2877 00c5 19       		.uleb128 0x19
 2878 00c6 03       		.uleb128 0x3
 2879 00c7 0E       		.uleb128 0xe
 2880 00c8 3A       		.uleb128 0x3a
 2881 00c9 0B       		.uleb128 0xb
 2882 00ca 3B       		.uleb128 0x3b
 2883 00cb 05       		.uleb128 0x5
 2884 00cc 49       		.uleb128 0x49
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccKv0qGd.s 			page 61


 2885 00cd 13       		.uleb128 0x13
 2886 00ce 11       		.uleb128 0x11
 2887 00cf 01       		.uleb128 0x1
 2888 00d0 12       		.uleb128 0x12
 2889 00d1 06       		.uleb128 0x6
 2890 00d2 40       		.uleb128 0x40
 2891 00d3 18       		.uleb128 0x18
 2892 00d4 9642     		.uleb128 0x2116
 2893 00d6 19       		.uleb128 0x19
 2894 00d7 01       		.uleb128 0x1
 2895 00d8 13       		.uleb128 0x13
 2896 00d9 00       		.byte	0
 2897 00da 00       		.byte	0
 2898 00db 0F       		.uleb128 0xf
 2899 00dc 34       		.uleb128 0x34
 2900 00dd 00       		.byte	0
 2901 00de 03       		.uleb128 0x3
 2902 00df 08       		.uleb128 0x8
 2903 00e0 3A       		.uleb128 0x3a
 2904 00e1 0B       		.uleb128 0xb
 2905 00e2 3B       		.uleb128 0x3b
 2906 00e3 05       		.uleb128 0x5
 2907 00e4 49       		.uleb128 0x49
 2908 00e5 13       		.uleb128 0x13
 2909 00e6 02       		.uleb128 0x2
 2910 00e7 18       		.uleb128 0x18
 2911 00e8 00       		.byte	0
 2912 00e9 00       		.byte	0
 2913 00ea 10       		.uleb128 0x10
 2914 00eb 34       		.uleb128 0x34
 2915 00ec 00       		.byte	0
 2916 00ed 03       		.uleb128 0x3
 2917 00ee 0E       		.uleb128 0xe
 2918 00ef 3A       		.uleb128 0x3a
 2919 00f0 0B       		.uleb128 0xb
 2920 00f1 3B       		.uleb128 0x3b
 2921 00f2 05       		.uleb128 0x5
 2922 00f3 49       		.uleb128 0x49
 2923 00f4 13       		.uleb128 0x13
 2924 00f5 02       		.uleb128 0x2
 2925 00f6 18       		.uleb128 0x18
 2926 00f7 00       		.byte	0
 2927 00f8 00       		.byte	0
 2928 00f9 11       		.uleb128 0x11
 2929 00fa 34       		.uleb128 0x34
 2930 00fb 00       		.byte	0
 2931 00fc 03       		.uleb128 0x3
 2932 00fd 0E       		.uleb128 0xe
 2933 00fe 3A       		.uleb128 0x3a
 2934 00ff 0B       		.uleb128 0xb
 2935 0100 3B       		.uleb128 0x3b
 2936 0101 05       		.uleb128 0x5
 2937 0102 49       		.uleb128 0x49
 2938 0103 13       		.uleb128 0x13
 2939 0104 3F       		.uleb128 0x3f
 2940 0105 19       		.uleb128 0x19
 2941 0106 3C       		.uleb128 0x3c
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccKv0qGd.s 			page 62


 2942 0107 19       		.uleb128 0x19
 2943 0108 00       		.byte	0
 2944 0109 00       		.byte	0
 2945 010a 12       		.uleb128 0x12
 2946 010b 34       		.uleb128 0x34
 2947 010c 00       		.byte	0
 2948 010d 03       		.uleb128 0x3
 2949 010e 0E       		.uleb128 0xe
 2950 010f 3A       		.uleb128 0x3a
 2951 0110 0B       		.uleb128 0xb
 2952 0111 3B       		.uleb128 0x3b
 2953 0112 0B       		.uleb128 0xb
 2954 0113 49       		.uleb128 0x49
 2955 0114 13       		.uleb128 0x13
 2956 0115 3F       		.uleb128 0x3f
 2957 0116 19       		.uleb128 0x19
 2958 0117 02       		.uleb128 0x2
 2959 0118 18       		.uleb128 0x18
 2960 0119 00       		.byte	0
 2961 011a 00       		.byte	0
 2962 011b 13       		.uleb128 0x13
 2963 011c 01       		.uleb128 0x1
 2964 011d 01       		.byte	0x1
 2965 011e 49       		.uleb128 0x49
 2966 011f 13       		.uleb128 0x13
 2967 0120 01       		.uleb128 0x1
 2968 0121 13       		.uleb128 0x13
 2969 0122 00       		.byte	0
 2970 0123 00       		.byte	0
 2971 0124 14       		.uleb128 0x14
 2972 0125 21       		.uleb128 0x21
 2973 0126 00       		.byte	0
 2974 0127 49       		.uleb128 0x49
 2975 0128 13       		.uleb128 0x13
 2976 0129 2F       		.uleb128 0x2f
 2977 012a 0B       		.uleb128 0xb
 2978 012b 00       		.byte	0
 2979 012c 00       		.byte	0
 2980 012d 15       		.uleb128 0x15
 2981 012e 34       		.uleb128 0x34
 2982 012f 00       		.byte	0
 2983 0130 03       		.uleb128 0x3
 2984 0131 08       		.uleb128 0x8
 2985 0132 3A       		.uleb128 0x3a
 2986 0133 0B       		.uleb128 0xb
 2987 0134 3B       		.uleb128 0x3b
 2988 0135 0B       		.uleb128 0xb
 2989 0136 49       		.uleb128 0x49
 2990 0137 13       		.uleb128 0x13
 2991 0138 3F       		.uleb128 0x3f
 2992 0139 19       		.uleb128 0x19
 2993 013a 02       		.uleb128 0x2
 2994 013b 18       		.uleb128 0x18
 2995 013c 00       		.byte	0
 2996 013d 00       		.byte	0
 2997 013e 00       		.byte	0
 2998              		.section	.debug_aranges,"",%progbits
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccKv0qGd.s 			page 63


 2999 0000 3C000000 		.4byte	0x3c
 3000 0004 0200     		.2byte	0x2
 3001 0006 00000000 		.4byte	.Ldebug_info0
 3002 000a 04       		.byte	0x4
 3003 000b 00       		.byte	0
 3004 000c 0000     		.2byte	0
 3005 000e 0000     		.2byte	0
 3006 0010 00000000 		.4byte	.LFB64
 3007 0014 78000000 		.4byte	.LFE64-.LFB64
 3008 0018 00000000 		.4byte	.LFB65
 3009 001c 54000000 		.4byte	.LFE65-.LFB65
 3010 0020 00000000 		.4byte	.LFB66
 3011 0024 6C010000 		.4byte	.LFE66-.LFB66
 3012 0028 00000000 		.4byte	.LFB67
 3013 002c 48030000 		.4byte	.LFE67-.LFB67
 3014 0030 00000000 		.4byte	.LFB68
 3015 0034 78060000 		.4byte	.LFE68-.LFB68
 3016 0038 00000000 		.4byte	0
 3017 003c 00000000 		.4byte	0
 3018              		.section	.debug_ranges,"",%progbits
 3019              	.Ldebug_ranges0:
 3020 0000 00000000 		.4byte	.LFB64
 3021 0004 78000000 		.4byte	.LFE64
 3022 0008 00000000 		.4byte	.LFB65
 3023 000c 54000000 		.4byte	.LFE65
 3024 0010 00000000 		.4byte	.LFB66
 3025 0014 6C010000 		.4byte	.LFE66
 3026 0018 00000000 		.4byte	.LFB67
 3027 001c 48030000 		.4byte	.LFE67
 3028 0020 00000000 		.4byte	.LFB68
 3029 0024 78060000 		.4byte	.LFE68
 3030 0028 00000000 		.4byte	0
 3031 002c 00000000 		.4byte	0
 3032              		.section	.debug_line,"",%progbits
 3033              	.Ldebug_line0:
 3034 0000 BE030000 		.section	.debug_str,"MS",%progbits,1
 3034      02004C01 
 3034      00000201 
 3034      FB0E0D00 
 3034      01010101 
 3035              	.LASF17:
 3036 0000 6C6F6E67 		.ascii	"long double\000"
 3036      20646F75 
 3036      626C6500 
 3037              	.LASF35:
 3038 000c 6C6F7765 		.ascii	"lower_check_no\000"
 3038      725F6368 
 3038      65636B5F 
 3038      6E6F00
 3039              	.LASF50:
 3040 001b 63796C5F 		.ascii	"cyl_set\000"
 3040      73657400 
 3041              	.LASF51:
 3042 0023 63796C5F 		.ascii	"cyl_tmp\000"
 3042      746D7000 
 3043              	.LASF40:
 3044 002b 70736F63 		.ascii	"psoc_id\000"
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccKv0qGd.s 			page 64


 3044      5F696400 
 3045              	.LASF48:
 3046 0033 70726576 		.ascii	"prev_err\000"
 3046      5F657272 
 3046      00
 3047              	.LASF38:
 3048 003c 64696666 		.ascii	"diff\000"
 3048      00
 3049              	.LASF44:
 3050 0041 6E65775F 		.ascii	"new_pos_set\000"
 3050      706F735F 
 3050      73657400 
 3051              	.LASF55:
 3052 004d 74656D70 		.ascii	"temp\000"
 3052      00
 3053              	.LASF2:
 3054 0052 73686F72 		.ascii	"short int\000"
 3054      7420696E 
 3054      7400
 3055              	.LASF22:
 3056 005c 6F666673 		.ascii	"offset_lower\000"
 3056      65745F6C 
 3056      6F776572 
 3056      00
 3057              	.LASF18:
 3058 0069 73697A65 		.ascii	"sizetype\000"
 3058      74797065 
 3058      00
 3059              	.LASF28:
 3060 0072 6D61696E 		.ascii	"main\000"
 3060      00
 3061              	.LASF61:
 3062 0077 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 3062      43313120 
 3062      352E342E 
 3062      31203230 
 3062      31363036 
 3063 00aa 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 3063      20726576 
 3063      6973696F 
 3063      6E203233 
 3063      37373135 
 3064 00dd 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 3064      66756E63 
 3064      74696F6E 
 3064      2D736563 
 3064      74696F6E 
 3065              	.LASF6:
 3066 0105 6C6F6E67 		.ascii	"long long int\000"
 3066      206C6F6E 
 3066      6720696E 
 3066      7400
 3067              	.LASF56:
 3068 0113 68656C70 		.ascii	"help\000"
 3068      00
 3069              	.LASF12:
 3070 0118 75696E74 		.ascii	"uint16\000"
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccKv0qGd.s 			page 65


 3070      313600
 3071              	.LASF43:
 3072 011f 64617461 		.ascii	"data_read_mode\000"
 3072      5F726561 
 3072      645F6D6F 
 3072      646500
 3073              	.LASF20:
 3074 012e 70756C73 		.ascii	"pulse\000"
 3074      6500
 3075              	.LASF11:
 3076 0134 75696E74 		.ascii	"uint8\000"
 3076      3800
 3077              	.LASF19:
 3078 013a 63796C69 		.ascii	"cylinder\000"
 3078      6E646572 
 3078      00
 3079              	.LASF42:
 3080 0143 6572726F 		.ascii	"errorStatus\000"
 3080      72537461 
 3080      74757300 
 3081              	.LASF0:
 3082 014f 7369676E 		.ascii	"signed char\000"
 3082      65642063 
 3082      68617200 
 3083              	.LASF13:
 3084 015b 666C6F61 		.ascii	"float\000"
 3084      7400
 3085              	.LASF23:
 3086 0161 77726974 		.ascii	"writePWM\000"
 3086      6550574D 
 3086      00
 3087              	.LASF53:
 3088 016a 6F666673 		.ascii	"offsets\000"
 3088      65747300 
 3089              	.LASF33:
 3090 0172 75707065 		.ascii	"upper_offset\000"
 3090      725F6F66 
 3090      66736574 
 3090      00
 3091              	.LASF4:
 3092 017f 6C6F6E67 		.ascii	"long int\000"
 3092      20696E74 
 3092      00
 3093              	.LASF58:
 3094 0188 63796C5F 		.ascii	"cyl_no\000"
 3094      6E6F00
 3095              	.LASF32:
 3096 018f 6C6F7765 		.ascii	"lower_offset_set\000"
 3096      725F6F66 
 3096      66736574 
 3096      5F736574 
 3096      00
 3097              	.LASF1:
 3098 01a0 756E7369 		.ascii	"unsigned char\000"
 3098      676E6564 
 3098      20636861 
 3098      7200
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccKv0qGd.s 			page 66


 3099              	.LASF46:
 3100 01ae 70756C73 		.ascii	"pulse_temp\000"
 3100      655F7465 
 3100      6D7000
 3101              	.LASF34:
 3102 01b9 6C6F7765 		.ascii	"lower_offset\000"
 3102      725F6F66 
 3102      66736574 
 3102      00
 3103              	.LASF26:
 3104 01c6 72785374 		.ascii	"rxStatus\000"
 3104      61747573 
 3104      00
 3105              	.LASF45:
 3106 01cf 6E65775F 		.ascii	"new_pos\000"
 3106      706F7300 
 3107              	.LASF47:
 3108 01d7 61646356 		.ascii	"adcValue\000"
 3108      616C7565 
 3108      00
 3109              	.LASF7:
 3110 01e0 6C6F6E67 		.ascii	"long long unsigned int\000"
 3110      206C6F6E 
 3110      6720756E 
 3110      7369676E 
 3110      65642069 
 3111              	.LASF8:
 3112 01f7 756E7369 		.ascii	"unsigned int\000"
 3112      676E6564 
 3112      20696E74 
 3112      00
 3113              	.LASF29:
 3114 0204 74696D65 		.ascii	"time\000"
 3114      00
 3115              	.LASF41:
 3116 0209 70736F63 		.ascii	"psoc_id_string\000"
 3116      5F69645F 
 3116      73747269 
 3116      6E6700
 3117              	.LASF25:
 3118 0218 52784973 		.ascii	"RxIsr\000"
 3118      7200
 3119              	.LASF3:
 3120 021e 73686F72 		.ascii	"short unsigned int\000"
 3120      7420756E 
 3120      7369676E 
 3120      65642069 
 3120      6E7400
 3121              	.LASF63:
 3122 0231 433A5C55 		.ascii	"C:\\Users\\Andrew\\Documents\\GitHub\\Hydraulic-Mim"
 3122      73657273 
 3122      5C416E64 
 3122      7265775C 
 3122      446F6375 
 3123 025f 69632D41 		.ascii	"ic-Arm\\PSOC_arm_project.cydsn\000"
 3123      726D5C50 
 3123      534F435F 
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccKv0qGd.s 			page 67


 3123      61726D5F 
 3123      70726F6A 
 3124              	.LASF15:
 3125 027d 63686172 		.ascii	"char\000"
 3125      00
 3126              	.LASF30:
 3127 0282 63616C69 		.ascii	"calib_cyl\000"
 3127      625F6379 
 3127      6C00
 3128              	.LASF10:
 3129 028c 696E7433 		.ascii	"int32_t\000"
 3129      325F7400 
 3130              	.LASF36:
 3131 0294 75707065 		.ascii	"upper_check_no\000"
 3131      725F6368 
 3131      65636B5F 
 3131      6E6F00
 3132              	.LASF62:
 3133 02a3 6D61696E 		.ascii	"main.c\000"
 3133      2E6300
 3134              	.LASF16:
 3135 02aa 72656738 		.ascii	"reg8\000"
 3135      00
 3136              	.LASF5:
 3137 02af 6C6F6E67 		.ascii	"long unsigned int\000"
 3137      20756E73 
 3137      69676E65 
 3137      6420696E 
 3137      7400
 3138              	.LASF49:
 3139 02c1 7069645F 		.ascii	"pid_integral\000"
 3139      696E7465 
 3139      6772616C 
 3139      00
 3140              	.LASF37:
 3141 02ce 70726576 		.ascii	"prev_adcValue\000"
 3141      5F616463 
 3141      56616C75 
 3141      6500
 3142              	.LASF9:
 3143 02dc 5F5F696E 		.ascii	"__int32_t\000"
 3143      7433325F 
 3143      7400
 3144              	.LASF21:
 3145 02e6 6F666673 		.ascii	"offset_upper\000"
 3145      65745F75 
 3145      70706572 
 3145      00
 3146              	.LASF64:
 3147 02f3 70756C73 		.ascii	"pulseCheck\000"
 3147      65436865 
 3147      636B00
 3148              	.LASF57:
 3149 02fe 73746172 		.ascii	"start_calib\000"
 3149      745F6361 
 3149      6C696200 
 3150              	.LASF24:
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccKv0qGd.s 			page 68


 3151 030a 6164635F 		.ascii	"adc_update\000"
 3151      75706461 
 3151      746500
 3152              	.LASF27:
 3153 0315 72784461 		.ascii	"rxData\000"
 3153      746100
 3154              	.LASF59:
 3155 031c 6D6F7669 		.ascii	"moving_median\000"
 3155      6E675F6D 
 3155      65646961 
 3155      6E00
 3156              	.LASF60:
 3157 032a 74656D70 		.ascii	"tempArray\000"
 3157      41727261 
 3157      7900
 3158              	.LASF54:
 3159 0334 73656E64 		.ascii	"sendValue\000"
 3159      56616C75 
 3159      6500
 3160              	.LASF14:
 3161 033e 646F7562 		.ascii	"double\000"
 3161      6C6500
 3162              	.LASF52:
 3163 0345 6474735F 		.ascii	"dts_ct\000"
 3163      637400
 3164              	.LASF39:
 3165 034c 49544D5F 		.ascii	"ITM_RxBuffer\000"
 3165      52784275 
 3165      66666572 
 3165      00
 3166              	.LASF31:
 3167 0359 75707065 		.ascii	"upper_offset_set\000"
 3167      725F6F66 
 3167      66736574 
 3167      5F736574 
 3167      00
 3168              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
