ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccH007Pe.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.syntax unified
  20              		.global _printf_float
  21              		.thumb
  22              		.syntax unified
  23              		.global	errorStatus
  24              		.bss
  25              		.type	errorStatus, %object
  26              		.size	errorStatus, 1
  27              	errorStatus:
  28 0000 00       		.space	1
  29              		.section	.text.pulseCheck,"ax",%progbits
  30              		.align	2
  31              		.global	pulseCheck
  32              		.thumb
  33              		.thumb_func
  34              		.type	pulseCheck, %function
  35              	pulseCheck:
  36              	.LFB64:
  37              		.file 1 "main.c"
   1:main.c        **** 
   2:main.c        **** #include <project.h>
   3:main.c        **** #include <stdio.h>
   4:main.c        **** #include "common.h"
   5:main.c        **** #include <math.h>
   6:main.c        **** #include <stdlib.h>     /* strtod */
   7:main.c        **** 
   8:main.c        **** #define	Frequency 1000000.0			// Frequency of PWMClock
   9:main.c        **** #define	One_ms (Frequency/1000.0)	// 1 ms constant
  10:main.c        **** #define filter_size 7
  11:main.c        **** #define CYL_NO 2                    // Number of connected cylinders
  12:main.c        **** 
  13:main.c        **** /* Add an explicit reference to the floating point printf library to allow
  14:main.c        **** the usage of floating point conversion specifier */
  15:main.c        **** #if defined (__GNUC__)
  16:main.c        ****     asm (".global _printf_float");
  17:main.c        **** #endif
  18:main.c        **** 
  19:main.c        **** uint8 errorStatus = 0u;
  20:main.c        **** 
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccH007Pe.s 			page 2


  21:main.c        **** int pulseCheck(int pulse, int offset_upper, int offset_lower) {
  38              		.loc 1 21 0
  39              		.cfi_startproc
  40              		@ args = 0, pretend = 0, frame = 16
  41              		@ frame_needed = 1, uses_anonymous_args = 0
  42              		@ link register save eliminated.
  43 0000 80B4     		push	{r7}
  44              		.cfi_def_cfa_offset 4
  45              		.cfi_offset 7, -4
  46 0002 85B0     		sub	sp, sp, #20
  47              		.cfi_def_cfa_offset 24
  48 0004 00AF     		add	r7, sp, #0
  49              		.cfi_def_cfa_register 7
  50 0006 F860     		str	r0, [r7, #12]
  51 0008 B960     		str	r1, [r7, #8]
  52 000a 7A60     		str	r2, [r7, #4]
  22:main.c        ****     if(pulse<0){pulse = pulse - offset_lower;}
  53              		.loc 1 22 0
  54 000c FB68     		ldr	r3, [r7, #12]
  55 000e 002B     		cmp	r3, #0
  56 0010 03DA     		bge	.L2
  57              		.loc 1 22 0 is_stmt 0 discriminator 1
  58 0012 FA68     		ldr	r2, [r7, #12]
  59 0014 7B68     		ldr	r3, [r7, #4]
  60 0016 D31A     		subs	r3, r2, r3
  61 0018 FB60     		str	r3, [r7, #12]
  62              	.L2:
  23:main.c        ****         if(pulse>0){pulse = pulse + offset_upper;}
  63              		.loc 1 23 0 is_stmt 1
  64 001a FB68     		ldr	r3, [r7, #12]
  65 001c 002B     		cmp	r3, #0
  66 001e 03DD     		ble	.L3
  67              		.loc 1 23 0 is_stmt 0 discriminator 1
  68 0020 FA68     		ldr	r2, [r7, #12]
  69 0022 BB68     		ldr	r3, [r7, #8]
  70 0024 1344     		add	r3, r3, r2
  71 0026 FB60     		str	r3, [r7, #12]
  72              	.L3:
  24:main.c        ****         if(pulse<-500){pulse=-500;}
  73              		.loc 1 24 0 is_stmt 1
  74 0028 FB68     		ldr	r3, [r7, #12]
  75 002a 13F5FA7F 		cmn	r3, #500
  76 002e 01DA     		bge	.L4
  77              		.loc 1 24 0 is_stmt 0 discriminator 1
  78 0030 074B     		ldr	r3, .L7
  79 0032 FB60     		str	r3, [r7, #12]
  80              	.L4:
  25:main.c        ****         if(pulse>500){pulse=500;}
  81              		.loc 1 25 0 is_stmt 1
  82 0034 FB68     		ldr	r3, [r7, #12]
  83 0036 B3F5FA7F 		cmp	r3, #500
  84 003a 02DD     		ble	.L5
  85              		.loc 1 25 0 is_stmt 0 discriminator 1
  86 003c 4FF4FA73 		mov	r3, #500
  87 0040 FB60     		str	r3, [r7, #12]
  88              	.L5:
  26:main.c        ****     return pulse;
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccH007Pe.s 			page 3


  89              		.loc 1 26 0 is_stmt 1
  90 0042 FB68     		ldr	r3, [r7, #12]
  27:main.c        **** }
  91              		.loc 1 27 0
  92 0044 1846     		mov	r0, r3
  93 0046 1437     		adds	r7, r7, #20
  94              		.cfi_def_cfa_offset 4
  95 0048 BD46     		mov	sp, r7
  96              		.cfi_def_cfa_register 13
  97              		@ sp needed
  98 004a 80BC     		pop	{r7}
  99              		.cfi_restore 7
 100              		.cfi_def_cfa_offset 0
 101 004c 7047     		bx	lr
 102              	.L8:
 103 004e 00BF     		.align	2
 104              	.L7:
 105 0050 0CFEFFFF 		.word	-500
 106              		.cfi_endproc
 107              	.LFE64:
 108              		.size	pulseCheck, .-pulseCheck
 109              		.global	data_read_mode
 110              		.bss
 111 0001 000000   		.align	2
 112              		.type	data_read_mode, %object
 113              		.size	data_read_mode, 4
 114              	data_read_mode:
 115 0004 00000000 		.space	4
 116              		.global	new_pos_set
 117              		.align	2
 118              		.type	new_pos_set, %object
 119              		.size	new_pos_set, 8
 120              	new_pos_set:
 121 0008 00000000 		.space	8
 121      00000000 
 122              		.comm	new_pos,8,4
 123              		.global	pos
 124              		.data
 125              		.align	2
 126              		.type	pos, %object
 127              		.size	pos, 8
 128              	pos:
 129 0000 40060000 		.word	1600
 130 0004 00000000 		.space	4
 131              		.global	pulse
 132              		.bss
 133              		.align	2
 134              		.type	pulse, %object
 135              		.size	pulse, 8
 136              	pulse:
 137 0010 00000000 		.space	8
 137      00000000 
 138              		.global	pulse_temp
 139              		.align	2
 140              		.type	pulse_temp, %object
 141              		.size	pulse_temp, 8
 142              	pulse_temp:
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccH007Pe.s 			page 4


 143 0018 00000000 		.space	8
 143      00000000 
 144              		.comm	err,16,8
 145              		.comm	adcValue,4,4
 146              		.global	der
 147              		.align	3
 148              		.type	der, %object
 149              		.size	der, 16
 150              	der:
 151 0020 00000000 		.space	16
 151      00000000 
 151      00000000 
 151      00000000 
 152              		.global	prev_err
 153              		.align	3
 154              		.type	prev_err, %object
 155              		.size	prev_err, 16
 156              	prev_err:
 157 0030 00000000 		.space	16
 157      00000000 
 157      00000000 
 157      00000000 
 158              		.global	pid_integral
 159              		.align	3
 160              		.type	pid_integral, %object
 161              		.size	pid_integral, 16
 162              	pid_integral:
 163 0040 00000000 		.space	16
 163      00000000 
 163      00000000 
 163      00000000 
 164              		.global	offsets
 165              		.data
 166              		.align	2
 167              		.type	offsets, %object
 168              		.size	offsets, 32
 169              	offsets:
 170 0008 96000000 		.word	150
 171 000c 99000000 		.word	153
 172 0010 00000000 		.word	0
 173 0014 00000000 		.word	0
 174 0018 00000000 		.word	0
 175 001c 00000000 		.word	0
 176 0020 00000000 		.word	0
 177 0024 00000000 		.word	0
 178              		.comm	sendValue,100,4
 179              		.comm	temp,20,4
 180              		.global	nn
 181              		.bss
 182              		.align	2
 183              		.type	nn, %object
 184              		.size	nn, 4
 185              	nn:
 186 0050 00000000 		.space	4
 187              		.global	pid
 188              		.data
 189              		.align	3
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccH007Pe.s 			page 5


 190              		.type	pid, %object
 191              		.size	pid, 24
 192              	pid:
 193 0028 FA7E6ABC 		.word	-1133871366
 194 002c 7493683F 		.word	1063818100
 195 0030 00000000 		.word	0
 196 0034 00000000 		.word	0
 197 0038 FCA9F1D2 		.word	-755914244
 198 003c 4D62503F 		.word	1062232653
 199              		.comm	help,100,4
 200              		.global	tt
 201              		.bss
 202              		.align	2
 203              		.type	tt, %object
 204              		.size	tt, 4
 205              	tt:
 206 0054 00000000 		.space	4
 207              		.global	start_calib
 208              		.align	2
 209              		.type	start_calib, %object
 210              		.size	start_calib, 4
 211              	start_calib:
 212 0058 00000000 		.space	4
 213              		.global	cyl_no
 214              		.align	2
 215              		.type	cyl_no, %object
 216              		.size	cyl_no, 4
 217              	cyl_no:
 218 005c 00000000 		.space	4
 219              		.global	moving_median
 220              		.align	2
 221              		.type	moving_median, %object
 222              		.size	moving_median, 28
 223              	moving_median:
 224 0060 00000000 		.space	28
 224      00000000 
 224      00000000 
 224      00000000 
 224      00000000 
 225              		.comm	tempArray,14,4
 226              		.comm	tmp,2,2
 227              		.section	.text.adc_update,"ax",%progbits
 228              		.align	2
 229              		.global	adc_update
 230              		.thumb
 231              		.thumb_func
 232              		.type	adc_update, %function
 233              	adc_update:
 234              	.LFB65:
  28:main.c        **** 
  29:main.c        **** 
  30:main.c        **** int data_read_mode = 0;
  31:main.c        **** 
  32:main.c        **** volatile int new_pos_set[CYL_NO] = {0};
  33:main.c        **** int new_pos[CYL_NO];
  34:main.c        **** int pos[CYL_NO]={1600};
  35:main.c        **** int pulse[CYL_NO] = {0};
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccH007Pe.s 			page 6


  36:main.c        **** int pulse_temp[CYL_NO] = {0};
  37:main.c        **** double err[CYL_NO];
  38:main.c        **** uint16 adcValue[CYL_NO];
  39:main.c        **** double der[CYL_NO] = {0};
  40:main.c        **** double prev_err[CYL_NO] = {0};
  41:main.c        **** double pid_integral[CYL_NO] = {0};
  42:main.c        **** 
  43:main.c        **** int offsets[4][2] = {{150,153},{0,0},{0,0},{0,0}}; //{lower,upper} - both positive
  44:main.c        **** 
  45:main.c        **** char sendValue[100];
  46:main.c        **** char temp[20];
  47:main.c        **** int nn=0;
  48:main.c        **** double pid[3] = {0.003,0.000,0.001};
  49:main.c        **** //double pid[3] = { -2.22,-0.0307,0.0 };
  50:main.c        **** char help[100];
  51:main.c        **** int tt = 0;
  52:main.c        **** 
  53:main.c        **** int start_calib = 0;
  54:main.c        **** int cyl_no = 0;
  55:main.c        **** 
  56:main.c        **** uint16 moving_median[CYL_NO][filter_size] = {0};
  57:main.c        **** uint16 tempArray[filter_size];
  58:main.c        **** uint16 tmp;
  59:main.c        **** 
  60:main.c        **** CY_ISR(adc_update){
 235              		.loc 1 60 0
 236              		.cfi_startproc
 237              		@ args = 0, pretend = 0, frame = 24
 238              		@ frame_needed = 1, uses_anonymous_args = 0
 239 0000 80B5     		push	{r7, lr}
 240              		.cfi_def_cfa_offset 8
 241              		.cfi_offset 7, -8
 242              		.cfi_offset 14, -4
 243 0002 86B0     		sub	sp, sp, #24
 244              		.cfi_def_cfa_offset 32
 245 0004 00AF     		add	r7, sp, #0
 246              		.cfi_def_cfa_register 7
 247              	.LBB2:
  61:main.c        ****     for(int c = 0;c<CYL_NO;c++){
 248              		.loc 1 61 0
 249 0006 0023     		movs	r3, #0
 250 0008 7B61     		str	r3, [r7, #20]
 251 000a 8FE0     		b	.L10
 252              	.L20:
  62:main.c        ****         AMux_0_FastSelect(c);
 253              		.loc 1 62 0
 254 000c 7B69     		ldr	r3, [r7, #20]
 255 000e DBB2     		uxtb	r3, r3
 256 0010 1846     		mov	r0, r3
 257 0012 FFF7FEFF 		bl	AMux_0_FastSelect
 258              	.LBB3:
  63:main.c        ****         
  64:main.c        ****         for(int j=0;j<filter_size-1;j++){
 259              		.loc 1 64 0
 260 0016 0023     		movs	r3, #0
 261 0018 3B61     		str	r3, [r7, #16]
 262 001a 16E0     		b	.L11
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccH007Pe.s 			page 7


 263              	.L12:
  65:main.c        ****                 moving_median[c][j] = moving_median[c][j+1]; 
 264              		.loc 1 65 0 discriminator 3
 265 001c 3B69     		ldr	r3, [r7, #16]
 266 001e 591C     		adds	r1, r3, #1
 267 0020 4748     		ldr	r0, .L21
 268 0022 7A69     		ldr	r2, [r7, #20]
 269 0024 1346     		mov	r3, r2
 270 0026 DB00     		lsls	r3, r3, #3
 271 0028 9B1A     		subs	r3, r3, r2
 272 002a 0B44     		add	r3, r3, r1
 273 002c 30F81300 		ldrh	r0, [r0, r3, lsl #1]
 274 0030 4349     		ldr	r1, .L21
 275 0032 7A69     		ldr	r2, [r7, #20]
 276 0034 1346     		mov	r3, r2
 277 0036 DB00     		lsls	r3, r3, #3
 278 0038 9B1A     		subs	r3, r3, r2
 279 003a 3A69     		ldr	r2, [r7, #16]
 280 003c 1344     		add	r3, r3, r2
 281 003e 0246     		mov	r2, r0	@ movhi
 282 0040 21F81320 		strh	r2, [r1, r3, lsl #1]	@ movhi
  64:main.c        ****                 moving_median[c][j] = moving_median[c][j+1]; 
 283              		.loc 1 64 0 discriminator 3
 284 0044 3B69     		ldr	r3, [r7, #16]
 285 0046 0133     		adds	r3, r3, #1
 286 0048 3B61     		str	r3, [r7, #16]
 287              	.L11:
  64:main.c        ****                 moving_median[c][j] = moving_median[c][j+1]; 
 288              		.loc 1 64 0 is_stmt 0 discriminator 1
 289 004a 3B69     		ldr	r3, [r7, #16]
 290 004c 052B     		cmp	r3, #5
 291 004e E5DD     		ble	.L12
 292              	.LBE3:
  66:main.c        ****         }
  67:main.c        ****         
  68:main.c        ****         moving_median[c][filter_size-1] = ADC_0_GetResult16();
 293              		.loc 1 68 0 is_stmt 1
 294 0050 FFF7FEFF 		bl	ADC_0_GetResult16
 295 0054 0346     		mov	r3, r0
 296 0056 98B2     		uxth	r0, r3
 297 0058 3949     		ldr	r1, .L21
 298 005a 7A69     		ldr	r2, [r7, #20]
 299 005c 1346     		mov	r3, r2
 300 005e DB00     		lsls	r3, r3, #3
 301 0060 9B1A     		subs	r3, r3, r2
 302 0062 5B00     		lsls	r3, r3, #1
 303 0064 0B44     		add	r3, r3, r1
 304 0066 0C33     		adds	r3, r3, #12
 305 0068 0246     		mov	r2, r0	@ movhi
 306 006a 1A80     		strh	r2, [r3]	@ movhi
  69:main.c        ****         ADC_0_IsEndConversion(ADC_0_WAIT_FOR_RESULT);
 307              		.loc 1 69 0
 308 006c 0020     		movs	r0, #0
 309 006e FFF7FEFF 		bl	ADC_0_IsEndConversion
  70:main.c        ****         moving_median[c][filter_size-1] = ADC_0_GetResult16();
 310              		.loc 1 70 0
 311 0072 FFF7FEFF 		bl	ADC_0_GetResult16
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccH007Pe.s 			page 8


 312 0076 0346     		mov	r3, r0
 313 0078 98B2     		uxth	r0, r3
 314 007a 3149     		ldr	r1, .L21
 315 007c 7A69     		ldr	r2, [r7, #20]
 316 007e 1346     		mov	r3, r2
 317 0080 DB00     		lsls	r3, r3, #3
 318 0082 9B1A     		subs	r3, r3, r2
 319 0084 5B00     		lsls	r3, r3, #1
 320 0086 0B44     		add	r3, r3, r1
 321 0088 0C33     		adds	r3, r3, #12
 322 008a 0246     		mov	r2, r0	@ movhi
 323 008c 1A80     		strh	r2, [r3]	@ movhi
 324              	.LBB4:
  71:main.c        ****         
  72:main.c        ****         for(int j=0;j<filter_size;j++){
 325              		.loc 1 72 0
 326 008e 0023     		movs	r3, #0
 327 0090 FB60     		str	r3, [r7, #12]
 328 0092 0FE0     		b	.L13
 329              	.L14:
  73:main.c        ****                 tempArray[j] = moving_median[c][j]; 
 330              		.loc 1 73 0 discriminator 3
 331 0094 2A49     		ldr	r1, .L21
 332 0096 7A69     		ldr	r2, [r7, #20]
 333 0098 1346     		mov	r3, r2
 334 009a DB00     		lsls	r3, r3, #3
 335 009c 9B1A     		subs	r3, r3, r2
 336 009e FA68     		ldr	r2, [r7, #12]
 337 00a0 1344     		add	r3, r3, r2
 338 00a2 31F81310 		ldrh	r1, [r1, r3, lsl #1]
 339 00a6 274A     		ldr	r2, .L21+4
 340 00a8 FB68     		ldr	r3, [r7, #12]
 341 00aa 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
  72:main.c        ****                 tempArray[j] = moving_median[c][j]; 
 342              		.loc 1 72 0 discriminator 3
 343 00ae FB68     		ldr	r3, [r7, #12]
 344 00b0 0133     		adds	r3, r3, #1
 345 00b2 FB60     		str	r3, [r7, #12]
 346              	.L13:
  72:main.c        ****                 tempArray[j] = moving_median[c][j]; 
 347              		.loc 1 72 0 is_stmt 0 discriminator 1
 348 00b4 FB68     		ldr	r3, [r7, #12]
 349 00b6 062B     		cmp	r3, #6
 350 00b8 ECDD     		ble	.L14
 351              	.LBE4:
 352              	.LBB5:
  74:main.c        ****         }
  75:main.c        ****         for(int i = 0; i < filter_size; i++){                     //Loop for ascending ordering
 353              		.loc 1 75 0 is_stmt 1
 354 00ba 0023     		movs	r3, #0
 355 00bc BB60     		str	r3, [r7, #8]
 356 00be 29E0     		b	.L15
 357              	.L19:
 358              	.LBB6:
  76:main.c        ****         	for (int j = 0; j < filter_size; j++)             //Loop for comparing other values
 359              		.loc 1 76 0
 360 00c0 0023     		movs	r3, #0
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccH007Pe.s 			page 9


 361 00c2 7B60     		str	r3, [r7, #4]
 362 00c4 20E0     		b	.L16
 363              	.L18:
  77:main.c        ****         	{
  78:main.c        ****         		if (tempArray[j] > tempArray[i])                //Comparing other array elements
 364              		.loc 1 78 0
 365 00c6 1F4A     		ldr	r2, .L21+4
 366 00c8 7B68     		ldr	r3, [r7, #4]
 367 00ca 32F81320 		ldrh	r2, [r2, r3, lsl #1]
 368 00ce 1D49     		ldr	r1, .L21+4
 369 00d0 BB68     		ldr	r3, [r7, #8]
 370 00d2 31F81330 		ldrh	r3, [r1, r3, lsl #1]
 371 00d6 9A42     		cmp	r2, r3
 372 00d8 13D9     		bls	.L17
  79:main.c        ****         		{
  80:main.c        ****         			tmp = tempArray[i];         //Using temporary variable for storing last value
 373              		.loc 1 80 0
 374 00da 1A4A     		ldr	r2, .L21+4
 375 00dc BB68     		ldr	r3, [r7, #8]
 376 00de 32F81320 		ldrh	r2, [r2, r3, lsl #1]
 377 00e2 194B     		ldr	r3, .L21+8
 378 00e4 1A80     		strh	r2, [r3]	@ movhi
  81:main.c        ****         			tempArray[i] = tempArray[j];            //replacing value
 379              		.loc 1 81 0
 380 00e6 174A     		ldr	r2, .L21+4
 381 00e8 7B68     		ldr	r3, [r7, #4]
 382 00ea 32F81310 		ldrh	r1, [r2, r3, lsl #1]
 383 00ee 154A     		ldr	r2, .L21+4
 384 00f0 BB68     		ldr	r3, [r7, #8]
 385 00f2 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
  82:main.c        ****         			tempArray[j] = tmp;             //storing last value
 386              		.loc 1 82 0
 387 00f6 144B     		ldr	r3, .L21+8
 388 00f8 1988     		ldrh	r1, [r3]
 389 00fa 124A     		ldr	r2, .L21+4
 390 00fc 7B68     		ldr	r3, [r7, #4]
 391 00fe 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
 392              	.L17:
  76:main.c        ****         	{
 393              		.loc 1 76 0 discriminator 2
 394 0102 7B68     		ldr	r3, [r7, #4]
 395 0104 0133     		adds	r3, r3, #1
 396 0106 7B60     		str	r3, [r7, #4]
 397              	.L16:
  76:main.c        ****         	{
 398              		.loc 1 76 0 is_stmt 0 discriminator 1
 399 0108 7B68     		ldr	r3, [r7, #4]
 400 010a 062B     		cmp	r3, #6
 401 010c DBDD     		ble	.L18
 402              	.LBE6:
  75:main.c        ****         	for (int j = 0; j < filter_size; j++)             //Loop for comparing other values
 403              		.loc 1 75 0 is_stmt 1 discriminator 2
 404 010e BB68     		ldr	r3, [r7, #8]
 405 0110 0133     		adds	r3, r3, #1
 406 0112 BB60     		str	r3, [r7, #8]
 407              	.L15:
  75:main.c        ****         	for (int j = 0; j < filter_size; j++)             //Loop for comparing other values
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccH007Pe.s 			page 10


 408              		.loc 1 75 0 is_stmt 0 discriminator 1
 409 0114 BB68     		ldr	r3, [r7, #8]
 410 0116 062B     		cmp	r3, #6
 411 0118 D2DD     		ble	.L19
 412              	.LBE5:
  83:main.c        ****         		}  
  84:main.c        ****         	}
  85:main.c        ****         }
  86:main.c        ****         adcValue[c] = tempArray[(filter_size-1)/2];
 413              		.loc 1 86 0 is_stmt 1 discriminator 2
 414 011a 0A4B     		ldr	r3, .L21+4
 415 011c D988     		ldrh	r1, [r3, #6]
 416 011e 0B4A     		ldr	r2, .L21+12
 417 0120 7B69     		ldr	r3, [r7, #20]
 418 0122 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
  61:main.c        ****         AMux_0_FastSelect(c);
 419              		.loc 1 61 0 discriminator 2
 420 0126 7B69     		ldr	r3, [r7, #20]
 421 0128 0133     		adds	r3, r3, #1
 422 012a 7B61     		str	r3, [r7, #20]
 423              	.L10:
  61:main.c        ****         AMux_0_FastSelect(c);
 424              		.loc 1 61 0 is_stmt 0 discriminator 1
 425 012c 7B69     		ldr	r3, [r7, #20]
 426 012e 012B     		cmp	r3, #1
 427 0130 7FF76CAF 		ble	.L20
 428              	.LBE2:
  87:main.c        ****     }
  88:main.c        ****     update_median_isr_ClearPending();
 429              		.loc 1 88 0 is_stmt 1
 430 0134 FFF7FEFF 		bl	update_median_isr_ClearPending
  89:main.c        ****     
  90:main.c        **** }
 431              		.loc 1 90 0
 432 0138 00BF     		nop
 433 013a 1837     		adds	r7, r7, #24
 434              		.cfi_def_cfa_offset 8
 435 013c BD46     		mov	sp, r7
 436              		.cfi_def_cfa_register 13
 437              		@ sp needed
 438 013e 80BD     		pop	{r7, pc}
 439              	.L22:
 440              		.align	2
 441              	.L21:
 442 0140 00000000 		.word	moving_median
 443 0144 00000000 		.word	tempArray
 444 0148 00000000 		.word	tmp
 445 014c 00000000 		.word	adcValue
 446              		.cfi_endproc
 447              	.LFE65:
 448              		.size	adc_update, .-adc_update
 449              		.section	.rodata
 450              		.align	2
 451              	.LC0:
 452 0000 25303864 		.ascii	"%08d\011%8.2f\011%8d\000"
 452      0925382E 
 452      32660925 
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccH007Pe.s 			page 11


 452      386400
 453              		.section	.text.RxIsr,"ax",%progbits
 454              		.align	2
 455              		.global	RxIsr
 456              		.thumb
 457              		.thumb_func
 458              		.type	RxIsr, %function
 459              	RxIsr:
 460              	.LFB66:
  91:main.c        **** 
  92:main.c        **** 
  93:main.c        **** CY_ISR(RxIsr)
  94:main.c        **** {
 461              		.loc 1 94 0
 462              		.cfi_startproc
 463              		@ args = 0, pretend = 0, frame = 8
 464              		@ frame_needed = 1, uses_anonymous_args = 0
 465 0000 90B5     		push	{r4, r7, lr}
 466              		.cfi_def_cfa_offset 12
 467              		.cfi_offset 4, -12
 468              		.cfi_offset 7, -8
 469              		.cfi_offset 14, -4
 470 0002 87B0     		sub	sp, sp, #28
 471              		.cfi_def_cfa_offset 40
 472 0004 04AF     		add	r7, sp, #16
 473              		.cfi_def_cfa 7, 24
 474              	.L51:
  95:main.c        ****     uint8 rxStatus;         
  96:main.c        ****     uint8 rxData;           
  97:main.c        ****     
  98:main.c        ****     do
  99:main.c        ****     {
 100:main.c        ****         /* Read receiver status register */
 101:main.c        ****         rxStatus = UART_RXSTATUS_REG;
 475              		.loc 1 101 0
 476 0006 9B4B     		ldr	r3, .L54
 477 0008 1B78     		ldrb	r3, [r3]
 478 000a FB70     		strb	r3, [r7, #3]
 102:main.c        **** 
 103:main.c        ****         if((rxStatus & (UART_RX_STS_BREAK      | UART_RX_STS_PAR_ERROR |
 104:main.c        ****                         UART_RX_STS_STOP_ERROR | UART_RX_STS_OVERRUN)) != 0u)
 479              		.loc 1 104 0
 480 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 481 000e 03F01E03 		and	r3, r3, #30
 103:main.c        ****                         UART_RX_STS_STOP_ERROR | UART_RX_STS_OVERRUN)) != 0u)
 482              		.loc 1 103 0
 483 0012 002B     		cmp	r3, #0
 484 0014 0CD0     		beq	.L24
 105:main.c        ****         {
 106:main.c        ****             /* ERROR handling. */
 107:main.c        ****             errorStatus |= rxStatus & ( UART_RX_STS_BREAK      | UART_RX_STS_PAR_ERROR | 
 485              		.loc 1 107 0
 486 0016 97F90330 		ldrsb	r3, [r7, #3]
 487 001a 03F01E03 		and	r3, r3, #30
 488 001e 5AB2     		sxtb	r2, r3
 489 0020 954B     		ldr	r3, .L54+4
 490 0022 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccH007Pe.s 			page 12


 491 0024 5BB2     		sxtb	r3, r3
 492 0026 1343     		orrs	r3, r3, r2
 493 0028 5BB2     		sxtb	r3, r3
 494 002a DAB2     		uxtb	r2, r3
 495 002c 924B     		ldr	r3, .L54+4
 496 002e 1A70     		strb	r2, [r3]
 497              	.L24:
 108:main.c        ****                                         UART_RX_STS_STOP_ERROR | UART_RX_STS_OVERRUN);
 109:main.c        ****         }
 110:main.c        ****         
 111:main.c        ****         if((rxStatus & UART_RX_STS_FIFO_NOTEMPTY) != 0u)
 498              		.loc 1 111 0
 499 0030 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 500 0032 03F02003 		and	r3, r3, #32
 501 0036 002B     		cmp	r3, #0
 502 0038 00F01181 		beq	.L25
 112:main.c        ****         {
 113:main.c        ****             /* Read data from the RX data register */
 114:main.c        ****             rxData = UART_RXDATA_REG;
 503              		.loc 1 114 0
 504 003c 8F4B     		ldr	r3, .L54+8
 505 003e 1B78     		ldrb	r3, [r3]
 506 0040 BB70     		strb	r3, [r7, #2]
 115:main.c        ****             help[tt] = rxData;
 507              		.loc 1 115 0
 508 0042 8F4B     		ldr	r3, .L54+12
 509 0044 1B68     		ldr	r3, [r3]
 510 0046 8F49     		ldr	r1, .L54+16
 511 0048 BA78     		ldrb	r2, [r7, #2]
 512 004a CA54     		strb	r2, [r1, r3]
 116:main.c        ****             tt++;
 513              		.loc 1 116 0
 514 004c 8C4B     		ldr	r3, .L54+12
 515 004e 1B68     		ldr	r3, [r3]
 516 0050 0133     		adds	r3, r3, #1
 517 0052 8B4A     		ldr	r2, .L54+12
 518 0054 1360     		str	r3, [r2]
 117:main.c        ****             if(tt==99){tt=0;}
 519              		.loc 1 117 0
 520 0056 8A4B     		ldr	r3, .L54+12
 521 0058 1B68     		ldr	r3, [r3]
 522 005a 632B     		cmp	r3, #99
 523 005c 02D1     		bne	.L26
 524              		.loc 1 117 0 is_stmt 0 discriminator 1
 525 005e 884B     		ldr	r3, .L54+12
 526 0060 0022     		movs	r2, #0
 527 0062 1A60     		str	r2, [r3]
 528              	.L26:
 118:main.c        ****             if(rxData=='b' ){start_calib=1;};
 529              		.loc 1 118 0 is_stmt 1
 530 0064 BB78     		ldrb	r3, [r7, #2]	@ zero_extendqisi2
 531 0066 622B     		cmp	r3, #98
 532 0068 02D1     		bne	.L27
 533              		.loc 1 118 0 is_stmt 0 discriminator 1
 534 006a 874B     		ldr	r3, .L54+20
 535 006c 0122     		movs	r2, #1
 536 006e 1A60     		str	r2, [r3]
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccH007Pe.s 			page 13


 537              	.L27:
 119:main.c        ****             switch(data_read_mode)
 538              		.loc 1 119 0 is_stmt 1
 539 0070 864B     		ldr	r3, .L54+24
 540 0072 1B68     		ldr	r3, [r3]
 541 0074 052B     		cmp	r3, #5
 542 0076 00F2F280 		bhi	.L25
 543 007a 01A2     		adr	r2, .L30
 544 007c 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 545              		.p2align 2
 546              	.L30:
 547 0080 99000000 		.word	.L29+1
 548 0084 CF000000 		.word	.L31+1
 549 0088 09010000 		.word	.L32+1
 550 008c 91010000 		.word	.L33+1
 551 0090 D3010000 		.word	.L34+1
 552 0094 15020000 		.word	.L35+1
 553              		.p2align 1
 554              	.L29:
 120:main.c        ****             {
 121:main.c        ****                 case 0:
 122:main.c        ****                     if(rxData=='{' )
 555              		.loc 1 122 0
 556 0098 BB78     		ldrb	r3, [r7, #2]	@ zero_extendqisi2
 557 009a 7B2B     		cmp	r3, #123
 558 009c 40F0DC80 		bne	.L52
 559              	.LBB7:
 123:main.c        ****                     {
 124:main.c        ****                         for(int pp=1;pp<20;pp++){
 560              		.loc 1 124 0
 561 00a0 0123     		movs	r3, #1
 562 00a2 7B60     		str	r3, [r7, #4]
 563 00a4 07E0     		b	.L37
 564              	.L38:
 125:main.c        ****                             temp[pp] = ' ';
 565              		.loc 1 125 0 discriminator 3
 566 00a6 7A4A     		ldr	r2, .L54+28
 567 00a8 7B68     		ldr	r3, [r7, #4]
 568 00aa 1344     		add	r3, r3, r2
 569 00ac 2022     		movs	r2, #32
 570 00ae 1A70     		strb	r2, [r3]
 124:main.c        ****                             temp[pp] = ' ';
 571              		.loc 1 124 0 discriminator 3
 572 00b0 7B68     		ldr	r3, [r7, #4]
 573 00b2 0133     		adds	r3, r3, #1
 574 00b4 7B60     		str	r3, [r7, #4]
 575              	.L37:
 124:main.c        ****                             temp[pp] = ' ';
 576              		.loc 1 124 0 is_stmt 0 discriminator 1
 577 00b6 7B68     		ldr	r3, [r7, #4]
 578 00b8 132B     		cmp	r3, #19
 579 00ba F4DD     		ble	.L38
 580              	.LBE7:
 126:main.c        ****                         }
 127:main.c        ****                         temp[0] = '\0';
 581              		.loc 1 127 0 is_stmt 1
 582 00bc 744B     		ldr	r3, .L54+28
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccH007Pe.s 			page 14


 583 00be 0022     		movs	r2, #0
 584 00c0 1A70     		strb	r2, [r3]
 128:main.c        ****                         data_read_mode++;
 585              		.loc 1 128 0
 586 00c2 724B     		ldr	r3, .L54+24
 587 00c4 1B68     		ldr	r3, [r3]
 588 00c6 0133     		adds	r3, r3, #1
 589 00c8 704A     		ldr	r2, .L54+24
 590 00ca 1360     		str	r3, [r2]
 129:main.c        ****                     }
 130:main.c        ****                 break;
 591              		.loc 1 130 0
 592 00cc C4E0     		b	.L52
 593              	.L31:
 131:main.c        ****                 case 1:
 132:main.c        ****                     if(rxData=='x'){
 594              		.loc 1 132 0
 595 00ce BB78     		ldrb	r3, [r7, #2]	@ zero_extendqisi2
 596 00d0 782B     		cmp	r3, #120
 597 00d2 03D1     		bne	.L39
 133:main.c        ****                         data_read_mode = 2;}
 598              		.loc 1 133 0
 599 00d4 6D4B     		ldr	r3, .L54+24
 600 00d6 0222     		movs	r2, #2
 601 00d8 1A60     		str	r2, [r3]
 134:main.c        ****                     else if(rxData=='p'){
 135:main.c        ****                         data_read_mode = 3;}
 136:main.c        ****                     else if(rxData=='i'){
 137:main.c        ****                         data_read_mode = 4;}
 138:main.c        ****                     else if(rxData=='d'){
 139:main.c        ****                         data_read_mode = 5;}
 140:main.c        ****                 break;
 602              		.loc 1 140 0
 603 00da BFE0     		b	.L53
 604              	.L39:
 134:main.c        ****                     else if(rxData=='p'){
 605              		.loc 1 134 0
 606 00dc BB78     		ldrb	r3, [r7, #2]	@ zero_extendqisi2
 607 00de 702B     		cmp	r3, #112
 608 00e0 03D1     		bne	.L41
 135:main.c        ****                     else if(rxData=='i'){
 609              		.loc 1 135 0
 610 00e2 6A4B     		ldr	r3, .L54+24
 611 00e4 0322     		movs	r2, #3
 612 00e6 1A60     		str	r2, [r3]
 613              		.loc 1 140 0
 614 00e8 B8E0     		b	.L53
 615              	.L41:
 136:main.c        ****                         data_read_mode = 4;}
 616              		.loc 1 136 0
 617 00ea BB78     		ldrb	r3, [r7, #2]	@ zero_extendqisi2
 618 00ec 692B     		cmp	r3, #105
 619 00ee 03D1     		bne	.L42
 137:main.c        ****                     else if(rxData=='d'){
 620              		.loc 1 137 0
 621 00f0 664B     		ldr	r3, .L54+24
 622 00f2 0422     		movs	r2, #4
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccH007Pe.s 			page 15


 623 00f4 1A60     		str	r2, [r3]
 624              		.loc 1 140 0
 625 00f6 B1E0     		b	.L53
 626              	.L42:
 138:main.c        ****                         data_read_mode = 5;}
 627              		.loc 1 138 0
 628 00f8 BB78     		ldrb	r3, [r7, #2]	@ zero_extendqisi2
 629 00fa 642B     		cmp	r3, #100
 630 00fc 40F0AE80 		bne	.L53
 139:main.c        ****                 break;
 631              		.loc 1 139 0
 632 0100 624B     		ldr	r3, .L54+24
 633 0102 0522     		movs	r2, #5
 634 0104 1A60     		str	r2, [r3]
 635              		.loc 1 140 0
 636 0106 A9E0     		b	.L53
 637              	.L32:
 141:main.c        ****                 case 2: //x
 142:main.c        ****                     if(rxData != '}'){
 638              		.loc 1 142 0
 639 0108 BB78     		ldrb	r3, [r7, #2]	@ zero_extendqisi2
 640 010a 7D2B     		cmp	r3, #125
 641 010c 0AD0     		beq	.L43
 143:main.c        ****                         temp[nn] = rxData;
 642              		.loc 1 143 0
 643 010e 614B     		ldr	r3, .L54+32
 644 0110 1B68     		ldr	r3, [r3]
 645 0112 5F49     		ldr	r1, .L54+28
 646 0114 BA78     		ldrb	r2, [r7, #2]
 647 0116 CA54     		strb	r2, [r1, r3]
 144:main.c        ****                         nn++;
 648              		.loc 1 144 0
 649 0118 5E4B     		ldr	r3, .L54+32
 650 011a 1B68     		ldr	r3, [r3]
 651 011c 0133     		adds	r3, r3, #1
 652 011e 5D4A     		ldr	r2, .L54+32
 653 0120 1360     		str	r3, [r2]
 145:main.c        ****                     }
 146:main.c        ****                     else {
 147:main.c        ****                         cyl_no = strtol(&temp[0],(char **)NULL, 10);
 148:main.c        ****                         
 149:main.c        ****                         new_pos[cyl_no] = (int) strtol(temp+1, (char **)NULL, 10);
 150:main.c        ****                         new_pos_set[cyl_no] = 1;
 151:main.c        ****                         nn=0; 
 152:main.c        ****                     
 153:main.c        ****                         sprintf(sendValue,"%08d\t%8.2f\t%8d",adcValue[0],err[0],pulse_temp[0]);
 154:main.c        ****                         UART_PutString(sendValue);
 155:main.c        ****                         temp[0] = '\0';
 156:main.c        ****                         
 157:main.c        ****                         data_read_mode = 0;
 158:main.c        ****                     }
 159:main.c        ****                   
 160:main.c        ****                 break;
 654              		.loc 1 160 0
 655 0122 9CE0     		b	.L25
 656              	.L43:
 147:main.c        ****                         
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccH007Pe.s 			page 16


 657              		.loc 1 147 0
 658 0124 0A22     		movs	r2, #10
 659 0126 0021     		movs	r1, #0
 660 0128 5948     		ldr	r0, .L54+28
 661 012a FFF7FEFF 		bl	strtol
 662 012e 0246     		mov	r2, r0
 663 0130 594B     		ldr	r3, .L54+36
 664 0132 1A60     		str	r2, [r3]
 149:main.c        ****                         new_pos_set[cyl_no] = 1;
 665              		.loc 1 149 0
 666 0134 584B     		ldr	r3, .L54+36
 667 0136 1C68     		ldr	r4, [r3]
 668 0138 584B     		ldr	r3, .L54+40
 669 013a 0A22     		movs	r2, #10
 670 013c 0021     		movs	r1, #0
 671 013e 1846     		mov	r0, r3
 672 0140 FFF7FEFF 		bl	strtol
 673 0144 0246     		mov	r2, r0
 674 0146 564B     		ldr	r3, .L54+44
 675 0148 43F82420 		str	r2, [r3, r4, lsl #2]
 150:main.c        ****                         nn=0; 
 676              		.loc 1 150 0
 677 014c 524B     		ldr	r3, .L54+36
 678 014e 1B68     		ldr	r3, [r3]
 679 0150 544A     		ldr	r2, .L54+48
 680 0152 0121     		movs	r1, #1
 681 0154 42F82310 		str	r1, [r2, r3, lsl #2]
 151:main.c        ****                     
 682              		.loc 1 151 0
 683 0158 4E4B     		ldr	r3, .L54+32
 684 015a 0022     		movs	r2, #0
 685 015c 1A60     		str	r2, [r3]
 153:main.c        ****                         UART_PutString(sendValue);
 686              		.loc 1 153 0
 687 015e 524B     		ldr	r3, .L54+52
 688 0160 1B88     		ldrh	r3, [r3]
 689 0162 1946     		mov	r1, r3
 690 0164 514B     		ldr	r3, .L54+56
 691 0166 18CB     		ldmia	r3, {r3-r4}
 692 0168 514A     		ldr	r2, .L54+60
 693 016a 1268     		ldr	r2, [r2]
 694 016c 0292     		str	r2, [sp, #8]
 695 016e CDE90034 		strd	r3, [sp]
 696 0172 0A46     		mov	r2, r1
 697 0174 4F49     		ldr	r1, .L54+64
 698 0176 5048     		ldr	r0, .L54+68
 699 0178 FFF7FEFF 		bl	sprintf
 154:main.c        ****                         temp[0] = '\0';
 700              		.loc 1 154 0
 701 017c 4E48     		ldr	r0, .L54+68
 702 017e FFF7FEFF 		bl	UART_PutString
 155:main.c        ****                         
 703              		.loc 1 155 0
 704 0182 434B     		ldr	r3, .L54+28
 705 0184 0022     		movs	r2, #0
 706 0186 1A70     		strb	r2, [r3]
 157:main.c        ****                     }
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccH007Pe.s 			page 17


 707              		.loc 1 157 0
 708 0188 404B     		ldr	r3, .L54+24
 709 018a 0022     		movs	r2, #0
 710 018c 1A60     		str	r2, [r3]
 711              		.loc 1 160 0
 712 018e 66E0     		b	.L25
 713              	.L33:
 161:main.c        ****                 case 3: //p
 162:main.c        ****                     if(rxData != '}'){
 714              		.loc 1 162 0
 715 0190 BB78     		ldrb	r3, [r7, #2]	@ zero_extendqisi2
 716 0192 7D2B     		cmp	r3, #125
 717 0194 0AD0     		beq	.L45
 163:main.c        ****                         temp[nn] = rxData;
 718              		.loc 1 163 0
 719 0196 3F4B     		ldr	r3, .L54+32
 720 0198 1B68     		ldr	r3, [r3]
 721 019a 3D49     		ldr	r1, .L54+28
 722 019c BA78     		ldrb	r2, [r7, #2]
 723 019e CA54     		strb	r2, [r1, r3]
 164:main.c        ****                         nn++;
 724              		.loc 1 164 0
 725 01a0 3C4B     		ldr	r3, .L54+32
 726 01a2 1B68     		ldr	r3, [r3]
 727 01a4 0133     		adds	r3, r3, #1
 728 01a6 3B4A     		ldr	r2, .L54+32
 729 01a8 1360     		str	r3, [r2]
 165:main.c        ****                     }
 166:main.c        ****                     else {
 167:main.c        ****                         pid[0] = strtod(temp, NULL);
 168:main.c        ****                         nn=0;
 169:main.c        ****                         temp[0] = '\0';
 170:main.c        ****                         data_read_mode = 0;
 171:main.c        ****                     }
 172:main.c        ****                     
 173:main.c        ****                 break;
 730              		.loc 1 173 0
 731 01aa 58E0     		b	.L25
 732              	.L45:
 167:main.c        ****                         nn=0;
 733              		.loc 1 167 0
 734 01ac 0021     		movs	r1, #0
 735 01ae 3848     		ldr	r0, .L54+28
 736 01b0 FFF7FEFF 		bl	strtod
 737 01b4 0346     		mov	r3, r0
 738 01b6 0C46     		mov	r4, r1
 739 01b8 404A     		ldr	r2, .L54+72
 740 01ba C2E90034 		strd	r3, [r2]
 168:main.c        ****                         temp[0] = '\0';
 741              		.loc 1 168 0
 742 01be 354B     		ldr	r3, .L54+32
 743 01c0 0022     		movs	r2, #0
 744 01c2 1A60     		str	r2, [r3]
 169:main.c        ****                         data_read_mode = 0;
 745              		.loc 1 169 0
 746 01c4 324B     		ldr	r3, .L54+28
 747 01c6 0022     		movs	r2, #0
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccH007Pe.s 			page 18


 748 01c8 1A70     		strb	r2, [r3]
 170:main.c        ****                     }
 749              		.loc 1 170 0
 750 01ca 304B     		ldr	r3, .L54+24
 751 01cc 0022     		movs	r2, #0
 752 01ce 1A60     		str	r2, [r3]
 753              		.loc 1 173 0
 754 01d0 45E0     		b	.L25
 755              	.L34:
 174:main.c        ****                 case 4: //i
 175:main.c        ****                     if(rxData != '}'){
 756              		.loc 1 175 0
 757 01d2 BB78     		ldrb	r3, [r7, #2]	@ zero_extendqisi2
 758 01d4 7D2B     		cmp	r3, #125
 759 01d6 0AD0     		beq	.L47
 176:main.c        ****                         temp[nn] = rxData;
 760              		.loc 1 176 0
 761 01d8 2E4B     		ldr	r3, .L54+32
 762 01da 1B68     		ldr	r3, [r3]
 763 01dc 2C49     		ldr	r1, .L54+28
 764 01de BA78     		ldrb	r2, [r7, #2]
 765 01e0 CA54     		strb	r2, [r1, r3]
 177:main.c        ****                         nn++;
 766              		.loc 1 177 0
 767 01e2 2C4B     		ldr	r3, .L54+32
 768 01e4 1B68     		ldr	r3, [r3]
 769 01e6 0133     		adds	r3, r3, #1
 770 01e8 2A4A     		ldr	r2, .L54+32
 771 01ea 1360     		str	r3, [r2]
 178:main.c        ****                     }
 179:main.c        ****                     else {
 180:main.c        ****                         pid[1] = strtod(temp, NULL);
 181:main.c        ****                         nn=0;
 182:main.c        ****                         temp[0] = '\0';
 183:main.c        ****                         data_read_mode = 0;
 184:main.c        ****                     }
 185:main.c        ****                     
 186:main.c        ****                 break;
 772              		.loc 1 186 0
 773 01ec 37E0     		b	.L25
 774              	.L47:
 180:main.c        ****                         nn=0;
 775              		.loc 1 180 0
 776 01ee 0021     		movs	r1, #0
 777 01f0 2748     		ldr	r0, .L54+28
 778 01f2 FFF7FEFF 		bl	strtod
 779 01f6 0346     		mov	r3, r0
 780 01f8 0C46     		mov	r4, r1
 781 01fa 304A     		ldr	r2, .L54+72
 782 01fc C2E90234 		strd	r3, [r2, #8]
 181:main.c        ****                         temp[0] = '\0';
 783              		.loc 1 181 0
 784 0200 244B     		ldr	r3, .L54+32
 785 0202 0022     		movs	r2, #0
 786 0204 1A60     		str	r2, [r3]
 182:main.c        ****                         data_read_mode = 0;
 787              		.loc 1 182 0
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccH007Pe.s 			page 19


 788 0206 224B     		ldr	r3, .L54+28
 789 0208 0022     		movs	r2, #0
 790 020a 1A70     		strb	r2, [r3]
 183:main.c        ****                     }
 791              		.loc 1 183 0
 792 020c 1F4B     		ldr	r3, .L54+24
 793 020e 0022     		movs	r2, #0
 794 0210 1A60     		str	r2, [r3]
 795              		.loc 1 186 0
 796 0212 24E0     		b	.L25
 797              	.L35:
 187:main.c        ****                 case 5: //d
 188:main.c        ****                     if(rxData != '}'){
 798              		.loc 1 188 0
 799 0214 BB78     		ldrb	r3, [r7, #2]	@ zero_extendqisi2
 800 0216 7D2B     		cmp	r3, #125
 801 0218 0AD0     		beq	.L49
 189:main.c        ****                         temp[nn] = rxData;
 802              		.loc 1 189 0
 803 021a 1E4B     		ldr	r3, .L54+32
 804 021c 1B68     		ldr	r3, [r3]
 805 021e 1C49     		ldr	r1, .L54+28
 806 0220 BA78     		ldrb	r2, [r7, #2]
 807 0222 CA54     		strb	r2, [r1, r3]
 190:main.c        ****                         nn++;
 808              		.loc 1 190 0
 809 0224 1B4B     		ldr	r3, .L54+32
 810 0226 1B68     		ldr	r3, [r3]
 811 0228 0133     		adds	r3, r3, #1
 812 022a 1A4A     		ldr	r2, .L54+32
 813 022c 1360     		str	r3, [r2]
 191:main.c        ****                     }
 192:main.c        ****                     else {
 193:main.c        ****                         pid[2] = strtod(temp, NULL);
 194:main.c        ****                         nn=0;
 195:main.c        ****                         temp[0] = '\0';
 196:main.c        ****                         data_read_mode = 0;
 197:main.c        ****                     }
 198:main.c        ****                     
 199:main.c        ****                 break;
 814              		.loc 1 199 0
 815 022e 16E0     		b	.L25
 816              	.L49:
 193:main.c        ****                         nn=0;
 817              		.loc 1 193 0
 818 0230 0021     		movs	r1, #0
 819 0232 1748     		ldr	r0, .L54+28
 820 0234 FFF7FEFF 		bl	strtod
 821 0238 0346     		mov	r3, r0
 822 023a 0C46     		mov	r4, r1
 823 023c 1F4A     		ldr	r2, .L54+72
 824 023e C2E90434 		strd	r3, [r2, #16]
 194:main.c        ****                         temp[0] = '\0';
 825              		.loc 1 194 0
 826 0242 144B     		ldr	r3, .L54+32
 827 0244 0022     		movs	r2, #0
 828 0246 1A60     		str	r2, [r3]
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccH007Pe.s 			page 20


 195:main.c        ****                         data_read_mode = 0;
 829              		.loc 1 195 0
 830 0248 114B     		ldr	r3, .L54+28
 831 024a 0022     		movs	r2, #0
 832 024c 1A70     		strb	r2, [r3]
 196:main.c        ****                     }
 833              		.loc 1 196 0
 834 024e 0F4B     		ldr	r3, .L54+24
 835 0250 0022     		movs	r2, #0
 836 0252 1A60     		str	r2, [r3]
 837              		.loc 1 199 0
 838 0254 00BF     		nop
 839 0256 02E0     		b	.L25
 840              	.L52:
 130:main.c        ****                 case 1:
 841              		.loc 1 130 0
 842 0258 00BF     		nop
 843 025a 00E0     		b	.L25
 844              	.L53:
 140:main.c        ****                 case 2: //x
 845              		.loc 1 140 0
 846 025c 00BF     		nop
 847              	.L25:
 200:main.c        ****             }
 201:main.c        ****             
 202:main.c        ****             if(errorStatus == 0u)
 203:main.c        ****             {
 204:main.c        ****                 /* Send data backward */
 205:main.c        ****                 //UART_TXDATA_REG = rxData;
 206:main.c        ****             }
 207:main.c        ****         }
 208:main.c        ****     }while((rxStatus & UART_RX_STS_FIFO_NOTEMPTY) != 0u);
 848              		.loc 1 208 0
 849 025e FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 850 0260 03F02003 		and	r3, r3, #32
 851 0264 002B     		cmp	r3, #0
 852 0266 7FF4CEAE 		bne	.L51
 209:main.c        **** 
 210:main.c        **** }
 853              		.loc 1 210 0
 854 026a 00BF     		nop
 855 026c 0C37     		adds	r7, r7, #12
 856              		.cfi_def_cfa_offset 12
 857 026e BD46     		mov	sp, r7
 858              		.cfi_def_cfa_register 13
 859              		@ sp needed
 860 0270 90BD     		pop	{r4, r7, pc}
 861              	.L55:
 862 0272 00BF     		.align	2
 863              	.L54:
 864 0274 6A650040 		.word	1073767786
 865 0278 00000000 		.word	errorStatus
 866 027c 4A650040 		.word	1073767754
 867 0280 00000000 		.word	tt
 868 0284 00000000 		.word	help
 869 0288 00000000 		.word	start_calib
 870 028c 00000000 		.word	data_read_mode
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccH007Pe.s 			page 21


 871 0290 00000000 		.word	temp
 872 0294 00000000 		.word	nn
 873 0298 00000000 		.word	cyl_no
 874 029c 01000000 		.word	temp+1
 875 02a0 00000000 		.word	new_pos
 876 02a4 00000000 		.word	new_pos_set
 877 02a8 00000000 		.word	adcValue
 878 02ac 00000000 		.word	err
 879 02b0 00000000 		.word	pulse_temp
 880 02b4 00000000 		.word	.LC0
 881 02b8 00000000 		.word	sendValue
 882 02bc 00000000 		.word	pid
 883              		.cfi_endproc
 884              	.LFE66:
 885              		.size	RxIsr, .-RxIsr
 886              		.global	led_switch
 887              		.bss
 888              		.align	2
 889              		.type	led_switch, %object
 890              		.size	led_switch, 4
 891              	led_switch:
 892 007c 00000000 		.space	4
 893              		.section	.rodata
 894 000f 00       		.align	2
 895              	.LC1:
 896 0010 25303864 		.ascii	"%08d\011%08.0f\011%8d\000"
 896      09253038 
 896      2E306609 
 896      25386400 
 897              		.global	__aeabi_i2d
 898              		.global	__aeabi_dsub
 899              		.global	__aeabi_dadd
 900              		.global	__aeabi_dmul
 901              		.global	__aeabi_ddiv
 902              		.global	__aeabi_d2iz
 903              		.global	__aeabi_ui2d
 904              		.section	.text.main,"ax",%progbits
 905              		.align	2
 906              		.global	main
 907              		.thumb
 908              		.thumb_func
 909              		.type	main, %function
 910              	main:
 911              	.LFB67:
 211:main.c        ****     
 212:main.c        **** 
 213:main.c        **** /*******************************************************************************
 214:main.c        **** * Function Name: main()
 215:main.c        **** ********************************************************************************
 216:main.c        **** * Summary:
 217:main.c        **** *  Main function for the project.
 218:main.c        **** *
 219:main.c        **** * Theory:
 220:main.c        **** *  The function starts UART and interrupt components.
 221:main.c        **** *
 222:main.c        **** *******************************************************************************/
 223:main.c        **** int led_switch = 0;
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccH007Pe.s 			page 22


 224:main.c        **** int main()
 225:main.c        **** {
 912              		.loc 1 225 0
 913              		.cfi_startproc
 914              		@ args = 0, pretend = 0, frame = 24
 915              		@ frame_needed = 1, uses_anonymous_args = 0
 916 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 917              		.cfi_def_cfa_offset 20
 918              		.cfi_offset 4, -20
 919              		.cfi_offset 5, -16
 920              		.cfi_offset 6, -12
 921              		.cfi_offset 7, -8
 922              		.cfi_offset 14, -4
 923 0002 8BB0     		sub	sp, sp, #44
 924              		.cfi_def_cfa_offset 64
 925 0004 04AF     		add	r7, sp, #16
 926              		.cfi_def_cfa 7, 48
 226:main.c        ****     
 227:main.c        ****     //PWM variables
 228:main.c        ****     PWM_1_Start();
 927              		.loc 1 228 0
 928 0006 FFF7FEFF 		bl	PWM_1_Start
 229:main.c        ****     ADC_0_Start();
 929              		.loc 1 229 0
 930 000a FFF7FEFF 		bl	ADC_0_Start
 230:main.c        ****     ADC_0_StartConvert();
 931              		.loc 1 230 0
 932 000e FFF7FEFF 		bl	ADC_0_StartConvert
 231:main.c        ****     
 232:main.c        ****     UART_Start();           /* Start communication component */
 933              		.loc 1 232 0
 934 0012 FFF7FEFF 		bl	UART_Start
 233:main.c        **** 
 234:main.c        **** #if(INTERRUPT_CODE_ENABLED == ENABLED)
 235:main.c        ****     isr_rx_StartEx(RxIsr);
 935              		.loc 1 235 0
 936 0016 9048     		ldr	r0, .L67+8
 937 0018 FFF7FEFF 		bl	isr_rx_StartEx
 236:main.c        ****     update_median_isr_StartEx(adc_update);
 938              		.loc 1 236 0
 939 001c 8F48     		ldr	r0, .L67+12
 940 001e FFF7FEFF 		bl	update_median_isr_StartEx
 237:main.c        **** #endif /* INTERRUPT_CODE_ENABLED == ENABLED */
 238:main.c        ****     
 239:main.c        ****     CyGlobalIntEnable;      /* Enable global interrupts. */
 941              		.loc 1 239 0
 942              		.syntax unified
 943              	@ 239 "main.c" 1
 944 0022 62B6     		CPSIE   i
 945              	@ 0 "" 2
 240:main.c        ****     
 241:main.c        ****     double dt;
 242:main.c        ****     double time;
 243:main.c        ****     
 244:main.c        ****     dt = 0.025; //initialised dt, corrected by timer  below
 946              		.loc 1 244 0
 947              		.thumb
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccH007Pe.s 			page 23


 948              		.syntax unified
 949 0024 8AA4     		adr	r4, .L67
 950 0026 D4E90034 		ldrd	r3, [r4]
 951 002a C7E90434 		strd	r3, [r7, #16]
 245:main.c        **** 
 246:main.c        ****     sprintf(sendValue,"%08d\t%08.0f\t%8d",adcValue[0],err[0],pulse_temp[0]);
 952              		.loc 1 246 0
 953 002e 8C4B     		ldr	r3, .L67+16
 954 0030 1B88     		ldrh	r3, [r3]
 955 0032 1946     		mov	r1, r3
 956 0034 8B4B     		ldr	r3, .L67+20
 957 0036 18CB     		ldmia	r3, {r3-r4}
 958 0038 8B4A     		ldr	r2, .L67+24
 959 003a 1268     		ldr	r2, [r2]
 960 003c 0292     		str	r2, [sp, #8]
 961 003e CDE90034 		strd	r3, [sp]
 962 0042 0A46     		mov	r2, r1
 963 0044 8949     		ldr	r1, .L67+28
 964 0046 8A48     		ldr	r0, .L67+32
 965 0048 FFF7FEFF 		bl	sprintf
 247:main.c        ****     UART_PutString(sendValue);
 966              		.loc 1 247 0
 967 004c 8848     		ldr	r0, .L67+32
 968 004e FFF7FEFF 		bl	UART_PutString
 248:main.c        ****     
 249:main.c        ****     median_timer_Start();
 969              		.loc 1 249 0
 970 0052 FFF7FEFF 		bl	median_timer_Start
 250:main.c        ****     Timer_1_Start();
 971              		.loc 1 250 0
 972 0056 FFF7FEFF 		bl	Timer_1_Start
 973              	.L66:
 251:main.c        ****     for(;;)
 252:main.c        ****     {
 253:main.c        ****         Timer_1_WriteCounter(65535);
 974              		.loc 1 253 0
 975 005a 4FF6FF70 		movw	r0, #65535
 976 005e FFF7FEFF 		bl	Timer_1_WriteCounter
 977              	.LBB8:
 254:main.c        **** 
 255:main.c        ****         /* START PID CODE */
 256:main.c        ****         for(int cyl = 0;cyl<CYL_NO;cyl++){
 978              		.loc 1 256 0
 979 0062 0023     		movs	r3, #0
 980 0064 FB60     		str	r3, [r7, #12]
 981 0066 31E1     		b	.L57
 982              	.L65:
 257:main.c        ****             if(new_pos_set[cyl]){
 983              		.loc 1 257 0
 984 0068 824A     		ldr	r2, .L67+36
 985 006a FB68     		ldr	r3, [r7, #12]
 986 006c 52F82330 		ldr	r3, [r2, r3, lsl #2]
 987 0070 002B     		cmp	r3, #0
 988 0072 0CD0     		beq	.L58
 258:main.c        ****                 pos[cyl] = new_pos[cyl];
 989              		.loc 1 258 0
 990 0074 804A     		ldr	r2, .L67+40
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccH007Pe.s 			page 24


 991 0076 FB68     		ldr	r3, [r7, #12]
 992 0078 52F82320 		ldr	r2, [r2, r3, lsl #2]
 993 007c 7F49     		ldr	r1, .L67+44
 994 007e FB68     		ldr	r3, [r7, #12]
 995 0080 41F82320 		str	r2, [r1, r3, lsl #2]
 259:main.c        ****                 new_pos_set[cyl] = 0;
 996              		.loc 1 259 0
 997 0084 7B4A     		ldr	r2, .L67+36
 998 0086 FB68     		ldr	r3, [r7, #12]
 999 0088 0021     		movs	r1, #0
 1000 008a 42F82310 		str	r1, [r2, r3, lsl #2]
 1001              	.L58:
 260:main.c        ****             }
 261:main.c        ****             
 262:main.c        ****             err[cyl] = -pos[cyl] + adcValue[cyl];
 1002              		.loc 1 262 0
 1003 008e 744A     		ldr	r2, .L67+16
 1004 0090 FB68     		ldr	r3, [r7, #12]
 1005 0092 32F81330 		ldrh	r3, [r2, r3, lsl #1]
 1006 0096 1946     		mov	r1, r3
 1007 0098 784A     		ldr	r2, .L67+44
 1008 009a FB68     		ldr	r3, [r7, #12]
 1009 009c 52F82330 		ldr	r3, [r2, r3, lsl #2]
 1010 00a0 CB1A     		subs	r3, r1, r3
 1011 00a2 1846     		mov	r0, r3
 1012 00a4 FFF7FEFF 		bl	__aeabi_i2d
 1013 00a8 0346     		mov	r3, r0
 1014 00aa 0C46     		mov	r4, r1
 1015 00ac 6D49     		ldr	r1, .L67+20
 1016 00ae FA68     		ldr	r2, [r7, #12]
 1017 00b0 D200     		lsls	r2, r2, #3
 1018 00b2 0A44     		add	r2, r2, r1
 1019 00b4 C2E90034 		strd	r3, [r2]
 263:main.c        ****             der[cyl] = err[cyl] - prev_err[cyl];
 1020              		.loc 1 263 0
 1021 00b8 6A4A     		ldr	r2, .L67+20
 1022 00ba FB68     		ldr	r3, [r7, #12]
 1023 00bc DB00     		lsls	r3, r3, #3
 1024 00be 1344     		add	r3, r3, r2
 1025 00c0 D3E90001 		ldrd	r0, [r3]
 1026 00c4 6E4A     		ldr	r2, .L67+48
 1027 00c6 FB68     		ldr	r3, [r7, #12]
 1028 00c8 DB00     		lsls	r3, r3, #3
 1029 00ca 1344     		add	r3, r3, r2
 1030 00cc 18CB     		ldmia	r3, {r3-r4}
 1031 00ce 1A46     		mov	r2, r3
 1032 00d0 2346     		mov	r3, r4
 1033 00d2 FFF7FEFF 		bl	__aeabi_dsub
 1034 00d6 0346     		mov	r3, r0
 1035 00d8 0C46     		mov	r4, r1
 1036 00da 6A49     		ldr	r1, .L67+52
 1037 00dc FA68     		ldr	r2, [r7, #12]
 1038 00de D200     		lsls	r2, r2, #3
 1039 00e0 0A44     		add	r2, r2, r1
 1040 00e2 C2E90034 		strd	r3, [r2]
 264:main.c        ****             pid_integral[cyl] = err[cyl] + pid_integral[cyl];
 1041              		.loc 1 264 0
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccH007Pe.s 			page 25


 1042 00e6 5F4A     		ldr	r2, .L67+20
 1043 00e8 FB68     		ldr	r3, [r7, #12]
 1044 00ea DB00     		lsls	r3, r3, #3
 1045 00ec 1344     		add	r3, r3, r2
 1046 00ee D3E90001 		ldrd	r0, [r3]
 1047 00f2 654A     		ldr	r2, .L67+56
 1048 00f4 FB68     		ldr	r3, [r7, #12]
 1049 00f6 DB00     		lsls	r3, r3, #3
 1050 00f8 1344     		add	r3, r3, r2
 1051 00fa 18CB     		ldmia	r3, {r3-r4}
 1052 00fc 1A46     		mov	r2, r3
 1053 00fe 2346     		mov	r3, r4
 1054 0100 FFF7FEFF 		bl	__aeabi_dadd
 1055 0104 0346     		mov	r3, r0
 1056 0106 0C46     		mov	r4, r1
 1057 0108 5F49     		ldr	r1, .L67+56
 1058 010a FA68     		ldr	r2, [r7, #12]
 1059 010c D200     		lsls	r2, r2, #3
 1060 010e 0A44     		add	r2, r2, r1
 1061 0110 C2E90034 		strd	r3, [r2]
 265:main.c        ****             pulse_temp[cyl] = pid[0] * err[cyl] + ( pid[1] * pid_integral[cyl] * dt) + ( pid[2] * d
 1062              		.loc 1 265 0
 1063 0114 5D4B     		ldr	r3, .L67+60
 1064 0116 D3E90001 		ldrd	r0, [r3]
 1065 011a 524A     		ldr	r2, .L67+20
 1066 011c FB68     		ldr	r3, [r7, #12]
 1067 011e DB00     		lsls	r3, r3, #3
 1068 0120 1344     		add	r3, r3, r2
 1069 0122 18CB     		ldmia	r3, {r3-r4}
 1070 0124 1A46     		mov	r2, r3
 1071 0126 2346     		mov	r3, r4
 1072 0128 FFF7FEFF 		bl	__aeabi_dmul
 1073 012c 0346     		mov	r3, r0
 1074 012e 0C46     		mov	r4, r1
 1075 0130 1D46     		mov	r5, r3
 1076 0132 2646     		mov	r6, r4
 1077 0134 554B     		ldr	r3, .L67+60
 1078 0136 D3E90201 		ldrd	r0, [r3, #8]
 1079 013a 534A     		ldr	r2, .L67+56
 1080 013c FB68     		ldr	r3, [r7, #12]
 1081 013e DB00     		lsls	r3, r3, #3
 1082 0140 1344     		add	r3, r3, r2
 1083 0142 18CB     		ldmia	r3, {r3-r4}
 1084 0144 1A46     		mov	r2, r3
 1085 0146 2346     		mov	r3, r4
 1086 0148 FFF7FEFF 		bl	__aeabi_dmul
 1087 014c 0346     		mov	r3, r0
 1088 014e 0C46     		mov	r4, r1
 1089 0150 1846     		mov	r0, r3
 1090 0152 2146     		mov	r1, r4
 1091 0154 D7E90423 		ldrd	r2, [r7, #16]
 1092 0158 FFF7FEFF 		bl	__aeabi_dmul
 1093 015c 0346     		mov	r3, r0
 1094 015e 0C46     		mov	r4, r1
 1095 0160 1A46     		mov	r2, r3
 1096 0162 2346     		mov	r3, r4
 1097 0164 2846     		mov	r0, r5
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccH007Pe.s 			page 26


 1098 0166 3146     		mov	r1, r6
 1099 0168 FFF7FEFF 		bl	__aeabi_dadd
 1100 016c 0346     		mov	r3, r0
 1101 016e 0C46     		mov	r4, r1
 1102 0170 1D46     		mov	r5, r3
 1103 0172 2646     		mov	r6, r4
 1104 0174 454B     		ldr	r3, .L67+60
 1105 0176 D3E90401 		ldrd	r0, [r3, #16]
 1106 017a 424A     		ldr	r2, .L67+52
 1107 017c FB68     		ldr	r3, [r7, #12]
 1108 017e DB00     		lsls	r3, r3, #3
 1109 0180 1344     		add	r3, r3, r2
 1110 0182 18CB     		ldmia	r3, {r3-r4}
 1111 0184 1A46     		mov	r2, r3
 1112 0186 2346     		mov	r3, r4
 1113 0188 FFF7FEFF 		bl	__aeabi_dmul
 1114 018c 0346     		mov	r3, r0
 1115 018e 0C46     		mov	r4, r1
 1116 0190 1846     		mov	r0, r3
 1117 0192 2146     		mov	r1, r4
 1118 0194 D7E90423 		ldrd	r2, [r7, #16]
 1119 0198 FFF7FEFF 		bl	__aeabi_ddiv
 1120 019c 0346     		mov	r3, r0
 1121 019e 0C46     		mov	r4, r1
 1122 01a0 1A46     		mov	r2, r3
 1123 01a2 2346     		mov	r3, r4
 1124 01a4 2846     		mov	r0, r5
 1125 01a6 3146     		mov	r1, r6
 1126 01a8 FFF7FEFF 		bl	__aeabi_dadd
 1127 01ac 0346     		mov	r3, r0
 1128 01ae 0C46     		mov	r4, r1
 1129 01b0 1846     		mov	r0, r3
 1130 01b2 2146     		mov	r1, r4
 1131 01b4 FFF7FEFF 		bl	__aeabi_d2iz
 1132 01b8 0146     		mov	r1, r0
 1133 01ba 2B4A     		ldr	r2, .L67+24
 1134 01bc FB68     		ldr	r3, [r7, #12]
 1135 01be 42F82310 		str	r1, [r2, r3, lsl #2]
 266:main.c        ****             
 267:main.c        ****             pulse[cyl] = pulseCheck(pulse_temp[cyl],offsets[cyl][1],offsets[cyl][0]);
 1136              		.loc 1 267 0
 1137 01c2 294A     		ldr	r2, .L67+24
 1138 01c4 FB68     		ldr	r3, [r7, #12]
 1139 01c6 52F82300 		ldr	r0, [r2, r3, lsl #2]
 1140 01ca 314A     		ldr	r2, .L67+64
 1141 01cc FB68     		ldr	r3, [r7, #12]
 1142 01ce DB00     		lsls	r3, r3, #3
 1143 01d0 1344     		add	r3, r3, r2
 1144 01d2 5968     		ldr	r1, [r3, #4]
 1145 01d4 2E4A     		ldr	r2, .L67+64
 1146 01d6 FB68     		ldr	r3, [r7, #12]
 1147 01d8 52F83330 		ldr	r3, [r2, r3, lsl #3]
 1148 01dc 1A46     		mov	r2, r3
 1149 01de FFF7FEFF 		bl	pulseCheck
 1150 01e2 0146     		mov	r1, r0
 1151 01e4 2B4A     		ldr	r2, .L67+68
 1152 01e6 FB68     		ldr	r3, [r7, #12]
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccH007Pe.s 			page 27


 1153 01e8 42F82310 		str	r1, [r2, r3, lsl #2]
 268:main.c        ****             switch(cyl){
 1154              		.loc 1 268 0
 1155 01ec FB68     		ldr	r3, [r7, #12]
 1156 01ee 032B     		cmp	r3, #3
 1157 01f0 5ED8     		bhi	.L59
 1158 01f2 01A2     		adr	r2, .L61
 1159 01f4 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1160              		.p2align 2
 1161              	.L61:
 1162 01f8 09020000 		.word	.L60+1
 1163 01fc 21020000 		.word	.L62+1
 1164 0200 39020000 		.word	.L63+1
 1165 0204 99020000 		.word	.L64+1
 1166              		.p2align 1
 1167              	.L60:
 269:main.c        ****                 case 0:
 270:main.c        ****                     PWM_0_WriteCompare(pulse[cyl] + 1500);
 1168              		.loc 1 270 0
 1169 0208 224A     		ldr	r2, .L67+68
 1170 020a FB68     		ldr	r3, [r7, #12]
 1171 020c 52F82330 		ldr	r3, [r2, r3, lsl #2]
 1172 0210 9BB2     		uxth	r3, r3
 1173 0212 03F2DC53 		addw	r3, r3, #1500
 1174 0216 9BB2     		uxth	r3, r3
 1175 0218 1846     		mov	r0, r3
 1176 021a FFF7FEFF 		bl	PWM_0_WriteCompare
 271:main.c        ****                     break;
 1177              		.loc 1 271 0
 1178 021e 47E0     		b	.L59
 1179              	.L62:
 272:main.c        ****                 case 1:
 273:main.c        ****                     PWM_1_WriteCompare(pulse[cyl] + 1500);
 1180              		.loc 1 273 0
 1181 0220 1C4A     		ldr	r2, .L67+68
 1182 0222 FB68     		ldr	r3, [r7, #12]
 1183 0224 52F82330 		ldr	r3, [r2, r3, lsl #2]
 1184 0228 9BB2     		uxth	r3, r3
 1185 022a 03F2DC53 		addw	r3, r3, #1500
 1186 022e 9BB2     		uxth	r3, r3
 1187 0230 1846     		mov	r0, r3
 1188 0232 FFF7FEFF 		bl	PWM_1_WriteCompare
 274:main.c        ****                     break;
 1189              		.loc 1 274 0
 1190 0236 3BE0     		b	.L59
 1191              	.L63:
 275:main.c        ****                 case 2:
 276:main.c        ****                     PWM_2_WriteCompare(pulse[cyl] + 1500);
 1192              		.loc 1 276 0
 1193 0238 164A     		ldr	r2, .L67+68
 1194 023a FB68     		ldr	r3, [r7, #12]
 1195 023c 52F82330 		ldr	r3, [r2, r3, lsl #2]
 1196 0240 9BB2     		uxth	r3, r3
 1197 0242 03F2DC53 		addw	r3, r3, #1500
 1198 0246 9BB2     		uxth	r3, r3
 1199 0248 1846     		mov	r0, r3
 1200 024a FFF7FEFF 		bl	PWM_2_WriteCompare
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccH007Pe.s 			page 28


 277:main.c        ****                     break;
 1201              		.loc 1 277 0
 1202 024e 2FE0     		b	.L59
 1203              	.L68:
 1204              		.align	3
 1205              	.L67:
 1206 0250 9A999999 		.word	-1717986918
 1207 0254 9999993F 		.word	1067030937
 1208 0258 00000000 		.word	RxIsr
 1209 025c 00000000 		.word	adc_update
 1210 0260 00000000 		.word	adcValue
 1211 0264 00000000 		.word	err
 1212 0268 00000000 		.word	pulse_temp
 1213 026c 10000000 		.word	.LC1
 1214 0270 00000000 		.word	sendValue
 1215 0274 00000000 		.word	new_pos_set
 1216 0278 00000000 		.word	new_pos
 1217 027c 00000000 		.word	pos
 1218 0280 00000000 		.word	prev_err
 1219 0284 00000000 		.word	der
 1220 0288 00000000 		.word	pid_integral
 1221 028c 00000000 		.word	pid
 1222 0290 00000000 		.word	offsets
 1223 0294 00000000 		.word	pulse
 1224              	.L64:
 278:main.c        ****                 case 3:
 279:main.c        ****                     PWM_3_WriteCompare(pulse[cyl] + 1500);
 1225              		.loc 1 279 0
 1226 0298 234A     		ldr	r2, .L69+16
 1227 029a FB68     		ldr	r3, [r7, #12]
 1228 029c 52F82330 		ldr	r3, [r2, r3, lsl #2]
 1229 02a0 9BB2     		uxth	r3, r3
 1230 02a2 03F2DC53 		addw	r3, r3, #1500
 1231 02a6 9BB2     		uxth	r3, r3
 1232 02a8 1846     		mov	r0, r3
 1233 02aa FFF7FEFF 		bl	PWM_3_WriteCompare
 280:main.c        ****                     break;
 1234              		.loc 1 280 0
 1235 02ae 00BF     		nop
 1236              	.L59:
 281:main.c        ****             }
 282:main.c        ****             prev_err[cyl] = err[cyl];
 1237              		.loc 1 282 0 discriminator 2
 1238 02b0 1E4A     		ldr	r2, .L69+20
 1239 02b2 FB68     		ldr	r3, [r7, #12]
 1240 02b4 DB00     		lsls	r3, r3, #3
 1241 02b6 1344     		add	r3, r3, r2
 1242 02b8 18CB     		ldmia	r3, {r3-r4}
 1243 02ba 1D49     		ldr	r1, .L69+24
 1244 02bc FA68     		ldr	r2, [r7, #12]
 1245 02be D200     		lsls	r2, r2, #3
 1246 02c0 0A44     		add	r2, r2, r1
 1247 02c2 C2E90034 		strd	r3, [r2]
 256:main.c        ****             if(new_pos_set[cyl]){
 1248              		.loc 1 256 0 discriminator 2
 1249 02c6 FB68     		ldr	r3, [r7, #12]
 1250 02c8 0133     		adds	r3, r3, #1
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccH007Pe.s 			page 29


 1251 02ca FB60     		str	r3, [r7, #12]
 1252              	.L57:
 256:main.c        ****             if(new_pos_set[cyl]){
 1253              		.loc 1 256 0 is_stmt 0 discriminator 1
 1254 02cc FB68     		ldr	r3, [r7, #12]
 1255 02ce 012B     		cmp	r3, #1
 1256 02d0 7FF7CAAE 		ble	.L65
 1257              	.LBE8:
 283:main.c        ****         }
 284:main.c        ****         
 285:main.c        ****         
 286:main.c        ****         
 287:main.c        ****         
 288:main.c        ****         /* END PID CODE */
 289:main.c        ****         
 290:main.c        ****         
 291:main.c        ****         
 292:main.c        ****         CyDelay(10);
 1258              		.loc 1 292 0 is_stmt 1
 1259 02d4 0A20     		movs	r0, #10
 1260 02d6 FFF7FEFF 		bl	CyDelay
 293:main.c        ****         time = Timer_1_ReadCounter();
 1261              		.loc 1 293 0
 1262 02da FFF7FEFF 		bl	Timer_1_ReadCounter
 1263 02de 0346     		mov	r3, r0
 1264 02e0 1846     		mov	r0, r3
 1265 02e2 FFF7FEFF 		bl	__aeabi_ui2d
 1266 02e6 0346     		mov	r3, r0
 1267 02e8 0C46     		mov	r4, r1
 1268 02ea C7E90034 		strd	r3, [r7]
 294:main.c        ****         dt=(double)(65535-time)/1000000;
 1269              		.loc 1 294 0
 1270 02ee D7E90023 		ldrd	r2, [r7]
 1271 02f2 09A1     		adr	r1, .L69
 1272 02f4 D1E90001 		ldrd	r0, [r1]
 1273 02f8 FFF7FEFF 		bl	__aeabi_dsub
 1274 02fc 0346     		mov	r3, r0
 1275 02fe 0C46     		mov	r4, r1
 1276 0300 1846     		mov	r0, r3
 1277 0302 2146     		mov	r1, r4
 1278 0304 06A3     		adr	r3, .L69+8
 1279 0306 D3E90023 		ldrd	r2, [r3]
 1280 030a FFF7FEFF 		bl	__aeabi_ddiv
 1281 030e 0346     		mov	r3, r0
 1282 0310 0C46     		mov	r4, r1
 1283 0312 C7E90434 		strd	r3, [r7, #16]
 295:main.c        **** 
 296:main.c        ****     }
 1284              		.loc 1 296 0
 1285 0316 A0E6     		b	.L66
 1286              	.L70:
 1287              		.align	3
 1288              	.L69:
 1289 0318 00000000 		.word	0
 1290 031c E0FFEF40 		.word	1089470432
 1291 0320 00000000 		.word	0
 1292 0324 80842E41 		.word	1093567616
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccH007Pe.s 			page 30


 1293 0328 00000000 		.word	pulse
 1294 032c 00000000 		.word	err
 1295 0330 00000000 		.word	prev_err
 1296              		.cfi_endproc
 1297              	.LFE67:
 1298              		.size	main, .-main
 1299              		.text
 1300              	.Letext0:
 1301              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 1302              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 1303              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 1304              		.file 5 "Generated_Source\\PSoC5/core_cm3.h"
 1305              		.section	.debug_info,"",%progbits
 1306              	.Ldebug_info0:
 1307 0000 9F040000 		.4byte	0x49f
 1308 0004 0400     		.2byte	0x4
 1309 0006 00000000 		.4byte	.Ldebug_abbrev0
 1310 000a 04       		.byte	0x4
 1311 000b 01       		.uleb128 0x1
 1312 000c 3A000000 		.4byte	.LASF46
 1313 0010 0C       		.byte	0xc
 1314 0011 2B020000 		.4byte	.LASF47
 1315 0015 CB010000 		.4byte	.LASF48
 1316 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1317 001d 00000000 		.4byte	0
 1318 0021 00000000 		.4byte	.Ldebug_line0
 1319 0025 02       		.uleb128 0x2
 1320 0026 01       		.byte	0x1
 1321 0027 06       		.byte	0x6
 1322 0028 04010000 		.4byte	.LASF0
 1323 002c 02       		.uleb128 0x2
 1324 002d 01       		.byte	0x1
 1325 002e 08       		.byte	0x8
 1326 002f 3C010000 		.4byte	.LASF1
 1327 0033 02       		.uleb128 0x2
 1328 0034 02       		.byte	0x2
 1329 0035 05       		.byte	0x5
 1330 0036 1A000000 		.4byte	.LASF2
 1331 003a 02       		.uleb128 0x2
 1332 003b 02       		.byte	0x2
 1333 003c 07       		.byte	0x7
 1334 003d B8010000 		.4byte	.LASF3
 1335 0041 03       		.uleb128 0x3
 1336 0042 56020000 		.4byte	.LASF9
 1337 0046 02       		.byte	0x2
 1338 0047 3F       		.byte	0x3f
 1339 0048 4C000000 		.4byte	0x4c
 1340 004c 02       		.uleb128 0x2
 1341 004d 04       		.byte	0x4
 1342 004e 05       		.byte	0x5
 1343 004f 2C010000 		.4byte	.LASF4
 1344 0053 02       		.uleb128 0x2
 1345 0054 04       		.byte	0x4
 1346 0055 07       		.byte	0x7
 1347 0056 37020000 		.4byte	.LASF5
 1348 005a 02       		.uleb128 0x2
 1349 005b 08       		.byte	0x8
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccH007Pe.s 			page 31


 1350 005c 05       		.byte	0x5
 1351 005d 16010000 		.4byte	.LASF6
 1352 0061 02       		.uleb128 0x2
 1353 0062 08       		.byte	0x8
 1354 0063 07       		.byte	0x7
 1355 0064 89010000 		.4byte	.LASF7
 1356 0068 04       		.uleb128 0x4
 1357 0069 04       		.byte	0x4
 1358 006a 05       		.byte	0x5
 1359 006b 696E7400 		.ascii	"int\000"
 1360 006f 02       		.uleb128 0x2
 1361 0070 04       		.byte	0x4
 1362 0071 07       		.byte	0x7
 1363 0072 A0010000 		.4byte	.LASF8
 1364 0076 03       		.uleb128 0x3
 1365 0077 1C020000 		.4byte	.LASF10
 1366 007b 03       		.byte	0x3
 1367 007c 2C       		.byte	0x2c
 1368 007d 41000000 		.4byte	0x41
 1369 0081 05       		.uleb128 0x5
 1370 0082 F2000000 		.4byte	.LASF11
 1371 0086 04       		.byte	0x4
 1372 0087 9201     		.2byte	0x192
 1373 0089 2C000000 		.4byte	0x2c
 1374 008d 05       		.uleb128 0x5
 1375 008e 24020000 		.4byte	.LASF12
 1376 0092 04       		.byte	0x4
 1377 0093 9301     		.2byte	0x193
 1378 0095 3A000000 		.4byte	0x3a
 1379 0099 02       		.uleb128 0x2
 1380 009a 04       		.byte	0x4
 1381 009b 04       		.byte	0x4
 1382 009c 10010000 		.4byte	.LASF13
 1383 00a0 02       		.uleb128 0x2
 1384 00a1 08       		.byte	0x8
 1385 00a2 04       		.byte	0x4
 1386 00a3 AA020000 		.4byte	.LASF14
 1387 00a7 02       		.uleb128 0x2
 1388 00a8 01       		.byte	0x1
 1389 00a9 08       		.byte	0x8
 1390 00aa 17020000 		.4byte	.LASF15
 1391 00ae 05       		.uleb128 0x5
 1392 00af 32020000 		.4byte	.LASF16
 1393 00b3 04       		.byte	0x4
 1394 00b4 3C02     		.2byte	0x23c
 1395 00b6 BA000000 		.4byte	0xba
 1396 00ba 06       		.uleb128 0x6
 1397 00bb 81000000 		.4byte	0x81
 1398 00bf 02       		.uleb128 0x2
 1399 00c0 08       		.byte	0x8
 1400 00c1 04       		.byte	0x4
 1401 00c2 63010000 		.4byte	.LASF17
 1402 00c6 02       		.uleb128 0x2
 1403 00c7 04       		.byte	0x4
 1404 00c8 07       		.byte	0x7
 1405 00c9 31000000 		.4byte	.LASF18
 1406 00cd 07       		.uleb128 0x7
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccH007Pe.s 			page 32


 1407 00ce 6D020000 		.4byte	.LASF49
 1408 00d2 01       		.byte	0x1
 1409 00d3 15       		.byte	0x15
 1410 00d4 68000000 		.4byte	0x68
 1411 00d8 00000000 		.4byte	.LFB64
 1412 00dc 54000000 		.4byte	.LFE64-.LFB64
 1413 00e0 01       		.uleb128 0x1
 1414 00e1 9C       		.byte	0x9c
 1415 00e2 11010000 		.4byte	0x111
 1416 00e6 08       		.uleb128 0x8
 1417 00e7 EC000000 		.4byte	.LASF19
 1418 00eb 01       		.byte	0x1
 1419 00ec 15       		.byte	0x15
 1420 00ed 68000000 		.4byte	0x68
 1421 00f1 02       		.uleb128 0x2
 1422 00f2 91       		.byte	0x91
 1423 00f3 74       		.sleb128 -12
 1424 00f4 08       		.uleb128 0x8
 1425 00f5 60020000 		.4byte	.LASF20
 1426 00f9 01       		.byte	0x1
 1427 00fa 15       		.byte	0x15
 1428 00fb 68000000 		.4byte	0x68
 1429 00ff 02       		.uleb128 0x2
 1430 0100 91       		.byte	0x91
 1431 0101 70       		.sleb128 -16
 1432 0102 08       		.uleb128 0x8
 1433 0103 24000000 		.4byte	.LASF21
 1434 0107 01       		.byte	0x1
 1435 0108 15       		.byte	0x15
 1436 0109 68000000 		.4byte	0x68
 1437 010d 02       		.uleb128 0x2
 1438 010e 91       		.byte	0x91
 1439 010f 6C       		.sleb128 -20
 1440 0110 00       		.byte	0
 1441 0111 09       		.uleb128 0x9
 1442 0112 8B020000 		.4byte	.LASF22
 1443 0116 01       		.byte	0x1
 1444 0117 3C       		.byte	0x3c
 1445 0118 00000000 		.4byte	.LFB65
 1446 011c 50010000 		.4byte	.LFE65-.LFB65
 1447 0120 01       		.uleb128 0x1
 1448 0121 9C       		.byte	0x9c
 1449 0122 9D010000 		.4byte	0x19d
 1450 0126 0A       		.uleb128 0xa
 1451 0127 06000000 		.4byte	.LBB2
 1452 012b 2E010000 		.4byte	.LBE2-.LBB2
 1453 012f 0B       		.uleb128 0xb
 1454 0130 6300     		.ascii	"c\000"
 1455 0132 01       		.byte	0x1
 1456 0133 3D       		.byte	0x3d
 1457 0134 68000000 		.4byte	0x68
 1458 0138 02       		.uleb128 0x2
 1459 0139 91       		.byte	0x91
 1460 013a 74       		.sleb128 -12
 1461 013b 0C       		.uleb128 0xc
 1462 013c 16000000 		.4byte	.LBB3
 1463 0140 3A000000 		.4byte	.LBE3-.LBB3
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccH007Pe.s 			page 33


 1464 0144 55010000 		.4byte	0x155
 1465 0148 0B       		.uleb128 0xb
 1466 0149 6A00     		.ascii	"j\000"
 1467 014b 01       		.byte	0x1
 1468 014c 40       		.byte	0x40
 1469 014d 68000000 		.4byte	0x68
 1470 0151 02       		.uleb128 0x2
 1471 0152 91       		.byte	0x91
 1472 0153 70       		.sleb128 -16
 1473 0154 00       		.byte	0
 1474 0155 0C       		.uleb128 0xc
 1475 0156 8E000000 		.4byte	.LBB4
 1476 015a 2C000000 		.4byte	.LBE4-.LBB4
 1477 015e 6F010000 		.4byte	0x16f
 1478 0162 0B       		.uleb128 0xb
 1479 0163 6A00     		.ascii	"j\000"
 1480 0165 01       		.byte	0x1
 1481 0166 48       		.byte	0x48
 1482 0167 68000000 		.4byte	0x68
 1483 016b 02       		.uleb128 0x2
 1484 016c 91       		.byte	0x91
 1485 016d 6C       		.sleb128 -20
 1486 016e 00       		.byte	0
 1487 016f 0A       		.uleb128 0xa
 1488 0170 BA000000 		.4byte	.LBB5
 1489 0174 60000000 		.4byte	.LBE5-.LBB5
 1490 0178 0B       		.uleb128 0xb
 1491 0179 6900     		.ascii	"i\000"
 1492 017b 01       		.byte	0x1
 1493 017c 4B       		.byte	0x4b
 1494 017d 68000000 		.4byte	0x68
 1495 0181 02       		.uleb128 0x2
 1496 0182 91       		.byte	0x91
 1497 0183 68       		.sleb128 -24
 1498 0184 0A       		.uleb128 0xa
 1499 0185 C0000000 		.4byte	.LBB6
 1500 0189 4E000000 		.4byte	.LBE6-.LBB6
 1501 018d 0B       		.uleb128 0xb
 1502 018e 6A00     		.ascii	"j\000"
 1503 0190 01       		.byte	0x1
 1504 0191 4C       		.byte	0x4c
 1505 0192 68000000 		.4byte	0x68
 1506 0196 02       		.uleb128 0x2
 1507 0197 91       		.byte	0x91
 1508 0198 64       		.sleb128 -28
 1509 0199 00       		.byte	0
 1510 019a 00       		.byte	0
 1511 019b 00       		.byte	0
 1512 019c 00       		.byte	0
 1513 019d 09       		.uleb128 0x9
 1514 019e B2010000 		.4byte	.LASF23
 1515 01a2 01       		.byte	0x1
 1516 01a3 5D       		.byte	0x5d
 1517 01a4 00000000 		.4byte	.LFB66
 1518 01a8 C0020000 		.4byte	.LFE66-.LFB66
 1519 01ac 01       		.uleb128 0x1
 1520 01ad 9C       		.byte	0x9c
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccH007Pe.s 			page 34


 1521 01ae E6010000 		.4byte	0x1e6
 1522 01b2 0D       		.uleb128 0xd
 1523 01b3 6F010000 		.4byte	.LASF24
 1524 01b7 01       		.byte	0x1
 1525 01b8 5F       		.byte	0x5f
 1526 01b9 81000000 		.4byte	0x81
 1527 01bd 02       		.uleb128 0x2
 1528 01be 91       		.byte	0x91
 1529 01bf 6B       		.sleb128 -21
 1530 01c0 0D       		.uleb128 0xd
 1531 01c1 84020000 		.4byte	.LASF25
 1532 01c5 01       		.byte	0x1
 1533 01c6 60       		.byte	0x60
 1534 01c7 81000000 		.4byte	0x81
 1535 01cb 02       		.uleb128 0x2
 1536 01cc 91       		.byte	0x91
 1537 01cd 6A       		.sleb128 -22
 1538 01ce 0A       		.uleb128 0xa
 1539 01cf A0000000 		.4byte	.LBB7
 1540 01d3 1C000000 		.4byte	.LBE7-.LBB7
 1541 01d7 0B       		.uleb128 0xb
 1542 01d8 707000   		.ascii	"pp\000"
 1543 01db 01       		.byte	0x1
 1544 01dc 7C       		.byte	0x7c
 1545 01dd 68000000 		.4byte	0x68
 1546 01e1 02       		.uleb128 0x2
 1547 01e2 91       		.byte	0x91
 1548 01e3 6C       		.sleb128 -20
 1549 01e4 00       		.byte	0
 1550 01e5 00       		.byte	0
 1551 01e6 0E       		.uleb128 0xe
 1552 01e7 C8000000 		.4byte	.LASF26
 1553 01eb 01       		.byte	0x1
 1554 01ec E0       		.byte	0xe0
 1555 01ed 68000000 		.4byte	0x68
 1556 01f1 00000000 		.4byte	.LFB67
 1557 01f5 34030000 		.4byte	.LFE67-.LFB67
 1558 01f9 01       		.uleb128 0x1
 1559 01fa 9C       		.byte	0x9c
 1560 01fb 34020000 		.4byte	0x234
 1561 01ff 0B       		.uleb128 0xb
 1562 0200 647400   		.ascii	"dt\000"
 1563 0203 01       		.byte	0x1
 1564 0204 F1       		.byte	0xf1
 1565 0205 A0000000 		.4byte	0xa0
 1566 0209 02       		.uleb128 0x2
 1567 020a 91       		.byte	0x91
 1568 020b 60       		.sleb128 -32
 1569 020c 0D       		.uleb128 0xd
 1570 020d AD010000 		.4byte	.LASF27
 1571 0211 01       		.byte	0x1
 1572 0212 F2       		.byte	0xf2
 1573 0213 A0000000 		.4byte	0xa0
 1574 0217 02       		.uleb128 0x2
 1575 0218 91       		.byte	0x91
 1576 0219 50       		.sleb128 -48
 1577 021a 0A       		.uleb128 0xa
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccH007Pe.s 			page 35


 1578 021b 62000000 		.4byte	.LBB8
 1579 021f 72020000 		.4byte	.LBE8-.LBB8
 1580 0223 0F       		.uleb128 0xf
 1581 0224 63796C00 		.ascii	"cyl\000"
 1582 0228 01       		.byte	0x1
 1583 0229 0001     		.2byte	0x100
 1584 022b 68000000 		.4byte	0x68
 1585 022f 02       		.uleb128 0x2
 1586 0230 91       		.byte	0x91
 1587 0231 5C       		.sleb128 -36
 1588 0232 00       		.byte	0
 1589 0233 00       		.byte	0
 1590 0234 10       		.uleb128 0x10
 1591 0235 B1020000 		.4byte	.LASF28
 1592 0239 05       		.byte	0x5
 1593 023a 1207     		.2byte	0x712
 1594 023c 40020000 		.4byte	0x240
 1595 0240 06       		.uleb128 0x6
 1596 0241 76000000 		.4byte	0x76
 1597 0245 11       		.uleb128 0x11
 1598 0246 F8000000 		.4byte	.LASF29
 1599 024a 01       		.byte	0x1
 1600 024b 13       		.byte	0x13
 1601 024c 81000000 		.4byte	0x81
 1602 0250 05       		.uleb128 0x5
 1603 0251 03       		.byte	0x3
 1604 0252 00000000 		.4byte	errorStatus
 1605 0256 11       		.uleb128 0x11
 1606 0257 DD000000 		.4byte	.LASF30
 1607 025b 01       		.byte	0x1
 1608 025c 1E       		.byte	0x1e
 1609 025d 68000000 		.4byte	0x68
 1610 0261 05       		.uleb128 0x5
 1611 0262 03       		.byte	0x3
 1612 0263 00000000 		.4byte	data_read_mode
 1613 0267 12       		.uleb128 0x12
 1614 0268 77020000 		.4byte	0x277
 1615 026c 77020000 		.4byte	0x277
 1616 0270 13       		.uleb128 0x13
 1617 0271 C6000000 		.4byte	0xc6
 1618 0275 01       		.byte	0x1
 1619 0276 00       		.byte	0
 1620 0277 06       		.uleb128 0x6
 1621 0278 68000000 		.4byte	0x68
 1622 027c 11       		.uleb128 0x11
 1623 027d 09000000 		.4byte	.LASF31
 1624 0281 01       		.byte	0x1
 1625 0282 20       		.byte	0x20
 1626 0283 8D020000 		.4byte	0x28d
 1627 0287 05       		.uleb128 0x5
 1628 0288 03       		.byte	0x3
 1629 0289 00000000 		.4byte	new_pos_set
 1630 028d 06       		.uleb128 0x6
 1631 028e 67020000 		.4byte	0x267
 1632 0292 12       		.uleb128 0x12
 1633 0293 68000000 		.4byte	0x68
 1634 0297 A2020000 		.4byte	0x2a2
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccH007Pe.s 			page 36


 1635 029b 13       		.uleb128 0x13
 1636 029c C6000000 		.4byte	0xc6
 1637 02a0 01       		.byte	0x1
 1638 02a1 00       		.byte	0
 1639 02a2 11       		.uleb128 0x11
 1640 02a3 78010000 		.4byte	.LASF32
 1641 02a7 01       		.byte	0x1
 1642 02a8 21       		.byte	0x21
 1643 02a9 92020000 		.4byte	0x292
 1644 02ad 05       		.uleb128 0x5
 1645 02ae 03       		.byte	0x3
 1646 02af 00000000 		.4byte	new_pos
 1647 02b3 14       		.uleb128 0x14
 1648 02b4 706F7300 		.ascii	"pos\000"
 1649 02b8 01       		.byte	0x1
 1650 02b9 22       		.byte	0x22
 1651 02ba 92020000 		.4byte	0x292
 1652 02be 05       		.uleb128 0x5
 1653 02bf 03       		.byte	0x3
 1654 02c0 00000000 		.4byte	pos
 1655 02c4 11       		.uleb128 0x11
 1656 02c5 EC000000 		.4byte	.LASF19
 1657 02c9 01       		.byte	0x1
 1658 02ca 23       		.byte	0x23
 1659 02cb 92020000 		.4byte	0x292
 1660 02cf 05       		.uleb128 0x5
 1661 02d0 03       		.byte	0x3
 1662 02d1 00000000 		.4byte	pulse
 1663 02d5 11       		.uleb128 0x11
 1664 02d6 58010000 		.4byte	.LASF33
 1665 02da 01       		.byte	0x1
 1666 02db 24       		.byte	0x24
 1667 02dc 92020000 		.4byte	0x292
 1668 02e0 05       		.uleb128 0x5
 1669 02e1 03       		.byte	0x3
 1670 02e2 00000000 		.4byte	pulse_temp
 1671 02e6 12       		.uleb128 0x12
 1672 02e7 A0000000 		.4byte	0xa0
 1673 02eb F6020000 		.4byte	0x2f6
 1674 02ef 13       		.uleb128 0x13
 1675 02f0 C6000000 		.4byte	0xc6
 1676 02f4 01       		.byte	0x1
 1677 02f5 00       		.byte	0
 1678 02f6 14       		.uleb128 0x14
 1679 02f7 65727200 		.ascii	"err\000"
 1680 02fb 01       		.byte	0x1
 1681 02fc 25       		.byte	0x25
 1682 02fd E6020000 		.4byte	0x2e6
 1683 0301 05       		.uleb128 0x5
 1684 0302 03       		.byte	0x3
 1685 0303 00000000 		.4byte	err
 1686 0307 12       		.uleb128 0x12
 1687 0308 8D000000 		.4byte	0x8d
 1688 030c 17030000 		.4byte	0x317
 1689 0310 13       		.uleb128 0x13
 1690 0311 C6000000 		.4byte	0xc6
 1691 0315 01       		.byte	0x1
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccH007Pe.s 			page 37


 1692 0316 00       		.byte	0
 1693 0317 11       		.uleb128 0x11
 1694 0318 80010000 		.4byte	.LASF34
 1695 031c 01       		.byte	0x1
 1696 031d 26       		.byte	0x26
 1697 031e 07030000 		.4byte	0x307
 1698 0322 05       		.uleb128 0x5
 1699 0323 03       		.byte	0x3
 1700 0324 00000000 		.4byte	adcValue
 1701 0328 14       		.uleb128 0x14
 1702 0329 64657200 		.ascii	"der\000"
 1703 032d 01       		.byte	0x1
 1704 032e 27       		.byte	0x27
 1705 032f E6020000 		.4byte	0x2e6
 1706 0333 05       		.uleb128 0x5
 1707 0334 03       		.byte	0x3
 1708 0335 00000000 		.4byte	der
 1709 0339 11       		.uleb128 0x11
 1710 033a 00000000 		.4byte	.LASF35
 1711 033e 01       		.byte	0x1
 1712 033f 28       		.byte	0x28
 1713 0340 E6020000 		.4byte	0x2e6
 1714 0344 05       		.uleb128 0x5
 1715 0345 03       		.byte	0x3
 1716 0346 00000000 		.4byte	prev_err
 1717 034a 11       		.uleb128 0x11
 1718 034b 49020000 		.4byte	.LASF36
 1719 034f 01       		.byte	0x1
 1720 0350 29       		.byte	0x29
 1721 0351 E6020000 		.4byte	0x2e6
 1722 0355 05       		.uleb128 0x5
 1723 0356 03       		.byte	0x3
 1724 0357 00000000 		.4byte	pid_integral
 1725 035b 12       		.uleb128 0x12
 1726 035c 68000000 		.4byte	0x68
 1727 0360 71030000 		.4byte	0x371
 1728 0364 13       		.uleb128 0x13
 1729 0365 C6000000 		.4byte	0xc6
 1730 0369 03       		.byte	0x3
 1731 036a 13       		.uleb128 0x13
 1732 036b C6000000 		.4byte	0xc6
 1733 036f 01       		.byte	0x1
 1734 0370 00       		.byte	0
 1735 0371 11       		.uleb128 0x11
 1736 0372 24010000 		.4byte	.LASF37
 1737 0376 01       		.byte	0x1
 1738 0377 2B       		.byte	0x2b
 1739 0378 5B030000 		.4byte	0x35b
 1740 037c 05       		.uleb128 0x5
 1741 037d 03       		.byte	0x3
 1742 037e 00000000 		.4byte	offsets
 1743 0382 12       		.uleb128 0x12
 1744 0383 A7000000 		.4byte	0xa7
 1745 0387 92030000 		.4byte	0x392
 1746 038b 13       		.uleb128 0x13
 1747 038c C6000000 		.4byte	0xc6
 1748 0390 63       		.byte	0x63
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccH007Pe.s 			page 38


 1749 0391 00       		.byte	0
 1750 0392 11       		.uleb128 0x11
 1751 0393 A0020000 		.4byte	.LASF38
 1752 0397 01       		.byte	0x1
 1753 0398 2D       		.byte	0x2d
 1754 0399 82030000 		.4byte	0x382
 1755 039d 05       		.uleb128 0x5
 1756 039e 03       		.byte	0x3
 1757 039f 00000000 		.4byte	sendValue
 1758 03a3 12       		.uleb128 0x12
 1759 03a4 A7000000 		.4byte	0xa7
 1760 03a8 B3030000 		.4byte	0x3b3
 1761 03ac 13       		.uleb128 0x13
 1762 03ad C6000000 		.4byte	0xc6
 1763 03b1 13       		.byte	0x13
 1764 03b2 00       		.byte	0
 1765 03b3 11       		.uleb128 0x11
 1766 03b4 15000000 		.4byte	.LASF39
 1767 03b8 01       		.byte	0x1
 1768 03b9 2E       		.byte	0x2e
 1769 03ba A3030000 		.4byte	0x3a3
 1770 03be 05       		.uleb128 0x5
 1771 03bf 03       		.byte	0x3
 1772 03c0 00000000 		.4byte	temp
 1773 03c4 14       		.uleb128 0x14
 1774 03c5 6E6E00   		.ascii	"nn\000"
 1775 03c8 01       		.byte	0x1
 1776 03c9 2F       		.byte	0x2f
 1777 03ca 68000000 		.4byte	0x68
 1778 03ce 05       		.uleb128 0x5
 1779 03cf 03       		.byte	0x3
 1780 03d0 00000000 		.4byte	nn
 1781 03d4 12       		.uleb128 0x12
 1782 03d5 A0000000 		.4byte	0xa0
 1783 03d9 E4030000 		.4byte	0x3e4
 1784 03dd 13       		.uleb128 0x13
 1785 03de C6000000 		.4byte	0xc6
 1786 03e2 02       		.byte	0x2
 1787 03e3 00       		.byte	0
 1788 03e4 14       		.uleb128 0x14
 1789 03e5 70696400 		.ascii	"pid\000"
 1790 03e9 01       		.byte	0x1
 1791 03ea 30       		.byte	0x30
 1792 03eb D4030000 		.4byte	0x3d4
 1793 03ef 05       		.uleb128 0x5
 1794 03f0 03       		.byte	0x3
 1795 03f1 00000000 		.4byte	pid
 1796 03f5 11       		.uleb128 0x11
 1797 03f6 CD000000 		.4byte	.LASF40
 1798 03fa 01       		.byte	0x1
 1799 03fb 32       		.byte	0x32
 1800 03fc 82030000 		.4byte	0x382
 1801 0400 05       		.uleb128 0x5
 1802 0401 03       		.byte	0x3
 1803 0402 00000000 		.4byte	help
 1804 0406 14       		.uleb128 0x14
 1805 0407 747400   		.ascii	"tt\000"
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccH007Pe.s 			page 39


 1806 040a 01       		.byte	0x1
 1807 040b 33       		.byte	0x33
 1808 040c 68000000 		.4byte	0x68
 1809 0410 05       		.uleb128 0x5
 1810 0411 03       		.byte	0x3
 1811 0412 00000000 		.4byte	tt
 1812 0416 11       		.uleb128 0x11
 1813 0417 78020000 		.4byte	.LASF41
 1814 041b 01       		.byte	0x1
 1815 041c 35       		.byte	0x35
 1816 041d 68000000 		.4byte	0x68
 1817 0421 05       		.uleb128 0x5
 1818 0422 03       		.byte	0x3
 1819 0423 00000000 		.4byte	start_calib
 1820 0427 11       		.uleb128 0x11
 1821 0428 35010000 		.4byte	.LASF42
 1822 042c 01       		.byte	0x1
 1823 042d 36       		.byte	0x36
 1824 042e 68000000 		.4byte	0x68
 1825 0432 05       		.uleb128 0x5
 1826 0433 03       		.byte	0x3
 1827 0434 00000000 		.4byte	cyl_no
 1828 0438 12       		.uleb128 0x12
 1829 0439 8D000000 		.4byte	0x8d
 1830 043d 4E040000 		.4byte	0x44e
 1831 0441 13       		.uleb128 0x13
 1832 0442 C6000000 		.4byte	0xc6
 1833 0446 01       		.byte	0x1
 1834 0447 13       		.uleb128 0x13
 1835 0448 C6000000 		.4byte	0xc6
 1836 044c 06       		.byte	0x6
 1837 044d 00       		.byte	0
 1838 044e 11       		.uleb128 0x11
 1839 044f 4A010000 		.4byte	.LASF43
 1840 0453 01       		.byte	0x1
 1841 0454 38       		.byte	0x38
 1842 0455 38040000 		.4byte	0x438
 1843 0459 05       		.uleb128 0x5
 1844 045a 03       		.byte	0x3
 1845 045b 00000000 		.4byte	moving_median
 1846 045f 12       		.uleb128 0x12
 1847 0460 8D000000 		.4byte	0x8d
 1848 0464 6F040000 		.4byte	0x46f
 1849 0468 13       		.uleb128 0x13
 1850 0469 C6000000 		.4byte	0xc6
 1851 046d 06       		.byte	0x6
 1852 046e 00       		.byte	0
 1853 046f 11       		.uleb128 0x11
 1854 0470 96020000 		.4byte	.LASF44
 1855 0474 01       		.byte	0x1
 1856 0475 39       		.byte	0x39
 1857 0476 5F040000 		.4byte	0x45f
 1858 047a 05       		.uleb128 0x5
 1859 047b 03       		.byte	0x3
 1860 047c 00000000 		.4byte	tempArray
 1861 0480 14       		.uleb128 0x14
 1862 0481 746D7000 		.ascii	"tmp\000"
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccH007Pe.s 			page 40


 1863 0485 01       		.byte	0x1
 1864 0486 3A       		.byte	0x3a
 1865 0487 8D000000 		.4byte	0x8d
 1866 048b 05       		.uleb128 0x5
 1867 048c 03       		.byte	0x3
 1868 048d 00000000 		.4byte	tmp
 1869 0491 11       		.uleb128 0x11
 1870 0492 D2000000 		.4byte	.LASF45
 1871 0496 01       		.byte	0x1
 1872 0497 DF       		.byte	0xdf
 1873 0498 68000000 		.4byte	0x68
 1874 049c 05       		.uleb128 0x5
 1875 049d 03       		.byte	0x3
 1876 049e 00000000 		.4byte	led_switch
 1877 04a2 00       		.byte	0
 1878              		.section	.debug_abbrev,"",%progbits
 1879              	.Ldebug_abbrev0:
 1880 0000 01       		.uleb128 0x1
 1881 0001 11       		.uleb128 0x11
 1882 0002 01       		.byte	0x1
 1883 0003 25       		.uleb128 0x25
 1884 0004 0E       		.uleb128 0xe
 1885 0005 13       		.uleb128 0x13
 1886 0006 0B       		.uleb128 0xb
 1887 0007 03       		.uleb128 0x3
 1888 0008 0E       		.uleb128 0xe
 1889 0009 1B       		.uleb128 0x1b
 1890 000a 0E       		.uleb128 0xe
 1891 000b 55       		.uleb128 0x55
 1892 000c 17       		.uleb128 0x17
 1893 000d 11       		.uleb128 0x11
 1894 000e 01       		.uleb128 0x1
 1895 000f 10       		.uleb128 0x10
 1896 0010 17       		.uleb128 0x17
 1897 0011 00       		.byte	0
 1898 0012 00       		.byte	0
 1899 0013 02       		.uleb128 0x2
 1900 0014 24       		.uleb128 0x24
 1901 0015 00       		.byte	0
 1902 0016 0B       		.uleb128 0xb
 1903 0017 0B       		.uleb128 0xb
 1904 0018 3E       		.uleb128 0x3e
 1905 0019 0B       		.uleb128 0xb
 1906 001a 03       		.uleb128 0x3
 1907 001b 0E       		.uleb128 0xe
 1908 001c 00       		.byte	0
 1909 001d 00       		.byte	0
 1910 001e 03       		.uleb128 0x3
 1911 001f 16       		.uleb128 0x16
 1912 0020 00       		.byte	0
 1913 0021 03       		.uleb128 0x3
 1914 0022 0E       		.uleb128 0xe
 1915 0023 3A       		.uleb128 0x3a
 1916 0024 0B       		.uleb128 0xb
 1917 0025 3B       		.uleb128 0x3b
 1918 0026 0B       		.uleb128 0xb
 1919 0027 49       		.uleb128 0x49
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccH007Pe.s 			page 41


 1920 0028 13       		.uleb128 0x13
 1921 0029 00       		.byte	0
 1922 002a 00       		.byte	0
 1923 002b 04       		.uleb128 0x4
 1924 002c 24       		.uleb128 0x24
 1925 002d 00       		.byte	0
 1926 002e 0B       		.uleb128 0xb
 1927 002f 0B       		.uleb128 0xb
 1928 0030 3E       		.uleb128 0x3e
 1929 0031 0B       		.uleb128 0xb
 1930 0032 03       		.uleb128 0x3
 1931 0033 08       		.uleb128 0x8
 1932 0034 00       		.byte	0
 1933 0035 00       		.byte	0
 1934 0036 05       		.uleb128 0x5
 1935 0037 16       		.uleb128 0x16
 1936 0038 00       		.byte	0
 1937 0039 03       		.uleb128 0x3
 1938 003a 0E       		.uleb128 0xe
 1939 003b 3A       		.uleb128 0x3a
 1940 003c 0B       		.uleb128 0xb
 1941 003d 3B       		.uleb128 0x3b
 1942 003e 05       		.uleb128 0x5
 1943 003f 49       		.uleb128 0x49
 1944 0040 13       		.uleb128 0x13
 1945 0041 00       		.byte	0
 1946 0042 00       		.byte	0
 1947 0043 06       		.uleb128 0x6
 1948 0044 35       		.uleb128 0x35
 1949 0045 00       		.byte	0
 1950 0046 49       		.uleb128 0x49
 1951 0047 13       		.uleb128 0x13
 1952 0048 00       		.byte	0
 1953 0049 00       		.byte	0
 1954 004a 07       		.uleb128 0x7
 1955 004b 2E       		.uleb128 0x2e
 1956 004c 01       		.byte	0x1
 1957 004d 3F       		.uleb128 0x3f
 1958 004e 19       		.uleb128 0x19
 1959 004f 03       		.uleb128 0x3
 1960 0050 0E       		.uleb128 0xe
 1961 0051 3A       		.uleb128 0x3a
 1962 0052 0B       		.uleb128 0xb
 1963 0053 3B       		.uleb128 0x3b
 1964 0054 0B       		.uleb128 0xb
 1965 0055 27       		.uleb128 0x27
 1966 0056 19       		.uleb128 0x19
 1967 0057 49       		.uleb128 0x49
 1968 0058 13       		.uleb128 0x13
 1969 0059 11       		.uleb128 0x11
 1970 005a 01       		.uleb128 0x1
 1971 005b 12       		.uleb128 0x12
 1972 005c 06       		.uleb128 0x6
 1973 005d 40       		.uleb128 0x40
 1974 005e 18       		.uleb128 0x18
 1975 005f 9742     		.uleb128 0x2117
 1976 0061 19       		.uleb128 0x19
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccH007Pe.s 			page 42


 1977 0062 01       		.uleb128 0x1
 1978 0063 13       		.uleb128 0x13
 1979 0064 00       		.byte	0
 1980 0065 00       		.byte	0
 1981 0066 08       		.uleb128 0x8
 1982 0067 05       		.uleb128 0x5
 1983 0068 00       		.byte	0
 1984 0069 03       		.uleb128 0x3
 1985 006a 0E       		.uleb128 0xe
 1986 006b 3A       		.uleb128 0x3a
 1987 006c 0B       		.uleb128 0xb
 1988 006d 3B       		.uleb128 0x3b
 1989 006e 0B       		.uleb128 0xb
 1990 006f 49       		.uleb128 0x49
 1991 0070 13       		.uleb128 0x13
 1992 0071 02       		.uleb128 0x2
 1993 0072 18       		.uleb128 0x18
 1994 0073 00       		.byte	0
 1995 0074 00       		.byte	0
 1996 0075 09       		.uleb128 0x9
 1997 0076 2E       		.uleb128 0x2e
 1998 0077 01       		.byte	0x1
 1999 0078 3F       		.uleb128 0x3f
 2000 0079 19       		.uleb128 0x19
 2001 007a 03       		.uleb128 0x3
 2002 007b 0E       		.uleb128 0xe
 2003 007c 3A       		.uleb128 0x3a
 2004 007d 0B       		.uleb128 0xb
 2005 007e 3B       		.uleb128 0x3b
 2006 007f 0B       		.uleb128 0xb
 2007 0080 27       		.uleb128 0x27
 2008 0081 19       		.uleb128 0x19
 2009 0082 11       		.uleb128 0x11
 2010 0083 01       		.uleb128 0x1
 2011 0084 12       		.uleb128 0x12
 2012 0085 06       		.uleb128 0x6
 2013 0086 40       		.uleb128 0x40
 2014 0087 18       		.uleb128 0x18
 2015 0088 9642     		.uleb128 0x2116
 2016 008a 19       		.uleb128 0x19
 2017 008b 01       		.uleb128 0x1
 2018 008c 13       		.uleb128 0x13
 2019 008d 00       		.byte	0
 2020 008e 00       		.byte	0
 2021 008f 0A       		.uleb128 0xa
 2022 0090 0B       		.uleb128 0xb
 2023 0091 01       		.byte	0x1
 2024 0092 11       		.uleb128 0x11
 2025 0093 01       		.uleb128 0x1
 2026 0094 12       		.uleb128 0x12
 2027 0095 06       		.uleb128 0x6
 2028 0096 00       		.byte	0
 2029 0097 00       		.byte	0
 2030 0098 0B       		.uleb128 0xb
 2031 0099 34       		.uleb128 0x34
 2032 009a 00       		.byte	0
 2033 009b 03       		.uleb128 0x3
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccH007Pe.s 			page 43


 2034 009c 08       		.uleb128 0x8
 2035 009d 3A       		.uleb128 0x3a
 2036 009e 0B       		.uleb128 0xb
 2037 009f 3B       		.uleb128 0x3b
 2038 00a0 0B       		.uleb128 0xb
 2039 00a1 49       		.uleb128 0x49
 2040 00a2 13       		.uleb128 0x13
 2041 00a3 02       		.uleb128 0x2
 2042 00a4 18       		.uleb128 0x18
 2043 00a5 00       		.byte	0
 2044 00a6 00       		.byte	0
 2045 00a7 0C       		.uleb128 0xc
 2046 00a8 0B       		.uleb128 0xb
 2047 00a9 01       		.byte	0x1
 2048 00aa 11       		.uleb128 0x11
 2049 00ab 01       		.uleb128 0x1
 2050 00ac 12       		.uleb128 0x12
 2051 00ad 06       		.uleb128 0x6
 2052 00ae 01       		.uleb128 0x1
 2053 00af 13       		.uleb128 0x13
 2054 00b0 00       		.byte	0
 2055 00b1 00       		.byte	0
 2056 00b2 0D       		.uleb128 0xd
 2057 00b3 34       		.uleb128 0x34
 2058 00b4 00       		.byte	0
 2059 00b5 03       		.uleb128 0x3
 2060 00b6 0E       		.uleb128 0xe
 2061 00b7 3A       		.uleb128 0x3a
 2062 00b8 0B       		.uleb128 0xb
 2063 00b9 3B       		.uleb128 0x3b
 2064 00ba 0B       		.uleb128 0xb
 2065 00bb 49       		.uleb128 0x49
 2066 00bc 13       		.uleb128 0x13
 2067 00bd 02       		.uleb128 0x2
 2068 00be 18       		.uleb128 0x18
 2069 00bf 00       		.byte	0
 2070 00c0 00       		.byte	0
 2071 00c1 0E       		.uleb128 0xe
 2072 00c2 2E       		.uleb128 0x2e
 2073 00c3 01       		.byte	0x1
 2074 00c4 3F       		.uleb128 0x3f
 2075 00c5 19       		.uleb128 0x19
 2076 00c6 03       		.uleb128 0x3
 2077 00c7 0E       		.uleb128 0xe
 2078 00c8 3A       		.uleb128 0x3a
 2079 00c9 0B       		.uleb128 0xb
 2080 00ca 3B       		.uleb128 0x3b
 2081 00cb 0B       		.uleb128 0xb
 2082 00cc 49       		.uleb128 0x49
 2083 00cd 13       		.uleb128 0x13
 2084 00ce 11       		.uleb128 0x11
 2085 00cf 01       		.uleb128 0x1
 2086 00d0 12       		.uleb128 0x12
 2087 00d1 06       		.uleb128 0x6
 2088 00d2 40       		.uleb128 0x40
 2089 00d3 18       		.uleb128 0x18
 2090 00d4 9642     		.uleb128 0x2116
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccH007Pe.s 			page 44


 2091 00d6 19       		.uleb128 0x19
 2092 00d7 01       		.uleb128 0x1
 2093 00d8 13       		.uleb128 0x13
 2094 00d9 00       		.byte	0
 2095 00da 00       		.byte	0
 2096 00db 0F       		.uleb128 0xf
 2097 00dc 34       		.uleb128 0x34
 2098 00dd 00       		.byte	0
 2099 00de 03       		.uleb128 0x3
 2100 00df 08       		.uleb128 0x8
 2101 00e0 3A       		.uleb128 0x3a
 2102 00e1 0B       		.uleb128 0xb
 2103 00e2 3B       		.uleb128 0x3b
 2104 00e3 05       		.uleb128 0x5
 2105 00e4 49       		.uleb128 0x49
 2106 00e5 13       		.uleb128 0x13
 2107 00e6 02       		.uleb128 0x2
 2108 00e7 18       		.uleb128 0x18
 2109 00e8 00       		.byte	0
 2110 00e9 00       		.byte	0
 2111 00ea 10       		.uleb128 0x10
 2112 00eb 34       		.uleb128 0x34
 2113 00ec 00       		.byte	0
 2114 00ed 03       		.uleb128 0x3
 2115 00ee 0E       		.uleb128 0xe
 2116 00ef 3A       		.uleb128 0x3a
 2117 00f0 0B       		.uleb128 0xb
 2118 00f1 3B       		.uleb128 0x3b
 2119 00f2 05       		.uleb128 0x5
 2120 00f3 49       		.uleb128 0x49
 2121 00f4 13       		.uleb128 0x13
 2122 00f5 3F       		.uleb128 0x3f
 2123 00f6 19       		.uleb128 0x19
 2124 00f7 3C       		.uleb128 0x3c
 2125 00f8 19       		.uleb128 0x19
 2126 00f9 00       		.byte	0
 2127 00fa 00       		.byte	0
 2128 00fb 11       		.uleb128 0x11
 2129 00fc 34       		.uleb128 0x34
 2130 00fd 00       		.byte	0
 2131 00fe 03       		.uleb128 0x3
 2132 00ff 0E       		.uleb128 0xe
 2133 0100 3A       		.uleb128 0x3a
 2134 0101 0B       		.uleb128 0xb
 2135 0102 3B       		.uleb128 0x3b
 2136 0103 0B       		.uleb128 0xb
 2137 0104 49       		.uleb128 0x49
 2138 0105 13       		.uleb128 0x13
 2139 0106 3F       		.uleb128 0x3f
 2140 0107 19       		.uleb128 0x19
 2141 0108 02       		.uleb128 0x2
 2142 0109 18       		.uleb128 0x18
 2143 010a 00       		.byte	0
 2144 010b 00       		.byte	0
 2145 010c 12       		.uleb128 0x12
 2146 010d 01       		.uleb128 0x1
 2147 010e 01       		.byte	0x1
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccH007Pe.s 			page 45


 2148 010f 49       		.uleb128 0x49
 2149 0110 13       		.uleb128 0x13
 2150 0111 01       		.uleb128 0x1
 2151 0112 13       		.uleb128 0x13
 2152 0113 00       		.byte	0
 2153 0114 00       		.byte	0
 2154 0115 13       		.uleb128 0x13
 2155 0116 21       		.uleb128 0x21
 2156 0117 00       		.byte	0
 2157 0118 49       		.uleb128 0x49
 2158 0119 13       		.uleb128 0x13
 2159 011a 2F       		.uleb128 0x2f
 2160 011b 0B       		.uleb128 0xb
 2161 011c 00       		.byte	0
 2162 011d 00       		.byte	0
 2163 011e 14       		.uleb128 0x14
 2164 011f 34       		.uleb128 0x34
 2165 0120 00       		.byte	0
 2166 0121 03       		.uleb128 0x3
 2167 0122 08       		.uleb128 0x8
 2168 0123 3A       		.uleb128 0x3a
 2169 0124 0B       		.uleb128 0xb
 2170 0125 3B       		.uleb128 0x3b
 2171 0126 0B       		.uleb128 0xb
 2172 0127 49       		.uleb128 0x49
 2173 0128 13       		.uleb128 0x13
 2174 0129 3F       		.uleb128 0x3f
 2175 012a 19       		.uleb128 0x19
 2176 012b 02       		.uleb128 0x2
 2177 012c 18       		.uleb128 0x18
 2178 012d 00       		.byte	0
 2179 012e 00       		.byte	0
 2180 012f 00       		.byte	0
 2181              		.section	.debug_aranges,"",%progbits
 2182 0000 34000000 		.4byte	0x34
 2183 0004 0200     		.2byte	0x2
 2184 0006 00000000 		.4byte	.Ldebug_info0
 2185 000a 04       		.byte	0x4
 2186 000b 00       		.byte	0
 2187 000c 0000     		.2byte	0
 2188 000e 0000     		.2byte	0
 2189 0010 00000000 		.4byte	.LFB64
 2190 0014 54000000 		.4byte	.LFE64-.LFB64
 2191 0018 00000000 		.4byte	.LFB65
 2192 001c 50010000 		.4byte	.LFE65-.LFB65
 2193 0020 00000000 		.4byte	.LFB66
 2194 0024 C0020000 		.4byte	.LFE66-.LFB66
 2195 0028 00000000 		.4byte	.LFB67
 2196 002c 34030000 		.4byte	.LFE67-.LFB67
 2197 0030 00000000 		.4byte	0
 2198 0034 00000000 		.4byte	0
 2199              		.section	.debug_ranges,"",%progbits
 2200              	.Ldebug_ranges0:
 2201 0000 00000000 		.4byte	.LFB64
 2202 0004 54000000 		.4byte	.LFE64
 2203 0008 00000000 		.4byte	.LFB65
 2204 000c 50010000 		.4byte	.LFE65
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccH007Pe.s 			page 46


 2205 0010 00000000 		.4byte	.LFB66
 2206 0014 C0020000 		.4byte	.LFE66
 2207 0018 00000000 		.4byte	.LFB67
 2208 001c 34030000 		.4byte	.LFE67
 2209 0020 00000000 		.4byte	0
 2210 0024 00000000 		.4byte	0
 2211              		.section	.debug_line,"",%progbits
 2212              	.Ldebug_line0:
 2213 0000 D8020000 		.section	.debug_str,"MS",%progbits,1
 2213      02004C01 
 2213      00000201 
 2213      FB0E0D00 
 2213      01010101 
 2214              	.LASF35:
 2215 0000 70726576 		.ascii	"prev_err\000"
 2215      5F657272 
 2215      00
 2216              	.LASF31:
 2217 0009 6E65775F 		.ascii	"new_pos_set\000"
 2217      706F735F 
 2217      73657400 
 2218              	.LASF39:
 2219 0015 74656D70 		.ascii	"temp\000"
 2219      00
 2220              	.LASF2:
 2221 001a 73686F72 		.ascii	"short int\000"
 2221      7420696E 
 2221      7400
 2222              	.LASF21:
 2223 0024 6F666673 		.ascii	"offset_lower\000"
 2223      65745F6C 
 2223      6F776572 
 2223      00
 2224              	.LASF18:
 2225 0031 73697A65 		.ascii	"sizetype\000"
 2225      74797065 
 2225      00
 2226              	.LASF46:
 2227 003a 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 2227      43313120 
 2227      352E342E 
 2227      31203230 
 2227      31363036 
 2228 006d 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 2228      20726576 
 2228      6973696F 
 2228      6E203233 
 2228      37373135 
 2229 00a0 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 2229      66756E63 
 2229      74696F6E 
 2229      2D736563 
 2229      74696F6E 
 2230              	.LASF26:
 2231 00c8 6D61696E 		.ascii	"main\000"
 2231      00
 2232              	.LASF40:
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccH007Pe.s 			page 47


 2233 00cd 68656C70 		.ascii	"help\000"
 2233      00
 2234              	.LASF45:
 2235 00d2 6C65645F 		.ascii	"led_switch\000"
 2235      73776974 
 2235      636800
 2236              	.LASF30:
 2237 00dd 64617461 		.ascii	"data_read_mode\000"
 2237      5F726561 
 2237      645F6D6F 
 2237      646500
 2238              	.LASF19:
 2239 00ec 70756C73 		.ascii	"pulse\000"
 2239      6500
 2240              	.LASF11:
 2241 00f2 75696E74 		.ascii	"uint8\000"
 2241      3800
 2242              	.LASF29:
 2243 00f8 6572726F 		.ascii	"errorStatus\000"
 2243      72537461 
 2243      74757300 
 2244              	.LASF0:
 2245 0104 7369676E 		.ascii	"signed char\000"
 2245      65642063 
 2245      68617200 
 2246              	.LASF13:
 2247 0110 666C6F61 		.ascii	"float\000"
 2247      7400
 2248              	.LASF6:
 2249 0116 6C6F6E67 		.ascii	"long long int\000"
 2249      206C6F6E 
 2249      6720696E 
 2249      7400
 2250              	.LASF37:
 2251 0124 6F666673 		.ascii	"offsets\000"
 2251      65747300 
 2252              	.LASF4:
 2253 012c 6C6F6E67 		.ascii	"long int\000"
 2253      20696E74 
 2253      00
 2254              	.LASF42:
 2255 0135 63796C5F 		.ascii	"cyl_no\000"
 2255      6E6F00
 2256              	.LASF1:
 2257 013c 756E7369 		.ascii	"unsigned char\000"
 2257      676E6564 
 2257      20636861 
 2257      7200
 2258              	.LASF43:
 2259 014a 6D6F7669 		.ascii	"moving_median\000"
 2259      6E675F6D 
 2259      65646961 
 2259      6E00
 2260              	.LASF33:
 2261 0158 70756C73 		.ascii	"pulse_temp\000"
 2261      655F7465 
 2261      6D7000
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccH007Pe.s 			page 48


 2262              	.LASF17:
 2263 0163 6C6F6E67 		.ascii	"long double\000"
 2263      20646F75 
 2263      626C6500 
 2264              	.LASF24:
 2265 016f 72785374 		.ascii	"rxStatus\000"
 2265      61747573 
 2265      00
 2266              	.LASF32:
 2267 0178 6E65775F 		.ascii	"new_pos\000"
 2267      706F7300 
 2268              	.LASF34:
 2269 0180 61646356 		.ascii	"adcValue\000"
 2269      616C7565 
 2269      00
 2270              	.LASF7:
 2271 0189 6C6F6E67 		.ascii	"long long unsigned int\000"
 2271      206C6F6E 
 2271      6720756E 
 2271      7369676E 
 2271      65642069 
 2272              	.LASF8:
 2273 01a0 756E7369 		.ascii	"unsigned int\000"
 2273      676E6564 
 2273      20696E74 
 2273      00
 2274              	.LASF27:
 2275 01ad 74696D65 		.ascii	"time\000"
 2275      00
 2276              	.LASF23:
 2277 01b2 52784973 		.ascii	"RxIsr\000"
 2277      7200
 2278              	.LASF3:
 2279 01b8 73686F72 		.ascii	"short unsigned int\000"
 2279      7420756E 
 2279      7369676E 
 2279      65642069 
 2279      6E7400
 2280              	.LASF48:
 2281 01cb 433A5C55 		.ascii	"C:\\Users\\Andrew\\Documents\\GitHub\\Hydraulic-Mim"
 2281      73657273 
 2281      5C416E64 
 2281      7265775C 
 2281      446F6375 
 2282 01f9 69632D41 		.ascii	"ic-Arm\\PSOC_arm_project.cydsn\000"
 2282      726D5C50 
 2282      534F435F 
 2282      61726D5F 
 2282      70726F6A 
 2283              	.LASF15:
 2284 0217 63686172 		.ascii	"char\000"
 2284      00
 2285              	.LASF10:
 2286 021c 696E7433 		.ascii	"int32_t\000"
 2286      325F7400 
 2287              	.LASF12:
 2288 0224 75696E74 		.ascii	"uint16\000"
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccH007Pe.s 			page 49


 2288      313600
 2289              	.LASF47:
 2290 022b 6D61696E 		.ascii	"main.c\000"
 2290      2E6300
 2291              	.LASF16:
 2292 0232 72656738 		.ascii	"reg8\000"
 2292      00
 2293              	.LASF5:
 2294 0237 6C6F6E67 		.ascii	"long unsigned int\000"
 2294      20756E73 
 2294      69676E65 
 2294      6420696E 
 2294      7400
 2295              	.LASF36:
 2296 0249 7069645F 		.ascii	"pid_integral\000"
 2296      696E7465 
 2296      6772616C 
 2296      00
 2297              	.LASF9:
 2298 0256 5F5F696E 		.ascii	"__int32_t\000"
 2298      7433325F 
 2298      7400
 2299              	.LASF20:
 2300 0260 6F666673 		.ascii	"offset_upper\000"
 2300      65745F75 
 2300      70706572 
 2300      00
 2301              	.LASF49:
 2302 026d 70756C73 		.ascii	"pulseCheck\000"
 2302      65436865 
 2302      636B00
 2303              	.LASF41:
 2304 0278 73746172 		.ascii	"start_calib\000"
 2304      745F6361 
 2304      6C696200 
 2305              	.LASF25:
 2306 0284 72784461 		.ascii	"rxData\000"
 2306      746100
 2307              	.LASF22:
 2308 028b 6164635F 		.ascii	"adc_update\000"
 2308      75706461 
 2308      746500
 2309              	.LASF44:
 2310 0296 74656D70 		.ascii	"tempArray\000"
 2310      41727261 
 2310      7900
 2311              	.LASF38:
 2312 02a0 73656E64 		.ascii	"sendValue\000"
 2312      56616C75 
 2312      6500
 2313              	.LASF14:
 2314 02aa 646F7562 		.ascii	"double\000"
 2314      6C6500
 2315              	.LASF28:
 2316 02b1 49544D5F 		.ascii	"ITM_RxBuffer\000"
 2316      52784275 
 2316      66666572 
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccH007Pe.s 			page 50


 2316      00
 2317              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
