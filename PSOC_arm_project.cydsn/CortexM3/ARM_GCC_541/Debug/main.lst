ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccqTb6dr.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.syntax unified
  20              		.global _printf_float
  21              		.thumb
  22              		.syntax unified
  23              		.global	errorStatus
  24              		.bss
  25              		.type	errorStatus, %object
  26              		.size	errorStatus, 1
  27              	errorStatus:
  28 0000 00       		.space	1
  29              		.global	__aeabi_i2d
  30              		.global	__aeabi_dadd
  31              		.global	__aeabi_ddiv
  32              		.global	__aeabi_dmul
  33              		.global	__aeabi_d2uiz
  34              		.section	.text.dutycyclelength,"ax",%progbits
  35              		.align	2
  36              		.global	dutycyclelength
  37              		.thumb
  38              		.thumb_func
  39              		.type	dutycyclelength, %function
  40              	dutycyclelength:
  41              	.LFB64:
  42              		.file 1 "main.c"
   1:main.c        **** 
   2:main.c        **** #include <project.h>
   3:main.c        **** #include <stdio.h>
   4:main.c        **** #include "common.h"
   5:main.c        **** #include <math.h>
   6:main.c        **** #include <stdlib.h>     /* strtod */
   7:main.c        **** 
   8:main.c        **** #define	Frequency 1000000.0			// Frequency of PWMClock
   9:main.c        **** #define	One_ms (Frequency/1000.0)	// 1 ms constant
  10:main.c        **** #define filter_size 7
  11:main.c        **** 
  12:main.c        **** /* Add an explicit reference to the floating point printf library to allow
  13:main.c        **** the usage of floating point conversion specifier */
  14:main.c        **** #if defined (__GNUC__)
  15:main.c        ****     asm (".global _printf_float");
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccqTb6dr.s 			page 2


  16:main.c        **** #endif
  17:main.c        **** 
  18:main.c        **** uint8 errorStatus = 0u;
  19:main.c        **** 
  20:main.c        **** uint16 dutycyclelength(int angle)
  21:main.c        **** {
  43              		.loc 1 21 0
  44              		.cfi_startproc
  45              		@ args = 0, pretend = 0, frame = 16
  46              		@ frame_needed = 1, uses_anonymous_args = 0
  47 0000 90B5     		push	{r4, r7, lr}
  48              		.cfi_def_cfa_offset 12
  49              		.cfi_offset 4, -12
  50              		.cfi_offset 7, -8
  51              		.cfi_offset 14, -4
  52 0002 85B0     		sub	sp, sp, #20
  53              		.cfi_def_cfa_offset 32
  54 0004 00AF     		add	r7, sp, #0
  55              		.cfi_def_cfa_register 7
  56 0006 7860     		str	r0, [r7, #4]
  22:main.c        ****     uint16 pulselength=(uint16)One_ms + ((angle+4500.0)/9000.0) * One_ms;
  57              		.loc 1 22 0
  58 0008 7868     		ldr	r0, [r7, #4]
  59 000a FFF7FEFF 		bl	__aeabi_i2d
  60 000e 16A3     		adr	r3, .L3
  61 0010 D3E90023 		ldrd	r2, [r3]
  62 0014 FFF7FEFF 		bl	__aeabi_dadd
  63 0018 0346     		mov	r3, r0
  64 001a 0C46     		mov	r4, r1
  65 001c 1846     		mov	r0, r3
  66 001e 2146     		mov	r1, r4
  67 0020 13A3     		adr	r3, .L3+8
  68 0022 D3E90023 		ldrd	r2, [r3]
  69 0026 FFF7FEFF 		bl	__aeabi_ddiv
  70 002a 0346     		mov	r3, r0
  71 002c 0C46     		mov	r4, r1
  72 002e 1846     		mov	r0, r3
  73 0030 2146     		mov	r1, r4
  74 0032 4FF00002 		mov	r2, #0
  75 0036 104B     		ldr	r3, .L3+16
  76 0038 FFF7FEFF 		bl	__aeabi_dmul
  77 003c 0346     		mov	r3, r0
  78 003e 0C46     		mov	r4, r1
  79 0040 1846     		mov	r0, r3
  80 0042 2146     		mov	r1, r4
  81 0044 4FF00002 		mov	r2, #0
  82 0048 0B4B     		ldr	r3, .L3+16
  83 004a FFF7FEFF 		bl	__aeabi_dadd
  84 004e 0346     		mov	r3, r0
  85 0050 0C46     		mov	r4, r1
  86 0052 1846     		mov	r0, r3
  87 0054 2146     		mov	r1, r4
  88 0056 FFF7FEFF 		bl	__aeabi_d2uiz
  89 005a 0346     		mov	r3, r0
  90 005c FB81     		strh	r3, [r7, #14]	@ movhi
  23:main.c        ****     return pulselength;
  91              		.loc 1 23 0
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccqTb6dr.s 			page 3


  92 005e FB89     		ldrh	r3, [r7, #14]
  24:main.c        **** }
  93              		.loc 1 24 0
  94 0060 1846     		mov	r0, r3
  95 0062 1437     		adds	r7, r7, #20
  96              		.cfi_def_cfa_offset 12
  97 0064 BD46     		mov	sp, r7
  98              		.cfi_def_cfa_register 13
  99              		@ sp needed
 100 0066 90BD     		pop	{r4, r7, pc}
 101              	.L4:
 102              		.align	3
 103              	.L3:
 104 0068 00000000 		.word	0
 105 006c 0094B140 		.word	1085379584
 106 0070 00000000 		.word	0
 107 0074 0094C140 		.word	1086428160
 108 0078 00408F40 		.word	1083129856
 109              		.cfi_endproc
 110              	.LFE64:
 111              		.size	dutycyclelength, .-dutycyclelength
 112              		.global	data_read_mode
 113              		.bss
 114 0001 000000   		.align	2
 115              		.type	data_read_mode, %object
 116              		.size	data_read_mode, 4
 117              	data_read_mode:
 118 0004 00000000 		.space	4
 119              		.global	new_angle
 120              		.align	2
 121              		.type	new_angle, %object
 122              		.size	new_angle, 4
 123              	new_angle:
 124 0008 00000000 		.space	4
 125              		.global	new_pos_set
 126              		.align	2
 127              		.type	new_pos_set, %object
 128              		.size	new_pos_set, 4
 129              	new_pos_set:
 130 000c 00000000 		.space	4
 131              		.global	angle
 132              		.align	3
 133              		.type	angle, %object
 134              		.size	angle, 8
 135              	angle:
 136 0010 00000000 		.space	8
 136      00000000 
 137              		.global	angletemp
 138              		.align	3
 139              		.type	angletemp, %object
 140              		.size	angletemp, 8
 141              	angletemp:
 142 0018 00000000 		.space	8
 142      00000000 
 143              		.global	isNegative
 144              		.align	2
 145              		.type	isNegative, %object
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccqTb6dr.s 			page 4


 146              		.size	isNegative, 4
 147              	isNegative:
 148 0020 00000000 		.space	4
 149              		.comm	sendValue,100,4
 150              		.comm	adcValue1,2,2
 151              		.comm	adcValue2,2,2
 152              		.comm	temp,20,4
 153              		.global	nn
 154              		.align	2
 155              		.type	nn, %object
 156              		.size	nn, 4
 157              	nn:
 158 0024 00000000 		.space	4
 159              		.global	pid
 160              		.data
 161              		.align	3
 162              		.type	pid, %object
 163              		.size	pid, 24
 164              	pid:
 165 0000 9A999999 		.word	-1717986918
 166 0004 9999A93F 		.word	1068079513
 167 0008 00000000 		.word	0
 168 000c 00000000 		.word	0
 169 0010 00000000 		.word	0
 170 0014 00000000 		.word	0
 171              		.comm	help,100,4
 172              		.global	tt
 173              		.bss
 174              		.align	2
 175              		.type	tt, %object
 176              		.size	tt, 4
 177              	tt:
 178 0028 00000000 		.space	4
 179              		.global	pos
 180              		.data
 181              		.align	2
 182              		.type	pos, %object
 183              		.size	pos, 4
 184              	pos:
 185 0018 40060000 		.word	1600
 186              		.comm	new_pos,4,4
 187              		.comm	err,8,8
 188              		.global	moving_median
 189              		.bss
 190              		.align	2
 191              		.type	moving_median, %object
 192              		.size	moving_median, 14
 193              	moving_median:
 194 002c 00000000 		.space	14
 194      00000000 
 194      00000000 
 194      0000
 195              		.comm	tempArray,14,4
 196              		.comm	tmp,2,2
 197              		.section	.text.adc_update,"ax",%progbits
 198              		.align	2
 199              		.global	adc_update
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccqTb6dr.s 			page 5


 200              		.thumb
 201              		.thumb_func
 202              		.type	adc_update, %function
 203              	adc_update:
 204              	.LFB65:
  25:main.c        **** 
  26:main.c        **** /*******************************************************************************
  27:main.c        **** * Function Name: RxIsr
  28:main.c        **** ********************************************************************************
  29:main.c        **** *
  30:main.c        **** * Summary:
  31:main.c        **** *  Interrupt Service Routine for RX portion of the UART
  32:main.c        **** *
  33:main.c        **** * Parameters:
  34:main.c        **** *  None.
  35:main.c        **** *
  36:main.c        **** * Return:
  37:main.c        **** *  None.
  38:main.c        **** *
  39:main.c        **** *******************************************************************************/
  40:main.c        **** int data_read_mode = 0;
  41:main.c        **** volatile int new_angle = 0;
  42:main.c        **** volatile int new_pos_set = 0;
  43:main.c        **** double angle = 0;
  44:main.c        **** double angletemp=0;
  45:main.c        **** int isNegative=0;
  46:main.c        **** char sendValue[100];
  47:main.c        **** uint16 adcValue1;
  48:main.c        **** uint16 adcValue2;
  49:main.c        **** char temp[20];
  50:main.c        **** int nn=0;
  51:main.c        **** double pid[3] = {0.05,0.000,0};
  52:main.c        **** //double pid[3] = { -2.22,-0.0307,0.0 };
  53:main.c        **** char help[100];
  54:main.c        **** int tt = 0;
  55:main.c        **** int pos=1600;
  56:main.c        **** int new_pos;
  57:main.c        **** double err;
  58:main.c        **** 
  59:main.c        **** 
  60:main.c        **** uint16 moving_median[filter_size] = {0,0,0};
  61:main.c        **** uint16 tempArray[filter_size];
  62:main.c        **** uint16 tmp;
  63:main.c        **** 
  64:main.c        **** CY_ISR(adc_update){
 205              		.loc 1 64 0
 206              		.cfi_startproc
 207              		@ args = 0, pretend = 0, frame = 16
 208              		@ frame_needed = 1, uses_anonymous_args = 0
 209 0000 80B5     		push	{r7, lr}
 210              		.cfi_def_cfa_offset 8
 211              		.cfi_offset 7, -8
 212              		.cfi_offset 14, -4
 213 0002 84B0     		sub	sp, sp, #16
 214              		.cfi_def_cfa_offset 24
 215 0004 00AF     		add	r7, sp, #0
 216              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccqTb6dr.s 			page 6


 217              	.LBB2:
  65:main.c        ****     for(int j=0;j<filter_size-1;j++){
 218              		.loc 1 65 0
 219 0006 0023     		movs	r3, #0
 220 0008 FB60     		str	r3, [r7, #12]
 221 000a 0BE0     		b	.L6
 222              	.L7:
  66:main.c        ****             moving_median[j] = moving_median[j+1]; 
 223              		.loc 1 66 0 discriminator 3
 224 000c FB68     		ldr	r3, [r7, #12]
 225 000e 0133     		adds	r3, r3, #1
 226 0010 354A     		ldr	r2, .L16
 227 0012 32F81310 		ldrh	r1, [r2, r3, lsl #1]
 228 0016 344A     		ldr	r2, .L16
 229 0018 FB68     		ldr	r3, [r7, #12]
 230 001a 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
  65:main.c        ****     for(int j=0;j<filter_size-1;j++){
 231              		.loc 1 65 0 discriminator 3
 232 001e FB68     		ldr	r3, [r7, #12]
 233 0020 0133     		adds	r3, r3, #1
 234 0022 FB60     		str	r3, [r7, #12]
 235              	.L6:
  65:main.c        ****     for(int j=0;j<filter_size-1;j++){
 236              		.loc 1 65 0 is_stmt 0 discriminator 1
 237 0024 FB68     		ldr	r3, [r7, #12]
 238 0026 052B     		cmp	r3, #5
 239 0028 F0DD     		ble	.L7
 240              	.LBE2:
  67:main.c        ****     }
  68:main.c        ****     ADC_SAR_1_StartConvert();
 241              		.loc 1 68 0 is_stmt 1
 242 002a FFF7FEFF 		bl	ADC_SAR_1_StartConvert
  69:main.c        ****     ADC_SAR_1_IsEndConversion(ADC_SAR_1_WAIT_FOR_RESULT);
 243              		.loc 1 69 0
 244 002e 0020     		movs	r0, #0
 245 0030 FFF7FEFF 		bl	ADC_SAR_1_IsEndConversion
  70:main.c        ****         
  71:main.c        ****     moving_median[filter_size-1] = ADC_SAR_1_GetResult16();
 246              		.loc 1 71 0
 247 0034 FFF7FEFF 		bl	ADC_SAR_1_GetResult16
 248 0038 0346     		mov	r3, r0
 249 003a 9AB2     		uxth	r2, r3
 250 003c 2A4B     		ldr	r3, .L16
 251 003e 9A81     		strh	r2, [r3, #12]	@ movhi
 252              	.LBB3:
  72:main.c        ****     
  73:main.c        ****     for(int j=0;j<filter_size;j++){
 253              		.loc 1 73 0
 254 0040 0023     		movs	r3, #0
 255 0042 BB60     		str	r3, [r7, #8]
 256 0044 0AE0     		b	.L8
 257              	.L9:
  74:main.c        ****             tempArray[j] = moving_median[j]; 
 258              		.loc 1 74 0 discriminator 3
 259 0046 284A     		ldr	r2, .L16
 260 0048 BB68     		ldr	r3, [r7, #8]
 261 004a 32F81310 		ldrh	r1, [r2, r3, lsl #1]
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccqTb6dr.s 			page 7


 262 004e 274A     		ldr	r2, .L16+4
 263 0050 BB68     		ldr	r3, [r7, #8]
 264 0052 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
  73:main.c        ****             tempArray[j] = moving_median[j]; 
 265              		.loc 1 73 0 discriminator 3
 266 0056 BB68     		ldr	r3, [r7, #8]
 267 0058 0133     		adds	r3, r3, #1
 268 005a BB60     		str	r3, [r7, #8]
 269              	.L8:
  73:main.c        ****             tempArray[j] = moving_median[j]; 
 270              		.loc 1 73 0 is_stmt 0 discriminator 1
 271 005c BB68     		ldr	r3, [r7, #8]
 272 005e 062B     		cmp	r3, #6
 273 0060 F1DD     		ble	.L9
 274              	.LBE3:
 275              	.LBB4:
  75:main.c        ****     }
  76:main.c        ****     for(int i = 0; i < filter_size; i++){                     //Loop for ascending ordering
 276              		.loc 1 76 0 is_stmt 1
 277 0062 0023     		movs	r3, #0
 278 0064 7B60     		str	r3, [r7, #4]
 279 0066 29E0     		b	.L10
 280              	.L14:
 281              	.LBB5:
  77:main.c        ****     	for (int j = 0; j < filter_size; j++)             //Loop for comparing other values
 282              		.loc 1 77 0
 283 0068 0023     		movs	r3, #0
 284 006a 3B60     		str	r3, [r7]
 285 006c 20E0     		b	.L11
 286              	.L13:
  78:main.c        ****     	{
  79:main.c        ****     		if (tempArray[j] > tempArray[i])                //Comparing other array elements
 287              		.loc 1 79 0
 288 006e 1F4A     		ldr	r2, .L16+4
 289 0070 3B68     		ldr	r3, [r7]
 290 0072 32F81320 		ldrh	r2, [r2, r3, lsl #1]
 291 0076 1D49     		ldr	r1, .L16+4
 292 0078 7B68     		ldr	r3, [r7, #4]
 293 007a 31F81330 		ldrh	r3, [r1, r3, lsl #1]
 294 007e 9A42     		cmp	r2, r3
 295 0080 13D9     		bls	.L12
  80:main.c        ****     		{
  81:main.c        ****     			tmp = tempArray[i];         //Using temporary variable for storing last value
 296              		.loc 1 81 0
 297 0082 1A4A     		ldr	r2, .L16+4
 298 0084 7B68     		ldr	r3, [r7, #4]
 299 0086 32F81320 		ldrh	r2, [r2, r3, lsl #1]
 300 008a 194B     		ldr	r3, .L16+8
 301 008c 1A80     		strh	r2, [r3]	@ movhi
  82:main.c        ****     			tempArray[i] = tempArray[j];            //replacing value
 302              		.loc 1 82 0
 303 008e 174A     		ldr	r2, .L16+4
 304 0090 3B68     		ldr	r3, [r7]
 305 0092 32F81310 		ldrh	r1, [r2, r3, lsl #1]
 306 0096 154A     		ldr	r2, .L16+4
 307 0098 7B68     		ldr	r3, [r7, #4]
 308 009a 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccqTb6dr.s 			page 8


  83:main.c        ****     			tempArray[j] = tmp;             //storing last value
 309              		.loc 1 83 0
 310 009e 144B     		ldr	r3, .L16+8
 311 00a0 1988     		ldrh	r1, [r3]
 312 00a2 124A     		ldr	r2, .L16+4
 313 00a4 3B68     		ldr	r3, [r7]
 314 00a6 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
 315              	.L12:
  77:main.c        ****     	{
 316              		.loc 1 77 0 discriminator 2
 317 00aa 3B68     		ldr	r3, [r7]
 318 00ac 0133     		adds	r3, r3, #1
 319 00ae 3B60     		str	r3, [r7]
 320              	.L11:
  77:main.c        ****     	{
 321              		.loc 1 77 0 is_stmt 0 discriminator 1
 322 00b0 3B68     		ldr	r3, [r7]
 323 00b2 062B     		cmp	r3, #6
 324 00b4 DBDD     		ble	.L13
 325              	.LBE5:
  76:main.c        ****     	for (int j = 0; j < filter_size; j++)             //Loop for comparing other values
 326              		.loc 1 76 0 is_stmt 1 discriminator 2
 327 00b6 7B68     		ldr	r3, [r7, #4]
 328 00b8 0133     		adds	r3, r3, #1
 329 00ba 7B60     		str	r3, [r7, #4]
 330              	.L10:
  76:main.c        ****     	for (int j = 0; j < filter_size; j++)             //Loop for comparing other values
 331              		.loc 1 76 0 is_stmt 0 discriminator 1
 332 00bc 7B68     		ldr	r3, [r7, #4]
 333 00be 062B     		cmp	r3, #6
 334 00c0 D2DD     		ble	.L14
 335              	.LBE4:
  84:main.c        ****     		}  
  85:main.c        ****     	}
  86:main.c        ****     }
  87:main.c        ****     adcValue1 = tempArray[(filter_size-1)/2];
 336              		.loc 1 87 0 is_stmt 1
 337 00c2 0A4B     		ldr	r3, .L16+4
 338 00c4 DA88     		ldrh	r2, [r3, #6]
 339 00c6 0B4B     		ldr	r3, .L16+12
 340 00c8 1A80     		strh	r2, [r3]	@ movhi
  88:main.c        ****     if(adcValue1<4000){
 341              		.loc 1 88 0
 342 00ca 0A4B     		ldr	r3, .L16+12
 343 00cc 1B88     		ldrh	r3, [r3]
 344 00ce B3F57A6F 		cmp	r3, #4000
 345 00d2 03D2     		bcs	.L15
  89:main.c        ****         adcValue1 = adcValue1;
 346              		.loc 1 89 0
 347 00d4 074B     		ldr	r3, .L16+12
 348 00d6 1A88     		ldrh	r2, [r3]
 349 00d8 064B     		ldr	r3, .L16+12
 350 00da 1A80     		strh	r2, [r3]	@ movhi
 351              	.L15:
  90:main.c        ****     }
  91:main.c        ****     
  92:main.c        ****     update_median_isr_ClearPending();
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccqTb6dr.s 			page 9


 352              		.loc 1 92 0
 353 00dc FFF7FEFF 		bl	update_median_isr_ClearPending
  93:main.c        ****     
  94:main.c        **** }
 354              		.loc 1 94 0
 355 00e0 00BF     		nop
 356 00e2 1037     		adds	r7, r7, #16
 357              		.cfi_def_cfa_offset 8
 358 00e4 BD46     		mov	sp, r7
 359              		.cfi_def_cfa_register 13
 360              		@ sp needed
 361 00e6 80BD     		pop	{r7, pc}
 362              	.L17:
 363              		.align	2
 364              	.L16:
 365 00e8 00000000 		.word	moving_median
 366 00ec 00000000 		.word	tempArray
 367 00f0 00000000 		.word	tmp
 368 00f4 00000000 		.word	adcValue1
 369              		.cfi_endproc
 370              	.LFE65:
 371              		.size	adc_update, .-adc_update
 372              		.section	.rodata
 373              		.align	2
 374              	.LC0:
 375 0000 25303864 		.ascii	"%08d\011%8.2f\011%8.2f\000"
 375      0925382E 
 375      32660925 
 375      382E3266 
 375      00
 376              		.section	.text.RxIsr,"ax",%progbits
 377              		.align	2
 378              		.global	RxIsr
 379              		.thumb
 380              		.thumb_func
 381              		.type	RxIsr, %function
 382              	RxIsr:
 383              	.LFB66:
  95:main.c        **** 
  96:main.c        **** 
  97:main.c        **** CY_ISR(RxIsr)
  98:main.c        **** {
 384              		.loc 1 98 0
 385              		.cfi_startproc
 386              		@ args = 0, pretend = 0, frame = 8
 387              		@ frame_needed = 1, uses_anonymous_args = 0
 388 0000 90B5     		push	{r4, r7, lr}
 389              		.cfi_def_cfa_offset 12
 390              		.cfi_offset 4, -12
 391              		.cfi_offset 7, -8
 392              		.cfi_offset 14, -4
 393 0002 87B0     		sub	sp, sp, #28
 394              		.cfi_def_cfa_offset 40
 395 0004 04AF     		add	r7, sp, #16
 396              		.cfi_def_cfa 7, 24
 397              	.L45:
  99:main.c        ****     uint8 rxStatus;         
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccqTb6dr.s 			page 10


 100:main.c        ****     uint8 rxData;           
 101:main.c        ****     
 102:main.c        ****     do
 103:main.c        ****     {
 104:main.c        ****         /* Read receiver status register */
 105:main.c        ****         rxStatus = UART_RXSTATUS_REG;
 398              		.loc 1 105 0
 399 0006 934B     		ldr	r3, .L48
 400 0008 1B78     		ldrb	r3, [r3]
 401 000a FB70     		strb	r3, [r7, #3]
 106:main.c        **** 
 107:main.c        ****         if((rxStatus & (UART_RX_STS_BREAK      | UART_RX_STS_PAR_ERROR |
 108:main.c        ****                         UART_RX_STS_STOP_ERROR | UART_RX_STS_OVERRUN)) != 0u)
 402              		.loc 1 108 0
 403 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 404 000e 03F01E03 		and	r3, r3, #30
 107:main.c        ****                         UART_RX_STS_STOP_ERROR | UART_RX_STS_OVERRUN)) != 0u)
 405              		.loc 1 107 0
 406 0012 002B     		cmp	r3, #0
 407 0014 0CD0     		beq	.L19
 109:main.c        ****         {
 110:main.c        ****             /* ERROR handling. */
 111:main.c        ****             errorStatus |= rxStatus & ( UART_RX_STS_BREAK      | UART_RX_STS_PAR_ERROR | 
 408              		.loc 1 111 0
 409 0016 97F90330 		ldrsb	r3, [r7, #3]
 410 001a 03F01E03 		and	r3, r3, #30
 411 001e 5AB2     		sxtb	r2, r3
 412 0020 8D4B     		ldr	r3, .L48+4
 413 0022 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 414 0024 5BB2     		sxtb	r3, r3
 415 0026 1343     		orrs	r3, r3, r2
 416 0028 5BB2     		sxtb	r3, r3
 417 002a DAB2     		uxtb	r2, r3
 418 002c 8A4B     		ldr	r3, .L48+4
 419 002e 1A70     		strb	r2, [r3]
 420              	.L19:
 112:main.c        ****                                         UART_RX_STS_STOP_ERROR | UART_RX_STS_OVERRUN);
 113:main.c        ****         }
 114:main.c        ****         
 115:main.c        ****         if((rxStatus & UART_RX_STS_FIFO_NOTEMPTY) != 0u)
 421              		.loc 1 115 0
 422 0030 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 423 0032 03F02003 		and	r3, r3, #32
 424 0036 002B     		cmp	r3, #0
 425 0038 00F00181 		beq	.L20
 116:main.c        ****         {
 117:main.c        ****             /* Read data from the RX data register */
 118:main.c        ****             rxData = UART_RXDATA_REG;
 426              		.loc 1 118 0
 427 003c 874B     		ldr	r3, .L48+8
 428 003e 1B78     		ldrb	r3, [r3]
 429 0040 BB70     		strb	r3, [r7, #2]
 119:main.c        ****             help[tt] = rxData;
 430              		.loc 1 119 0
 431 0042 874B     		ldr	r3, .L48+12
 432 0044 1B68     		ldr	r3, [r3]
 433 0046 8749     		ldr	r1, .L48+16
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccqTb6dr.s 			page 11


 434 0048 BA78     		ldrb	r2, [r7, #2]
 435 004a CA54     		strb	r2, [r1, r3]
 120:main.c        ****             tt++;
 436              		.loc 1 120 0
 437 004c 844B     		ldr	r3, .L48+12
 438 004e 1B68     		ldr	r3, [r3]
 439 0050 0133     		adds	r3, r3, #1
 440 0052 834A     		ldr	r2, .L48+12
 441 0054 1360     		str	r3, [r2]
 121:main.c        ****             if(tt==99){tt=0;}
 442              		.loc 1 121 0
 443 0056 824B     		ldr	r3, .L48+12
 444 0058 1B68     		ldr	r3, [r3]
 445 005a 632B     		cmp	r3, #99
 446 005c 02D1     		bne	.L21
 447              		.loc 1 121 0 is_stmt 0 discriminator 1
 448 005e 804B     		ldr	r3, .L48+12
 449 0060 0022     		movs	r2, #0
 450 0062 1A60     		str	r2, [r3]
 451              	.L21:
 122:main.c        ****             
 123:main.c        ****             switch(data_read_mode)
 452              		.loc 1 123 0 is_stmt 1
 453 0064 804B     		ldr	r3, .L48+20
 454 0066 1B68     		ldr	r3, [r3]
 455 0068 052B     		cmp	r3, #5
 456 006a 00F2E880 		bhi	.L20
 457 006e 01A2     		adr	r2, .L24
 458 0070 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 459              		.p2align 2
 460              	.L24:
 461 0074 8D000000 		.word	.L23+1
 462 0078 C9000000 		.word	.L25+1
 463 007c 03010000 		.word	.L26+1
 464 0080 71010000 		.word	.L27+1
 465 0084 B3010000 		.word	.L28+1
 466 0088 F5010000 		.word	.L29+1
 467              		.p2align 1
 468              	.L23:
 124:main.c        ****             {
 125:main.c        ****                 case 0:
 126:main.c        ****                     if(rxData=='{' )
 469              		.loc 1 126 0
 470 008c BB78     		ldrb	r3, [r7, #2]	@ zero_extendqisi2
 471 008e 7B2B     		cmp	r3, #123
 472 0090 40F0D280 		bne	.L46
 473              	.LBB6:
 127:main.c        ****                     {
 128:main.c        ****                         for(int pp=1;pp<20;pp++){
 474              		.loc 1 128 0
 475 0094 0123     		movs	r3, #1
 476 0096 7B60     		str	r3, [r7, #4]
 477 0098 07E0     		b	.L31
 478              	.L32:
 129:main.c        ****                             temp[pp] = ' ';
 479              		.loc 1 129 0 discriminator 3
 480 009a 744A     		ldr	r2, .L48+24
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccqTb6dr.s 			page 12


 481 009c 7B68     		ldr	r3, [r7, #4]
 482 009e 1344     		add	r3, r3, r2
 483 00a0 2022     		movs	r2, #32
 484 00a2 1A70     		strb	r2, [r3]
 128:main.c        ****                             temp[pp] = ' ';
 485              		.loc 1 128 0 discriminator 3
 486 00a4 7B68     		ldr	r3, [r7, #4]
 487 00a6 0133     		adds	r3, r3, #1
 488 00a8 7B60     		str	r3, [r7, #4]
 489              	.L31:
 128:main.c        ****                             temp[pp] = ' ';
 490              		.loc 1 128 0 is_stmt 0 discriminator 1
 491 00aa 7B68     		ldr	r3, [r7, #4]
 492 00ac 132B     		cmp	r3, #19
 493 00ae F4DD     		ble	.L32
 494              	.LBE6:
 130:main.c        ****                         }
 131:main.c        ****                         temp[0] = '\0';
 495              		.loc 1 131 0 is_stmt 1
 496 00b0 6E4B     		ldr	r3, .L48+24
 497 00b2 0022     		movs	r2, #0
 498 00b4 1A70     		strb	r2, [r3]
 132:main.c        ****                         new_angle = 0;
 499              		.loc 1 132 0
 500 00b6 6E4B     		ldr	r3, .L48+28
 501 00b8 0022     		movs	r2, #0
 502 00ba 1A60     		str	r2, [r3]
 133:main.c        ****                         data_read_mode++;
 503              		.loc 1 133 0
 504 00bc 6A4B     		ldr	r3, .L48+20
 505 00be 1B68     		ldr	r3, [r3]
 506 00c0 0133     		adds	r3, r3, #1
 507 00c2 694A     		ldr	r2, .L48+20
 508 00c4 1360     		str	r3, [r2]
 134:main.c        ****                     }
 135:main.c        ****                 break;
 509              		.loc 1 135 0
 510 00c6 B7E0     		b	.L46
 511              	.L25:
 136:main.c        ****                 case 1:
 137:main.c        ****                     if(rxData=='x'){
 512              		.loc 1 137 0
 513 00c8 BB78     		ldrb	r3, [r7, #2]	@ zero_extendqisi2
 514 00ca 782B     		cmp	r3, #120
 515 00cc 03D1     		bne	.L33
 138:main.c        ****                         data_read_mode = 2;}
 516              		.loc 1 138 0
 517 00ce 664B     		ldr	r3, .L48+20
 518 00d0 0222     		movs	r2, #2
 519 00d2 1A60     		str	r2, [r3]
 139:main.c        ****                     else if(rxData=='p'){
 140:main.c        ****                         data_read_mode = 3;}
 141:main.c        ****                     else if(rxData=='i'){
 142:main.c        ****                         data_read_mode = 4;}
 143:main.c        ****                     else if(rxData=='d'){
 144:main.c        ****                         data_read_mode = 5;}
 145:main.c        ****                 break;
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccqTb6dr.s 			page 13


 520              		.loc 1 145 0
 521 00d4 B2E0     		b	.L47
 522              	.L33:
 139:main.c        ****                     else if(rxData=='p'){
 523              		.loc 1 139 0
 524 00d6 BB78     		ldrb	r3, [r7, #2]	@ zero_extendqisi2
 525 00d8 702B     		cmp	r3, #112
 526 00da 03D1     		bne	.L35
 140:main.c        ****                     else if(rxData=='i'){
 527              		.loc 1 140 0
 528 00dc 624B     		ldr	r3, .L48+20
 529 00de 0322     		movs	r2, #3
 530 00e0 1A60     		str	r2, [r3]
 531              		.loc 1 145 0
 532 00e2 ABE0     		b	.L47
 533              	.L35:
 141:main.c        ****                         data_read_mode = 4;}
 534              		.loc 1 141 0
 535 00e4 BB78     		ldrb	r3, [r7, #2]	@ zero_extendqisi2
 536 00e6 692B     		cmp	r3, #105
 537 00e8 03D1     		bne	.L36
 142:main.c        ****                     else if(rxData=='d'){
 538              		.loc 1 142 0
 539 00ea 5F4B     		ldr	r3, .L48+20
 540 00ec 0422     		movs	r2, #4
 541 00ee 1A60     		str	r2, [r3]
 542              		.loc 1 145 0
 543 00f0 A4E0     		b	.L47
 544              	.L36:
 143:main.c        ****                         data_read_mode = 5;}
 545              		.loc 1 143 0
 546 00f2 BB78     		ldrb	r3, [r7, #2]	@ zero_extendqisi2
 547 00f4 642B     		cmp	r3, #100
 548 00f6 40F0A180 		bne	.L47
 144:main.c        ****                 break;
 549              		.loc 1 144 0
 550 00fa 5B4B     		ldr	r3, .L48+20
 551 00fc 0522     		movs	r2, #5
 552 00fe 1A60     		str	r2, [r3]
 553              		.loc 1 145 0
 554 0100 9CE0     		b	.L47
 555              	.L26:
 146:main.c        ****                 case 2:
 147:main.c        ****                     if(rxData != '}'){
 556              		.loc 1 147 0
 557 0102 BB78     		ldrb	r3, [r7, #2]	@ zero_extendqisi2
 558 0104 7D2B     		cmp	r3, #125
 559 0106 0AD0     		beq	.L37
 148:main.c        ****                         temp[nn] = rxData;
 560              		.loc 1 148 0
 561 0108 5A4B     		ldr	r3, .L48+32
 562 010a 1B68     		ldr	r3, [r3]
 563 010c 5749     		ldr	r1, .L48+24
 564 010e BA78     		ldrb	r2, [r7, #2]
 565 0110 CA54     		strb	r2, [r1, r3]
 149:main.c        ****                         nn++;
 566              		.loc 1 149 0
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccqTb6dr.s 			page 14


 567 0112 584B     		ldr	r3, .L48+32
 568 0114 1B68     		ldr	r3, [r3]
 569 0116 0133     		adds	r3, r3, #1
 570 0118 564A     		ldr	r2, .L48+32
 571 011a 1360     		str	r3, [r2]
 150:main.c        ****                     }
 151:main.c        ****                     else {
 152:main.c        ****                         new_pos = (int) strtol(temp, (char **)NULL, 10);
 153:main.c        ****                         new_pos_set = 1;
 154:main.c        ****                         nn=0; 
 155:main.c        ****                     
 156:main.c        ****                         sprintf(sendValue,"%08d\t%8.2f\t%8.2f",adcValue1,err,angletemp);
 157:main.c        ****                         UART_PutString(sendValue);
 158:main.c        ****                         temp[0] = '\0';
 159:main.c        ****                         
 160:main.c        ****                         data_read_mode = 0;
 161:main.c        ****                     }
 162:main.c        ****                   
 163:main.c        ****                 break;
 572              		.loc 1 163 0
 573 011c 8FE0     		b	.L20
 574              	.L37:
 152:main.c        ****                         new_pos_set = 1;
 575              		.loc 1 152 0
 576 011e 0A22     		movs	r2, #10
 577 0120 0021     		movs	r1, #0
 578 0122 5248     		ldr	r0, .L48+24
 579 0124 FFF7FEFF 		bl	strtol
 580 0128 0246     		mov	r2, r0
 581 012a 534B     		ldr	r3, .L48+36
 582 012c 1A60     		str	r2, [r3]
 153:main.c        ****                         nn=0; 
 583              		.loc 1 153 0
 584 012e 534B     		ldr	r3, .L48+40
 585 0130 0122     		movs	r2, #1
 586 0132 1A60     		str	r2, [r3]
 154:main.c        ****                     
 587              		.loc 1 154 0
 588 0134 4F4B     		ldr	r3, .L48+32
 589 0136 0022     		movs	r2, #0
 590 0138 1A60     		str	r2, [r3]
 156:main.c        ****                         UART_PutString(sendValue);
 591              		.loc 1 156 0
 592 013a 514B     		ldr	r3, .L48+44
 593 013c 1B88     		ldrh	r3, [r3]
 594 013e 1846     		mov	r0, r3
 595 0140 504B     		ldr	r3, .L48+48
 596 0142 18CB     		ldmia	r3, {r3-r4}
 597 0144 504A     		ldr	r2, .L48+52
 598 0146 D2E90012 		ldrd	r1, [r2]
 599 014a CDE90212 		strd	r1, [sp, #8]
 600 014e CDE90034 		strd	r3, [sp]
 601 0152 0246     		mov	r2, r0
 602 0154 4D49     		ldr	r1, .L48+56
 603 0156 4E48     		ldr	r0, .L48+60
 604 0158 FFF7FEFF 		bl	sprintf
 157:main.c        ****                         temp[0] = '\0';
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccqTb6dr.s 			page 15


 605              		.loc 1 157 0
 606 015c 4C48     		ldr	r0, .L48+60
 607 015e FFF7FEFF 		bl	UART_PutString
 158:main.c        ****                         
 608              		.loc 1 158 0
 609 0162 424B     		ldr	r3, .L48+24
 610 0164 0022     		movs	r2, #0
 611 0166 1A70     		strb	r2, [r3]
 160:main.c        ****                     }
 612              		.loc 1 160 0
 613 0168 3F4B     		ldr	r3, .L48+20
 614 016a 0022     		movs	r2, #0
 615 016c 1A60     		str	r2, [r3]
 616              		.loc 1 163 0
 617 016e 66E0     		b	.L20
 618              	.L27:
 164:main.c        ****                 case 3:
 165:main.c        ****                     if(rxData != '}'){
 619              		.loc 1 165 0
 620 0170 BB78     		ldrb	r3, [r7, #2]	@ zero_extendqisi2
 621 0172 7D2B     		cmp	r3, #125
 622 0174 0AD0     		beq	.L39
 166:main.c        ****                         temp[nn] = rxData;
 623              		.loc 1 166 0
 624 0176 3F4B     		ldr	r3, .L48+32
 625 0178 1B68     		ldr	r3, [r3]
 626 017a 3C49     		ldr	r1, .L48+24
 627 017c BA78     		ldrb	r2, [r7, #2]
 628 017e CA54     		strb	r2, [r1, r3]
 167:main.c        ****                         nn++;
 629              		.loc 1 167 0
 630 0180 3C4B     		ldr	r3, .L48+32
 631 0182 1B68     		ldr	r3, [r3]
 632 0184 0133     		adds	r3, r3, #1
 633 0186 3B4A     		ldr	r2, .L48+32
 634 0188 1360     		str	r3, [r2]
 168:main.c        ****                     }
 169:main.c        ****                     else {
 170:main.c        ****                         pid[0] = strtod(temp, NULL);
 171:main.c        ****                         nn=0;
 172:main.c        ****                         temp[0] = '\0';
 173:main.c        ****                         data_read_mode = 0;
 174:main.c        ****                     }
 175:main.c        ****                     
 176:main.c        ****                 break;
 635              		.loc 1 176 0
 636 018a 58E0     		b	.L20
 637              	.L39:
 170:main.c        ****                         nn=0;
 638              		.loc 1 170 0
 639 018c 0021     		movs	r1, #0
 640 018e 3748     		ldr	r0, .L48+24
 641 0190 FFF7FEFF 		bl	strtod
 642 0194 0346     		mov	r3, r0
 643 0196 0C46     		mov	r4, r1
 644 0198 3E4A     		ldr	r2, .L48+64
 645 019a C2E90034 		strd	r3, [r2]
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccqTb6dr.s 			page 16


 171:main.c        ****                         temp[0] = '\0';
 646              		.loc 1 171 0
 647 019e 354B     		ldr	r3, .L48+32
 648 01a0 0022     		movs	r2, #0
 649 01a2 1A60     		str	r2, [r3]
 172:main.c        ****                         data_read_mode = 0;
 650              		.loc 1 172 0
 651 01a4 314B     		ldr	r3, .L48+24
 652 01a6 0022     		movs	r2, #0
 653 01a8 1A70     		strb	r2, [r3]
 173:main.c        ****                     }
 654              		.loc 1 173 0
 655 01aa 2F4B     		ldr	r3, .L48+20
 656 01ac 0022     		movs	r2, #0
 657 01ae 1A60     		str	r2, [r3]
 658              		.loc 1 176 0
 659 01b0 45E0     		b	.L20
 660              	.L28:
 177:main.c        ****                 case 4:
 178:main.c        ****                     if(rxData != '}'){
 661              		.loc 1 178 0
 662 01b2 BB78     		ldrb	r3, [r7, #2]	@ zero_extendqisi2
 663 01b4 7D2B     		cmp	r3, #125
 664 01b6 0AD0     		beq	.L41
 179:main.c        ****                         temp[nn] = rxData;
 665              		.loc 1 179 0
 666 01b8 2E4B     		ldr	r3, .L48+32
 667 01ba 1B68     		ldr	r3, [r3]
 668 01bc 2B49     		ldr	r1, .L48+24
 669 01be BA78     		ldrb	r2, [r7, #2]
 670 01c0 CA54     		strb	r2, [r1, r3]
 180:main.c        ****                         nn++;
 671              		.loc 1 180 0
 672 01c2 2C4B     		ldr	r3, .L48+32
 673 01c4 1B68     		ldr	r3, [r3]
 674 01c6 0133     		adds	r3, r3, #1
 675 01c8 2A4A     		ldr	r2, .L48+32
 676 01ca 1360     		str	r3, [r2]
 181:main.c        ****                     }
 182:main.c        ****                     else {
 183:main.c        ****                         pid[1] = strtod(temp, NULL);
 184:main.c        ****                         nn=0;
 185:main.c        ****                         temp[0] = '\0';
 186:main.c        ****                         data_read_mode = 0;
 187:main.c        ****                     }
 188:main.c        ****                     
 189:main.c        ****                 break;
 677              		.loc 1 189 0
 678 01cc 37E0     		b	.L20
 679              	.L41:
 183:main.c        ****                         nn=0;
 680              		.loc 1 183 0
 681 01ce 0021     		movs	r1, #0
 682 01d0 2648     		ldr	r0, .L48+24
 683 01d2 FFF7FEFF 		bl	strtod
 684 01d6 0346     		mov	r3, r0
 685 01d8 0C46     		mov	r4, r1
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccqTb6dr.s 			page 17


 686 01da 2E4A     		ldr	r2, .L48+64
 687 01dc C2E90234 		strd	r3, [r2, #8]
 184:main.c        ****                         temp[0] = '\0';
 688              		.loc 1 184 0
 689 01e0 244B     		ldr	r3, .L48+32
 690 01e2 0022     		movs	r2, #0
 691 01e4 1A60     		str	r2, [r3]
 185:main.c        ****                         data_read_mode = 0;
 692              		.loc 1 185 0
 693 01e6 214B     		ldr	r3, .L48+24
 694 01e8 0022     		movs	r2, #0
 695 01ea 1A70     		strb	r2, [r3]
 186:main.c        ****                     }
 696              		.loc 1 186 0
 697 01ec 1E4B     		ldr	r3, .L48+20
 698 01ee 0022     		movs	r2, #0
 699 01f0 1A60     		str	r2, [r3]
 700              		.loc 1 189 0
 701 01f2 24E0     		b	.L20
 702              	.L29:
 190:main.c        ****                 case 5:
 191:main.c        ****                     if(rxData != '}'){
 703              		.loc 1 191 0
 704 01f4 BB78     		ldrb	r3, [r7, #2]	@ zero_extendqisi2
 705 01f6 7D2B     		cmp	r3, #125
 706 01f8 0AD0     		beq	.L43
 192:main.c        ****                         temp[nn] = rxData;
 707              		.loc 1 192 0
 708 01fa 1E4B     		ldr	r3, .L48+32
 709 01fc 1B68     		ldr	r3, [r3]
 710 01fe 1B49     		ldr	r1, .L48+24
 711 0200 BA78     		ldrb	r2, [r7, #2]
 712 0202 CA54     		strb	r2, [r1, r3]
 193:main.c        ****                         nn++;
 713              		.loc 1 193 0
 714 0204 1B4B     		ldr	r3, .L48+32
 715 0206 1B68     		ldr	r3, [r3]
 716 0208 0133     		adds	r3, r3, #1
 717 020a 1A4A     		ldr	r2, .L48+32
 718 020c 1360     		str	r3, [r2]
 194:main.c        ****                     }
 195:main.c        ****                     else {
 196:main.c        ****                         pid[2] = strtod(temp, NULL);
 197:main.c        ****                         nn=0;
 198:main.c        ****                         temp[0] = '\0';
 199:main.c        ****                         data_read_mode = 0;
 200:main.c        ****                     }
 201:main.c        ****                     
 202:main.c        ****                 break;
 719              		.loc 1 202 0
 720 020e 16E0     		b	.L20
 721              	.L43:
 196:main.c        ****                         nn=0;
 722              		.loc 1 196 0
 723 0210 0021     		movs	r1, #0
 724 0212 1648     		ldr	r0, .L48+24
 725 0214 FFF7FEFF 		bl	strtod
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccqTb6dr.s 			page 18


 726 0218 0346     		mov	r3, r0
 727 021a 0C46     		mov	r4, r1
 728 021c 1D4A     		ldr	r2, .L48+64
 729 021e C2E90434 		strd	r3, [r2, #16]
 197:main.c        ****                         temp[0] = '\0';
 730              		.loc 1 197 0
 731 0222 144B     		ldr	r3, .L48+32
 732 0224 0022     		movs	r2, #0
 733 0226 1A60     		str	r2, [r3]
 198:main.c        ****                         data_read_mode = 0;
 734              		.loc 1 198 0
 735 0228 104B     		ldr	r3, .L48+24
 736 022a 0022     		movs	r2, #0
 737 022c 1A70     		strb	r2, [r3]
 199:main.c        ****                     }
 738              		.loc 1 199 0
 739 022e 0E4B     		ldr	r3, .L48+20
 740 0230 0022     		movs	r2, #0
 741 0232 1A60     		str	r2, [r3]
 742              		.loc 1 202 0
 743 0234 00BF     		nop
 744 0236 02E0     		b	.L20
 745              	.L46:
 135:main.c        ****                 case 1:
 746              		.loc 1 135 0
 747 0238 00BF     		nop
 748 023a 00E0     		b	.L20
 749              	.L47:
 145:main.c        ****                 case 2:
 750              		.loc 1 145 0
 751 023c 00BF     		nop
 752              	.L20:
 203:main.c        ****             }
 204:main.c        ****             
 205:main.c        ****             if(errorStatus == 0u)
 206:main.c        ****             {
 207:main.c        ****                 /* Send data backward */
 208:main.c        ****                 //UART_TXDATA_REG = rxData;
 209:main.c        ****             }
 210:main.c        ****         }
 211:main.c        ****     }while((rxStatus & UART_RX_STS_FIFO_NOTEMPTY) != 0u);
 753              		.loc 1 211 0
 754 023e FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 755 0240 03F02003 		and	r3, r3, #32
 756 0244 002B     		cmp	r3, #0
 757 0246 7FF4DEAE 		bne	.L45
 212:main.c        **** 
 213:main.c        **** }
 758              		.loc 1 213 0
 759 024a 00BF     		nop
 760 024c 0C37     		adds	r7, r7, #12
 761              		.cfi_def_cfa_offset 12
 762 024e BD46     		mov	sp, r7
 763              		.cfi_def_cfa_register 13
 764              		@ sp needed
 765 0250 90BD     		pop	{r4, r7, pc}
 766              	.L49:
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccqTb6dr.s 			page 19


 767 0252 00BF     		.align	2
 768              	.L48:
 769 0254 6A650040 		.word	1073767786
 770 0258 00000000 		.word	errorStatus
 771 025c 4A650040 		.word	1073767754
 772 0260 00000000 		.word	tt
 773 0264 00000000 		.word	help
 774 0268 00000000 		.word	data_read_mode
 775 026c 00000000 		.word	temp
 776 0270 00000000 		.word	new_angle
 777 0274 00000000 		.word	nn
 778 0278 00000000 		.word	new_pos
 779 027c 00000000 		.word	new_pos_set
 780 0280 00000000 		.word	adcValue1
 781 0284 00000000 		.word	err
 782 0288 00000000 		.word	angletemp
 783 028c 00000000 		.word	.LC0
 784 0290 00000000 		.word	sendValue
 785 0294 00000000 		.word	pid
 786              		.cfi_endproc
 787              	.LFE66:
 788              		.size	RxIsr, .-RxIsr
 789              		.global	led_switch
 790              		.bss
 791 003a 0000     		.align	2
 792              		.type	led_switch, %object
 793              		.size	led_switch, 4
 794              	led_switch:
 795 003c 00000000 		.space	4
 796              		.section	.rodata
 797 0011 000000   		.align	2
 798              	.LC1:
 799 0014 25303864 		.ascii	"%08d\011%08.0f\011%8.2f\000"
 799      09253038 
 799      2E306609 
 799      25382E32 
 799      6600
 800              		.global	__aeabi_dsub
 801              		.global	__aeabi_dcmplt
 802              		.global	__aeabi_dcmpgt
 803              		.global	__aeabi_d2iz
 804              		.global	__aeabi_ui2d
 805              		.section	.text.main,"ax",%progbits
 806              		.align	2
 807              		.global	main
 808              		.thumb
 809              		.thumb_func
 810              		.type	main, %function
 811              	main:
 812              	.LFB67:
 214:main.c        ****     
 215:main.c        **** 
 216:main.c        **** /*******************************************************************************
 217:main.c        **** * Function Name: main()
 218:main.c        **** ********************************************************************************
 219:main.c        **** * Summary:
 220:main.c        **** *  Main function for the project.
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccqTb6dr.s 			page 20


 221:main.c        **** *
 222:main.c        **** * Theory:
 223:main.c        **** *  The function starts UART and interrupt components.
 224:main.c        **** *
 225:main.c        **** *******************************************************************************/
 226:main.c        **** int led_switch = 0;
 227:main.c        **** int main()
 228:main.c        **** {
 813              		.loc 1 228 0
 814              		.cfi_startproc
 815              		@ args = 0, pretend = 0, frame = 64
 816              		@ frame_needed = 1, uses_anonymous_args = 0
 817 0000 B0B5     		push	{r4, r5, r7, lr}
 818              		.cfi_def_cfa_offset 16
 819              		.cfi_offset 4, -16
 820              		.cfi_offset 5, -12
 821              		.cfi_offset 7, -8
 822              		.cfi_offset 14, -4
 823 0002 94B0     		sub	sp, sp, #80
 824              		.cfi_def_cfa_offset 96
 825 0004 04AF     		add	r7, sp, #16
 826              		.cfi_def_cfa 7, 80
 229:main.c        ****     
 230:main.c        ****     
 231:main.c        ****     //PWM variables
 232:main.c        **** 
 233:main.c        ****     PWM_1_Start();
 827              		.loc 1 233 0
 828 0006 FFF7FEFF 		bl	PWM_1_Start
 234:main.c        ****     ADC_SAR_1_Start(); 
 829              		.loc 1 234 0
 830 000a FFF7FEFF 		bl	ADC_SAR_1_Start
 235:main.c        ****     
 236:main.c        ****     //ADC_SAR_1_StartConvert(); 
 237:main.c        ****     //ADC_SAR_2_Start(); 
 238:main.c        ****     //ADC_SAR_2_StartConvert(); 
 239:main.c        ****     
 240:main.c        ****     uint8 button = 0u;
 831              		.loc 1 240 0
 832 000e 0023     		movs	r3, #0
 833 0010 87F82730 		strb	r3, [r7, #39]
 241:main.c        ****     uint8 buttonPre = 0u;
 834              		.loc 1 241 0
 835 0014 0023     		movs	r3, #0
 836 0016 87F82630 		strb	r3, [r7, #38]
 242:main.c        ****     
 243:main.c        ****     LED_Write(LED_OFF);     /* Clear LED */
 837              		.loc 1 243 0
 838 001a 0020     		movs	r0, #0
 839 001c FFF7FEFF 		bl	LED_Write
 244:main.c        **** 
 245:main.c        ****     UART_Start();           /* Start communication component */
 840              		.loc 1 245 0
 841 0020 FFF7FEFF 		bl	UART_Start
 246:main.c        **** 
 247:main.c        **** #if(INTERRUPT_CODE_ENABLED == ENABLED)
 248:main.c        ****     isr_rx_StartEx(RxIsr);
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccqTb6dr.s 			page 21


 842              		.loc 1 248 0
 843 0024 AC48     		ldr	r0, .L68+16
 844 0026 FFF7FEFF 		bl	isr_rx_StartEx
 249:main.c        ****     update_median_isr_StartEx(adc_update);
 845              		.loc 1 249 0
 846 002a AC48     		ldr	r0, .L68+20
 847 002c FFF7FEFF 		bl	update_median_isr_StartEx
 250:main.c        **** #endif /* INTERRUPT_CODE_ENABLED == ENABLED */
 251:main.c        ****     
 252:main.c        ****     CyGlobalIntEnable;      /* Enable global interrupts. */
 848              		.loc 1 252 0
 849              		.syntax unified
 850              	@ 252 "main.c" 1
 851 0030 62B6     		CPSIE   i
 852              	@ 0 "" 2
 253:main.c        ****     
 254:main.c        **** 
 255:main.c        ****     angle = -89;
 853              		.loc 1 255 0
 854              		.thumb
 855              		.syntax unified
 856 0032 AB4A     		ldr	r2, .L68+24
 857 0034 A4A4     		adr	r4, .L68
 858 0036 D4E90034 		ldrd	r3, [r4]
 859 003a C2E90034 		strd	r3, [r2]
 256:main.c        ****     uint16 timercapture;
 257:main.c        ****     double der, prev_err, pid_integral,dt;
 258:main.c        ****     double time;
 259:main.c        **** 
 260:main.c        ****     der = 0; prev_err = 0; pid_integral = 0; 
 860              		.loc 1 260 0
 861 003e 4FF00003 		mov	r3, #0
 862 0042 4FF00004 		mov	r4, #0
 863 0046 C7E90634 		strd	r3, [r7, #24]
 864 004a 4FF00003 		mov	r3, #0
 865 004e 4FF00004 		mov	r4, #0
 866 0052 C7E90E34 		strd	r3, [r7, #56]
 867 0056 4FF00003 		mov	r3, #0
 868 005a 4FF00004 		mov	r4, #0
 869 005e C7E90C34 		strd	r3, [r7, #48]
 261:main.c        ****     dt = 0.025; //assumes cydelay = 10 below for a 100Hz frequency.
 870              		.loc 1 261 0
 871 0062 9BA4     		adr	r4, .L68+8
 872 0064 D4E90034 		ldrd	r3, [r4]
 873 0068 C7E90A34 		strd	r3, [r7, #40]
 262:main.c        **** 
 263:main.c        ****     sprintf(sendValue,"%08d\t%08.0f\t%8.2f",adcValue1,err,angletemp);
 874              		.loc 1 263 0
 875 006c 9D4B     		ldr	r3, .L68+28
 876 006e 1B88     		ldrh	r3, [r3]
 877 0070 1846     		mov	r0, r3
 878 0072 9D4B     		ldr	r3, .L68+32
 879 0074 18CB     		ldmia	r3, {r3-r4}
 880 0076 9D4A     		ldr	r2, .L68+36
 881 0078 D2E90012 		ldrd	r1, [r2]
 882 007c CDE90212 		strd	r1, [sp, #8]
 883 0080 CDE90034 		strd	r3, [sp]
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccqTb6dr.s 			page 22


 884 0084 0246     		mov	r2, r0
 885 0086 9A49     		ldr	r1, .L68+40
 886 0088 9A48     		ldr	r0, .L68+44
 887 008a FFF7FEFF 		bl	sprintf
 264:main.c        ****     UART_PutString(sendValue);
 888              		.loc 1 264 0
 889 008e 9948     		ldr	r0, .L68+44
 890 0090 FFF7FEFF 		bl	UART_PutString
 265:main.c        ****     uint16 moving_avg[5] = {0,0,0,0,0};
 891              		.loc 1 265 0
 892 0094 3B1D     		adds	r3, r7, #4
 893 0096 0022     		movs	r2, #0
 894 0098 1A60     		str	r2, [r3]
 895 009a 5A60     		str	r2, [r3, #4]
 896 009c 1A81     		strh	r2, [r3, #8]	@ movhi
 266:main.c        ****     median_timer_Start();
 897              		.loc 1 266 0
 898 009e FFF7FEFF 		bl	median_timer_Start
 267:main.c        ****     Timer_1_Start();
 899              		.loc 1 267 0
 900 00a2 FFF7FEFF 		bl	Timer_1_Start
 901              	.L63:
 268:main.c        ****     for(;;)
 269:main.c        ****     {
 270:main.c        ****         Timer_1_WriteCounter(65535);
 902              		.loc 1 270 0
 903 00a6 4FF6FF70 		movw	r0, #65535
 904 00aa FFF7FEFF 		bl	Timer_1_WriteCounter
 271:main.c        ****         /*adcValue1 = ADC_SAR_1_GetResult16() ;
 272:main.c        ****         adcValue2 = ADC_SAR_2_GetResult16() ;
 273:main.c        ****         sprintf(sendValue,"%04d \t %04d \n",adcValue1,adcValue2);
 274:main.c        ****         UART_PutString(sendValue);
 275:main.c        ****         */
 276:main.c        ****         /*
 277:main.c        ****         
 278:main.c        ****         
 279:main.c        ****         for(int j=0;j<2;j++){
 280:main.c        ****             moving_avg[j] = moving_avg[j+1]; 
 281:main.c        ****         }
 282:main.c        ****         moving_avg[2] = ADC_SAR_1_GetResult16();
 283:main.c        ****         adcValue1 = (moving_avg[0]+moving_avg[1]+moving_avg[2])/3;
 284:main.c        ****         */
 285:main.c        ****         /*
 286:main.c        ****         ADC_SAR_1_StartConvert();
 287:main.c        ****         ADC_SAR_1_IsEndConversion(ADC_SAR_1_WAIT_FOR_RESULT);
 288:main.c        ****         
 289:main.c        ****         adcValue1 = ADC_SAR_1_GetResult16();
 290:main.c        ****         */
 291:main.c        ****         //ADC_SAR_1_StartConvert();
 292:main.c        ****         //ADC_SAR_1_IsEndConversion(ADC_SAR_1_WAIT_FOR_RESULT);
 293:main.c        ****         
 294:main.c        ****         //adcValue1 = ADC_SAR_1_GetResult16();
 295:main.c        ****         //sprintf(sendValue,"%04d \n",adcValue1);
 296:main.c        ****         //UART_PutString(sendValue);
 297:main.c        ****         
 298:main.c        ****         if(new_pos_set){
 905              		.loc 1 298 0
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccqTb6dr.s 			page 23


 906 00ae 924B     		ldr	r3, .L68+48
 907 00b0 1B68     		ldr	r3, [r3]
 908 00b2 002B     		cmp	r3, #0
 909 00b4 09D0     		beq	.L51
 299:main.c        ****             pos = new_pos;
 910              		.loc 1 299 0
 911 00b6 914B     		ldr	r3, .L68+52
 912 00b8 1B68     		ldr	r3, [r3]
 913 00ba 914A     		ldr	r2, .L68+56
 914 00bc 1360     		str	r3, [r2]
 300:main.c        ****             new_pos_set = 0;
 915              		.loc 1 300 0
 916 00be 8E4B     		ldr	r3, .L68+48
 917 00c0 0022     		movs	r2, #0
 918 00c2 1A60     		str	r2, [r3]
 301:main.c        ****             new_angle = 0;
 919              		.loc 1 301 0
 920 00c4 8F4B     		ldr	r3, .L68+60
 921 00c6 0022     		movs	r2, #0
 922 00c8 1A60     		str	r2, [r3]
 923              	.L51:
 302:main.c        ****             
 303:main.c        ****             /*
 304:main.c        ****             //if(pos<0){pos = pos - 13;}
 305:main.c        ****             //if(pos>0){pos = pos + 12;}
 306:main.c        ****             if(pos>45){pos=45;}
 307:main.c        ****             if(pos<-45){pos=-45;}
 308:main.c        ****             if(pos<46 & pos>-46){
 309:main.c        ****                 PWM_1_WriteCompare(dutycyclelength(pos));
 310:main.c        ****             }
 311:main.c        ****                  */       
 312:main.c        ****         }
 313:main.c        ****         
 314:main.c        ****         /* PID */
 315:main.c        ****         err = -pos + adcValue1;
 924              		.loc 1 315 0
 925 00ca 864B     		ldr	r3, .L68+28
 926 00cc 1B88     		ldrh	r3, [r3]
 927 00ce 1A46     		mov	r2, r3
 928 00d0 8B4B     		ldr	r3, .L68+56
 929 00d2 1B68     		ldr	r3, [r3]
 930 00d4 D31A     		subs	r3, r2, r3
 931 00d6 1846     		mov	r0, r3
 932 00d8 FFF7FEFF 		bl	__aeabi_i2d
 933 00dc 0346     		mov	r3, r0
 934 00de 0C46     		mov	r4, r1
 935 00e0 814A     		ldr	r2, .L68+32
 936 00e2 C2E90034 		strd	r3, [r2]
 316:main.c        ****         der = err - prev_err;
 937              		.loc 1 316 0
 938 00e6 804B     		ldr	r3, .L68+32
 939 00e8 D3E90001 		ldrd	r0, [r3]
 940 00ec D7E90E23 		ldrd	r2, [r7, #56]
 941 00f0 FFF7FEFF 		bl	__aeabi_dsub
 942 00f4 0346     		mov	r3, r0
 943 00f6 0C46     		mov	r4, r1
 944 00f8 C7E90634 		strd	r3, [r7, #24]
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccqTb6dr.s 			page 24


 317:main.c        ****         pid_integral = err + pid_integral;
 945              		.loc 1 317 0
 946 00fc 7A4B     		ldr	r3, .L68+32
 947 00fe 18CB     		ldmia	r3, {r3-r4}
 948 0100 1A46     		mov	r2, r3
 949 0102 2346     		mov	r3, r4
 950 0104 D7E90C01 		ldrd	r0, [r7, #48]
 951 0108 FFF7FEFF 		bl	__aeabi_dadd
 952 010c 0346     		mov	r3, r0
 953 010e 0C46     		mov	r4, r1
 954 0110 C7E90C34 		strd	r3, [r7, #48]
 318:main.c        ****         angletemp = pid[0] * err + ( pid[1] * pid_integral * dt) + ( pid[2] * der / dt );
 955              		.loc 1 318 0
 956 0114 7C4B     		ldr	r3, .L68+64
 957 0116 D3E90001 		ldrd	r0, [r3]
 958 011a 734B     		ldr	r3, .L68+32
 959 011c 18CB     		ldmia	r3, {r3-r4}
 960 011e 1A46     		mov	r2, r3
 961 0120 2346     		mov	r3, r4
 962 0122 FFF7FEFF 		bl	__aeabi_dmul
 963 0126 0346     		mov	r3, r0
 964 0128 0C46     		mov	r4, r1
 965 012a 2546     		mov	r5, r4
 966 012c 1C46     		mov	r4, r3
 967 012e 764B     		ldr	r3, .L68+64
 968 0130 D3E90201 		ldrd	r0, [r3, #8]
 969 0134 D7E90C23 		ldrd	r2, [r7, #48]
 970 0138 FFF7FEFF 		bl	__aeabi_dmul
 971 013c 0246     		mov	r2, r0
 972 013e 0B46     		mov	r3, r1
 973 0140 1046     		mov	r0, r2
 974 0142 1946     		mov	r1, r3
 975 0144 D7E90A23 		ldrd	r2, [r7, #40]
 976 0148 FFF7FEFF 		bl	__aeabi_dmul
 977 014c 0246     		mov	r2, r0
 978 014e 0B46     		mov	r3, r1
 979 0150 2046     		mov	r0, r4
 980 0152 2946     		mov	r1, r5
 981 0154 FFF7FEFF 		bl	__aeabi_dadd
 982 0158 0346     		mov	r3, r0
 983 015a 0C46     		mov	r4, r1
 984 015c 2546     		mov	r5, r4
 985 015e 1C46     		mov	r4, r3
 986 0160 694B     		ldr	r3, .L68+64
 987 0162 D3E90401 		ldrd	r0, [r3, #16]
 988 0166 D7E90623 		ldrd	r2, [r7, #24]
 989 016a FFF7FEFF 		bl	__aeabi_dmul
 990 016e 0246     		mov	r2, r0
 991 0170 0B46     		mov	r3, r1
 992 0172 1046     		mov	r0, r2
 993 0174 1946     		mov	r1, r3
 994 0176 D7E90A23 		ldrd	r2, [r7, #40]
 995 017a FFF7FEFF 		bl	__aeabi_ddiv
 996 017e 0246     		mov	r2, r0
 997 0180 0B46     		mov	r3, r1
 998 0182 2046     		mov	r0, r4
 999 0184 2946     		mov	r1, r5
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccqTb6dr.s 			page 25


 1000 0186 FFF7FEFF 		bl	__aeabi_dadd
 1001 018a 0346     		mov	r3, r0
 1002 018c 0C46     		mov	r4, r1
 1003 018e 574A     		ldr	r2, .L68+36
 1004 0190 C2E90034 		strd	r3, [r2]
 319:main.c        ****         angle=angletemp;
 1005              		.loc 1 319 0
 1006 0194 554B     		ldr	r3, .L68+36
 1007 0196 18CB     		ldmia	r3, {r3-r4}
 1008 0198 514A     		ldr	r2, .L68+24
 1009 019a C2E90034 		strd	r3, [r2]
 320:main.c        ****         //Limit angles of proportional valve
 321:main.c        ****         if(angle<0){angle = angle - 16;}
 1010              		.loc 1 321 0
 1011 019e 504B     		ldr	r3, .L68+24
 1012 01a0 D3E90001 		ldrd	r0, [r3]
 1013 01a4 4FF00002 		mov	r2, #0
 1014 01a8 4FF00003 		mov	r3, #0
 1015 01ac FFF7FEFF 		bl	__aeabi_dcmplt
 1016 01b0 0346     		mov	r3, r0
 1017 01b2 002B     		cmp	r3, #0
 1018 01b4 0CD0     		beq	.L52
 1019              		.loc 1 321 0 is_stmt 0 discriminator 1
 1020 01b6 4A4B     		ldr	r3, .L68+24
 1021 01b8 D3E90001 		ldrd	r0, [r3]
 1022 01bc 4FF00002 		mov	r2, #0
 1023 01c0 524B     		ldr	r3, .L68+68
 1024 01c2 FFF7FEFF 		bl	__aeabi_dsub
 1025 01c6 0346     		mov	r3, r0
 1026 01c8 0C46     		mov	r4, r1
 1027 01ca 454A     		ldr	r2, .L68+24
 1028 01cc C2E90034 		strd	r3, [r2]
 1029              	.L52:
 322:main.c        ****         if(angle>0){angle = angle + 14;}
 1030              		.loc 1 322 0 is_stmt 1
 1031 01d0 434B     		ldr	r3, .L68+24
 1032 01d2 D3E90001 		ldrd	r0, [r3]
 1033 01d6 4FF00002 		mov	r2, #0
 1034 01da 4FF00003 		mov	r3, #0
 1035 01de FFF7FEFF 		bl	__aeabi_dcmpgt
 1036 01e2 0346     		mov	r3, r0
 1037 01e4 002B     		cmp	r3, #0
 1038 01e6 0CD0     		beq	.L54
 1039              		.loc 1 322 0 is_stmt 0 discriminator 1
 1040 01e8 3D4B     		ldr	r3, .L68+24
 1041 01ea D3E90001 		ldrd	r0, [r3]
 1042 01ee 4FF00002 		mov	r2, #0
 1043 01f2 474B     		ldr	r3, .L68+72
 1044 01f4 FFF7FEFF 		bl	__aeabi_dadd
 1045 01f8 0346     		mov	r3, r0
 1046 01fa 0C46     		mov	r4, r1
 1047 01fc 384A     		ldr	r2, .L68+24
 1048 01fe C2E90034 		strd	r3, [r2]
 1049              	.L54:
 323:main.c        ****         if(angle>45){angle=45;}
 1050              		.loc 1 323 0 is_stmt 1
 1051 0202 374B     		ldr	r3, .L68+24
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccqTb6dr.s 			page 26


 1052 0204 D3E90001 		ldrd	r0, [r3]
 1053 0208 4FF00002 		mov	r2, #0
 1054 020c 414B     		ldr	r3, .L68+76
 1055 020e FFF7FEFF 		bl	__aeabi_dcmpgt
 1056 0212 0346     		mov	r3, r0
 1057 0214 002B     		cmp	r3, #0
 1058 0216 05D0     		beq	.L56
 1059              		.loc 1 323 0 is_stmt 0 discriminator 1
 1060 0218 314A     		ldr	r2, .L68+24
 1061 021a 4FF00003 		mov	r3, #0
 1062 021e 3D4C     		ldr	r4, .L68+76
 1063 0220 C2E90034 		strd	r3, [r2]
 1064              	.L56:
 324:main.c        ****         if(angle<-45){angle=-45;}
 1065              		.loc 1 324 0 is_stmt 1
 1066 0224 2E4B     		ldr	r3, .L68+24
 1067 0226 D3E90001 		ldrd	r0, [r3]
 1068 022a 4FF00002 		mov	r2, #0
 1069 022e 3A4B     		ldr	r3, .L68+80
 1070 0230 FFF7FEFF 		bl	__aeabi_dcmplt
 1071 0234 0346     		mov	r3, r0
 1072 0236 002B     		cmp	r3, #0
 1073 0238 05D0     		beq	.L58
 1074              		.loc 1 324 0 is_stmt 0 discriminator 1
 1075 023a 294A     		ldr	r2, .L68+24
 1076 023c 4FF00003 		mov	r3, #0
 1077 0240 354C     		ldr	r4, .L68+80
 1078 0242 C2E90034 		strd	r3, [r2]
 1079              	.L58:
 325:main.c        ****         if(angle<46 & angle>-46){
 1080              		.loc 1 325 0 is_stmt 1
 1081 0246 264B     		ldr	r3, .L68+24
 1082 0248 D3E90001 		ldrd	r0, [r3]
 1083 024c 0123     		movs	r3, #1
 1084 024e 1C46     		mov	r4, r3
 1085 0250 4FF00002 		mov	r2, #0
 1086 0254 314B     		ldr	r3, .L68+84
 1087 0256 FFF7FEFF 		bl	__aeabi_dcmplt
 1088 025a 0346     		mov	r3, r0
 1089 025c 002B     		cmp	r3, #0
 1090 025e 01D1     		bne	.L60
 1091 0260 0023     		movs	r3, #0
 1092 0262 1C46     		mov	r4, r3
 1093              	.L60:
 1094 0264 E4B2     		uxtb	r4, r4
 1095 0266 1E4B     		ldr	r3, .L68+24
 1096 0268 D3E90001 		ldrd	r0, [r3]
 1097 026c 0123     		movs	r3, #1
 1098 026e 1D46     		mov	r5, r3
 1099 0270 4FF00002 		mov	r2, #0
 1100 0274 2A4B     		ldr	r3, .L68+88
 1101 0276 FFF7FEFF 		bl	__aeabi_dcmpgt
 1102 027a 0346     		mov	r3, r0
 1103 027c 002B     		cmp	r3, #0
 1104 027e 01D1     		bne	.L61
 1105 0280 0023     		movs	r3, #0
 1106 0282 1D46     		mov	r5, r3
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccqTb6dr.s 			page 27


 1107              	.L61:
 1108 0284 EBB2     		uxtb	r3, r5
 1109 0286 2340     		ands	r3, r3, r4
 1110 0288 DBB2     		uxtb	r3, r3
 1111 028a 002B     		cmp	r3, #0
 1112 028c 15D0     		beq	.L62
 326:main.c        ****             PWM_1_WriteCompare(dutycyclelength(angle*100));
 1113              		.loc 1 326 0
 1114 028e 144B     		ldr	r3, .L68+24
 1115 0290 D3E90001 		ldrd	r0, [r3]
 1116 0294 4FF00002 		mov	r2, #0
 1117 0298 224B     		ldr	r3, .L68+92
 1118 029a FFF7FEFF 		bl	__aeabi_dmul
 1119 029e 0346     		mov	r3, r0
 1120 02a0 0C46     		mov	r4, r1
 1121 02a2 1846     		mov	r0, r3
 1122 02a4 2146     		mov	r1, r4
 1123 02a6 FFF7FEFF 		bl	__aeabi_d2iz
 1124 02aa 0346     		mov	r3, r0
 1125 02ac 1846     		mov	r0, r3
 1126 02ae FFF7FEFF 		bl	dutycyclelength
 1127 02b2 0346     		mov	r3, r0
 1128 02b4 1846     		mov	r0, r3
 1129 02b6 FFF7FEFF 		bl	PWM_1_WriteCompare
 1130              	.L62:
 327:main.c        ****         }
 328:main.c        ****         prev_err = err;
 1131              		.loc 1 328 0
 1132 02ba 0B4B     		ldr	r3, .L68+32
 1133 02bc 18CB     		ldmia	r3, {r3-r4}
 1134 02be C7E90E34 		strd	r3, [r7, #56]
 1135 02c2 31E0     		b	.L69
 1136              	.L70:
 1137 02c4 AFF30080 		.align	3
 1138              	.L68:
 1139 02c8 00000000 		.word	0
 1140 02cc 004056C0 		.word	-1068089344
 1141 02d0 9A999999 		.word	-1717986918
 1142 02d4 9999993F 		.word	1067030937
 1143 02d8 00000000 		.word	RxIsr
 1144 02dc 00000000 		.word	adc_update
 1145 02e0 00000000 		.word	angle
 1146 02e4 00000000 		.word	adcValue1
 1147 02e8 00000000 		.word	err
 1148 02ec 00000000 		.word	angletemp
 1149 02f0 14000000 		.word	.LC1
 1150 02f4 00000000 		.word	sendValue
 1151 02f8 00000000 		.word	new_pos_set
 1152 02fc 00000000 		.word	new_pos
 1153 0300 00000000 		.word	pos
 1154 0304 00000000 		.word	new_angle
 1155 0308 00000000 		.word	pid
 1156 030c 00003040 		.word	1076887552
 1157 0310 00002C40 		.word	1076625408
 1158 0314 00804640 		.word	1078362112
 1159 0318 008046C0 		.word	-1069121536
 1160 031c 00004740 		.word	1078394880
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccqTb6dr.s 			page 28


 1161 0320 000047C0 		.word	-1069088768
 1162 0324 00005940 		.word	1079574528
 1163              	.L69:
 329:main.c        ****         
 330:main.c        ****         /* END PID CODE */
 331:main.c        ****         
 332:main.c        ****         CyDelay(10);
 1164              		.loc 1 332 0
 1165 0328 0A20     		movs	r0, #10
 1166 032a FFF7FEFF 		bl	CyDelay
 333:main.c        ****         time = Timer_1_ReadCounter();
 1167              		.loc 1 333 0
 1168 032e FFF7FEFF 		bl	Timer_1_ReadCounter
 1169 0332 0346     		mov	r3, r0
 1170 0334 1846     		mov	r0, r3
 1171 0336 FFF7FEFF 		bl	__aeabi_ui2d
 1172 033a 0346     		mov	r3, r0
 1173 033c 0C46     		mov	r4, r1
 1174 033e C7E90434 		strd	r3, [r7, #16]
 334:main.c        ****         dt=(double)(65535-time)/1000000;
 1175              		.loc 1 334 0
 1176 0342 D7E90423 		ldrd	r2, [r7, #16]
 1177 0346 0AA1     		adr	r1, .L71
 1178 0348 D1E90001 		ldrd	r0, [r1]
 1179 034c FFF7FEFF 		bl	__aeabi_dsub
 1180 0350 0346     		mov	r3, r0
 1181 0352 0C46     		mov	r4, r1
 1182 0354 1846     		mov	r0, r3
 1183 0356 2146     		mov	r1, r4
 1184 0358 07A3     		adr	r3, .L71+8
 1185 035a D3E90023 		ldrd	r2, [r3]
 1186 035e FFF7FEFF 		bl	__aeabi_ddiv
 1187 0362 0346     		mov	r3, r0
 1188 0364 0C46     		mov	r4, r1
 1189 0366 C7E90A34 		strd	r3, [r7, #40]
 335:main.c        **** 
 336:main.c        ****     }
 1190              		.loc 1 336 0
 1191 036a 9CE6     		b	.L63
 1192              	.L72:
 1193 036c AFF30080 		.align	3
 1194              	.L71:
 1195 0370 00000000 		.word	0
 1196 0374 E0FFEF40 		.word	1089470432
 1197 0378 00000000 		.word	0
 1198 037c 80842E41 		.word	1093567616
 1199              		.cfi_endproc
 1200              	.LFE67:
 1201              		.size	main, .-main
 1202              		.text
 1203              	.Letext0:
 1204              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 1205              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 1206              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 1207              		.file 5 "Generated_Source\\PSoC5/core_cm3.h"
 1208              		.section	.debug_info,"",%progbits
 1209              	.Ldebug_info0:
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccqTb6dr.s 			page 29


 1210 0000 35040000 		.4byte	0x435
 1211 0004 0400     		.2byte	0x4
 1212 0006 00000000 		.4byte	.Ldebug_abbrev0
 1213 000a 04       		.byte	0x4
 1214 000b 01       		.uleb128 0x1
 1215 000c 3D000000 		.4byte	.LASF48
 1216 0010 0C       		.byte	0xc
 1217 0011 44020000 		.4byte	.LASF49
 1218 0015 B9010000 		.4byte	.LASF50
 1219 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1220 001d 00000000 		.4byte	0
 1221 0021 00000000 		.4byte	.Ldebug_line0
 1222 0025 02       		.uleb128 0x2
 1223 0026 01       		.byte	0x1
 1224 0027 06       		.byte	0x6
 1225 0028 6B010000 		.4byte	.LASF0
 1226 002c 02       		.uleb128 0x2
 1227 002d 01       		.byte	0x1
 1228 002e 08       		.byte	0x8
 1229 002f 32010000 		.4byte	.LASF1
 1230 0033 02       		.uleb128 0x2
 1231 0034 02       		.byte	0x2
 1232 0035 05       		.byte	0x5
 1233 0036 2A000000 		.4byte	.LASF2
 1234 003a 02       		.uleb128 0x2
 1235 003b 02       		.byte	0x2
 1236 003c 07       		.byte	0x7
 1237 003d A6010000 		.4byte	.LASF3
 1238 0041 03       		.uleb128 0x3
 1239 0042 7A020000 		.4byte	.LASF9
 1240 0046 02       		.byte	0x2
 1241 0047 3F       		.byte	0x3f
 1242 0048 4C000000 		.4byte	0x4c
 1243 004c 02       		.uleb128 0x2
 1244 004d 04       		.byte	0x4
 1245 004e 05       		.byte	0x5
 1246 004f 15010000 		.4byte	.LASF4
 1247 0053 02       		.uleb128 0x2
 1248 0054 04       		.byte	0x4
 1249 0055 07       		.byte	0x7
 1250 0056 50020000 		.4byte	.LASF5
 1251 005a 02       		.uleb128 0x2
 1252 005b 08       		.byte	0x8
 1253 005c 05       		.byte	0x5
 1254 005d 07010000 		.4byte	.LASF6
 1255 0061 02       		.uleb128 0x2
 1256 0062 08       		.byte	0x8
 1257 0063 07       		.byte	0x7
 1258 0064 77010000 		.4byte	.LASF7
 1259 0068 04       		.uleb128 0x4
 1260 0069 04       		.byte	0x4
 1261 006a 05       		.byte	0x5
 1262 006b 696E7400 		.ascii	"int\000"
 1263 006f 02       		.uleb128 0x2
 1264 0070 04       		.byte	0x4
 1265 0071 07       		.byte	0x7
 1266 0072 8E010000 		.4byte	.LASF8
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccqTb6dr.s 			page 30


 1267 0076 03       		.uleb128 0x3
 1268 0077 0A020000 		.4byte	.LASF10
 1269 007b 03       		.byte	0x3
 1270 007c 2C       		.byte	0x2c
 1271 007d 41000000 		.4byte	0x41
 1272 0081 05       		.uleb128 0x5
 1273 0082 EF000000 		.4byte	.LASF11
 1274 0086 04       		.byte	0x4
 1275 0087 9201     		.2byte	0x192
 1276 0089 2C000000 		.4byte	0x2c
 1277 008d 05       		.uleb128 0x5
 1278 008e 33020000 		.4byte	.LASF12
 1279 0092 04       		.byte	0x4
 1280 0093 9301     		.2byte	0x193
 1281 0095 3A000000 		.4byte	0x3a
 1282 0099 02       		.uleb128 0x2
 1283 009a 04       		.byte	0x4
 1284 009b 04       		.byte	0x4
 1285 009c 01010000 		.4byte	.LASF13
 1286 00a0 02       		.uleb128 0x2
 1287 00a1 08       		.byte	0x8
 1288 00a2 04       		.byte	0x4
 1289 00a3 AA020000 		.4byte	.LASF14
 1290 00a7 02       		.uleb128 0x2
 1291 00a8 01       		.byte	0x1
 1292 00a9 08       		.byte	0x8
 1293 00aa 05020000 		.4byte	.LASF15
 1294 00ae 05       		.uleb128 0x5
 1295 00af 4B020000 		.4byte	.LASF16
 1296 00b3 04       		.byte	0x4
 1297 00b4 3C02     		.2byte	0x23c
 1298 00b6 BA000000 		.4byte	0xba
 1299 00ba 06       		.uleb128 0x6
 1300 00bb 81000000 		.4byte	0x81
 1301 00bf 02       		.uleb128 0x2
 1302 00c0 08       		.byte	0x8
 1303 00c1 04       		.byte	0x4
 1304 00c2 4E010000 		.4byte	.LASF17
 1305 00c6 02       		.uleb128 0x2
 1306 00c7 04       		.byte	0x4
 1307 00c8 07       		.byte	0x7
 1308 00c9 34000000 		.4byte	.LASF18
 1309 00cd 07       		.uleb128 0x7
 1310 00ce BE020000 		.4byte	.LASF51
 1311 00d2 01       		.byte	0x1
 1312 00d3 14       		.byte	0x14
 1313 00d4 8D000000 		.4byte	0x8d
 1314 00d8 00000000 		.4byte	.LFB64
 1315 00dc 7C000000 		.4byte	.LFE64-.LFB64
 1316 00e0 01       		.uleb128 0x1
 1317 00e1 9C       		.byte	0x9c
 1318 00e2 03010000 		.4byte	0x103
 1319 00e6 08       		.uleb128 0x8
 1320 00e7 13000000 		.4byte	.LASF36
 1321 00eb 01       		.byte	0x1
 1322 00ec 14       		.byte	0x14
 1323 00ed 68000000 		.4byte	0x68
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccqTb6dr.s 			page 31


 1324 00f1 02       		.uleb128 0x2
 1325 00f2 91       		.byte	0x91
 1326 00f3 64       		.sleb128 -28
 1327 00f4 09       		.uleb128 0x9
 1328 00f5 12020000 		.4byte	.LASF19
 1329 00f9 01       		.byte	0x1
 1330 00fa 16       		.byte	0x16
 1331 00fb 8D000000 		.4byte	0x8d
 1332 00ff 02       		.uleb128 0x2
 1333 0100 91       		.byte	0x91
 1334 0101 6E       		.sleb128 -18
 1335 0102 00       		.byte	0
 1336 0103 0A       		.uleb128 0xa
 1337 0104 8B020000 		.4byte	.LASF20
 1338 0108 01       		.byte	0x1
 1339 0109 40       		.byte	0x40
 1340 010a 00000000 		.4byte	.LFB65
 1341 010e F8000000 		.4byte	.LFE65-.LFB65
 1342 0112 01       		.uleb128 0x1
 1343 0113 9C       		.byte	0x9c
 1344 0114 79010000 		.4byte	0x179
 1345 0118 0B       		.uleb128 0xb
 1346 0119 06000000 		.4byte	.LBB2
 1347 011d 24000000 		.4byte	.LBE2-.LBB2
 1348 0121 32010000 		.4byte	0x132
 1349 0125 0C       		.uleb128 0xc
 1350 0126 6A00     		.ascii	"j\000"
 1351 0128 01       		.byte	0x1
 1352 0129 41       		.byte	0x41
 1353 012a 68000000 		.4byte	0x68
 1354 012e 02       		.uleb128 0x2
 1355 012f 91       		.byte	0x91
 1356 0130 74       		.sleb128 -12
 1357 0131 00       		.byte	0
 1358 0132 0B       		.uleb128 0xb
 1359 0133 40000000 		.4byte	.LBB3
 1360 0137 22000000 		.4byte	.LBE3-.LBB3
 1361 013b 4C010000 		.4byte	0x14c
 1362 013f 0C       		.uleb128 0xc
 1363 0140 6A00     		.ascii	"j\000"
 1364 0142 01       		.byte	0x1
 1365 0143 49       		.byte	0x49
 1366 0144 68000000 		.4byte	0x68
 1367 0148 02       		.uleb128 0x2
 1368 0149 91       		.byte	0x91
 1369 014a 70       		.sleb128 -16
 1370 014b 00       		.byte	0
 1371 014c 0D       		.uleb128 0xd
 1372 014d 62000000 		.4byte	.LBB4
 1373 0151 60000000 		.4byte	.LBE4-.LBB4
 1374 0155 0C       		.uleb128 0xc
 1375 0156 6900     		.ascii	"i\000"
 1376 0158 01       		.byte	0x1
 1377 0159 4C       		.byte	0x4c
 1378 015a 68000000 		.4byte	0x68
 1379 015e 02       		.uleb128 0x2
 1380 015f 91       		.byte	0x91
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccqTb6dr.s 			page 32


 1381 0160 6C       		.sleb128 -20
 1382 0161 0D       		.uleb128 0xd
 1383 0162 68000000 		.4byte	.LBB5
 1384 0166 4E000000 		.4byte	.LBE5-.LBB5
 1385 016a 0C       		.uleb128 0xc
 1386 016b 6A00     		.ascii	"j\000"
 1387 016d 01       		.byte	0x1
 1388 016e 4D       		.byte	0x4d
 1389 016f 68000000 		.4byte	0x68
 1390 0173 02       		.uleb128 0x2
 1391 0174 91       		.byte	0x91
 1392 0175 68       		.sleb128 -24
 1393 0176 00       		.byte	0
 1394 0177 00       		.byte	0
 1395 0178 00       		.byte	0
 1396 0179 0A       		.uleb128 0xa
 1397 017a A0010000 		.4byte	.LASF21
 1398 017e 01       		.byte	0x1
 1399 017f 61       		.byte	0x61
 1400 0180 00000000 		.4byte	.LFB66
 1401 0184 98020000 		.4byte	.LFE66-.LFB66
 1402 0188 01       		.uleb128 0x1
 1403 0189 9C       		.byte	0x9c
 1404 018a C2010000 		.4byte	0x1c2
 1405 018e 09       		.uleb128 0x9
 1406 018f 5A010000 		.4byte	.LASF22
 1407 0193 01       		.byte	0x1
 1408 0194 63       		.byte	0x63
 1409 0195 81000000 		.4byte	0x81
 1410 0199 02       		.uleb128 0x2
 1411 019a 91       		.byte	0x91
 1412 019b 6B       		.sleb128 -21
 1413 019c 09       		.uleb128 0x9
 1414 019d 84020000 		.4byte	.LASF23
 1415 01a1 01       		.byte	0x1
 1416 01a2 64       		.byte	0x64
 1417 01a3 81000000 		.4byte	0x81
 1418 01a7 02       		.uleb128 0x2
 1419 01a8 91       		.byte	0x91
 1420 01a9 6A       		.sleb128 -22
 1421 01aa 0D       		.uleb128 0xd
 1422 01ab 94000000 		.4byte	.LBB6
 1423 01af 1C000000 		.4byte	.LBE6-.LBB6
 1424 01b3 0C       		.uleb128 0xc
 1425 01b4 707000   		.ascii	"pp\000"
 1426 01b7 01       		.byte	0x1
 1427 01b8 80       		.byte	0x80
 1428 01b9 68000000 		.4byte	0x68
 1429 01bd 02       		.uleb128 0x2
 1430 01be 91       		.byte	0x91
 1431 01bf 6C       		.sleb128 -20
 1432 01c0 00       		.byte	0
 1433 01c1 00       		.byte	0
 1434 01c2 0E       		.uleb128 0xe
 1435 01c3 CB000000 		.4byte	.LASF24
 1436 01c7 01       		.byte	0x1
 1437 01c8 E3       		.byte	0xe3
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccqTb6dr.s 			page 33


 1438 01c9 68000000 		.4byte	0x68
 1439 01cd 00000000 		.4byte	.LFB67
 1440 01d1 80030000 		.4byte	.LFE67-.LFB67
 1441 01d5 01       		.uleb128 0x1
 1442 01d6 9C       		.byte	0x9c
 1443 01d7 5E020000 		.4byte	0x25e
 1444 01db 09       		.uleb128 0x9
 1445 01dc 2B010000 		.4byte	.LASF25
 1446 01e0 01       		.byte	0x1
 1447 01e1 F0       		.byte	0xf0
 1448 01e2 81000000 		.4byte	0x81
 1449 01e6 02       		.uleb128 0x2
 1450 01e7 91       		.byte	0x91
 1451 01e8 57       		.sleb128 -41
 1452 01e9 09       		.uleb128 0x9
 1453 01ea D8020000 		.4byte	.LASF26
 1454 01ee 01       		.byte	0x1
 1455 01ef F1       		.byte	0xf1
 1456 01f0 81000000 		.4byte	0x81
 1457 01f4 02       		.uleb128 0x2
 1458 01f5 91       		.byte	0x91
 1459 01f6 56       		.sleb128 -42
 1460 01f7 0F       		.uleb128 0xf
 1461 01f8 1E010000 		.4byte	.LASF52
 1462 01fc 01       		.byte	0x1
 1463 01fd 0001     		.2byte	0x100
 1464 01ff 8D000000 		.4byte	0x8d
 1465 0203 10       		.uleb128 0x10
 1466 0204 64657200 		.ascii	"der\000"
 1467 0208 01       		.byte	0x1
 1468 0209 0101     		.2byte	0x101
 1469 020b A0000000 		.4byte	0xa0
 1470 020f 02       		.uleb128 0x2
 1471 0210 91       		.byte	0x91
 1472 0211 48       		.sleb128 -56
 1473 0212 11       		.uleb128 0x11
 1474 0213 0A000000 		.4byte	.LASF27
 1475 0217 01       		.byte	0x1
 1476 0218 0101     		.2byte	0x101
 1477 021a A0000000 		.4byte	0xa0
 1478 021e 02       		.uleb128 0x2
 1479 021f 91       		.byte	0x91
 1480 0220 68       		.sleb128 -24
 1481 0221 11       		.uleb128 0x11
 1482 0222 6D020000 		.4byte	.LASF28
 1483 0226 01       		.byte	0x1
 1484 0227 0101     		.2byte	0x101
 1485 0229 A0000000 		.4byte	0xa0
 1486 022d 02       		.uleb128 0x2
 1487 022e 91       		.byte	0x91
 1488 022f 60       		.sleb128 -32
 1489 0230 10       		.uleb128 0x10
 1490 0231 647400   		.ascii	"dt\000"
 1491 0234 01       		.byte	0x1
 1492 0235 0101     		.2byte	0x101
 1493 0237 A0000000 		.4byte	0xa0
 1494 023b 02       		.uleb128 0x2
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccqTb6dr.s 			page 34


 1495 023c 91       		.byte	0x91
 1496 023d 58       		.sleb128 -40
 1497 023e 11       		.uleb128 0x11
 1498 023f 9B010000 		.4byte	.LASF29
 1499 0243 01       		.byte	0x1
 1500 0244 0201     		.2byte	0x102
 1501 0246 A0000000 		.4byte	0xa0
 1502 024a 02       		.uleb128 0x2
 1503 024b 91       		.byte	0x91
 1504 024c 40       		.sleb128 -64
 1505 024d 11       		.uleb128 0x11
 1506 024e 28020000 		.4byte	.LASF30
 1507 0252 01       		.byte	0x1
 1508 0253 0901     		.2byte	0x109
 1509 0255 5E020000 		.4byte	0x25e
 1510 0259 03       		.uleb128 0x3
 1511 025a 91       		.byte	0x91
 1512 025b B47F     		.sleb128 -76
 1513 025d 00       		.byte	0
 1514 025e 12       		.uleb128 0x12
 1515 025f 8D000000 		.4byte	0x8d
 1516 0263 6E020000 		.4byte	0x26e
 1517 0267 13       		.uleb128 0x13
 1518 0268 C6000000 		.4byte	0xc6
 1519 026c 04       		.byte	0x4
 1520 026d 00       		.byte	0
 1521 026e 14       		.uleb128 0x14
 1522 026f B1020000 		.4byte	.LASF31
 1523 0273 05       		.byte	0x5
 1524 0274 1207     		.2byte	0x712
 1525 0276 7A020000 		.4byte	0x27a
 1526 027a 06       		.uleb128 0x6
 1527 027b 76000000 		.4byte	0x76
 1528 027f 15       		.uleb128 0x15
 1529 0280 F5000000 		.4byte	.LASF32
 1530 0284 01       		.byte	0x1
 1531 0285 12       		.byte	0x12
 1532 0286 81000000 		.4byte	0x81
 1533 028a 05       		.uleb128 0x5
 1534 028b 03       		.byte	0x3
 1535 028c 00000000 		.4byte	errorStatus
 1536 0290 15       		.uleb128 0x15
 1537 0291 E0000000 		.4byte	.LASF33
 1538 0295 01       		.byte	0x1
 1539 0296 28       		.byte	0x28
 1540 0297 68000000 		.4byte	0x68
 1541 029b 05       		.uleb128 0x5
 1542 029c 03       		.byte	0x3
 1543 029d 00000000 		.4byte	data_read_mode
 1544 02a1 15       		.uleb128 0x15
 1545 02a2 00000000 		.4byte	.LASF34
 1546 02a6 01       		.byte	0x1
 1547 02a7 29       		.byte	0x29
 1548 02a8 B2020000 		.4byte	0x2b2
 1549 02ac 05       		.uleb128 0x5
 1550 02ad 03       		.byte	0x3
 1551 02ae 00000000 		.4byte	new_angle
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccqTb6dr.s 			page 35


 1552 02b2 06       		.uleb128 0x6
 1553 02b3 68000000 		.4byte	0x68
 1554 02b7 15       		.uleb128 0x15
 1555 02b8 19000000 		.4byte	.LASF35
 1556 02bc 01       		.byte	0x1
 1557 02bd 2A       		.byte	0x2a
 1558 02be B2020000 		.4byte	0x2b2
 1559 02c2 05       		.uleb128 0x5
 1560 02c3 03       		.byte	0x3
 1561 02c4 00000000 		.4byte	new_pos_set
 1562 02c8 15       		.uleb128 0x15
 1563 02c9 13000000 		.4byte	.LASF36
 1564 02cd 01       		.byte	0x1
 1565 02ce 2B       		.byte	0x2b
 1566 02cf A0000000 		.4byte	0xa0
 1567 02d3 05       		.uleb128 0x5
 1568 02d4 03       		.byte	0x3
 1569 02d5 00000000 		.4byte	angle
 1570 02d9 15       		.uleb128 0x15
 1571 02da 1E020000 		.4byte	.LASF37
 1572 02de 01       		.byte	0x1
 1573 02df 2C       		.byte	0x2c
 1574 02e0 A0000000 		.4byte	0xa0
 1575 02e4 05       		.uleb128 0x5
 1576 02e5 03       		.byte	0x3
 1577 02e6 00000000 		.4byte	angletemp
 1578 02ea 15       		.uleb128 0x15
 1579 02eb 62020000 		.4byte	.LASF38
 1580 02ef 01       		.byte	0x1
 1581 02f0 2D       		.byte	0x2d
 1582 02f1 68000000 		.4byte	0x68
 1583 02f5 05       		.uleb128 0x5
 1584 02f6 03       		.byte	0x3
 1585 02f7 00000000 		.4byte	isNegative
 1586 02fb 12       		.uleb128 0x12
 1587 02fc A7000000 		.4byte	0xa7
 1588 0300 0B030000 		.4byte	0x30b
 1589 0304 13       		.uleb128 0x13
 1590 0305 C6000000 		.4byte	0xc6
 1591 0309 63       		.byte	0x63
 1592 030a 00       		.byte	0
 1593 030b 15       		.uleb128 0x15
 1594 030c A0020000 		.4byte	.LASF39
 1595 0310 01       		.byte	0x1
 1596 0311 2E       		.byte	0x2e
 1597 0312 FB020000 		.4byte	0x2fb
 1598 0316 05       		.uleb128 0x5
 1599 0317 03       		.byte	0x3
 1600 0318 00000000 		.4byte	sendValue
 1601 031c 15       		.uleb128 0x15
 1602 031d CE020000 		.4byte	.LASF40
 1603 0321 01       		.byte	0x1
 1604 0322 2F       		.byte	0x2f
 1605 0323 8D000000 		.4byte	0x8d
 1606 0327 05       		.uleb128 0x5
 1607 0328 03       		.byte	0x3
 1608 0329 00000000 		.4byte	adcValue1
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccqTb6dr.s 			page 36


 1609 032d 15       		.uleb128 0x15
 1610 032e 3A020000 		.4byte	.LASF41
 1611 0332 01       		.byte	0x1
 1612 0333 30       		.byte	0x30
 1613 0334 8D000000 		.4byte	0x8d
 1614 0338 05       		.uleb128 0x5
 1615 0339 03       		.byte	0x3
 1616 033a 00000000 		.4byte	adcValue2
 1617 033e 12       		.uleb128 0x12
 1618 033f A7000000 		.4byte	0xa7
 1619 0343 4E030000 		.4byte	0x34e
 1620 0347 13       		.uleb128 0x13
 1621 0348 C6000000 		.4byte	0xc6
 1622 034c 13       		.byte	0x13
 1623 034d 00       		.byte	0
 1624 034e 15       		.uleb128 0x15
 1625 034f 25000000 		.4byte	.LASF42
 1626 0353 01       		.byte	0x1
 1627 0354 31       		.byte	0x31
 1628 0355 3E030000 		.4byte	0x33e
 1629 0359 05       		.uleb128 0x5
 1630 035a 03       		.byte	0x3
 1631 035b 00000000 		.4byte	temp
 1632 035f 16       		.uleb128 0x16
 1633 0360 6E6E00   		.ascii	"nn\000"
 1634 0363 01       		.byte	0x1
 1635 0364 32       		.byte	0x32
 1636 0365 68000000 		.4byte	0x68
 1637 0369 05       		.uleb128 0x5
 1638 036a 03       		.byte	0x3
 1639 036b 00000000 		.4byte	nn
 1640 036f 12       		.uleb128 0x12
 1641 0370 A0000000 		.4byte	0xa0
 1642 0374 7F030000 		.4byte	0x37f
 1643 0378 13       		.uleb128 0x13
 1644 0379 C6000000 		.4byte	0xc6
 1645 037d 02       		.byte	0x2
 1646 037e 00       		.byte	0
 1647 037f 16       		.uleb128 0x16
 1648 0380 70696400 		.ascii	"pid\000"
 1649 0384 01       		.byte	0x1
 1650 0385 33       		.byte	0x33
 1651 0386 6F030000 		.4byte	0x36f
 1652 038a 05       		.uleb128 0x5
 1653 038b 03       		.byte	0x3
 1654 038c 00000000 		.4byte	pid
 1655 0390 15       		.uleb128 0x15
 1656 0391 D0000000 		.4byte	.LASF43
 1657 0395 01       		.byte	0x1
 1658 0396 35       		.byte	0x35
 1659 0397 FB020000 		.4byte	0x2fb
 1660 039b 05       		.uleb128 0x5
 1661 039c 03       		.byte	0x3
 1662 039d 00000000 		.4byte	help
 1663 03a1 16       		.uleb128 0x16
 1664 03a2 747400   		.ascii	"tt\000"
 1665 03a5 01       		.byte	0x1
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccqTb6dr.s 			page 37


 1666 03a6 36       		.byte	0x36
 1667 03a7 68000000 		.4byte	0x68
 1668 03ab 05       		.uleb128 0x5
 1669 03ac 03       		.byte	0x3
 1670 03ad 00000000 		.4byte	tt
 1671 03b1 16       		.uleb128 0x16
 1672 03b2 706F7300 		.ascii	"pos\000"
 1673 03b6 01       		.byte	0x1
 1674 03b7 37       		.byte	0x37
 1675 03b8 68000000 		.4byte	0x68
 1676 03bc 05       		.uleb128 0x5
 1677 03bd 03       		.byte	0x3
 1678 03be 00000000 		.4byte	pos
 1679 03c2 15       		.uleb128 0x15
 1680 03c3 63010000 		.4byte	.LASF44
 1681 03c7 01       		.byte	0x1
 1682 03c8 38       		.byte	0x38
 1683 03c9 68000000 		.4byte	0x68
 1684 03cd 05       		.uleb128 0x5
 1685 03ce 03       		.byte	0x3
 1686 03cf 00000000 		.4byte	new_pos
 1687 03d3 16       		.uleb128 0x16
 1688 03d4 65727200 		.ascii	"err\000"
 1689 03d8 01       		.byte	0x1
 1690 03d9 39       		.byte	0x39
 1691 03da A0000000 		.4byte	0xa0
 1692 03de 05       		.uleb128 0x5
 1693 03df 03       		.byte	0x3
 1694 03e0 00000000 		.4byte	err
 1695 03e4 12       		.uleb128 0x12
 1696 03e5 8D000000 		.4byte	0x8d
 1697 03e9 F4030000 		.4byte	0x3f4
 1698 03ed 13       		.uleb128 0x13
 1699 03ee C6000000 		.4byte	0xc6
 1700 03f2 06       		.byte	0x6
 1701 03f3 00       		.byte	0
 1702 03f4 15       		.uleb128 0x15
 1703 03f5 40010000 		.4byte	.LASF45
 1704 03f9 01       		.byte	0x1
 1705 03fa 3C       		.byte	0x3c
 1706 03fb E4030000 		.4byte	0x3e4
 1707 03ff 05       		.uleb128 0x5
 1708 0400 03       		.byte	0x3
 1709 0401 00000000 		.4byte	moving_median
 1710 0405 15       		.uleb128 0x15
 1711 0406 96020000 		.4byte	.LASF46
 1712 040a 01       		.byte	0x1
 1713 040b 3D       		.byte	0x3d
 1714 040c E4030000 		.4byte	0x3e4
 1715 0410 05       		.uleb128 0x5
 1716 0411 03       		.byte	0x3
 1717 0412 00000000 		.4byte	tempArray
 1718 0416 16       		.uleb128 0x16
 1719 0417 746D7000 		.ascii	"tmp\000"
 1720 041b 01       		.byte	0x1
 1721 041c 3E       		.byte	0x3e
 1722 041d 8D000000 		.4byte	0x8d
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccqTb6dr.s 			page 38


 1723 0421 05       		.uleb128 0x5
 1724 0422 03       		.byte	0x3
 1725 0423 00000000 		.4byte	tmp
 1726 0427 15       		.uleb128 0x15
 1727 0428 D5000000 		.4byte	.LASF47
 1728 042c 01       		.byte	0x1
 1729 042d E2       		.byte	0xe2
 1730 042e 68000000 		.4byte	0x68
 1731 0432 05       		.uleb128 0x5
 1732 0433 03       		.byte	0x3
 1733 0434 00000000 		.4byte	led_switch
 1734 0438 00       		.byte	0
 1735              		.section	.debug_abbrev,"",%progbits
 1736              	.Ldebug_abbrev0:
 1737 0000 01       		.uleb128 0x1
 1738 0001 11       		.uleb128 0x11
 1739 0002 01       		.byte	0x1
 1740 0003 25       		.uleb128 0x25
 1741 0004 0E       		.uleb128 0xe
 1742 0005 13       		.uleb128 0x13
 1743 0006 0B       		.uleb128 0xb
 1744 0007 03       		.uleb128 0x3
 1745 0008 0E       		.uleb128 0xe
 1746 0009 1B       		.uleb128 0x1b
 1747 000a 0E       		.uleb128 0xe
 1748 000b 55       		.uleb128 0x55
 1749 000c 17       		.uleb128 0x17
 1750 000d 11       		.uleb128 0x11
 1751 000e 01       		.uleb128 0x1
 1752 000f 10       		.uleb128 0x10
 1753 0010 17       		.uleb128 0x17
 1754 0011 00       		.byte	0
 1755 0012 00       		.byte	0
 1756 0013 02       		.uleb128 0x2
 1757 0014 24       		.uleb128 0x24
 1758 0015 00       		.byte	0
 1759 0016 0B       		.uleb128 0xb
 1760 0017 0B       		.uleb128 0xb
 1761 0018 3E       		.uleb128 0x3e
 1762 0019 0B       		.uleb128 0xb
 1763 001a 03       		.uleb128 0x3
 1764 001b 0E       		.uleb128 0xe
 1765 001c 00       		.byte	0
 1766 001d 00       		.byte	0
 1767 001e 03       		.uleb128 0x3
 1768 001f 16       		.uleb128 0x16
 1769 0020 00       		.byte	0
 1770 0021 03       		.uleb128 0x3
 1771 0022 0E       		.uleb128 0xe
 1772 0023 3A       		.uleb128 0x3a
 1773 0024 0B       		.uleb128 0xb
 1774 0025 3B       		.uleb128 0x3b
 1775 0026 0B       		.uleb128 0xb
 1776 0027 49       		.uleb128 0x49
 1777 0028 13       		.uleb128 0x13
 1778 0029 00       		.byte	0
 1779 002a 00       		.byte	0
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccqTb6dr.s 			page 39


 1780 002b 04       		.uleb128 0x4
 1781 002c 24       		.uleb128 0x24
 1782 002d 00       		.byte	0
 1783 002e 0B       		.uleb128 0xb
 1784 002f 0B       		.uleb128 0xb
 1785 0030 3E       		.uleb128 0x3e
 1786 0031 0B       		.uleb128 0xb
 1787 0032 03       		.uleb128 0x3
 1788 0033 08       		.uleb128 0x8
 1789 0034 00       		.byte	0
 1790 0035 00       		.byte	0
 1791 0036 05       		.uleb128 0x5
 1792 0037 16       		.uleb128 0x16
 1793 0038 00       		.byte	0
 1794 0039 03       		.uleb128 0x3
 1795 003a 0E       		.uleb128 0xe
 1796 003b 3A       		.uleb128 0x3a
 1797 003c 0B       		.uleb128 0xb
 1798 003d 3B       		.uleb128 0x3b
 1799 003e 05       		.uleb128 0x5
 1800 003f 49       		.uleb128 0x49
 1801 0040 13       		.uleb128 0x13
 1802 0041 00       		.byte	0
 1803 0042 00       		.byte	0
 1804 0043 06       		.uleb128 0x6
 1805 0044 35       		.uleb128 0x35
 1806 0045 00       		.byte	0
 1807 0046 49       		.uleb128 0x49
 1808 0047 13       		.uleb128 0x13
 1809 0048 00       		.byte	0
 1810 0049 00       		.byte	0
 1811 004a 07       		.uleb128 0x7
 1812 004b 2E       		.uleb128 0x2e
 1813 004c 01       		.byte	0x1
 1814 004d 3F       		.uleb128 0x3f
 1815 004e 19       		.uleb128 0x19
 1816 004f 03       		.uleb128 0x3
 1817 0050 0E       		.uleb128 0xe
 1818 0051 3A       		.uleb128 0x3a
 1819 0052 0B       		.uleb128 0xb
 1820 0053 3B       		.uleb128 0x3b
 1821 0054 0B       		.uleb128 0xb
 1822 0055 27       		.uleb128 0x27
 1823 0056 19       		.uleb128 0x19
 1824 0057 49       		.uleb128 0x49
 1825 0058 13       		.uleb128 0x13
 1826 0059 11       		.uleb128 0x11
 1827 005a 01       		.uleb128 0x1
 1828 005b 12       		.uleb128 0x12
 1829 005c 06       		.uleb128 0x6
 1830 005d 40       		.uleb128 0x40
 1831 005e 18       		.uleb128 0x18
 1832 005f 9642     		.uleb128 0x2116
 1833 0061 19       		.uleb128 0x19
 1834 0062 01       		.uleb128 0x1
 1835 0063 13       		.uleb128 0x13
 1836 0064 00       		.byte	0
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccqTb6dr.s 			page 40


 1837 0065 00       		.byte	0
 1838 0066 08       		.uleb128 0x8
 1839 0067 05       		.uleb128 0x5
 1840 0068 00       		.byte	0
 1841 0069 03       		.uleb128 0x3
 1842 006a 0E       		.uleb128 0xe
 1843 006b 3A       		.uleb128 0x3a
 1844 006c 0B       		.uleb128 0xb
 1845 006d 3B       		.uleb128 0x3b
 1846 006e 0B       		.uleb128 0xb
 1847 006f 49       		.uleb128 0x49
 1848 0070 13       		.uleb128 0x13
 1849 0071 02       		.uleb128 0x2
 1850 0072 18       		.uleb128 0x18
 1851 0073 00       		.byte	0
 1852 0074 00       		.byte	0
 1853 0075 09       		.uleb128 0x9
 1854 0076 34       		.uleb128 0x34
 1855 0077 00       		.byte	0
 1856 0078 03       		.uleb128 0x3
 1857 0079 0E       		.uleb128 0xe
 1858 007a 3A       		.uleb128 0x3a
 1859 007b 0B       		.uleb128 0xb
 1860 007c 3B       		.uleb128 0x3b
 1861 007d 0B       		.uleb128 0xb
 1862 007e 49       		.uleb128 0x49
 1863 007f 13       		.uleb128 0x13
 1864 0080 02       		.uleb128 0x2
 1865 0081 18       		.uleb128 0x18
 1866 0082 00       		.byte	0
 1867 0083 00       		.byte	0
 1868 0084 0A       		.uleb128 0xa
 1869 0085 2E       		.uleb128 0x2e
 1870 0086 01       		.byte	0x1
 1871 0087 3F       		.uleb128 0x3f
 1872 0088 19       		.uleb128 0x19
 1873 0089 03       		.uleb128 0x3
 1874 008a 0E       		.uleb128 0xe
 1875 008b 3A       		.uleb128 0x3a
 1876 008c 0B       		.uleb128 0xb
 1877 008d 3B       		.uleb128 0x3b
 1878 008e 0B       		.uleb128 0xb
 1879 008f 27       		.uleb128 0x27
 1880 0090 19       		.uleb128 0x19
 1881 0091 11       		.uleb128 0x11
 1882 0092 01       		.uleb128 0x1
 1883 0093 12       		.uleb128 0x12
 1884 0094 06       		.uleb128 0x6
 1885 0095 40       		.uleb128 0x40
 1886 0096 18       		.uleb128 0x18
 1887 0097 9642     		.uleb128 0x2116
 1888 0099 19       		.uleb128 0x19
 1889 009a 01       		.uleb128 0x1
 1890 009b 13       		.uleb128 0x13
 1891 009c 00       		.byte	0
 1892 009d 00       		.byte	0
 1893 009e 0B       		.uleb128 0xb
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccqTb6dr.s 			page 41


 1894 009f 0B       		.uleb128 0xb
 1895 00a0 01       		.byte	0x1
 1896 00a1 11       		.uleb128 0x11
 1897 00a2 01       		.uleb128 0x1
 1898 00a3 12       		.uleb128 0x12
 1899 00a4 06       		.uleb128 0x6
 1900 00a5 01       		.uleb128 0x1
 1901 00a6 13       		.uleb128 0x13
 1902 00a7 00       		.byte	0
 1903 00a8 00       		.byte	0
 1904 00a9 0C       		.uleb128 0xc
 1905 00aa 34       		.uleb128 0x34
 1906 00ab 00       		.byte	0
 1907 00ac 03       		.uleb128 0x3
 1908 00ad 08       		.uleb128 0x8
 1909 00ae 3A       		.uleb128 0x3a
 1910 00af 0B       		.uleb128 0xb
 1911 00b0 3B       		.uleb128 0x3b
 1912 00b1 0B       		.uleb128 0xb
 1913 00b2 49       		.uleb128 0x49
 1914 00b3 13       		.uleb128 0x13
 1915 00b4 02       		.uleb128 0x2
 1916 00b5 18       		.uleb128 0x18
 1917 00b6 00       		.byte	0
 1918 00b7 00       		.byte	0
 1919 00b8 0D       		.uleb128 0xd
 1920 00b9 0B       		.uleb128 0xb
 1921 00ba 01       		.byte	0x1
 1922 00bb 11       		.uleb128 0x11
 1923 00bc 01       		.uleb128 0x1
 1924 00bd 12       		.uleb128 0x12
 1925 00be 06       		.uleb128 0x6
 1926 00bf 00       		.byte	0
 1927 00c0 00       		.byte	0
 1928 00c1 0E       		.uleb128 0xe
 1929 00c2 2E       		.uleb128 0x2e
 1930 00c3 01       		.byte	0x1
 1931 00c4 3F       		.uleb128 0x3f
 1932 00c5 19       		.uleb128 0x19
 1933 00c6 03       		.uleb128 0x3
 1934 00c7 0E       		.uleb128 0xe
 1935 00c8 3A       		.uleb128 0x3a
 1936 00c9 0B       		.uleb128 0xb
 1937 00ca 3B       		.uleb128 0x3b
 1938 00cb 0B       		.uleb128 0xb
 1939 00cc 49       		.uleb128 0x49
 1940 00cd 13       		.uleb128 0x13
 1941 00ce 11       		.uleb128 0x11
 1942 00cf 01       		.uleb128 0x1
 1943 00d0 12       		.uleb128 0x12
 1944 00d1 06       		.uleb128 0x6
 1945 00d2 40       		.uleb128 0x40
 1946 00d3 18       		.uleb128 0x18
 1947 00d4 9642     		.uleb128 0x2116
 1948 00d6 19       		.uleb128 0x19
 1949 00d7 01       		.uleb128 0x1
 1950 00d8 13       		.uleb128 0x13
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccqTb6dr.s 			page 42


 1951 00d9 00       		.byte	0
 1952 00da 00       		.byte	0
 1953 00db 0F       		.uleb128 0xf
 1954 00dc 34       		.uleb128 0x34
 1955 00dd 00       		.byte	0
 1956 00de 03       		.uleb128 0x3
 1957 00df 0E       		.uleb128 0xe
 1958 00e0 3A       		.uleb128 0x3a
 1959 00e1 0B       		.uleb128 0xb
 1960 00e2 3B       		.uleb128 0x3b
 1961 00e3 05       		.uleb128 0x5
 1962 00e4 49       		.uleb128 0x49
 1963 00e5 13       		.uleb128 0x13
 1964 00e6 00       		.byte	0
 1965 00e7 00       		.byte	0
 1966 00e8 10       		.uleb128 0x10
 1967 00e9 34       		.uleb128 0x34
 1968 00ea 00       		.byte	0
 1969 00eb 03       		.uleb128 0x3
 1970 00ec 08       		.uleb128 0x8
 1971 00ed 3A       		.uleb128 0x3a
 1972 00ee 0B       		.uleb128 0xb
 1973 00ef 3B       		.uleb128 0x3b
 1974 00f0 05       		.uleb128 0x5
 1975 00f1 49       		.uleb128 0x49
 1976 00f2 13       		.uleb128 0x13
 1977 00f3 02       		.uleb128 0x2
 1978 00f4 18       		.uleb128 0x18
 1979 00f5 00       		.byte	0
 1980 00f6 00       		.byte	0
 1981 00f7 11       		.uleb128 0x11
 1982 00f8 34       		.uleb128 0x34
 1983 00f9 00       		.byte	0
 1984 00fa 03       		.uleb128 0x3
 1985 00fb 0E       		.uleb128 0xe
 1986 00fc 3A       		.uleb128 0x3a
 1987 00fd 0B       		.uleb128 0xb
 1988 00fe 3B       		.uleb128 0x3b
 1989 00ff 05       		.uleb128 0x5
 1990 0100 49       		.uleb128 0x49
 1991 0101 13       		.uleb128 0x13
 1992 0102 02       		.uleb128 0x2
 1993 0103 18       		.uleb128 0x18
 1994 0104 00       		.byte	0
 1995 0105 00       		.byte	0
 1996 0106 12       		.uleb128 0x12
 1997 0107 01       		.uleb128 0x1
 1998 0108 01       		.byte	0x1
 1999 0109 49       		.uleb128 0x49
 2000 010a 13       		.uleb128 0x13
 2001 010b 01       		.uleb128 0x1
 2002 010c 13       		.uleb128 0x13
 2003 010d 00       		.byte	0
 2004 010e 00       		.byte	0
 2005 010f 13       		.uleb128 0x13
 2006 0110 21       		.uleb128 0x21
 2007 0111 00       		.byte	0
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccqTb6dr.s 			page 43


 2008 0112 49       		.uleb128 0x49
 2009 0113 13       		.uleb128 0x13
 2010 0114 2F       		.uleb128 0x2f
 2011 0115 0B       		.uleb128 0xb
 2012 0116 00       		.byte	0
 2013 0117 00       		.byte	0
 2014 0118 14       		.uleb128 0x14
 2015 0119 34       		.uleb128 0x34
 2016 011a 00       		.byte	0
 2017 011b 03       		.uleb128 0x3
 2018 011c 0E       		.uleb128 0xe
 2019 011d 3A       		.uleb128 0x3a
 2020 011e 0B       		.uleb128 0xb
 2021 011f 3B       		.uleb128 0x3b
 2022 0120 05       		.uleb128 0x5
 2023 0121 49       		.uleb128 0x49
 2024 0122 13       		.uleb128 0x13
 2025 0123 3F       		.uleb128 0x3f
 2026 0124 19       		.uleb128 0x19
 2027 0125 3C       		.uleb128 0x3c
 2028 0126 19       		.uleb128 0x19
 2029 0127 00       		.byte	0
 2030 0128 00       		.byte	0
 2031 0129 15       		.uleb128 0x15
 2032 012a 34       		.uleb128 0x34
 2033 012b 00       		.byte	0
 2034 012c 03       		.uleb128 0x3
 2035 012d 0E       		.uleb128 0xe
 2036 012e 3A       		.uleb128 0x3a
 2037 012f 0B       		.uleb128 0xb
 2038 0130 3B       		.uleb128 0x3b
 2039 0131 0B       		.uleb128 0xb
 2040 0132 49       		.uleb128 0x49
 2041 0133 13       		.uleb128 0x13
 2042 0134 3F       		.uleb128 0x3f
 2043 0135 19       		.uleb128 0x19
 2044 0136 02       		.uleb128 0x2
 2045 0137 18       		.uleb128 0x18
 2046 0138 00       		.byte	0
 2047 0139 00       		.byte	0
 2048 013a 16       		.uleb128 0x16
 2049 013b 34       		.uleb128 0x34
 2050 013c 00       		.byte	0
 2051 013d 03       		.uleb128 0x3
 2052 013e 08       		.uleb128 0x8
 2053 013f 3A       		.uleb128 0x3a
 2054 0140 0B       		.uleb128 0xb
 2055 0141 3B       		.uleb128 0x3b
 2056 0142 0B       		.uleb128 0xb
 2057 0143 49       		.uleb128 0x49
 2058 0144 13       		.uleb128 0x13
 2059 0145 3F       		.uleb128 0x3f
 2060 0146 19       		.uleb128 0x19
 2061 0147 02       		.uleb128 0x2
 2062 0148 18       		.uleb128 0x18
 2063 0149 00       		.byte	0
 2064 014a 00       		.byte	0
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccqTb6dr.s 			page 44


 2065 014b 00       		.byte	0
 2066              		.section	.debug_aranges,"",%progbits
 2067 0000 34000000 		.4byte	0x34
 2068 0004 0200     		.2byte	0x2
 2069 0006 00000000 		.4byte	.Ldebug_info0
 2070 000a 04       		.byte	0x4
 2071 000b 00       		.byte	0
 2072 000c 0000     		.2byte	0
 2073 000e 0000     		.2byte	0
 2074 0010 00000000 		.4byte	.LFB64
 2075 0014 7C000000 		.4byte	.LFE64-.LFB64
 2076 0018 00000000 		.4byte	.LFB65
 2077 001c F8000000 		.4byte	.LFE65-.LFB65
 2078 0020 00000000 		.4byte	.LFB66
 2079 0024 98020000 		.4byte	.LFE66-.LFB66
 2080 0028 00000000 		.4byte	.LFB67
 2081 002c 80030000 		.4byte	.LFE67-.LFB67
 2082 0030 00000000 		.4byte	0
 2083 0034 00000000 		.4byte	0
 2084              		.section	.debug_ranges,"",%progbits
 2085              	.Ldebug_ranges0:
 2086 0000 00000000 		.4byte	.LFB64
 2087 0004 7C000000 		.4byte	.LFE64
 2088 0008 00000000 		.4byte	.LFB65
 2089 000c F8000000 		.4byte	.LFE65
 2090 0010 00000000 		.4byte	.LFB66
 2091 0014 98020000 		.4byte	.LFE66
 2092 0018 00000000 		.4byte	.LFB67
 2093 001c 80030000 		.4byte	.LFE67
 2094 0020 00000000 		.4byte	0
 2095 0024 00000000 		.4byte	0
 2096              		.section	.debug_line,"",%progbits
 2097              	.Ldebug_line0:
 2098 0000 AE020000 		.section	.debug_str,"MS",%progbits,1
 2098      02004C01 
 2098      00000201 
 2098      FB0E0D00 
 2098      01010101 
 2099              	.LASF34:
 2100 0000 6E65775F 		.ascii	"new_angle\000"
 2100      616E676C 
 2100      6500
 2101              	.LASF27:
 2102 000a 70726576 		.ascii	"prev_err\000"
 2102      5F657272 
 2102      00
 2103              	.LASF36:
 2104 0013 616E676C 		.ascii	"angle\000"
 2104      6500
 2105              	.LASF35:
 2106 0019 6E65775F 		.ascii	"new_pos_set\000"
 2106      706F735F 
 2106      73657400 
 2107              	.LASF42:
 2108 0025 74656D70 		.ascii	"temp\000"
 2108      00
 2109              	.LASF2:
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccqTb6dr.s 			page 45


 2110 002a 73686F72 		.ascii	"short int\000"
 2110      7420696E 
 2110      7400
 2111              	.LASF18:
 2112 0034 73697A65 		.ascii	"sizetype\000"
 2112      74797065 
 2112      00
 2113              	.LASF48:
 2114 003d 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 2114      43313120 
 2114      352E342E 
 2114      31203230 
 2114      31363036 
 2115 0070 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 2115      20726576 
 2115      6973696F 
 2115      6E203233 
 2115      37373135 
 2116 00a3 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 2116      66756E63 
 2116      74696F6E 
 2116      2D736563 
 2116      74696F6E 
 2117              	.LASF24:
 2118 00cb 6D61696E 		.ascii	"main\000"
 2118      00
 2119              	.LASF43:
 2120 00d0 68656C70 		.ascii	"help\000"
 2120      00
 2121              	.LASF47:
 2122 00d5 6C65645F 		.ascii	"led_switch\000"
 2122      73776974 
 2122      636800
 2123              	.LASF33:
 2124 00e0 64617461 		.ascii	"data_read_mode\000"
 2124      5F726561 
 2124      645F6D6F 
 2124      646500
 2125              	.LASF11:
 2126 00ef 75696E74 		.ascii	"uint8\000"
 2126      3800
 2127              	.LASF32:
 2128 00f5 6572726F 		.ascii	"errorStatus\000"
 2128      72537461 
 2128      74757300 
 2129              	.LASF13:
 2130 0101 666C6F61 		.ascii	"float\000"
 2130      7400
 2131              	.LASF6:
 2132 0107 6C6F6E67 		.ascii	"long long int\000"
 2132      206C6F6E 
 2132      6720696E 
 2132      7400
 2133              	.LASF4:
 2134 0115 6C6F6E67 		.ascii	"long int\000"
 2134      20696E74 
 2134      00
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccqTb6dr.s 			page 46


 2135              	.LASF52:
 2136 011e 74696D65 		.ascii	"timercapture\000"
 2136      72636170 
 2136      74757265 
 2136      00
 2137              	.LASF25:
 2138 012b 62757474 		.ascii	"button\000"
 2138      6F6E00
 2139              	.LASF1:
 2140 0132 756E7369 		.ascii	"unsigned char\000"
 2140      676E6564 
 2140      20636861 
 2140      7200
 2141              	.LASF45:
 2142 0140 6D6F7669 		.ascii	"moving_median\000"
 2142      6E675F6D 
 2142      65646961 
 2142      6E00
 2143              	.LASF17:
 2144 014e 6C6F6E67 		.ascii	"long double\000"
 2144      20646F75 
 2144      626C6500 
 2145              	.LASF22:
 2146 015a 72785374 		.ascii	"rxStatus\000"
 2146      61747573 
 2146      00
 2147              	.LASF44:
 2148 0163 6E65775F 		.ascii	"new_pos\000"
 2148      706F7300 
 2149              	.LASF0:
 2150 016b 7369676E 		.ascii	"signed char\000"
 2150      65642063 
 2150      68617200 
 2151              	.LASF7:
 2152 0177 6C6F6E67 		.ascii	"long long unsigned int\000"
 2152      206C6F6E 
 2152      6720756E 
 2152      7369676E 
 2152      65642069 
 2153              	.LASF8:
 2154 018e 756E7369 		.ascii	"unsigned int\000"
 2154      676E6564 
 2154      20696E74 
 2154      00
 2155              	.LASF29:
 2156 019b 74696D65 		.ascii	"time\000"
 2156      00
 2157              	.LASF21:
 2158 01a0 52784973 		.ascii	"RxIsr\000"
 2158      7200
 2159              	.LASF3:
 2160 01a6 73686F72 		.ascii	"short unsigned int\000"
 2160      7420756E 
 2160      7369676E 
 2160      65642069 
 2160      6E7400
 2161              	.LASF50:
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccqTb6dr.s 			page 47


 2162 01b9 433A5C55 		.ascii	"C:\\Users\\Andrew\\Documents\\GitHub\\Hydraulic-Mim"
 2162      73657273 
 2162      5C416E64 
 2162      7265775C 
 2162      446F6375 
 2163 01e7 69632D41 		.ascii	"ic-Arm\\PSOC_arm_project.cydsn\000"
 2163      726D5C50 
 2163      534F435F 
 2163      61726D5F 
 2163      70726F6A 
 2164              	.LASF15:
 2165 0205 63686172 		.ascii	"char\000"
 2165      00
 2166              	.LASF10:
 2167 020a 696E7433 		.ascii	"int32_t\000"
 2167      325F7400 
 2168              	.LASF19:
 2169 0212 70756C73 		.ascii	"pulselength\000"
 2169      656C656E 
 2169      67746800 
 2170              	.LASF37:
 2171 021e 616E676C 		.ascii	"angletemp\000"
 2171      6574656D 
 2171      7000
 2172              	.LASF30:
 2173 0228 6D6F7669 		.ascii	"moving_avg\000"
 2173      6E675F61 
 2173      766700
 2174              	.LASF12:
 2175 0233 75696E74 		.ascii	"uint16\000"
 2175      313600
 2176              	.LASF41:
 2177 023a 61646356 		.ascii	"adcValue2\000"
 2177      616C7565 
 2177      3200
 2178              	.LASF49:
 2179 0244 6D61696E 		.ascii	"main.c\000"
 2179      2E6300
 2180              	.LASF16:
 2181 024b 72656738 		.ascii	"reg8\000"
 2181      00
 2182              	.LASF5:
 2183 0250 6C6F6E67 		.ascii	"long unsigned int\000"
 2183      20756E73 
 2183      69676E65 
 2183      6420696E 
 2183      7400
 2184              	.LASF38:
 2185 0262 69734E65 		.ascii	"isNegative\000"
 2185      67617469 
 2185      766500
 2186              	.LASF28:
 2187 026d 7069645F 		.ascii	"pid_integral\000"
 2187      696E7465 
 2187      6772616C 
 2187      00
 2188              	.LASF9:
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccqTb6dr.s 			page 48


 2189 027a 5F5F696E 		.ascii	"__int32_t\000"
 2189      7433325F 
 2189      7400
 2190              	.LASF23:
 2191 0284 72784461 		.ascii	"rxData\000"
 2191      746100
 2192              	.LASF20:
 2193 028b 6164635F 		.ascii	"adc_update\000"
 2193      75706461 
 2193      746500
 2194              	.LASF46:
 2195 0296 74656D70 		.ascii	"tempArray\000"
 2195      41727261 
 2195      7900
 2196              	.LASF39:
 2197 02a0 73656E64 		.ascii	"sendValue\000"
 2197      56616C75 
 2197      6500
 2198              	.LASF14:
 2199 02aa 646F7562 		.ascii	"double\000"
 2199      6C6500
 2200              	.LASF31:
 2201 02b1 49544D5F 		.ascii	"ITM_RxBuffer\000"
 2201      52784275 
 2201      66666572 
 2201      00
 2202              	.LASF51:
 2203 02be 64757479 		.ascii	"dutycyclelength\000"
 2203      6379636C 
 2203      656C656E 
 2203      67746800 
 2204              	.LASF40:
 2205 02ce 61646356 		.ascii	"adcValue1\000"
 2205      616C7565 
 2205      3100
 2206              	.LASF26:
 2207 02d8 62757474 		.ascii	"buttonPre\000"
 2207      6F6E5072 
 2207      6500
 2208              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
