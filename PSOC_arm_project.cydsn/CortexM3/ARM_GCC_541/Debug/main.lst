ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccO3WBxN.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.syntax unified
  20              		.global _printf_float
  21              		.thumb
  22              		.syntax unified
  23              		.global	errorStatus
  24              		.bss
  25              		.type	errorStatus, %object
  26              		.size	errorStatus, 1
  27              	errorStatus:
  28 0000 00       		.space	1
  29              		.global	__aeabi_dadd
  30              		.global	__aeabi_ddiv
  31              		.global	__aeabi_dmul
  32              		.global	__aeabi_d2uiz
  33              		.section	.text.dutycyclelength,"ax",%progbits
  34              		.align	2
  35              		.global	dutycyclelength
  36              		.thumb
  37              		.thumb_func
  38              		.type	dutycyclelength, %function
  39              	dutycyclelength:
  40              	.LFB64:
  41              		.file 1 "main.c"
   1:main.c        **** 
   2:main.c        **** #include <project.h>
   3:main.c        **** #include <stdio.h>
   4:main.c        **** #include "common.h"
   5:main.c        **** #include <math.h>
   6:main.c        **** #include <stdlib.h>     /* strtod */
   7:main.c        **** 
   8:main.c        **** #define	Frequency 1000000.0			// Frequency of PWMClock
   9:main.c        **** #define	One_ms (Frequency/1000.0)	// 1 ms constant
  10:main.c        **** #define filter_size 7
  11:main.c        **** 
  12:main.c        **** /* Add an explicit reference to the floating point printf library to allow
  13:main.c        **** the usage of floating point conversion specifier */
  14:main.c        **** #if defined (__GNUC__)
  15:main.c        ****     asm (".global _printf_float");
  16:main.c        **** #endif
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccO3WBxN.s 			page 2


  17:main.c        **** 
  18:main.c        **** uint8 errorStatus = 0u;
  19:main.c        **** 
  20:main.c        **** uint16 dutycyclelength(double angle)
  21:main.c        **** {
  42              		.loc 1 21 0
  43              		.cfi_startproc
  44              		@ args = 0, pretend = 0, frame = 16
  45              		@ frame_needed = 1, uses_anonymous_args = 0
  46 0000 90B5     		push	{r4, r7, lr}
  47              		.cfi_def_cfa_offset 12
  48              		.cfi_offset 4, -12
  49              		.cfi_offset 7, -8
  50              		.cfi_offset 14, -4
  51 0002 85B0     		sub	sp, sp, #20
  52              		.cfi_def_cfa_offset 32
  53 0004 00AF     		add	r7, sp, #0
  54              		.cfi_def_cfa_register 7
  55 0006 C7E90001 		strd	r0, [r7]
  22:main.c        ****     uint16 pulselength=(uint16)One_ms + ((angle+45.0)/90.0) * One_ms;
  56              		.loc 1 22 0
  57 000a 4FF00002 		mov	r2, #0
  58 000e 164B     		ldr	r3, .L3
  59 0010 D7E90001 		ldrd	r0, [r7]
  60 0014 FFF7FEFF 		bl	__aeabi_dadd
  61 0018 0346     		mov	r3, r0
  62 001a 0C46     		mov	r4, r1
  63 001c 1846     		mov	r0, r3
  64 001e 2146     		mov	r1, r4
  65 0020 4FF00002 		mov	r2, #0
  66 0024 114B     		ldr	r3, .L3+4
  67 0026 FFF7FEFF 		bl	__aeabi_ddiv
  68 002a 0346     		mov	r3, r0
  69 002c 0C46     		mov	r4, r1
  70 002e 1846     		mov	r0, r3
  71 0030 2146     		mov	r1, r4
  72 0032 4FF00002 		mov	r2, #0
  73 0036 0E4B     		ldr	r3, .L3+8
  74 0038 FFF7FEFF 		bl	__aeabi_dmul
  75 003c 0346     		mov	r3, r0
  76 003e 0C46     		mov	r4, r1
  77 0040 1846     		mov	r0, r3
  78 0042 2146     		mov	r1, r4
  79 0044 4FF00002 		mov	r2, #0
  80 0048 094B     		ldr	r3, .L3+8
  81 004a FFF7FEFF 		bl	__aeabi_dadd
  82 004e 0346     		mov	r3, r0
  83 0050 0C46     		mov	r4, r1
  84 0052 1846     		mov	r0, r3
  85 0054 2146     		mov	r1, r4
  86 0056 FFF7FEFF 		bl	__aeabi_d2uiz
  87 005a 0346     		mov	r3, r0
  88 005c FB81     		strh	r3, [r7, #14]	@ movhi
  23:main.c        ****     return pulselength;
  89              		.loc 1 23 0
  90 005e FB89     		ldrh	r3, [r7, #14]
  24:main.c        **** }
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccO3WBxN.s 			page 3


  91              		.loc 1 24 0
  92 0060 1846     		mov	r0, r3
  93 0062 1437     		adds	r7, r7, #20
  94              		.cfi_def_cfa_offset 12
  95 0064 BD46     		mov	sp, r7
  96              		.cfi_def_cfa_register 13
  97              		@ sp needed
  98 0066 90BD     		pop	{r4, r7, pc}
  99              	.L4:
 100              		.align	2
 101              	.L3:
 102 0068 00804640 		.word	1078362112
 103 006c 00805640 		.word	1079410688
 104 0070 00408F40 		.word	1083129856
 105              		.cfi_endproc
 106              	.LFE64:
 107              		.size	dutycyclelength, .-dutycyclelength
 108              		.global	data_read_mode
 109              		.bss
 110 0001 000000   		.align	2
 111              		.type	data_read_mode, %object
 112              		.size	data_read_mode, 4
 113              	data_read_mode:
 114 0004 00000000 		.space	4
 115              		.global	new_angle
 116              		.align	2
 117              		.type	new_angle, %object
 118              		.size	new_angle, 4
 119              	new_angle:
 120 0008 00000000 		.space	4
 121              		.global	new_pos_set
 122              		.align	2
 123              		.type	new_pos_set, %object
 124              		.size	new_pos_set, 4
 125              	new_pos_set:
 126 000c 00000000 		.space	4
 127              		.global	angle
 128              		.align	3
 129              		.type	angle, %object
 130              		.size	angle, 8
 131              	angle:
 132 0010 00000000 		.space	8
 132      00000000 
 133              		.global	angletemp
 134              		.align	3
 135              		.type	angletemp, %object
 136              		.size	angletemp, 8
 137              	angletemp:
 138 0018 00000000 		.space	8
 138      00000000 
 139              		.global	isNegative
 140              		.align	2
 141              		.type	isNegative, %object
 142              		.size	isNegative, 4
 143              	isNegative:
 144 0020 00000000 		.space	4
 145              		.comm	sendValue,100,4
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccO3WBxN.s 			page 4


 146              		.comm	adcValue1,2,2
 147              		.comm	adcValue2,2,2
 148              		.comm	temp,20,4
 149              		.global	nn
 150              		.align	2
 151              		.type	nn, %object
 152              		.size	nn, 4
 153              	nn:
 154 0024 00000000 		.space	4
 155              		.global	pid
 156              		.data
 157              		.align	3
 158              		.type	pid, %object
 159              		.size	pid, 24
 160              	pid:
 161 0000 FA7E6ABC 		.word	-1133871366
 162 0004 7493683F 		.word	1063818100
 163 0008 00000000 		.word	0
 164 000c 00000000 		.word	0
 165 0010 FCA9F1D2 		.word	-755914244
 166 0014 4D62503F 		.word	1062232653
 167              		.comm	help,100,4
 168              		.global	tt
 169              		.bss
 170              		.align	2
 171              		.type	tt, %object
 172              		.size	tt, 4
 173              	tt:
 174 0028 00000000 		.space	4
 175              		.global	pos
 176              		.data
 177              		.align	2
 178              		.type	pos, %object
 179              		.size	pos, 4
 180              	pos:
 181 0018 40060000 		.word	1600
 182              		.comm	new_pos,4,4
 183              		.comm	err,8,8
 184              		.global	start_calib
 185              		.bss
 186              		.align	2
 187              		.type	start_calib, %object
 188              		.size	start_calib, 4
 189              	start_calib:
 190 002c 00000000 		.space	4
 191              		.global	moving_median
 192              		.align	2
 193              		.type	moving_median, %object
 194              		.size	moving_median, 14
 195              	moving_median:
 196 0030 00000000 		.space	14
 196      00000000 
 196      00000000 
 196      0000
 197              		.comm	tempArray,14,4
 198              		.comm	tmp,2,2
 199              		.section	.text.adc_update,"ax",%progbits
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccO3WBxN.s 			page 5


 200              		.align	2
 201              		.global	adc_update
 202              		.thumb
 203              		.thumb_func
 204              		.type	adc_update, %function
 205              	adc_update:
 206              	.LFB65:
  25:main.c        **** 
  26:main.c        **** /*******************************************************************************
  27:main.c        **** * Function Name: RxIsr
  28:main.c        **** ********************************************************************************
  29:main.c        **** *
  30:main.c        **** * Summary:
  31:main.c        **** *  Interrupt Service Routine for RX portion of the UART
  32:main.c        **** *
  33:main.c        **** * Parameters:
  34:main.c        **** *  None.
  35:main.c        **** *
  36:main.c        **** * Return:
  37:main.c        **** *  None.
  38:main.c        **** *
  39:main.c        **** *******************************************************************************/
  40:main.c        **** int data_read_mode = 0;
  41:main.c        **** volatile int new_angle = 0;
  42:main.c        **** volatile int new_pos_set = 0;
  43:main.c        **** double angle = 0;
  44:main.c        **** double angletemp=0;
  45:main.c        **** int isNegative=0;
  46:main.c        **** char sendValue[100];
  47:main.c        **** uint16 adcValue1;
  48:main.c        **** uint16 adcValue2;
  49:main.c        **** char temp[20];
  50:main.c        **** int nn=0;
  51:main.c        **** double pid[3] = {0.003,0.000,0.001};
  52:main.c        **** //double pid[3] = { -2.22,-0.0307,0.0 };
  53:main.c        **** char help[100];
  54:main.c        **** int tt = 0;
  55:main.c        **** int pos=1600;
  56:main.c        **** int new_pos;
  57:main.c        **** double err;
  58:main.c        **** int start_calib = 0;
  59:main.c        **** 
  60:main.c        **** 
  61:main.c        **** uint16 moving_median[filter_size] = {0,0,0};
  62:main.c        **** uint16 tempArray[filter_size];
  63:main.c        **** uint16 tmp;
  64:main.c        **** 
  65:main.c        **** CY_ISR(adc_update){
 207              		.loc 1 65 0
 208              		.cfi_startproc
 209              		@ args = 0, pretend = 0, frame = 16
 210              		@ frame_needed = 1, uses_anonymous_args = 0
 211 0000 80B5     		push	{r7, lr}
 212              		.cfi_def_cfa_offset 8
 213              		.cfi_offset 7, -8
 214              		.cfi_offset 14, -4
 215 0002 84B0     		sub	sp, sp, #16
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccO3WBxN.s 			page 6


 216              		.cfi_def_cfa_offset 24
 217 0004 00AF     		add	r7, sp, #0
 218              		.cfi_def_cfa_register 7
 219              	.LBB2:
  66:main.c        ****     for(int j=0;j<filter_size-1;j++){
 220              		.loc 1 66 0
 221 0006 0023     		movs	r3, #0
 222 0008 FB60     		str	r3, [r7, #12]
 223 000a 0BE0     		b	.L6
 224              	.L7:
  67:main.c        ****             moving_median[j] = moving_median[j+1]; 
 225              		.loc 1 67 0 discriminator 3
 226 000c FB68     		ldr	r3, [r7, #12]
 227 000e 0133     		adds	r3, r3, #1
 228 0010 354A     		ldr	r2, .L16
 229 0012 32F81310 		ldrh	r1, [r2, r3, lsl #1]
 230 0016 344A     		ldr	r2, .L16
 231 0018 FB68     		ldr	r3, [r7, #12]
 232 001a 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
  66:main.c        ****     for(int j=0;j<filter_size-1;j++){
 233              		.loc 1 66 0 discriminator 3
 234 001e FB68     		ldr	r3, [r7, #12]
 235 0020 0133     		adds	r3, r3, #1
 236 0022 FB60     		str	r3, [r7, #12]
 237              	.L6:
  66:main.c        ****     for(int j=0;j<filter_size-1;j++){
 238              		.loc 1 66 0 is_stmt 0 discriminator 1
 239 0024 FB68     		ldr	r3, [r7, #12]
 240 0026 052B     		cmp	r3, #5
 241 0028 F0DD     		ble	.L7
 242              	.LBE2:
  68:main.c        ****     }
  69:main.c        ****     ADC_SAR_1_StartConvert();
 243              		.loc 1 69 0 is_stmt 1
 244 002a FFF7FEFF 		bl	ADC_SAR_1_StartConvert
  70:main.c        ****     ADC_SAR_1_IsEndConversion(ADC_SAR_1_WAIT_FOR_RESULT);
 245              		.loc 1 70 0
 246 002e 0020     		movs	r0, #0
 247 0030 FFF7FEFF 		bl	ADC_SAR_1_IsEndConversion
  71:main.c        ****         
  72:main.c        ****     moving_median[filter_size-1] = ADC_SAR_1_GetResult16();
 248              		.loc 1 72 0
 249 0034 FFF7FEFF 		bl	ADC_SAR_1_GetResult16
 250 0038 0346     		mov	r3, r0
 251 003a 9AB2     		uxth	r2, r3
 252 003c 2A4B     		ldr	r3, .L16
 253 003e 9A81     		strh	r2, [r3, #12]	@ movhi
 254              	.LBB3:
  73:main.c        ****     
  74:main.c        ****     for(int j=0;j<filter_size;j++){
 255              		.loc 1 74 0
 256 0040 0023     		movs	r3, #0
 257 0042 BB60     		str	r3, [r7, #8]
 258 0044 0AE0     		b	.L8
 259              	.L9:
  75:main.c        ****             tempArray[j] = moving_median[j]; 
 260              		.loc 1 75 0 discriminator 3
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccO3WBxN.s 			page 7


 261 0046 284A     		ldr	r2, .L16
 262 0048 BB68     		ldr	r3, [r7, #8]
 263 004a 32F81310 		ldrh	r1, [r2, r3, lsl #1]
 264 004e 274A     		ldr	r2, .L16+4
 265 0050 BB68     		ldr	r3, [r7, #8]
 266 0052 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
  74:main.c        ****             tempArray[j] = moving_median[j]; 
 267              		.loc 1 74 0 discriminator 3
 268 0056 BB68     		ldr	r3, [r7, #8]
 269 0058 0133     		adds	r3, r3, #1
 270 005a BB60     		str	r3, [r7, #8]
 271              	.L8:
  74:main.c        ****             tempArray[j] = moving_median[j]; 
 272              		.loc 1 74 0 is_stmt 0 discriminator 1
 273 005c BB68     		ldr	r3, [r7, #8]
 274 005e 062B     		cmp	r3, #6
 275 0060 F1DD     		ble	.L9
 276              	.LBE3:
 277              	.LBB4:
  76:main.c        ****     }
  77:main.c        ****     for(int i = 0; i < filter_size; i++){                     //Loop for ascending ordering
 278              		.loc 1 77 0 is_stmt 1
 279 0062 0023     		movs	r3, #0
 280 0064 7B60     		str	r3, [r7, #4]
 281 0066 29E0     		b	.L10
 282              	.L14:
 283              	.LBB5:
  78:main.c        ****     	for (int j = 0; j < filter_size; j++)             //Loop for comparing other values
 284              		.loc 1 78 0
 285 0068 0023     		movs	r3, #0
 286 006a 3B60     		str	r3, [r7]
 287 006c 20E0     		b	.L11
 288              	.L13:
  79:main.c        ****     	{
  80:main.c        ****     		if (tempArray[j] > tempArray[i])                //Comparing other array elements
 289              		.loc 1 80 0
 290 006e 1F4A     		ldr	r2, .L16+4
 291 0070 3B68     		ldr	r3, [r7]
 292 0072 32F81320 		ldrh	r2, [r2, r3, lsl #1]
 293 0076 1D49     		ldr	r1, .L16+4
 294 0078 7B68     		ldr	r3, [r7, #4]
 295 007a 31F81330 		ldrh	r3, [r1, r3, lsl #1]
 296 007e 9A42     		cmp	r2, r3
 297 0080 13D9     		bls	.L12
  81:main.c        ****     		{
  82:main.c        ****     			tmp = tempArray[i];         //Using temporary variable for storing last value
 298              		.loc 1 82 0
 299 0082 1A4A     		ldr	r2, .L16+4
 300 0084 7B68     		ldr	r3, [r7, #4]
 301 0086 32F81320 		ldrh	r2, [r2, r3, lsl #1]
 302 008a 194B     		ldr	r3, .L16+8
 303 008c 1A80     		strh	r2, [r3]	@ movhi
  83:main.c        ****     			tempArray[i] = tempArray[j];            //replacing value
 304              		.loc 1 83 0
 305 008e 174A     		ldr	r2, .L16+4
 306 0090 3B68     		ldr	r3, [r7]
 307 0092 32F81310 		ldrh	r1, [r2, r3, lsl #1]
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccO3WBxN.s 			page 8


 308 0096 154A     		ldr	r2, .L16+4
 309 0098 7B68     		ldr	r3, [r7, #4]
 310 009a 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
  84:main.c        ****     			tempArray[j] = tmp;             //storing last value
 311              		.loc 1 84 0
 312 009e 144B     		ldr	r3, .L16+8
 313 00a0 1988     		ldrh	r1, [r3]
 314 00a2 124A     		ldr	r2, .L16+4
 315 00a4 3B68     		ldr	r3, [r7]
 316 00a6 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
 317              	.L12:
  78:main.c        ****     	{
 318              		.loc 1 78 0 discriminator 2
 319 00aa 3B68     		ldr	r3, [r7]
 320 00ac 0133     		adds	r3, r3, #1
 321 00ae 3B60     		str	r3, [r7]
 322              	.L11:
  78:main.c        ****     	{
 323              		.loc 1 78 0 is_stmt 0 discriminator 1
 324 00b0 3B68     		ldr	r3, [r7]
 325 00b2 062B     		cmp	r3, #6
 326 00b4 DBDD     		ble	.L13
 327              	.LBE5:
  77:main.c        ****     	for (int j = 0; j < filter_size; j++)             //Loop for comparing other values
 328              		.loc 1 77 0 is_stmt 1 discriminator 2
 329 00b6 7B68     		ldr	r3, [r7, #4]
 330 00b8 0133     		adds	r3, r3, #1
 331 00ba 7B60     		str	r3, [r7, #4]
 332              	.L10:
  77:main.c        ****     	for (int j = 0; j < filter_size; j++)             //Loop for comparing other values
 333              		.loc 1 77 0 is_stmt 0 discriminator 1
 334 00bc 7B68     		ldr	r3, [r7, #4]
 335 00be 062B     		cmp	r3, #6
 336 00c0 D2DD     		ble	.L14
 337              	.LBE4:
  85:main.c        ****     		}  
  86:main.c        ****     	}
  87:main.c        ****     }
  88:main.c        ****     adcValue1 = tempArray[(filter_size-1)/2];
 338              		.loc 1 88 0 is_stmt 1
 339 00c2 0A4B     		ldr	r3, .L16+4
 340 00c4 DA88     		ldrh	r2, [r3, #6]
 341 00c6 0B4B     		ldr	r3, .L16+12
 342 00c8 1A80     		strh	r2, [r3]	@ movhi
  89:main.c        ****     if(adcValue1<4000){
 343              		.loc 1 89 0
 344 00ca 0A4B     		ldr	r3, .L16+12
 345 00cc 1B88     		ldrh	r3, [r3]
 346 00ce B3F57A6F 		cmp	r3, #4000
 347 00d2 03D2     		bcs	.L15
  90:main.c        ****         adcValue1 = adcValue1;
 348              		.loc 1 90 0
 349 00d4 074B     		ldr	r3, .L16+12
 350 00d6 1A88     		ldrh	r2, [r3]
 351 00d8 064B     		ldr	r3, .L16+12
 352 00da 1A80     		strh	r2, [r3]	@ movhi
 353              	.L15:
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccO3WBxN.s 			page 9


  91:main.c        ****     }
  92:main.c        ****     
  93:main.c        ****     update_median_isr_ClearPending();
 354              		.loc 1 93 0
 355 00dc FFF7FEFF 		bl	update_median_isr_ClearPending
  94:main.c        ****     
  95:main.c        **** }
 356              		.loc 1 95 0
 357 00e0 00BF     		nop
 358 00e2 1037     		adds	r7, r7, #16
 359              		.cfi_def_cfa_offset 8
 360 00e4 BD46     		mov	sp, r7
 361              		.cfi_def_cfa_register 13
 362              		@ sp needed
 363 00e6 80BD     		pop	{r7, pc}
 364              	.L17:
 365              		.align	2
 366              	.L16:
 367 00e8 00000000 		.word	moving_median
 368 00ec 00000000 		.word	tempArray
 369 00f0 00000000 		.word	tmp
 370 00f4 00000000 		.word	adcValue1
 371              		.cfi_endproc
 372              	.LFE65:
 373              		.size	adc_update, .-adc_update
 374              		.section	.rodata
 375              		.align	2
 376              	.LC0:
 377 0000 25303864 		.ascii	"%08d\011%8.2f\011%8.2f\000"
 377      0925382E 
 377      32660925 
 377      382E3266 
 377      00
 378              		.section	.text.RxIsr,"ax",%progbits
 379              		.align	2
 380              		.global	RxIsr
 381              		.thumb
 382              		.thumb_func
 383              		.type	RxIsr, %function
 384              	RxIsr:
 385              	.LFB66:
  96:main.c        **** 
  97:main.c        **** 
  98:main.c        **** CY_ISR(RxIsr)
  99:main.c        **** {
 386              		.loc 1 99 0
 387              		.cfi_startproc
 388              		@ args = 0, pretend = 0, frame = 8
 389              		@ frame_needed = 1, uses_anonymous_args = 0
 390 0000 90B5     		push	{r4, r7, lr}
 391              		.cfi_def_cfa_offset 12
 392              		.cfi_offset 4, -12
 393              		.cfi_offset 7, -8
 394              		.cfi_offset 14, -4
 395 0002 87B0     		sub	sp, sp, #28
 396              		.cfi_def_cfa_offset 40
 397 0004 04AF     		add	r7, sp, #16
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccO3WBxN.s 			page 10


 398              		.cfi_def_cfa 7, 24
 399              	.L46:
 100:main.c        ****     uint8 rxStatus;         
 101:main.c        ****     uint8 rxData;           
 102:main.c        ****     
 103:main.c        ****     do
 104:main.c        ****     {
 105:main.c        ****         /* Read receiver status register */
 106:main.c        ****         rxStatus = UART_RXSTATUS_REG;
 400              		.loc 1 106 0
 401 0006 964B     		ldr	r3, .L49
 402 0008 1B78     		ldrb	r3, [r3]
 403 000a FB70     		strb	r3, [r7, #3]
 107:main.c        **** 
 108:main.c        ****         if((rxStatus & (UART_RX_STS_BREAK      | UART_RX_STS_PAR_ERROR |
 109:main.c        ****                         UART_RX_STS_STOP_ERROR | UART_RX_STS_OVERRUN)) != 0u)
 404              		.loc 1 109 0
 405 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 406 000e 03F01E03 		and	r3, r3, #30
 108:main.c        ****                         UART_RX_STS_STOP_ERROR | UART_RX_STS_OVERRUN)) != 0u)
 407              		.loc 1 108 0
 408 0012 002B     		cmp	r3, #0
 409 0014 0CD0     		beq	.L19
 110:main.c        ****         {
 111:main.c        ****             /* ERROR handling. */
 112:main.c        ****             errorStatus |= rxStatus & ( UART_RX_STS_BREAK      | UART_RX_STS_PAR_ERROR | 
 410              		.loc 1 112 0
 411 0016 97F90330 		ldrsb	r3, [r7, #3]
 412 001a 03F01E03 		and	r3, r3, #30
 413 001e 5AB2     		sxtb	r2, r3
 414 0020 904B     		ldr	r3, .L49+4
 415 0022 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 416 0024 5BB2     		sxtb	r3, r3
 417 0026 1343     		orrs	r3, r3, r2
 418 0028 5BB2     		sxtb	r3, r3
 419 002a DAB2     		uxtb	r2, r3
 420 002c 8D4B     		ldr	r3, .L49+4
 421 002e 1A70     		strb	r2, [r3]
 422              	.L19:
 113:main.c        ****                                         UART_RX_STS_STOP_ERROR | UART_RX_STS_OVERRUN);
 114:main.c        ****         }
 115:main.c        ****         
 116:main.c        ****         if((rxStatus & UART_RX_STS_FIFO_NOTEMPTY) != 0u)
 423              		.loc 1 116 0
 424 0030 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 425 0032 03F02003 		and	r3, r3, #32
 426 0036 002B     		cmp	r3, #0
 427 0038 00F00781 		beq	.L20
 117:main.c        ****         {
 118:main.c        ****             /* Read data from the RX data register */
 119:main.c        ****             rxData = UART_RXDATA_REG;
 428              		.loc 1 119 0
 429 003c 8A4B     		ldr	r3, .L49+8
 430 003e 1B78     		ldrb	r3, [r3]
 431 0040 BB70     		strb	r3, [r7, #2]
 120:main.c        ****             help[tt] = rxData;
 432              		.loc 1 120 0
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccO3WBxN.s 			page 11


 433 0042 8A4B     		ldr	r3, .L49+12
 434 0044 1B68     		ldr	r3, [r3]
 435 0046 8A49     		ldr	r1, .L49+16
 436 0048 BA78     		ldrb	r2, [r7, #2]
 437 004a CA54     		strb	r2, [r1, r3]
 121:main.c        ****             tt++;
 438              		.loc 1 121 0
 439 004c 874B     		ldr	r3, .L49+12
 440 004e 1B68     		ldr	r3, [r3]
 441 0050 0133     		adds	r3, r3, #1
 442 0052 864A     		ldr	r2, .L49+12
 443 0054 1360     		str	r3, [r2]
 122:main.c        ****             if(tt==99){tt=0;}
 444              		.loc 1 122 0
 445 0056 854B     		ldr	r3, .L49+12
 446 0058 1B68     		ldr	r3, [r3]
 447 005a 632B     		cmp	r3, #99
 448 005c 02D1     		bne	.L21
 449              		.loc 1 122 0 is_stmt 0 discriminator 1
 450 005e 834B     		ldr	r3, .L49+12
 451 0060 0022     		movs	r2, #0
 452 0062 1A60     		str	r2, [r3]
 453              	.L21:
 123:main.c        ****             if(rxData=='b' ){start_calib=1;};
 454              		.loc 1 123 0 is_stmt 1
 455 0064 BB78     		ldrb	r3, [r7, #2]	@ zero_extendqisi2
 456 0066 622B     		cmp	r3, #98
 457 0068 02D1     		bne	.L22
 458              		.loc 1 123 0 is_stmt 0 discriminator 1
 459 006a 824B     		ldr	r3, .L49+20
 460 006c 0122     		movs	r2, #1
 461 006e 1A60     		str	r2, [r3]
 462              	.L22:
 124:main.c        ****             switch(data_read_mode)
 463              		.loc 1 124 0 is_stmt 1
 464 0070 814B     		ldr	r3, .L49+24
 465 0072 1B68     		ldr	r3, [r3]
 466 0074 052B     		cmp	r3, #5
 467 0076 00F2E880 		bhi	.L20
 468 007a 01A2     		adr	r2, .L25
 469 007c 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 470              		.p2align 2
 471              	.L25:
 472 0080 99000000 		.word	.L24+1
 473 0084 D5000000 		.word	.L26+1
 474 0088 0F010000 		.word	.L27+1
 475 008c 7D010000 		.word	.L28+1
 476 0090 BF010000 		.word	.L29+1
 477 0094 01020000 		.word	.L30+1
 478              		.p2align 1
 479              	.L24:
 125:main.c        ****             {
 126:main.c        ****                 case 0:
 127:main.c        ****                     if(rxData=='{' )
 480              		.loc 1 127 0
 481 0098 BB78     		ldrb	r3, [r7, #2]	@ zero_extendqisi2
 482 009a 7B2B     		cmp	r3, #123
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccO3WBxN.s 			page 12


 483 009c 40F0D280 		bne	.L47
 484              	.LBB6:
 128:main.c        ****                     {
 129:main.c        ****                         for(int pp=1;pp<20;pp++){
 485              		.loc 1 129 0
 486 00a0 0123     		movs	r3, #1
 487 00a2 7B60     		str	r3, [r7, #4]
 488 00a4 07E0     		b	.L32
 489              	.L33:
 130:main.c        ****                             temp[pp] = ' ';
 490              		.loc 1 130 0 discriminator 3
 491 00a6 754A     		ldr	r2, .L49+28
 492 00a8 7B68     		ldr	r3, [r7, #4]
 493 00aa 1344     		add	r3, r3, r2
 494 00ac 2022     		movs	r2, #32
 495 00ae 1A70     		strb	r2, [r3]
 129:main.c        ****                             temp[pp] = ' ';
 496              		.loc 1 129 0 discriminator 3
 497 00b0 7B68     		ldr	r3, [r7, #4]
 498 00b2 0133     		adds	r3, r3, #1
 499 00b4 7B60     		str	r3, [r7, #4]
 500              	.L32:
 129:main.c        ****                             temp[pp] = ' ';
 501              		.loc 1 129 0 is_stmt 0 discriminator 1
 502 00b6 7B68     		ldr	r3, [r7, #4]
 503 00b8 132B     		cmp	r3, #19
 504 00ba F4DD     		ble	.L33
 505              	.LBE6:
 131:main.c        ****                         }
 132:main.c        ****                         temp[0] = '\0';
 506              		.loc 1 132 0 is_stmt 1
 507 00bc 6F4B     		ldr	r3, .L49+28
 508 00be 0022     		movs	r2, #0
 509 00c0 1A70     		strb	r2, [r3]
 133:main.c        ****                         new_angle = 0;
 510              		.loc 1 133 0
 511 00c2 6F4B     		ldr	r3, .L49+32
 512 00c4 0022     		movs	r2, #0
 513 00c6 1A60     		str	r2, [r3]
 134:main.c        ****                         data_read_mode++;
 514              		.loc 1 134 0
 515 00c8 6B4B     		ldr	r3, .L49+24
 516 00ca 1B68     		ldr	r3, [r3]
 517 00cc 0133     		adds	r3, r3, #1
 518 00ce 6A4A     		ldr	r2, .L49+24
 519 00d0 1360     		str	r3, [r2]
 135:main.c        ****                     }
 136:main.c        ****                 break;
 520              		.loc 1 136 0
 521 00d2 B7E0     		b	.L47
 522              	.L26:
 137:main.c        ****                 case 1:
 138:main.c        ****                     if(rxData=='x'){
 523              		.loc 1 138 0
 524 00d4 BB78     		ldrb	r3, [r7, #2]	@ zero_extendqisi2
 525 00d6 782B     		cmp	r3, #120
 526 00d8 03D1     		bne	.L34
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccO3WBxN.s 			page 13


 139:main.c        ****                         data_read_mode = 2;}
 527              		.loc 1 139 0
 528 00da 674B     		ldr	r3, .L49+24
 529 00dc 0222     		movs	r2, #2
 530 00de 1A60     		str	r2, [r3]
 140:main.c        ****                     else if(rxData=='p'){
 141:main.c        ****                         data_read_mode = 3;}
 142:main.c        ****                     else if(rxData=='i'){
 143:main.c        ****                         data_read_mode = 4;}
 144:main.c        ****                     else if(rxData=='d'){
 145:main.c        ****                         data_read_mode = 5;}
 146:main.c        ****                 break;
 531              		.loc 1 146 0
 532 00e0 B2E0     		b	.L48
 533              	.L34:
 140:main.c        ****                     else if(rxData=='p'){
 534              		.loc 1 140 0
 535 00e2 BB78     		ldrb	r3, [r7, #2]	@ zero_extendqisi2
 536 00e4 702B     		cmp	r3, #112
 537 00e6 03D1     		bne	.L36
 141:main.c        ****                     else if(rxData=='i'){
 538              		.loc 1 141 0
 539 00e8 634B     		ldr	r3, .L49+24
 540 00ea 0322     		movs	r2, #3
 541 00ec 1A60     		str	r2, [r3]
 542              		.loc 1 146 0
 543 00ee ABE0     		b	.L48
 544              	.L36:
 142:main.c        ****                         data_read_mode = 4;}
 545              		.loc 1 142 0
 546 00f0 BB78     		ldrb	r3, [r7, #2]	@ zero_extendqisi2
 547 00f2 692B     		cmp	r3, #105
 548 00f4 03D1     		bne	.L37
 143:main.c        ****                     else if(rxData=='d'){
 549              		.loc 1 143 0
 550 00f6 604B     		ldr	r3, .L49+24
 551 00f8 0422     		movs	r2, #4
 552 00fa 1A60     		str	r2, [r3]
 553              		.loc 1 146 0
 554 00fc A4E0     		b	.L48
 555              	.L37:
 144:main.c        ****                         data_read_mode = 5;}
 556              		.loc 1 144 0
 557 00fe BB78     		ldrb	r3, [r7, #2]	@ zero_extendqisi2
 558 0100 642B     		cmp	r3, #100
 559 0102 40F0A180 		bne	.L48
 145:main.c        ****                 break;
 560              		.loc 1 145 0
 561 0106 5C4B     		ldr	r3, .L49+24
 562 0108 0522     		movs	r2, #5
 563 010a 1A60     		str	r2, [r3]
 564              		.loc 1 146 0
 565 010c 9CE0     		b	.L48
 566              	.L27:
 147:main.c        ****                 case 2:
 148:main.c        ****                     if(rxData != '}'){
 567              		.loc 1 148 0
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccO3WBxN.s 			page 14


 568 010e BB78     		ldrb	r3, [r7, #2]	@ zero_extendqisi2
 569 0110 7D2B     		cmp	r3, #125
 570 0112 0AD0     		beq	.L38
 149:main.c        ****                         temp[nn] = rxData;
 571              		.loc 1 149 0
 572 0114 5B4B     		ldr	r3, .L49+36
 573 0116 1B68     		ldr	r3, [r3]
 574 0118 5849     		ldr	r1, .L49+28
 575 011a BA78     		ldrb	r2, [r7, #2]
 576 011c CA54     		strb	r2, [r1, r3]
 150:main.c        ****                         nn++;
 577              		.loc 1 150 0
 578 011e 594B     		ldr	r3, .L49+36
 579 0120 1B68     		ldr	r3, [r3]
 580 0122 0133     		adds	r3, r3, #1
 581 0124 574A     		ldr	r2, .L49+36
 582 0126 1360     		str	r3, [r2]
 151:main.c        ****                     }
 152:main.c        ****                     else {
 153:main.c        ****                         new_pos = (int) strtol(temp, (char **)NULL, 10);
 154:main.c        ****                         new_pos_set = 1;
 155:main.c        ****                         nn=0; 
 156:main.c        ****                     
 157:main.c        ****                         sprintf(sendValue,"%08d\t%8.2f\t%8.2f",adcValue1,err,angletemp);
 158:main.c        ****                         UART_PutString(sendValue);
 159:main.c        ****                         temp[0] = '\0';
 160:main.c        ****                         
 161:main.c        ****                         data_read_mode = 0;
 162:main.c        ****                     }
 163:main.c        ****                   
 164:main.c        ****                 break;
 583              		.loc 1 164 0
 584 0128 8FE0     		b	.L20
 585              	.L38:
 153:main.c        ****                         new_pos_set = 1;
 586              		.loc 1 153 0
 587 012a 0A22     		movs	r2, #10
 588 012c 0021     		movs	r1, #0
 589 012e 5348     		ldr	r0, .L49+28
 590 0130 FFF7FEFF 		bl	strtol
 591 0134 0246     		mov	r2, r0
 592 0136 544B     		ldr	r3, .L49+40
 593 0138 1A60     		str	r2, [r3]
 154:main.c        ****                         nn=0; 
 594              		.loc 1 154 0
 595 013a 544B     		ldr	r3, .L49+44
 596 013c 0122     		movs	r2, #1
 597 013e 1A60     		str	r2, [r3]
 155:main.c        ****                     
 598              		.loc 1 155 0
 599 0140 504B     		ldr	r3, .L49+36
 600 0142 0022     		movs	r2, #0
 601 0144 1A60     		str	r2, [r3]
 157:main.c        ****                         UART_PutString(sendValue);
 602              		.loc 1 157 0
 603 0146 524B     		ldr	r3, .L49+48
 604 0148 1B88     		ldrh	r3, [r3]
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccO3WBxN.s 			page 15


 605 014a 1846     		mov	r0, r3
 606 014c 514B     		ldr	r3, .L49+52
 607 014e 18CB     		ldmia	r3, {r3-r4}
 608 0150 514A     		ldr	r2, .L49+56
 609 0152 D2E90012 		ldrd	r1, [r2]
 610 0156 CDE90212 		strd	r1, [sp, #8]
 611 015a CDE90034 		strd	r3, [sp]
 612 015e 0246     		mov	r2, r0
 613 0160 4E49     		ldr	r1, .L49+60
 614 0162 4F48     		ldr	r0, .L49+64
 615 0164 FFF7FEFF 		bl	sprintf
 158:main.c        ****                         temp[0] = '\0';
 616              		.loc 1 158 0
 617 0168 4D48     		ldr	r0, .L49+64
 618 016a FFF7FEFF 		bl	UART_PutString
 159:main.c        ****                         
 619              		.loc 1 159 0
 620 016e 434B     		ldr	r3, .L49+28
 621 0170 0022     		movs	r2, #0
 622 0172 1A70     		strb	r2, [r3]
 161:main.c        ****                     }
 623              		.loc 1 161 0
 624 0174 404B     		ldr	r3, .L49+24
 625 0176 0022     		movs	r2, #0
 626 0178 1A60     		str	r2, [r3]
 627              		.loc 1 164 0
 628 017a 66E0     		b	.L20
 629              	.L28:
 165:main.c        ****                 case 3:
 166:main.c        ****                     if(rxData != '}'){
 630              		.loc 1 166 0
 631 017c BB78     		ldrb	r3, [r7, #2]	@ zero_extendqisi2
 632 017e 7D2B     		cmp	r3, #125
 633 0180 0AD0     		beq	.L40
 167:main.c        ****                         temp[nn] = rxData;
 634              		.loc 1 167 0
 635 0182 404B     		ldr	r3, .L49+36
 636 0184 1B68     		ldr	r3, [r3]
 637 0186 3D49     		ldr	r1, .L49+28
 638 0188 BA78     		ldrb	r2, [r7, #2]
 639 018a CA54     		strb	r2, [r1, r3]
 168:main.c        ****                         nn++;
 640              		.loc 1 168 0
 641 018c 3D4B     		ldr	r3, .L49+36
 642 018e 1B68     		ldr	r3, [r3]
 643 0190 0133     		adds	r3, r3, #1
 644 0192 3C4A     		ldr	r2, .L49+36
 645 0194 1360     		str	r3, [r2]
 169:main.c        ****                     }
 170:main.c        ****                     else {
 171:main.c        ****                         pid[0] = strtod(temp, NULL);
 172:main.c        ****                         nn=0;
 173:main.c        ****                         temp[0] = '\0';
 174:main.c        ****                         data_read_mode = 0;
 175:main.c        ****                     }
 176:main.c        ****                     
 177:main.c        ****                 break;
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccO3WBxN.s 			page 16


 646              		.loc 1 177 0
 647 0196 58E0     		b	.L20
 648              	.L40:
 171:main.c        ****                         nn=0;
 649              		.loc 1 171 0
 650 0198 0021     		movs	r1, #0
 651 019a 3848     		ldr	r0, .L49+28
 652 019c FFF7FEFF 		bl	strtod
 653 01a0 0346     		mov	r3, r0
 654 01a2 0C46     		mov	r4, r1
 655 01a4 3F4A     		ldr	r2, .L49+68
 656 01a6 C2E90034 		strd	r3, [r2]
 172:main.c        ****                         temp[0] = '\0';
 657              		.loc 1 172 0
 658 01aa 364B     		ldr	r3, .L49+36
 659 01ac 0022     		movs	r2, #0
 660 01ae 1A60     		str	r2, [r3]
 173:main.c        ****                         data_read_mode = 0;
 661              		.loc 1 173 0
 662 01b0 324B     		ldr	r3, .L49+28
 663 01b2 0022     		movs	r2, #0
 664 01b4 1A70     		strb	r2, [r3]
 174:main.c        ****                     }
 665              		.loc 1 174 0
 666 01b6 304B     		ldr	r3, .L49+24
 667 01b8 0022     		movs	r2, #0
 668 01ba 1A60     		str	r2, [r3]
 669              		.loc 1 177 0
 670 01bc 45E0     		b	.L20
 671              	.L29:
 178:main.c        ****                 case 4:
 179:main.c        ****                     if(rxData != '}'){
 672              		.loc 1 179 0
 673 01be BB78     		ldrb	r3, [r7, #2]	@ zero_extendqisi2
 674 01c0 7D2B     		cmp	r3, #125
 675 01c2 0AD0     		beq	.L42
 180:main.c        ****                         temp[nn] = rxData;
 676              		.loc 1 180 0
 677 01c4 2F4B     		ldr	r3, .L49+36
 678 01c6 1B68     		ldr	r3, [r3]
 679 01c8 2C49     		ldr	r1, .L49+28
 680 01ca BA78     		ldrb	r2, [r7, #2]
 681 01cc CA54     		strb	r2, [r1, r3]
 181:main.c        ****                         nn++;
 682              		.loc 1 181 0
 683 01ce 2D4B     		ldr	r3, .L49+36
 684 01d0 1B68     		ldr	r3, [r3]
 685 01d2 0133     		adds	r3, r3, #1
 686 01d4 2B4A     		ldr	r2, .L49+36
 687 01d6 1360     		str	r3, [r2]
 182:main.c        ****                     }
 183:main.c        ****                     else {
 184:main.c        ****                         pid[1] = strtod(temp, NULL);
 185:main.c        ****                         nn=0;
 186:main.c        ****                         temp[0] = '\0';
 187:main.c        ****                         data_read_mode = 0;
 188:main.c        ****                     }
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccO3WBxN.s 			page 17


 189:main.c        ****                     
 190:main.c        ****                 break;
 688              		.loc 1 190 0
 689 01d8 37E0     		b	.L20
 690              	.L42:
 184:main.c        ****                         nn=0;
 691              		.loc 1 184 0
 692 01da 0021     		movs	r1, #0
 693 01dc 2748     		ldr	r0, .L49+28
 694 01de FFF7FEFF 		bl	strtod
 695 01e2 0346     		mov	r3, r0
 696 01e4 0C46     		mov	r4, r1
 697 01e6 2F4A     		ldr	r2, .L49+68
 698 01e8 C2E90234 		strd	r3, [r2, #8]
 185:main.c        ****                         temp[0] = '\0';
 699              		.loc 1 185 0
 700 01ec 254B     		ldr	r3, .L49+36
 701 01ee 0022     		movs	r2, #0
 702 01f0 1A60     		str	r2, [r3]
 186:main.c        ****                         data_read_mode = 0;
 703              		.loc 1 186 0
 704 01f2 224B     		ldr	r3, .L49+28
 705 01f4 0022     		movs	r2, #0
 706 01f6 1A70     		strb	r2, [r3]
 187:main.c        ****                     }
 707              		.loc 1 187 0
 708 01f8 1F4B     		ldr	r3, .L49+24
 709 01fa 0022     		movs	r2, #0
 710 01fc 1A60     		str	r2, [r3]
 711              		.loc 1 190 0
 712 01fe 24E0     		b	.L20
 713              	.L30:
 191:main.c        ****                 case 5:
 192:main.c        ****                     if(rxData != '}'){
 714              		.loc 1 192 0
 715 0200 BB78     		ldrb	r3, [r7, #2]	@ zero_extendqisi2
 716 0202 7D2B     		cmp	r3, #125
 717 0204 0AD0     		beq	.L44
 193:main.c        ****                         temp[nn] = rxData;
 718              		.loc 1 193 0
 719 0206 1F4B     		ldr	r3, .L49+36
 720 0208 1B68     		ldr	r3, [r3]
 721 020a 1C49     		ldr	r1, .L49+28
 722 020c BA78     		ldrb	r2, [r7, #2]
 723 020e CA54     		strb	r2, [r1, r3]
 194:main.c        ****                         nn++;
 724              		.loc 1 194 0
 725 0210 1C4B     		ldr	r3, .L49+36
 726 0212 1B68     		ldr	r3, [r3]
 727 0214 0133     		adds	r3, r3, #1
 728 0216 1B4A     		ldr	r2, .L49+36
 729 0218 1360     		str	r3, [r2]
 195:main.c        ****                     }
 196:main.c        ****                     else {
 197:main.c        ****                         pid[2] = strtod(temp, NULL);
 198:main.c        ****                         nn=0;
 199:main.c        ****                         temp[0] = '\0';
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccO3WBxN.s 			page 18


 200:main.c        ****                         data_read_mode = 0;
 201:main.c        ****                     }
 202:main.c        ****                     
 203:main.c        ****                 break;
 730              		.loc 1 203 0
 731 021a 16E0     		b	.L20
 732              	.L44:
 197:main.c        ****                         nn=0;
 733              		.loc 1 197 0
 734 021c 0021     		movs	r1, #0
 735 021e 1748     		ldr	r0, .L49+28
 736 0220 FFF7FEFF 		bl	strtod
 737 0224 0346     		mov	r3, r0
 738 0226 0C46     		mov	r4, r1
 739 0228 1E4A     		ldr	r2, .L49+68
 740 022a C2E90434 		strd	r3, [r2, #16]
 198:main.c        ****                         temp[0] = '\0';
 741              		.loc 1 198 0
 742 022e 154B     		ldr	r3, .L49+36
 743 0230 0022     		movs	r2, #0
 744 0232 1A60     		str	r2, [r3]
 199:main.c        ****                         data_read_mode = 0;
 745              		.loc 1 199 0
 746 0234 114B     		ldr	r3, .L49+28
 747 0236 0022     		movs	r2, #0
 748 0238 1A70     		strb	r2, [r3]
 200:main.c        ****                     }
 749              		.loc 1 200 0
 750 023a 0F4B     		ldr	r3, .L49+24
 751 023c 0022     		movs	r2, #0
 752 023e 1A60     		str	r2, [r3]
 753              		.loc 1 203 0
 754 0240 00BF     		nop
 755 0242 02E0     		b	.L20
 756              	.L47:
 136:main.c        ****                 case 1:
 757              		.loc 1 136 0
 758 0244 00BF     		nop
 759 0246 00E0     		b	.L20
 760              	.L48:
 146:main.c        ****                 case 2:
 761              		.loc 1 146 0
 762 0248 00BF     		nop
 763              	.L20:
 204:main.c        ****             }
 205:main.c        ****             
 206:main.c        ****             if(errorStatus == 0u)
 207:main.c        ****             {
 208:main.c        ****                 /* Send data backward */
 209:main.c        ****                 //UART_TXDATA_REG = rxData;
 210:main.c        ****             }
 211:main.c        ****         }
 212:main.c        ****     }while((rxStatus & UART_RX_STS_FIFO_NOTEMPTY) != 0u);
 764              		.loc 1 212 0
 765 024a FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 766 024c 03F02003 		and	r3, r3, #32
 767 0250 002B     		cmp	r3, #0
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccO3WBxN.s 			page 19


 768 0252 7FF4D8AE 		bne	.L46
 213:main.c        **** 
 214:main.c        **** }
 769              		.loc 1 214 0
 770 0256 00BF     		nop
 771 0258 0C37     		adds	r7, r7, #12
 772              		.cfi_def_cfa_offset 12
 773 025a BD46     		mov	sp, r7
 774              		.cfi_def_cfa_register 13
 775              		@ sp needed
 776 025c 90BD     		pop	{r4, r7, pc}
 777              	.L50:
 778 025e 00BF     		.align	2
 779              	.L49:
 780 0260 6A650040 		.word	1073767786
 781 0264 00000000 		.word	errorStatus
 782 0268 4A650040 		.word	1073767754
 783 026c 00000000 		.word	tt
 784 0270 00000000 		.word	help
 785 0274 00000000 		.word	start_calib
 786 0278 00000000 		.word	data_read_mode
 787 027c 00000000 		.word	temp
 788 0280 00000000 		.word	new_angle
 789 0284 00000000 		.word	nn
 790 0288 00000000 		.word	new_pos
 791 028c 00000000 		.word	new_pos_set
 792 0290 00000000 		.word	adcValue1
 793 0294 00000000 		.word	err
 794 0298 00000000 		.word	angletemp
 795 029c 00000000 		.word	.LC0
 796 02a0 00000000 		.word	sendValue
 797 02a4 00000000 		.word	pid
 798              		.cfi_endproc
 799              	.LFE66:
 800              		.size	RxIsr, .-RxIsr
 801              		.global	led_switch
 802              		.bss
 803 003e 0000     		.align	2
 804              		.type	led_switch, %object
 805              		.size	led_switch, 4
 806              	led_switch:
 807 0040 00000000 		.space	4
 808              		.section	.rodata
 809 0011 000000   		.align	2
 810              	.LC1:
 811 0014 25303864 		.ascii	"%08d\011%08.0f\011%8.2f\000"
 811      09253038 
 811      2E306609 
 811      25382E32 
 811      6600
 812 0026 0000     		.align	2
 813              	.LC2:
 814 0028 4144433A 		.ascii	"ADC: %08d\011 Desired: %08.0d\012\000"
 814      20253038 
 814      64092044 
 814      65736972 
 814      65643A20 
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccO3WBxN.s 			page 20


 815              		.global	__aeabi_i2d
 816              		.global	__aeabi_dsub
 817              		.global	__aeabi_dcmplt
 818              		.global	__aeabi_dcmpgt
 819              		.align	2
 820              	.LC3:
 821 0044 55505045 		.ascii	"UPPER:\011Lower Offset: %f \011Upper Offset: %f \011"
 821      523A094C 
 821      6F776572 
 821      204F6666 
 821      7365743A 
 822 006f 20414443 		.ascii	" ADC Diff: %d\012\000"
 822      20446966 
 822      663A2025 
 822      640A00
 823 007e 0000     		.align	2
 824              	.LC4:
 825 0080 4C4F5745 		.ascii	"LOWER:\011Lower Offset: %f \011Upper Offset: %f \011"
 825      523A094C 
 825      6F776572 
 825      204F6666 
 825      7365743A 
 826 00ab 20414443 		.ascii	" ADC Diff: %d\012\000"
 826      20446966 
 826      663A2025 
 826      640A00
 827 00ba 0000     		.align	2
 828              	.LC5:
 829 00bc 4C6F7765 		.ascii	"Lower Offset: %f \011 Upper Offset: %f \012\000"
 829      72204F66 
 829      66736574 
 829      3A202566 
 829      20092055 
 830              		.global	__aeabi_ui2d
 831              		.section	.text.main,"ax",%progbits
 832              		.align	2
 833              		.global	main
 834              		.thumb
 835              		.thumb_func
 836              		.type	main, %function
 837              	main:
 838              	.LFB67:
 215:main.c        ****     
 216:main.c        **** 
 217:main.c        **** /*******************************************************************************
 218:main.c        **** * Function Name: main()
 219:main.c        **** ********************************************************************************
 220:main.c        **** * Summary:
 221:main.c        **** *  Main function for the project.
 222:main.c        **** *
 223:main.c        **** * Theory:
 224:main.c        **** *  The function starts UART and interrupt components.
 225:main.c        **** *
 226:main.c        **** *******************************************************************************/
 227:main.c        **** int led_switch = 0;
 228:main.c        **** int main()
 229:main.c        **** {
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccO3WBxN.s 			page 21


 839              		.loc 1 229 0
 840              		.cfi_startproc
 841              		@ args = 0, pretend = 0, frame = 88
 842              		@ frame_needed = 1, uses_anonymous_args = 0
 843 0000 B0B5     		push	{r4, r5, r7, lr}
 844              		.cfi_def_cfa_offset 16
 845              		.cfi_offset 4, -16
 846              		.cfi_offset 5, -12
 847              		.cfi_offset 7, -8
 848              		.cfi_offset 14, -4
 849 0002 9AB0     		sub	sp, sp, #104
 850              		.cfi_def_cfa_offset 120
 851 0004 04AF     		add	r7, sp, #16
 852              		.cfi_def_cfa 7, 104
 230:main.c        ****     
 231:main.c        ****     
 232:main.c        ****     //PWM variables
 233:main.c        **** 
 234:main.c        ****     PWM_1_Start();
 853              		.loc 1 234 0
 854 0006 FFF7FEFF 		bl	PWM_1_Start
 235:main.c        ****     ADC_SAR_1_Start(); 
 855              		.loc 1 235 0
 856 000a FFF7FEFF 		bl	ADC_SAR_1_Start
 236:main.c        ****     
 237:main.c        ****     //ADC_SAR_1_StartConvert(); 
 238:main.c        ****     //ADC_SAR_2_Start(); 
 239:main.c        ****     //ADC_SAR_2_StartConvert(); 
 240:main.c        ****     
 241:main.c        ****     uint8 button = 0u;
 857              		.loc 1 241 0
 858 000e 0023     		movs	r3, #0
 859 0010 87F82730 		strb	r3, [r7, #39]
 242:main.c        ****     uint8 buttonPre = 0u;
 860              		.loc 1 242 0
 861 0014 0023     		movs	r3, #0
 862 0016 87F82630 		strb	r3, [r7, #38]
 243:main.c        ****     
 244:main.c        ****     LED_Write(LED_OFF);     /* Clear LED */
 863              		.loc 1 244 0
 864 001a 0020     		movs	r0, #0
 865 001c FFF7FEFF 		bl	LED_Write
 245:main.c        **** 
 246:main.c        ****     UART_Start();           /* Start communication component */
 866              		.loc 1 246 0
 867 0020 FFF7FEFF 		bl	UART_Start
 247:main.c        **** 
 248:main.c        **** #if(INTERRUPT_CODE_ENABLED == ENABLED)
 249:main.c        ****     isr_rx_StartEx(RxIsr);
 868              		.loc 1 249 0
 869 0024 A848     		ldr	r0, .L80+16
 870 0026 FFF7FEFF 		bl	isr_rx_StartEx
 250:main.c        ****     update_median_isr_StartEx(adc_update);
 871              		.loc 1 250 0
 872 002a A848     		ldr	r0, .L80+20
 873 002c FFF7FEFF 		bl	update_median_isr_StartEx
 251:main.c        **** #endif /* INTERRUPT_CODE_ENABLED == ENABLED */
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccO3WBxN.s 			page 22


 252:main.c        ****     
 253:main.c        ****     CyGlobalIntEnable;      /* Enable global interrupts. */
 874              		.loc 1 253 0
 875              		.syntax unified
 876              	@ 253 "main.c" 1
 877 0030 62B6     		CPSIE   i
 878              	@ 0 "" 2
 254:main.c        ****     
 255:main.c        **** 
 256:main.c        ****     angle = -89;
 879              		.loc 1 256 0
 880              		.thumb
 881              		.syntax unified
 882 0032 A74A     		ldr	r2, .L80+24
 883 0034 A0A4     		adr	r4, .L80
 884 0036 D4E90034 		ldrd	r3, [r4]
 885 003a C2E90034 		strd	r3, [r2]
 257:main.c        ****     uint16 timercapture;
 258:main.c        ****     double der, prev_err, pid_integral,dt;
 259:main.c        ****     double time;
 260:main.c        ****     
 261:main.c        ****     der = 0; prev_err = 0; pid_integral = 0; 
 886              		.loc 1 261 0
 887 003e 4FF00003 		mov	r3, #0
 888 0042 4FF00004 		mov	r4, #0
 889 0046 C7E90634 		strd	r3, [r7, #24]
 890 004a 4FF00003 		mov	r3, #0
 891 004e 4FF00004 		mov	r4, #0
 892 0052 C7E91434 		strd	r3, [r7, #80]
 893 0056 4FF00003 		mov	r3, #0
 894 005a 4FF00004 		mov	r4, #0
 895 005e C7E91234 		strd	r3, [r7, #72]
 262:main.c        ****     dt = 0.025; //assumes cydelay = 10 below for a 100Hz frequency.
 896              		.loc 1 262 0
 897 0062 97A4     		adr	r4, .L80+8
 898 0064 D4E90034 		ldrd	r3, [r4]
 899 0068 C7E91034 		strd	r3, [r7, #64]
 263:main.c        **** 
 264:main.c        ****     sprintf(sendValue,"%08d\t%08.0f\t%8.2f",adcValue1,err,angletemp);
 900              		.loc 1 264 0
 901 006c 994B     		ldr	r3, .L80+28
 902 006e 1B88     		ldrh	r3, [r3]
 903 0070 1846     		mov	r0, r3
 904 0072 994B     		ldr	r3, .L80+32
 905 0074 18CB     		ldmia	r3, {r3-r4}
 906 0076 994A     		ldr	r2, .L80+36
 907 0078 D2E90012 		ldrd	r1, [r2]
 908 007c CDE90212 		strd	r1, [sp, #8]
 909 0080 CDE90034 		strd	r3, [sp]
 910 0084 0246     		mov	r2, r0
 911 0086 9649     		ldr	r1, .L80+40
 912 0088 9648     		ldr	r0, .L80+44
 913 008a FFF7FEFF 		bl	sprintf
 265:main.c        ****     UART_PutString(sendValue);
 914              		.loc 1 265 0
 915 008e 9548     		ldr	r0, .L80+44
 916 0090 FFF7FEFF 		bl	UART_PutString
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccO3WBxN.s 			page 23


 266:main.c        ****     uint16 moving_avg[5] = {0,0,0,0,0};
 917              		.loc 1 266 0
 918 0094 3B46     		mov	r3, r7
 919 0096 0022     		movs	r2, #0
 920 0098 1A60     		str	r2, [r3]
 921 009a 5A60     		str	r2, [r3, #4]
 922 009c 1A81     		strh	r2, [r3, #8]	@ movhi
 267:main.c        ****     median_timer_Start();
 923              		.loc 1 267 0
 924 009e FFF7FEFF 		bl	median_timer_Start
 268:main.c        ****     Timer_1_Start();
 925              		.loc 1 268 0
 926 00a2 FFF7FEFF 		bl	Timer_1_Start
 927              	.L75:
 269:main.c        ****     for(;;)
 270:main.c        ****     {
 271:main.c        ****         Timer_1_WriteCounter(65535);
 928              		.loc 1 271 0
 929 00a6 4FF6FF70 		movw	r0, #65535
 930 00aa FFF7FEFF 		bl	Timer_1_WriteCounter
 272:main.c        ****        
 273:main.c        ****         
 274:main.c        ****         if(new_pos_set){
 931              		.loc 1 274 0
 932 00ae 8E4B     		ldr	r3, .L80+48
 933 00b0 1B68     		ldr	r3, [r3]
 934 00b2 002B     		cmp	r3, #0
 935 00b4 09D0     		beq	.L52
 275:main.c        ****             pos = new_pos;
 936              		.loc 1 275 0
 937 00b6 8D4B     		ldr	r3, .L80+52
 938 00b8 1B68     		ldr	r3, [r3]
 939 00ba 8D4A     		ldr	r2, .L80+56
 940 00bc 1360     		str	r3, [r2]
 276:main.c        ****             new_pos_set = 0;
 941              		.loc 1 276 0
 942 00be 8A4B     		ldr	r3, .L80+48
 943 00c0 0022     		movs	r2, #0
 944 00c2 1A60     		str	r2, [r3]
 277:main.c        ****             new_angle = 0;
 945              		.loc 1 277 0
 946 00c4 8B4B     		ldr	r3, .L80+60
 947 00c6 0022     		movs	r2, #0
 948 00c8 1A60     		str	r2, [r3]
 949              	.L52:
 278:main.c        ****             
 279:main.c        ****             /*
 280:main.c        ****             if(pos>45){pos=45;}
 281:main.c        ****             if(pos<-45){pos=-45;}
 282:main.c        ****             if(pos<46 & pos>-46){
 283:main.c        ****                 PWM_1_WriteCompare(dutycyclelength(pos));
 284:main.c        ****             }
 285:main.c        ****             */       
 286:main.c        ****         }
 287:main.c        ****         
 288:main.c        ****         /* START PID CODE */
 289:main.c        ****         sprintf(sendValue,"ADC: %08d\t Desired: %08.0d\n",adcValue1,2000);
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccO3WBxN.s 			page 24


 950              		.loc 1 289 0
 951 00ca 824B     		ldr	r3, .L80+28
 952 00cc 1B88     		ldrh	r3, [r3]
 953 00ce 1A46     		mov	r2, r3
 954 00d0 4FF4FA63 		mov	r3, #2000
 955 00d4 8849     		ldr	r1, .L80+64
 956 00d6 8348     		ldr	r0, .L80+44
 957 00d8 FFF7FEFF 		bl	sprintf
 290:main.c        ****         UART_PutString(sendValue);
 958              		.loc 1 290 0
 959 00dc 8148     		ldr	r0, .L80+44
 960 00de FFF7FEFF 		bl	UART_PutString
 291:main.c        ****         err = -pos + adcValue1;
 961              		.loc 1 291 0
 962 00e2 7C4B     		ldr	r3, .L80+28
 963 00e4 1B88     		ldrh	r3, [r3]
 964 00e6 1A46     		mov	r2, r3
 965 00e8 814B     		ldr	r3, .L80+56
 966 00ea 1B68     		ldr	r3, [r3]
 967 00ec D31A     		subs	r3, r2, r3
 968 00ee 1846     		mov	r0, r3
 969 00f0 FFF7FEFF 		bl	__aeabi_i2d
 970 00f4 0346     		mov	r3, r0
 971 00f6 0C46     		mov	r4, r1
 972 00f8 774A     		ldr	r2, .L80+32
 973 00fa C2E90034 		strd	r3, [r2]
 292:main.c        ****         err = -2000 + adcValue1;
 974              		.loc 1 292 0
 975 00fe 754B     		ldr	r3, .L80+28
 976 0100 1B88     		ldrh	r3, [r3]
 977 0102 A3F5FA63 		sub	r3, r3, #2000
 978 0106 1846     		mov	r0, r3
 979 0108 FFF7FEFF 		bl	__aeabi_i2d
 980 010c 0346     		mov	r3, r0
 981 010e 0C46     		mov	r4, r1
 982 0110 714A     		ldr	r2, .L80+32
 983 0112 C2E90034 		strd	r3, [r2]
 293:main.c        ****         der = err - prev_err;
 984              		.loc 1 293 0
 985 0116 704B     		ldr	r3, .L80+32
 986 0118 D3E90001 		ldrd	r0, [r3]
 987 011c D7E91423 		ldrd	r2, [r7, #80]
 988 0120 FFF7FEFF 		bl	__aeabi_dsub
 989 0124 0346     		mov	r3, r0
 990 0126 0C46     		mov	r4, r1
 991 0128 C7E90634 		strd	r3, [r7, #24]
 294:main.c        ****         pid_integral = err + pid_integral;
 992              		.loc 1 294 0
 993 012c 6A4B     		ldr	r3, .L80+32
 994 012e 18CB     		ldmia	r3, {r3-r4}
 995 0130 1A46     		mov	r2, r3
 996 0132 2346     		mov	r3, r4
 997 0134 D7E91201 		ldrd	r0, [r7, #72]
 998 0138 FFF7FEFF 		bl	__aeabi_dadd
 999 013c 0346     		mov	r3, r0
 1000 013e 0C46     		mov	r4, r1
 1001 0140 C7E91234 		strd	r3, [r7, #72]
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccO3WBxN.s 			page 25


 295:main.c        ****         angletemp = pid[0] * err + ( pid[1] * pid_integral * dt) + ( pid[2] * der / dt );
 1002              		.loc 1 295 0
 1003 0144 6D4B     		ldr	r3, .L80+68
 1004 0146 D3E90001 		ldrd	r0, [r3]
 1005 014a 634B     		ldr	r3, .L80+32
 1006 014c 18CB     		ldmia	r3, {r3-r4}
 1007 014e 1A46     		mov	r2, r3
 1008 0150 2346     		mov	r3, r4
 1009 0152 FFF7FEFF 		bl	__aeabi_dmul
 1010 0156 0346     		mov	r3, r0
 1011 0158 0C46     		mov	r4, r1
 1012 015a 2546     		mov	r5, r4
 1013 015c 1C46     		mov	r4, r3
 1014 015e 674B     		ldr	r3, .L80+68
 1015 0160 D3E90201 		ldrd	r0, [r3, #8]
 1016 0164 D7E91223 		ldrd	r2, [r7, #72]
 1017 0168 FFF7FEFF 		bl	__aeabi_dmul
 1018 016c 0246     		mov	r2, r0
 1019 016e 0B46     		mov	r3, r1
 1020 0170 1046     		mov	r0, r2
 1021 0172 1946     		mov	r1, r3
 1022 0174 D7E91023 		ldrd	r2, [r7, #64]
 1023 0178 FFF7FEFF 		bl	__aeabi_dmul
 1024 017c 0246     		mov	r2, r0
 1025 017e 0B46     		mov	r3, r1
 1026 0180 2046     		mov	r0, r4
 1027 0182 2946     		mov	r1, r5
 1028 0184 FFF7FEFF 		bl	__aeabi_dadd
 1029 0188 0346     		mov	r3, r0
 1030 018a 0C46     		mov	r4, r1
 1031 018c 2546     		mov	r5, r4
 1032 018e 1C46     		mov	r4, r3
 1033 0190 5A4B     		ldr	r3, .L80+68
 1034 0192 D3E90401 		ldrd	r0, [r3, #16]
 1035 0196 D7E90623 		ldrd	r2, [r7, #24]
 1036 019a FFF7FEFF 		bl	__aeabi_dmul
 1037 019e 0246     		mov	r2, r0
 1038 01a0 0B46     		mov	r3, r1
 1039 01a2 1046     		mov	r0, r2
 1040 01a4 1946     		mov	r1, r3
 1041 01a6 D7E91023 		ldrd	r2, [r7, #64]
 1042 01aa FFF7FEFF 		bl	__aeabi_ddiv
 1043 01ae 0246     		mov	r2, r0
 1044 01b0 0B46     		mov	r3, r1
 1045 01b2 2046     		mov	r0, r4
 1046 01b4 2946     		mov	r1, r5
 1047 01b6 FFF7FEFF 		bl	__aeabi_dadd
 1048 01ba 0346     		mov	r3, r0
 1049 01bc 0C46     		mov	r4, r1
 1050 01be 474A     		ldr	r2, .L80+36
 1051 01c0 C2E90034 		strd	r3, [r2]
 296:main.c        ****         angle=angletemp;
 1052              		.loc 1 296 0
 1053 01c4 454B     		ldr	r3, .L80+36
 1054 01c6 18CB     		ldmia	r3, {r3-r4}
 1055 01c8 414A     		ldr	r2, .L80+24
 1056 01ca C2E90034 		strd	r3, [r2]
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccO3WBxN.s 			page 26


 297:main.c        ****         //Limit angles of proportional valve
 298:main.c        ****         if(angle<0){angle = angle - 16;}
 1057              		.loc 1 298 0
 1058 01ce 404B     		ldr	r3, .L80+24
 1059 01d0 D3E90001 		ldrd	r0, [r3]
 1060 01d4 4FF00002 		mov	r2, #0
 1061 01d8 4FF00003 		mov	r3, #0
 1062 01dc FFF7FEFF 		bl	__aeabi_dcmplt
 1063 01e0 0346     		mov	r3, r0
 1064 01e2 002B     		cmp	r3, #0
 1065 01e4 0CD0     		beq	.L53
 1066              		.loc 1 298 0 is_stmt 0 discriminator 1
 1067 01e6 3A4B     		ldr	r3, .L80+24
 1068 01e8 D3E90001 		ldrd	r0, [r3]
 1069 01ec 4FF00002 		mov	r2, #0
 1070 01f0 434B     		ldr	r3, .L80+72
 1071 01f2 FFF7FEFF 		bl	__aeabi_dsub
 1072 01f6 0346     		mov	r3, r0
 1073 01f8 0C46     		mov	r4, r1
 1074 01fa 354A     		ldr	r2, .L80+24
 1075 01fc C2E90034 		strd	r3, [r2]
 1076              	.L53:
 299:main.c        ****         if(angle>0){angle = angle + 14;}
 1077              		.loc 1 299 0 is_stmt 1
 1078 0200 334B     		ldr	r3, .L80+24
 1079 0202 D3E90001 		ldrd	r0, [r3]
 1080 0206 4FF00002 		mov	r2, #0
 1081 020a 4FF00003 		mov	r3, #0
 1082 020e FFF7FEFF 		bl	__aeabi_dcmpgt
 1083 0212 0346     		mov	r3, r0
 1084 0214 002B     		cmp	r3, #0
 1085 0216 0CD0     		beq	.L55
 1086              		.loc 1 299 0 is_stmt 0 discriminator 1
 1087 0218 2D4B     		ldr	r3, .L80+24
 1088 021a D3E90001 		ldrd	r0, [r3]
 1089 021e 4FF00002 		mov	r2, #0
 1090 0222 384B     		ldr	r3, .L80+76
 1091 0224 FFF7FEFF 		bl	__aeabi_dadd
 1092 0228 0346     		mov	r3, r0
 1093 022a 0C46     		mov	r4, r1
 1094 022c 284A     		ldr	r2, .L80+24
 1095 022e C2E90034 		strd	r3, [r2]
 1096              	.L55:
 300:main.c        ****         if(angle>45){angle=45;}
 1097              		.loc 1 300 0 is_stmt 1
 1098 0232 274B     		ldr	r3, .L80+24
 1099 0234 D3E90001 		ldrd	r0, [r3]
 1100 0238 4FF00002 		mov	r2, #0
 1101 023c 324B     		ldr	r3, .L80+80
 1102 023e FFF7FEFF 		bl	__aeabi_dcmpgt
 1103 0242 0346     		mov	r3, r0
 1104 0244 002B     		cmp	r3, #0
 1105 0246 05D0     		beq	.L57
 1106              		.loc 1 300 0 is_stmt 0 discriminator 1
 1107 0248 214A     		ldr	r2, .L80+24
 1108 024a 4FF00003 		mov	r3, #0
 1109 024e 2E4C     		ldr	r4, .L80+80
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccO3WBxN.s 			page 27


 1110 0250 C2E90034 		strd	r3, [r2]
 1111              	.L57:
 301:main.c        ****         if(angle<-45){angle=-45;}
 1112              		.loc 1 301 0 is_stmt 1
 1113 0254 1E4B     		ldr	r3, .L80+24
 1114 0256 D3E90001 		ldrd	r0, [r3]
 1115 025a 4FF00002 		mov	r2, #0
 1116 025e 2B4B     		ldr	r3, .L80+84
 1117 0260 FFF7FEFF 		bl	__aeabi_dcmplt
 1118 0264 0346     		mov	r3, r0
 1119 0266 002B     		cmp	r3, #0
 1120 0268 05D0     		beq	.L59
 1121              		.loc 1 301 0 is_stmt 0 discriminator 1
 1122 026a 194A     		ldr	r2, .L80+24
 1123 026c 4FF00003 		mov	r3, #0
 1124 0270 264C     		ldr	r4, .L80+84
 1125 0272 C2E90034 		strd	r3, [r2]
 1126              	.L59:
 302:main.c        ****         if(angle<46 & angle>-46){
 1127              		.loc 1 302 0 is_stmt 1
 1128 0276 164B     		ldr	r3, .L80+24
 1129 0278 D3E90001 		ldrd	r0, [r3]
 1130 027c 0123     		movs	r3, #1
 1131 027e 1C46     		mov	r4, r3
 1132 0280 4FF00002 		mov	r2, #0
 1133 0284 224B     		ldr	r3, .L80+88
 1134 0286 FFF7FEFF 		bl	__aeabi_dcmplt
 1135 028a 0346     		mov	r3, r0
 1136 028c 002B     		cmp	r3, #0
 1137 028e 01D1     		bne	.L61
 1138 0290 0023     		movs	r3, #0
 1139 0292 1C46     		mov	r4, r3
 1140              	.L61:
 1141 0294 E4B2     		uxtb	r4, r4
 1142 0296 0E4B     		ldr	r3, .L80+24
 1143 0298 D3E90001 		ldrd	r0, [r3]
 1144 029c 0123     		movs	r3, #1
 1145 029e 1D46     		mov	r5, r3
 1146 02a0 4FF00002 		mov	r2, #0
 1147 02a4 1B4B     		ldr	r3, .L80+92
 1148 02a6 FFF7FEFF 		bl	__aeabi_dcmpgt
 1149 02aa 0346     		mov	r3, r0
 1150 02ac 002B     		cmp	r3, #0
 1151 02ae 33D1     		bne	.L62
 1152 02b0 0023     		movs	r3, #0
 1153 02b2 1D46     		mov	r5, r3
 1154 02b4 30E0     		b	.L81
 1155              	.L82:
 1156 02b6 00BF     		.align	3
 1157              	.L80:
 1158 02b8 00000000 		.word	0
 1159 02bc 004056C0 		.word	-1068089344
 1160 02c0 9A999999 		.word	-1717986918
 1161 02c4 9999993F 		.word	1067030937
 1162 02c8 00000000 		.word	RxIsr
 1163 02cc 00000000 		.word	adc_update
 1164 02d0 00000000 		.word	angle
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccO3WBxN.s 			page 28


 1165 02d4 00000000 		.word	adcValue1
 1166 02d8 00000000 		.word	err
 1167 02dc 00000000 		.word	angletemp
 1168 02e0 14000000 		.word	.LC1
 1169 02e4 00000000 		.word	sendValue
 1170 02e8 00000000 		.word	new_pos_set
 1171 02ec 00000000 		.word	new_pos
 1172 02f0 00000000 		.word	pos
 1173 02f4 00000000 		.word	new_angle
 1174 02f8 28000000 		.word	.LC2
 1175 02fc 00000000 		.word	pid
 1176 0300 00003040 		.word	1076887552
 1177 0304 00002C40 		.word	1076625408
 1178 0308 00804640 		.word	1078362112
 1179 030c 008046C0 		.word	-1069121536
 1180 0310 00004740 		.word	1078394880
 1181 0314 000047C0 		.word	-1069088768
 1182              	.L81:
 1183              	.L62:
 1184 0318 EBB2     		uxtb	r3, r5
 1185 031a 2340     		ands	r3, r3, r4
 1186 031c DBB2     		uxtb	r3, r3
 1187 031e 002B     		cmp	r3, #0
 1188 0320 09D0     		beq	.L63
 303:main.c        ****             PWM_1_WriteCompare(dutycyclelength(angle));
 1189              		.loc 1 303 0
 1190 0322 854B     		ldr	r3, .L83+24
 1191 0324 18CB     		ldmia	r3, {r3-r4}
 1192 0326 1846     		mov	r0, r3
 1193 0328 2146     		mov	r1, r4
 1194 032a FFF7FEFF 		bl	dutycyclelength
 1195 032e 0346     		mov	r3, r0
 1196 0330 1846     		mov	r0, r3
 1197 0332 FFF7FEFF 		bl	PWM_1_WriteCompare
 1198              	.L63:
 304:main.c        ****         }
 305:main.c        ****         prev_err = err;
 1199              		.loc 1 305 0
 1200 0336 814B     		ldr	r3, .L83+28
 1201 0338 18CB     		ldmia	r3, {r3-r4}
 1202 033a C7E91434 		strd	r3, [r7, #80]
 306:main.c        ****         /* END PID CODE */
 307:main.c        ****         
 308:main.c        ****         //FIND OFFSET VALUES
 309:main.c        ****         
 310:main.c        ****         if(start_calib){
 1203              		.loc 1 310 0
 1204 033e 804B     		ldr	r3, .L83+32
 1205 0340 1B68     		ldr	r3, [r3]
 1206 0342 002B     		cmp	r3, #0
 1207 0344 00F0C880 		beq	.L64
 1208              	.LBB7:
 311:main.c        ****             int upper_offset_set = 0;
 1209              		.loc 1 311 0
 1210 0348 0023     		movs	r3, #0
 1211 034a FB63     		str	r3, [r7, #60]
 312:main.c        ****             int lower_offset_set = 0;
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccO3WBxN.s 			page 29


 1212              		.loc 1 312 0
 1213 034c 0023     		movs	r3, #0
 1214 034e BB63     		str	r3, [r7, #56]
 313:main.c        ****             double upper_offset = 10;
 1215              		.loc 1 313 0
 1216 0350 4FF00003 		mov	r3, #0
 1217 0354 7B4C     		ldr	r4, .L83+36
 1218 0356 C7E90C34 		strd	r3, [r7, #48]
 314:main.c        ****             double lower_offset = -10;
 1219              		.loc 1 314 0
 1220 035a 4FF00003 		mov	r3, #0
 1221 035e 7A4C     		ldr	r4, .L83+40
 1222 0360 C7E90A34 		strd	r3, [r7, #40]
 315:main.c        ****             uint16 prev_adcValue = adcValue1;
 1223              		.loc 1 315 0
 1224 0364 794B     		ldr	r3, .L83+44
 1225 0366 1B88     		ldrh	r3, [r3]	@ movhi
 1226 0368 FB81     		strh	r3, [r7, #14]	@ movhi
 316:main.c        ****             uint16 diff = 0;
 1227              		.loc 1 316 0
 1228 036a 0023     		movs	r3, #0
 1229 036c BB81     		strh	r3, [r7, #12]	@ movhi
 317:main.c        ****             PWM_1_WriteCompare(dutycyclelength(0));
 1230              		.loc 1 317 0
 1231 036e 4FF00000 		mov	r0, #0
 1232 0372 4FF00001 		mov	r1, #0
 1233 0376 FFF7FEFF 		bl	dutycyclelength
 1234 037a 0346     		mov	r3, r0
 1235 037c 1846     		mov	r0, r3
 1236 037e FFF7FEFF 		bl	PWM_1_WriteCompare
 318:main.c        ****             CyDelay(1000);
 1237              		.loc 1 318 0
 1238 0382 4FF47A70 		mov	r0, #1000
 1239 0386 FFF7FEFF 		bl	CyDelay
 319:main.c        ****         
 320:main.c        ****             while(upper_offset_set==0 && lower_offset_set==0){
 1240              		.loc 1 320 0
 1241 038a 8DE0     		b	.L65
 1242              	.L73:
 321:main.c        ****                 
 322:main.c        ****                 prev_adcValue = adcValue1;
 1243              		.loc 1 322 0
 1244 038c 6F4B     		ldr	r3, .L83+44
 1245 038e 1B88     		ldrh	r3, [r3]	@ movhi
 1246 0390 FB81     		strh	r3, [r7, #14]	@ movhi
 323:main.c        ****                 if(upper_offset_set==0){
 1247              		.loc 1 323 0
 1248 0392 FB6B     		ldr	r3, [r7, #60]
 1249 0394 002B     		cmp	r3, #0
 1250 0396 32D1     		bne	.L66
 324:main.c        ****                     PWM_1_WriteCompare(dutycyclelength(upper_offset));
 1251              		.loc 1 324 0
 1252 0398 D7E90C01 		ldrd	r0, [r7, #48]
 1253 039c FFF7FEFF 		bl	dutycyclelength
 1254 03a0 0346     		mov	r3, r0
 1255 03a2 1846     		mov	r0, r3
 1256 03a4 FFF7FEFF 		bl	PWM_1_WriteCompare
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccO3WBxN.s 			page 30


 325:main.c        ****                     CyDelay(200);
 1257              		.loc 1 325 0
 1258 03a8 C820     		movs	r0, #200
 1259 03aa FFF7FEFF 		bl	CyDelay
 326:main.c        ****                     diff = abs(prev_adcValue-adcValue1);
 1260              		.loc 1 326 0
 1261 03ae FB89     		ldrh	r3, [r7, #14]
 1262 03b0 664A     		ldr	r2, .L83+44
 1263 03b2 1288     		ldrh	r2, [r2]
 1264 03b4 9B1A     		subs	r3, r3, r2
 1265 03b6 002B     		cmp	r3, #0
 1266 03b8 B8BF     		it	lt
 1267 03ba 5B42     		rsblt	r3, r3, #0
 1268 03bc BB81     		strh	r3, [r7, #12]	@ movhi
 327:main.c        ****                     if(diff>10){
 1269              		.loc 1 327 0
 1270 03be BB89     		ldrh	r3, [r7, #12]
 1271 03c0 0A2B     		cmp	r3, #10
 1272 03c2 02D9     		bls	.L67
 328:main.c        ****                         upper_offset_set=1;
 1273              		.loc 1 328 0
 1274 03c4 0123     		movs	r3, #1
 1275 03c6 FB63     		str	r3, [r7, #60]
 1276 03c8 0AE0     		b	.L68
 1277              	.L67:
 329:main.c        ****                     }else{
 330:main.c        ****                         upper_offset = upper_offset + 0.1;
 1278              		.loc 1 330 0
 1279 03ca 55A3     		adr	r3, .L83
 1280 03cc D3E90023 		ldrd	r2, [r3]
 1281 03d0 D7E90C01 		ldrd	r0, [r7, #48]
 1282 03d4 FFF7FEFF 		bl	__aeabi_dadd
 1283 03d8 0346     		mov	r3, r0
 1284 03da 0C46     		mov	r4, r1
 1285 03dc C7E90C34 		strd	r3, [r7, #48]
 1286              	.L68:
 331:main.c        ****                     }
 332:main.c        ****                     sprintf(sendValue,"UPPER:\tLower Offset: %f \tUpper Offset: %f \t ADC Diff: %d\
 1287              		.loc 1 332 0
 1288 03e0 BB89     		ldrh	r3, [r7, #12]
 1289 03e2 0293     		str	r3, [sp, #8]
 1290 03e4 D7E90C34 		ldrd	r3, [r7, #48]
 1291 03e8 CDE90034 		strd	r3, [sp]
 1292 03ec D7E90A23 		ldrd	r2, [r7, #40]
 1293 03f0 5749     		ldr	r1, .L83+48
 1294 03f2 5848     		ldr	r0, .L83+52
 1295 03f4 FFF7FEFF 		bl	sprintf
 333:main.c        ****                     UART_PutString(sendValue);
 1296              		.loc 1 333 0
 1297 03f8 5648     		ldr	r0, .L83+52
 1298 03fa FFF7FEFF 		bl	UART_PutString
 1299              	.L66:
 334:main.c        ****                 }
 335:main.c        ****                 PWM_1_WriteCompare(dutycyclelength(0));
 1300              		.loc 1 335 0
 1301 03fe 4FF00000 		mov	r0, #0
 1302 0402 4FF00001 		mov	r1, #0
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccO3WBxN.s 			page 31


 1303 0406 FFF7FEFF 		bl	dutycyclelength
 1304 040a 0346     		mov	r3, r0
 1305 040c 1846     		mov	r0, r3
 1306 040e FFF7FEFF 		bl	PWM_1_WriteCompare
 336:main.c        ****                 CyDelay(500);
 1307              		.loc 1 336 0
 1308 0412 4FF4FA70 		mov	r0, #500
 1309 0416 FFF7FEFF 		bl	CyDelay
 337:main.c        ****                 
 338:main.c        ****                 prev_adcValue = adcValue1;
 1310              		.loc 1 338 0
 1311 041a 4C4B     		ldr	r3, .L83+44
 1312 041c 1B88     		ldrh	r3, [r3]	@ movhi
 1313 041e FB81     		strh	r3, [r7, #14]	@ movhi
 339:main.c        ****                 if(lower_offset_set==0){
 1314              		.loc 1 339 0
 1315 0420 BB6B     		ldr	r3, [r7, #56]
 1316 0422 002B     		cmp	r3, #0
 1317 0424 32D1     		bne	.L69
 340:main.c        ****                     PWM_1_WriteCompare(dutycyclelength(lower_offset));
 1318              		.loc 1 340 0
 1319 0426 D7E90A01 		ldrd	r0, [r7, #40]
 1320 042a FFF7FEFF 		bl	dutycyclelength
 1321 042e 0346     		mov	r3, r0
 1322 0430 1846     		mov	r0, r3
 1323 0432 FFF7FEFF 		bl	PWM_1_WriteCompare
 341:main.c        ****                     CyDelay(200);
 1324              		.loc 1 341 0
 1325 0436 C820     		movs	r0, #200
 1326 0438 FFF7FEFF 		bl	CyDelay
 342:main.c        ****                     diff = abs(prev_adcValue-adcValue1);
 1327              		.loc 1 342 0
 1328 043c FB89     		ldrh	r3, [r7, #14]
 1329 043e 434A     		ldr	r2, .L83+44
 1330 0440 1288     		ldrh	r2, [r2]
 1331 0442 9B1A     		subs	r3, r3, r2
 1332 0444 002B     		cmp	r3, #0
 1333 0446 B8BF     		it	lt
 1334 0448 5B42     		rsblt	r3, r3, #0
 1335 044a BB81     		strh	r3, [r7, #12]	@ movhi
 343:main.c        ****                     if(diff>10){
 1336              		.loc 1 343 0
 1337 044c BB89     		ldrh	r3, [r7, #12]
 1338 044e 0A2B     		cmp	r3, #10
 1339 0450 02D9     		bls	.L70
 344:main.c        ****                         lower_offset_set=1;
 1340              		.loc 1 344 0
 1341 0452 0123     		movs	r3, #1
 1342 0454 BB63     		str	r3, [r7, #56]
 1343 0456 0AE0     		b	.L71
 1344              	.L70:
 345:main.c        ****                     }else{
 346:main.c        ****                         lower_offset = lower_offset - 0.1;
 1345              		.loc 1 346 0
 1346 0458 31A3     		adr	r3, .L83
 1347 045a D3E90023 		ldrd	r2, [r3]
 1348 045e D7E90A01 		ldrd	r0, [r7, #40]
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccO3WBxN.s 			page 32


 1349 0462 FFF7FEFF 		bl	__aeabi_dsub
 1350 0466 0346     		mov	r3, r0
 1351 0468 0C46     		mov	r4, r1
 1352 046a C7E90A34 		strd	r3, [r7, #40]
 1353              	.L71:
 347:main.c        ****                     }
 348:main.c        ****                     sprintf(sendValue,"LOWER:\tLower Offset: %f \tUpper Offset: %f \t ADC Diff: %d\
 1354              		.loc 1 348 0
 1355 046e BB89     		ldrh	r3, [r7, #12]
 1356 0470 0293     		str	r3, [sp, #8]
 1357 0472 D7E90C34 		ldrd	r3, [r7, #48]
 1358 0476 CDE90034 		strd	r3, [sp]
 1359 047a D7E90A23 		ldrd	r2, [r7, #40]
 1360 047e 3649     		ldr	r1, .L83+56
 1361 0480 3448     		ldr	r0, .L83+52
 1362 0482 FFF7FEFF 		bl	sprintf
 349:main.c        ****                     UART_PutString(sendValue);
 1363              		.loc 1 349 0
 1364 0486 3348     		ldr	r0, .L83+52
 1365 0488 FFF7FEFF 		bl	UART_PutString
 1366              	.L69:
 350:main.c        ****             
 351:main.c        ****                 }
 352:main.c        ****                 
 353:main.c        ****                 PWM_1_WriteCompare(dutycyclelength(0));
 1367              		.loc 1 353 0
 1368 048c 4FF00000 		mov	r0, #0
 1369 0490 4FF00001 		mov	r1, #0
 1370 0494 FFF7FEFF 		bl	dutycyclelength
 1371 0498 0346     		mov	r3, r0
 1372 049a 1846     		mov	r0, r3
 1373 049c FFF7FEFF 		bl	PWM_1_WriteCompare
 354:main.c        ****                 CyDelay(500);
 1374              		.loc 1 354 0
 1375 04a0 4FF4FA70 		mov	r0, #500
 1376 04a4 FFF7FEFF 		bl	CyDelay
 1377              	.L65:
 320:main.c        ****                 
 1378              		.loc 1 320 0
 1379 04a8 FB6B     		ldr	r3, [r7, #60]
 1380 04aa 002B     		cmp	r3, #0
 1381 04ac 03D1     		bne	.L72
 320:main.c        ****                 
 1382              		.loc 1 320 0 is_stmt 0 discriminator 1
 1383 04ae BB6B     		ldr	r3, [r7, #56]
 1384 04b0 002B     		cmp	r3, #0
 1385 04b2 3FF46BAF 		beq	.L73
 1386              	.L72:
 355:main.c        ****                 
 356:main.c        ****             }
 357:main.c        ****             
 358:main.c        ****             sprintf(sendValue,"Lower Offset: %f \t Upper Offset: %f \n",lower_offset,upper_offset);
 1387              		.loc 1 358 0 is_stmt 1
 1388 04b6 D7E90C34 		ldrd	r3, [r7, #48]
 1389 04ba CDE90034 		strd	r3, [sp]
 1390 04be D7E90A23 		ldrd	r2, [r7, #40]
 1391 04c2 2649     		ldr	r1, .L83+60
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccO3WBxN.s 			page 33


 1392 04c4 2348     		ldr	r0, .L83+52
 1393 04c6 FFF7FEFF 		bl	sprintf
 359:main.c        ****             UART_PutString(sendValue);
 1394              		.loc 1 359 0
 1395 04ca 2248     		ldr	r0, .L83+52
 1396 04cc FFF7FEFF 		bl	UART_PutString
 1397              	.L74:
 360:main.c        ****             
 361:main.c        ****             while(1){CyDelay(100);};
 1398              		.loc 1 361 0 discriminator 1
 1399 04d0 6420     		movs	r0, #100
 1400 04d2 FFF7FEFF 		bl	CyDelay
 1401 04d6 FBE7     		b	.L74
 1402              	.L64:
 1403              	.LBE7:
 362:main.c        ****         }
 363:main.c        ****         
 364:main.c        ****         
 365:main.c        ****         CyDelay(10);
 1404              		.loc 1 365 0
 1405 04d8 0A20     		movs	r0, #10
 1406 04da FFF7FEFF 		bl	CyDelay
 366:main.c        ****         time = Timer_1_ReadCounter();
 1407              		.loc 1 366 0
 1408 04de FFF7FEFF 		bl	Timer_1_ReadCounter
 1409 04e2 0346     		mov	r3, r0
 1410 04e4 1846     		mov	r0, r3
 1411 04e6 FFF7FEFF 		bl	__aeabi_ui2d
 1412 04ea 0346     		mov	r3, r0
 1413 04ec 0C46     		mov	r4, r1
 1414 04ee C7E90434 		strd	r3, [r7, #16]
 367:main.c        ****         dt=(double)(65535-time)/1000000;
 1415              		.loc 1 367 0
 1416 04f2 D7E90423 		ldrd	r2, [r7, #16]
 1417 04f6 0CA1     		adr	r1, .L83+8
 1418 04f8 D1E90001 		ldrd	r0, [r1]
 1419 04fc FFF7FEFF 		bl	__aeabi_dsub
 1420 0500 0346     		mov	r3, r0
 1421 0502 0C46     		mov	r4, r1
 1422 0504 1846     		mov	r0, r3
 1423 0506 2146     		mov	r1, r4
 1424 0508 09A3     		adr	r3, .L83+16
 1425 050a D3E90023 		ldrd	r2, [r3]
 1426 050e FFF7FEFF 		bl	__aeabi_ddiv
 1427 0512 0346     		mov	r3, r0
 1428 0514 0C46     		mov	r4, r1
 1429 0516 C7E91034 		strd	r3, [r7, #64]
 368:main.c        **** 
 369:main.c        ****     }
 1430              		.loc 1 369 0
 1431 051a C4E5     		b	.L75
 1432              	.L84:
 1433 051c AFF30080 		.align	3
 1434              	.L83:
 1435 0520 9A999999 		.word	-1717986918
 1436 0524 9999B93F 		.word	1069128089
 1437 0528 00000000 		.word	0
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccO3WBxN.s 			page 34


 1438 052c E0FFEF40 		.word	1089470432
 1439 0530 00000000 		.word	0
 1440 0534 80842E41 		.word	1093567616
 1441 0538 00000000 		.word	angle
 1442 053c 00000000 		.word	err
 1443 0540 00000000 		.word	start_calib
 1444 0544 00002440 		.word	1076101120
 1445 0548 000024C0 		.word	-1071382528
 1446 054c 00000000 		.word	adcValue1
 1447 0550 44000000 		.word	.LC3
 1448 0554 00000000 		.word	sendValue
 1449 0558 80000000 		.word	.LC4
 1450 055c BC000000 		.word	.LC5
 1451              		.cfi_endproc
 1452              	.LFE67:
 1453              		.size	main, .-main
 1454              		.text
 1455              	.Letext0:
 1456              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 1457              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 1458              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 1459              		.file 5 "Generated_Source\\PSoC5/core_cm3.h"
 1460              		.section	.debug_info,"",%progbits
 1461              	.Ldebug_info0:
 1462 0000 B0040000 		.4byte	0x4b0
 1463 0004 0400     		.2byte	0x4
 1464 0006 00000000 		.4byte	.Ldebug_abbrev0
 1465 000a 04       		.byte	0x4
 1466 000b 01       		.uleb128 0x1
 1467 000c 42000000 		.4byte	.LASF55
 1468 0010 0C       		.byte	0xc
 1469 0011 6D020000 		.4byte	.LASF56
 1470 0015 DD010000 		.4byte	.LASF57
 1471 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1472 001d 00000000 		.4byte	0
 1473 0021 00000000 		.4byte	.Ldebug_line0
 1474 0025 02       		.uleb128 0x2
 1475 0026 01       		.byte	0x1
 1476 0027 06       		.byte	0x6
 1477 0028 8F010000 		.4byte	.LASF0
 1478 002c 02       		.uleb128 0x2
 1479 002d 01       		.byte	0x1
 1480 002e 08       		.byte	0x8
 1481 002f 55010000 		.4byte	.LASF1
 1482 0033 02       		.uleb128 0x2
 1483 0034 02       		.byte	0x2
 1484 0035 05       		.byte	0x5
 1485 0036 2F000000 		.4byte	.LASF2
 1486 003a 02       		.uleb128 0x2
 1487 003b 02       		.byte	0x2
 1488 003c 07       		.byte	0x7
 1489 003d CA010000 		.4byte	.LASF3
 1490 0041 03       		.uleb128 0x3
 1491 0042 B8020000 		.4byte	.LASF9
 1492 0046 02       		.byte	0x2
 1493 0047 3F       		.byte	0x3f
 1494 0048 4C000000 		.4byte	0x4c
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccO3WBxN.s 			page 35


 1495 004c 02       		.uleb128 0x2
 1496 004d 04       		.byte	0x4
 1497 004e 05       		.byte	0x5
 1498 004f 2E010000 		.4byte	.LASF4
 1499 0053 02       		.uleb128 0x2
 1500 0054 04       		.byte	0x4
 1501 0055 07       		.byte	0x7
 1502 0056 79020000 		.4byte	.LASF5
 1503 005a 02       		.uleb128 0x2
 1504 005b 08       		.byte	0x8
 1505 005c 05       		.byte	0x5
 1506 005d 13010000 		.4byte	.LASF6
 1507 0061 02       		.uleb128 0x2
 1508 0062 08       		.byte	0x8
 1509 0063 07       		.byte	0x7
 1510 0064 9B010000 		.4byte	.LASF7
 1511 0068 04       		.uleb128 0x4
 1512 0069 04       		.byte	0x4
 1513 006a 05       		.byte	0x5
 1514 006b 696E7400 		.ascii	"int\000"
 1515 006f 02       		.uleb128 0x2
 1516 0070 04       		.byte	0x4
 1517 0071 07       		.byte	0x7
 1518 0072 B2010000 		.4byte	.LASF8
 1519 0076 03       		.uleb128 0x3
 1520 0077 33020000 		.4byte	.LASF10
 1521 007b 03       		.byte	0x3
 1522 007c 2C       		.byte	0x2c
 1523 007d 41000000 		.4byte	0x41
 1524 0081 05       		.uleb128 0x5
 1525 0082 FB000000 		.4byte	.LASF11
 1526 0086 04       		.byte	0x4
 1527 0087 9201     		.2byte	0x192
 1528 0089 2C000000 		.4byte	0x2c
 1529 008d 05       		.uleb128 0x5
 1530 008e 5C020000 		.4byte	.LASF12
 1531 0092 04       		.byte	0x4
 1532 0093 9301     		.2byte	0x193
 1533 0095 3A000000 		.4byte	0x3a
 1534 0099 02       		.uleb128 0x2
 1535 009a 04       		.byte	0x4
 1536 009b 04       		.byte	0x4
 1537 009c 0D010000 		.4byte	.LASF13
 1538 00a0 02       		.uleb128 0x2
 1539 00a1 08       		.byte	0x8
 1540 00a2 04       		.byte	0x4
 1541 00a3 05030000 		.4byte	.LASF14
 1542 00a7 02       		.uleb128 0x2
 1543 00a8 01       		.byte	0x1
 1544 00a9 08       		.byte	0x8
 1545 00aa 29020000 		.4byte	.LASF15
 1546 00ae 05       		.uleb128 0x5
 1547 00af 74020000 		.4byte	.LASF16
 1548 00b3 04       		.byte	0x4
 1549 00b4 3C02     		.2byte	0x23c
 1550 00b6 BA000000 		.4byte	0xba
 1551 00ba 06       		.uleb128 0x6
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccO3WBxN.s 			page 36


 1552 00bb 81000000 		.4byte	0x81
 1553 00bf 02       		.uleb128 0x2
 1554 00c0 08       		.byte	0x8
 1555 00c1 04       		.byte	0x4
 1556 00c2 D0000000 		.4byte	.LASF17
 1557 00c6 02       		.uleb128 0x2
 1558 00c7 04       		.byte	0x4
 1559 00c8 07       		.byte	0x7
 1560 00c9 39000000 		.4byte	.LASF18
 1561 00cd 07       		.uleb128 0x7
 1562 00ce 19030000 		.4byte	.LASF58
 1563 00d2 01       		.byte	0x1
 1564 00d3 14       		.byte	0x14
 1565 00d4 8D000000 		.4byte	0x8d
 1566 00d8 00000000 		.4byte	.LFB64
 1567 00dc 74000000 		.4byte	.LFE64-.LFB64
 1568 00e0 01       		.uleb128 0x1
 1569 00e1 9C       		.byte	0x9c
 1570 00e2 03010000 		.4byte	0x103
 1571 00e6 08       		.uleb128 0x8
 1572 00e7 13000000 		.4byte	.LASF42
 1573 00eb 01       		.byte	0x1
 1574 00ec 14       		.byte	0x14
 1575 00ed A0000000 		.4byte	0xa0
 1576 00f1 02       		.uleb128 0x2
 1577 00f2 91       		.byte	0x91
 1578 00f3 60       		.sleb128 -32
 1579 00f4 09       		.uleb128 0x9
 1580 00f5 3B020000 		.4byte	.LASF19
 1581 00f9 01       		.byte	0x1
 1582 00fa 16       		.byte	0x16
 1583 00fb 8D000000 		.4byte	0x8d
 1584 00ff 02       		.uleb128 0x2
 1585 0100 91       		.byte	0x91
 1586 0101 6E       		.sleb128 -18
 1587 0102 00       		.byte	0
 1588 0103 0A       		.uleb128 0xa
 1589 0104 E6020000 		.4byte	.LASF20
 1590 0108 01       		.byte	0x1
 1591 0109 41       		.byte	0x41
 1592 010a 00000000 		.4byte	.LFB65
 1593 010e F8000000 		.4byte	.LFE65-.LFB65
 1594 0112 01       		.uleb128 0x1
 1595 0113 9C       		.byte	0x9c
 1596 0114 79010000 		.4byte	0x179
 1597 0118 0B       		.uleb128 0xb
 1598 0119 06000000 		.4byte	.LBB2
 1599 011d 24000000 		.4byte	.LBE2-.LBB2
 1600 0121 32010000 		.4byte	0x132
 1601 0125 0C       		.uleb128 0xc
 1602 0126 6A00     		.ascii	"j\000"
 1603 0128 01       		.byte	0x1
 1604 0129 42       		.byte	0x42
 1605 012a 68000000 		.4byte	0x68
 1606 012e 02       		.uleb128 0x2
 1607 012f 91       		.byte	0x91
 1608 0130 74       		.sleb128 -12
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccO3WBxN.s 			page 37


 1609 0131 00       		.byte	0
 1610 0132 0B       		.uleb128 0xb
 1611 0133 40000000 		.4byte	.LBB3
 1612 0137 22000000 		.4byte	.LBE3-.LBB3
 1613 013b 4C010000 		.4byte	0x14c
 1614 013f 0C       		.uleb128 0xc
 1615 0140 6A00     		.ascii	"j\000"
 1616 0142 01       		.byte	0x1
 1617 0143 4A       		.byte	0x4a
 1618 0144 68000000 		.4byte	0x68
 1619 0148 02       		.uleb128 0x2
 1620 0149 91       		.byte	0x91
 1621 014a 70       		.sleb128 -16
 1622 014b 00       		.byte	0
 1623 014c 0D       		.uleb128 0xd
 1624 014d 62000000 		.4byte	.LBB4
 1625 0151 60000000 		.4byte	.LBE4-.LBB4
 1626 0155 0C       		.uleb128 0xc
 1627 0156 6900     		.ascii	"i\000"
 1628 0158 01       		.byte	0x1
 1629 0159 4D       		.byte	0x4d
 1630 015a 68000000 		.4byte	0x68
 1631 015e 02       		.uleb128 0x2
 1632 015f 91       		.byte	0x91
 1633 0160 6C       		.sleb128 -20
 1634 0161 0D       		.uleb128 0xd
 1635 0162 68000000 		.4byte	.LBB5
 1636 0166 4E000000 		.4byte	.LBE5-.LBB5
 1637 016a 0C       		.uleb128 0xc
 1638 016b 6A00     		.ascii	"j\000"
 1639 016d 01       		.byte	0x1
 1640 016e 4E       		.byte	0x4e
 1641 016f 68000000 		.4byte	0x68
 1642 0173 02       		.uleb128 0x2
 1643 0174 91       		.byte	0x91
 1644 0175 68       		.sleb128 -24
 1645 0176 00       		.byte	0
 1646 0177 00       		.byte	0
 1647 0178 00       		.byte	0
 1648 0179 0A       		.uleb128 0xa
 1649 017a C4010000 		.4byte	.LASF21
 1650 017e 01       		.byte	0x1
 1651 017f 62       		.byte	0x62
 1652 0180 00000000 		.4byte	.LFB66
 1653 0184 A8020000 		.4byte	.LFE66-.LFB66
 1654 0188 01       		.uleb128 0x1
 1655 0189 9C       		.byte	0x9c
 1656 018a C2010000 		.4byte	0x1c2
 1657 018e 09       		.uleb128 0x9
 1658 018f 7E010000 		.4byte	.LASF22
 1659 0193 01       		.byte	0x1
 1660 0194 64       		.byte	0x64
 1661 0195 81000000 		.4byte	0x81
 1662 0199 02       		.uleb128 0x2
 1663 019a 91       		.byte	0x91
 1664 019b 6B       		.sleb128 -21
 1665 019c 09       		.uleb128 0x9
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccO3WBxN.s 			page 38


 1666 019d DF020000 		.4byte	.LASF23
 1667 01a1 01       		.byte	0x1
 1668 01a2 65       		.byte	0x65
 1669 01a3 81000000 		.4byte	0x81
 1670 01a7 02       		.uleb128 0x2
 1671 01a8 91       		.byte	0x91
 1672 01a9 6A       		.sleb128 -22
 1673 01aa 0D       		.uleb128 0xd
 1674 01ab A0000000 		.4byte	.LBB6
 1675 01af 1C000000 		.4byte	.LBE6-.LBB6
 1676 01b3 0C       		.uleb128 0xc
 1677 01b4 707000   		.ascii	"pp\000"
 1678 01b7 01       		.byte	0x1
 1679 01b8 81       		.byte	0x81
 1680 01b9 68000000 		.4byte	0x68
 1681 01bd 02       		.uleb128 0x2
 1682 01be 91       		.byte	0x91
 1683 01bf 6C       		.sleb128 -20
 1684 01c0 00       		.byte	0
 1685 01c1 00       		.byte	0
 1686 01c2 0E       		.uleb128 0xe
 1687 01c3 2E020000 		.4byte	.LASF24
 1688 01c7 01       		.byte	0x1
 1689 01c8 E4       		.byte	0xe4
 1690 01c9 68000000 		.4byte	0x68
 1691 01cd 00000000 		.4byte	.LFB67
 1692 01d1 60050000 		.4byte	.LFE67-.LFB67
 1693 01d5 01       		.uleb128 0x1
 1694 01d6 9C       		.byte	0x9c
 1695 01d7 C8020000 		.4byte	0x2c8
 1696 01db 09       		.uleb128 0x9
 1697 01dc A3020000 		.4byte	.LASF25
 1698 01e0 01       		.byte	0x1
 1699 01e1 F1       		.byte	0xf1
 1700 01e2 81000000 		.4byte	0x81
 1701 01e6 03       		.uleb128 0x3
 1702 01e7 91       		.byte	0x91
 1703 01e8 BF7F     		.sleb128 -65
 1704 01ea 09       		.uleb128 0x9
 1705 01eb 33030000 		.4byte	.LASF26
 1706 01ef 01       		.byte	0x1
 1707 01f0 F2       		.byte	0xf2
 1708 01f1 81000000 		.4byte	0x81
 1709 01f5 03       		.uleb128 0x3
 1710 01f6 91       		.byte	0x91
 1711 01f7 BE7F     		.sleb128 -66
 1712 01f9 0F       		.uleb128 0xf
 1713 01fa 37010000 		.4byte	.LASF59
 1714 01fe 01       		.byte	0x1
 1715 01ff 0101     		.2byte	0x101
 1716 0201 8D000000 		.4byte	0x8d
 1717 0205 10       		.uleb128 0x10
 1718 0206 64657200 		.ascii	"der\000"
 1719 020a 01       		.byte	0x1
 1720 020b 0201     		.2byte	0x102
 1721 020d A0000000 		.4byte	0xa0
 1722 0211 03       		.uleb128 0x3
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccO3WBxN.s 			page 39


 1723 0212 91       		.byte	0x91
 1724 0213 B07F     		.sleb128 -80
 1725 0215 11       		.uleb128 0x11
 1726 0216 0A000000 		.4byte	.LASF27
 1727 021a 01       		.byte	0x1
 1728 021b 0201     		.2byte	0x102
 1729 021d A0000000 		.4byte	0xa0
 1730 0221 02       		.uleb128 0x2
 1731 0222 91       		.byte	0x91
 1732 0223 68       		.sleb128 -24
 1733 0224 11       		.uleb128 0x11
 1734 0225 96020000 		.4byte	.LASF28
 1735 0229 01       		.byte	0x1
 1736 022a 0201     		.2byte	0x102
 1737 022c A0000000 		.4byte	0xa0
 1738 0230 02       		.uleb128 0x2
 1739 0231 91       		.byte	0x91
 1740 0232 60       		.sleb128 -32
 1741 0233 10       		.uleb128 0x10
 1742 0234 647400   		.ascii	"dt\000"
 1743 0237 01       		.byte	0x1
 1744 0238 0201     		.2byte	0x102
 1745 023a A0000000 		.4byte	0xa0
 1746 023e 02       		.uleb128 0x2
 1747 023f 91       		.byte	0x91
 1748 0240 58       		.sleb128 -40
 1749 0241 11       		.uleb128 0x11
 1750 0242 BF010000 		.4byte	.LASF29
 1751 0246 01       		.byte	0x1
 1752 0247 0301     		.2byte	0x103
 1753 0249 A0000000 		.4byte	0xa0
 1754 024d 03       		.uleb128 0x3
 1755 024e 91       		.byte	0x91
 1756 024f A87F     		.sleb128 -88
 1757 0251 11       		.uleb128 0x11
 1758 0252 51020000 		.4byte	.LASF30
 1759 0256 01       		.byte	0x1
 1760 0257 0A01     		.2byte	0x10a
 1761 0259 C8020000 		.4byte	0x2c8
 1762 025d 03       		.uleb128 0x3
 1763 025e 91       		.byte	0x91
 1764 025f 987F     		.sleb128 -104
 1765 0261 0D       		.uleb128 0xd
 1766 0262 48030000 		.4byte	.LBB7
 1767 0266 90010000 		.4byte	.LBE7-.LBB7
 1768 026a 11       		.uleb128 0x11
 1769 026b CE020000 		.4byte	.LASF31
 1770 026f 01       		.byte	0x1
 1771 0270 3701     		.2byte	0x137
 1772 0272 68000000 		.4byte	0x68
 1773 0276 02       		.uleb128 0x2
 1774 0277 91       		.byte	0x91
 1775 0278 54       		.sleb128 -44
 1776 0279 11       		.uleb128 0x11
 1777 027a 44010000 		.4byte	.LASF32
 1778 027e 01       		.byte	0x1
 1779 027f 3801     		.2byte	0x138
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccO3WBxN.s 			page 40


 1780 0281 68000000 		.4byte	0x68
 1781 0285 02       		.uleb128 0x2
 1782 0286 91       		.byte	0x91
 1783 0287 50       		.sleb128 -48
 1784 0288 11       		.uleb128 0x11
 1785 0289 21010000 		.4byte	.LASF33
 1786 028d 01       		.byte	0x1
 1787 028e 3901     		.2byte	0x139
 1788 0290 A0000000 		.4byte	0xa0
 1789 0294 02       		.uleb128 0x2
 1790 0295 91       		.byte	0x91
 1791 0296 48       		.sleb128 -56
 1792 0297 11       		.uleb128 0x11
 1793 0298 71010000 		.4byte	.LASF34
 1794 029c 01       		.byte	0x1
 1795 029d 3A01     		.2byte	0x13a
 1796 029f A0000000 		.4byte	0xa0
 1797 02a3 02       		.uleb128 0x2
 1798 02a4 91       		.byte	0x91
 1799 02a5 40       		.sleb128 -64
 1800 02a6 11       		.uleb128 0x11
 1801 02a7 AA020000 		.4byte	.LASF35
 1802 02ab 01       		.byte	0x1
 1803 02ac 3B01     		.2byte	0x13b
 1804 02ae 8D000000 		.4byte	0x8d
 1805 02b2 03       		.uleb128 0x3
 1806 02b3 91       		.byte	0x91
 1807 02b4 A67F     		.sleb128 -90
 1808 02b6 11       		.uleb128 0x11
 1809 02b7 19000000 		.4byte	.LASF36
 1810 02bb 01       		.byte	0x1
 1811 02bc 3C01     		.2byte	0x13c
 1812 02be 8D000000 		.4byte	0x8d
 1813 02c2 03       		.uleb128 0x3
 1814 02c3 91       		.byte	0x91
 1815 02c4 A47F     		.sleb128 -92
 1816 02c6 00       		.byte	0
 1817 02c7 00       		.byte	0
 1818 02c8 12       		.uleb128 0x12
 1819 02c9 8D000000 		.4byte	0x8d
 1820 02cd D8020000 		.4byte	0x2d8
 1821 02d1 13       		.uleb128 0x13
 1822 02d2 C6000000 		.4byte	0xc6
 1823 02d6 04       		.byte	0x4
 1824 02d7 00       		.byte	0
 1825 02d8 14       		.uleb128 0x14
 1826 02d9 0C030000 		.4byte	.LASF37
 1827 02dd 05       		.byte	0x5
 1828 02de 1207     		.2byte	0x712
 1829 02e0 E4020000 		.4byte	0x2e4
 1830 02e4 06       		.uleb128 0x6
 1831 02e5 76000000 		.4byte	0x76
 1832 02e9 15       		.uleb128 0x15
 1833 02ea 01010000 		.4byte	.LASF38
 1834 02ee 01       		.byte	0x1
 1835 02ef 12       		.byte	0x12
 1836 02f0 81000000 		.4byte	0x81
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccO3WBxN.s 			page 41


 1837 02f4 05       		.uleb128 0x5
 1838 02f5 03       		.byte	0x3
 1839 02f6 00000000 		.4byte	errorStatus
 1840 02fa 15       		.uleb128 0x15
 1841 02fb EC000000 		.4byte	.LASF39
 1842 02ff 01       		.byte	0x1
 1843 0300 28       		.byte	0x28
 1844 0301 68000000 		.4byte	0x68
 1845 0305 05       		.uleb128 0x5
 1846 0306 03       		.byte	0x3
 1847 0307 00000000 		.4byte	data_read_mode
 1848 030b 15       		.uleb128 0x15
 1849 030c 00000000 		.4byte	.LASF40
 1850 0310 01       		.byte	0x1
 1851 0311 29       		.byte	0x29
 1852 0312 1C030000 		.4byte	0x31c
 1853 0316 05       		.uleb128 0x5
 1854 0317 03       		.byte	0x3
 1855 0318 00000000 		.4byte	new_angle
 1856 031c 06       		.uleb128 0x6
 1857 031d 68000000 		.4byte	0x68
 1858 0321 15       		.uleb128 0x15
 1859 0322 1E000000 		.4byte	.LASF41
 1860 0326 01       		.byte	0x1
 1861 0327 2A       		.byte	0x2a
 1862 0328 1C030000 		.4byte	0x31c
 1863 032c 05       		.uleb128 0x5
 1864 032d 03       		.byte	0x3
 1865 032e 00000000 		.4byte	new_pos_set
 1866 0332 15       		.uleb128 0x15
 1867 0333 13000000 		.4byte	.LASF42
 1868 0337 01       		.byte	0x1
 1869 0338 2B       		.byte	0x2b
 1870 0339 A0000000 		.4byte	0xa0
 1871 033d 05       		.uleb128 0x5
 1872 033e 03       		.byte	0x3
 1873 033f 00000000 		.4byte	angle
 1874 0343 15       		.uleb128 0x15
 1875 0344 47020000 		.4byte	.LASF43
 1876 0348 01       		.byte	0x1
 1877 0349 2C       		.byte	0x2c
 1878 034a A0000000 		.4byte	0xa0
 1879 034e 05       		.uleb128 0x5
 1880 034f 03       		.byte	0x3
 1881 0350 00000000 		.4byte	angletemp
 1882 0354 15       		.uleb128 0x15
 1883 0355 8B020000 		.4byte	.LASF44
 1884 0359 01       		.byte	0x1
 1885 035a 2D       		.byte	0x2d
 1886 035b 68000000 		.4byte	0x68
 1887 035f 05       		.uleb128 0x5
 1888 0360 03       		.byte	0x3
 1889 0361 00000000 		.4byte	isNegative
 1890 0365 12       		.uleb128 0x12
 1891 0366 A7000000 		.4byte	0xa7
 1892 036a 75030000 		.4byte	0x375
 1893 036e 13       		.uleb128 0x13
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccO3WBxN.s 			page 42


 1894 036f C6000000 		.4byte	0xc6
 1895 0373 63       		.byte	0x63
 1896 0374 00       		.byte	0
 1897 0375 15       		.uleb128 0x15
 1898 0376 FB020000 		.4byte	.LASF45
 1899 037a 01       		.byte	0x1
 1900 037b 2E       		.byte	0x2e
 1901 037c 65030000 		.4byte	0x365
 1902 0380 05       		.uleb128 0x5
 1903 0381 03       		.byte	0x3
 1904 0382 00000000 		.4byte	sendValue
 1905 0386 15       		.uleb128 0x15
 1906 0387 29030000 		.4byte	.LASF46
 1907 038b 01       		.byte	0x1
 1908 038c 2F       		.byte	0x2f
 1909 038d 8D000000 		.4byte	0x8d
 1910 0391 05       		.uleb128 0x5
 1911 0392 03       		.byte	0x3
 1912 0393 00000000 		.4byte	adcValue1
 1913 0397 15       		.uleb128 0x15
 1914 0398 63020000 		.4byte	.LASF47
 1915 039c 01       		.byte	0x1
 1916 039d 30       		.byte	0x30
 1917 039e 8D000000 		.4byte	0x8d
 1918 03a2 05       		.uleb128 0x5
 1919 03a3 03       		.byte	0x3
 1920 03a4 00000000 		.4byte	adcValue2
 1921 03a8 12       		.uleb128 0x12
 1922 03a9 A7000000 		.4byte	0xa7
 1923 03ad B8030000 		.4byte	0x3b8
 1924 03b1 13       		.uleb128 0x13
 1925 03b2 C6000000 		.4byte	0xc6
 1926 03b6 13       		.byte	0x13
 1927 03b7 00       		.byte	0
 1928 03b8 15       		.uleb128 0x15
 1929 03b9 2A000000 		.4byte	.LASF48
 1930 03bd 01       		.byte	0x1
 1931 03be 31       		.byte	0x31
 1932 03bf A8030000 		.4byte	0x3a8
 1933 03c3 05       		.uleb128 0x5
 1934 03c4 03       		.byte	0x3
 1935 03c5 00000000 		.4byte	temp
 1936 03c9 16       		.uleb128 0x16
 1937 03ca 6E6E00   		.ascii	"nn\000"
 1938 03cd 01       		.byte	0x1
 1939 03ce 32       		.byte	0x32
 1940 03cf 68000000 		.4byte	0x68
 1941 03d3 05       		.uleb128 0x5
 1942 03d4 03       		.byte	0x3
 1943 03d5 00000000 		.4byte	nn
 1944 03d9 12       		.uleb128 0x12
 1945 03da A0000000 		.4byte	0xa0
 1946 03de E9030000 		.4byte	0x3e9
 1947 03e2 13       		.uleb128 0x13
 1948 03e3 C6000000 		.4byte	0xc6
 1949 03e7 02       		.byte	0x2
 1950 03e8 00       		.byte	0
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccO3WBxN.s 			page 43


 1951 03e9 16       		.uleb128 0x16
 1952 03ea 70696400 		.ascii	"pid\000"
 1953 03ee 01       		.byte	0x1
 1954 03ef 33       		.byte	0x33
 1955 03f0 D9030000 		.4byte	0x3d9
 1956 03f4 05       		.uleb128 0x5
 1957 03f5 03       		.byte	0x3
 1958 03f6 00000000 		.4byte	pid
 1959 03fa 15       		.uleb128 0x15
 1960 03fb DC000000 		.4byte	.LASF49
 1961 03ff 01       		.byte	0x1
 1962 0400 35       		.byte	0x35
 1963 0401 65030000 		.4byte	0x365
 1964 0405 05       		.uleb128 0x5
 1965 0406 03       		.byte	0x3
 1966 0407 00000000 		.4byte	help
 1967 040b 16       		.uleb128 0x16
 1968 040c 747400   		.ascii	"tt\000"
 1969 040f 01       		.byte	0x1
 1970 0410 36       		.byte	0x36
 1971 0411 68000000 		.4byte	0x68
 1972 0415 05       		.uleb128 0x5
 1973 0416 03       		.byte	0x3
 1974 0417 00000000 		.4byte	tt
 1975 041b 16       		.uleb128 0x16
 1976 041c 706F7300 		.ascii	"pos\000"
 1977 0420 01       		.byte	0x1
 1978 0421 37       		.byte	0x37
 1979 0422 68000000 		.4byte	0x68
 1980 0426 05       		.uleb128 0x5
 1981 0427 03       		.byte	0x3
 1982 0428 00000000 		.4byte	pos
 1983 042c 15       		.uleb128 0x15
 1984 042d 87010000 		.4byte	.LASF50
 1985 0431 01       		.byte	0x1
 1986 0432 38       		.byte	0x38
 1987 0433 68000000 		.4byte	0x68
 1988 0437 05       		.uleb128 0x5
 1989 0438 03       		.byte	0x3
 1990 0439 00000000 		.4byte	new_pos
 1991 043d 16       		.uleb128 0x16
 1992 043e 65727200 		.ascii	"err\000"
 1993 0442 01       		.byte	0x1
 1994 0443 39       		.byte	0x39
 1995 0444 A0000000 		.4byte	0xa0
 1996 0448 05       		.uleb128 0x5
 1997 0449 03       		.byte	0x3
 1998 044a 00000000 		.4byte	err
 1999 044e 15       		.uleb128 0x15
 2000 044f C2020000 		.4byte	.LASF51
 2001 0453 01       		.byte	0x1
 2002 0454 3A       		.byte	0x3a
 2003 0455 68000000 		.4byte	0x68
 2004 0459 05       		.uleb128 0x5
 2005 045a 03       		.byte	0x3
 2006 045b 00000000 		.4byte	start_calib
 2007 045f 12       		.uleb128 0x12
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccO3WBxN.s 			page 44


 2008 0460 8D000000 		.4byte	0x8d
 2009 0464 6F040000 		.4byte	0x46f
 2010 0468 13       		.uleb128 0x13
 2011 0469 C6000000 		.4byte	0xc6
 2012 046d 06       		.byte	0x6
 2013 046e 00       		.byte	0
 2014 046f 15       		.uleb128 0x15
 2015 0470 63010000 		.4byte	.LASF52
 2016 0474 01       		.byte	0x1
 2017 0475 3D       		.byte	0x3d
 2018 0476 5F040000 		.4byte	0x45f
 2019 047a 05       		.uleb128 0x5
 2020 047b 03       		.byte	0x3
 2021 047c 00000000 		.4byte	moving_median
 2022 0480 15       		.uleb128 0x15
 2023 0481 F1020000 		.4byte	.LASF53
 2024 0485 01       		.byte	0x1
 2025 0486 3E       		.byte	0x3e
 2026 0487 5F040000 		.4byte	0x45f
 2027 048b 05       		.uleb128 0x5
 2028 048c 03       		.byte	0x3
 2029 048d 00000000 		.4byte	tempArray
 2030 0491 16       		.uleb128 0x16
 2031 0492 746D7000 		.ascii	"tmp\000"
 2032 0496 01       		.byte	0x1
 2033 0497 3F       		.byte	0x3f
 2034 0498 8D000000 		.4byte	0x8d
 2035 049c 05       		.uleb128 0x5
 2036 049d 03       		.byte	0x3
 2037 049e 00000000 		.4byte	tmp
 2038 04a2 15       		.uleb128 0x15
 2039 04a3 E1000000 		.4byte	.LASF54
 2040 04a7 01       		.byte	0x1
 2041 04a8 E3       		.byte	0xe3
 2042 04a9 68000000 		.4byte	0x68
 2043 04ad 05       		.uleb128 0x5
 2044 04ae 03       		.byte	0x3
 2045 04af 00000000 		.4byte	led_switch
 2046 04b3 00       		.byte	0
 2047              		.section	.debug_abbrev,"",%progbits
 2048              	.Ldebug_abbrev0:
 2049 0000 01       		.uleb128 0x1
 2050 0001 11       		.uleb128 0x11
 2051 0002 01       		.byte	0x1
 2052 0003 25       		.uleb128 0x25
 2053 0004 0E       		.uleb128 0xe
 2054 0005 13       		.uleb128 0x13
 2055 0006 0B       		.uleb128 0xb
 2056 0007 03       		.uleb128 0x3
 2057 0008 0E       		.uleb128 0xe
 2058 0009 1B       		.uleb128 0x1b
 2059 000a 0E       		.uleb128 0xe
 2060 000b 55       		.uleb128 0x55
 2061 000c 17       		.uleb128 0x17
 2062 000d 11       		.uleb128 0x11
 2063 000e 01       		.uleb128 0x1
 2064 000f 10       		.uleb128 0x10
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccO3WBxN.s 			page 45


 2065 0010 17       		.uleb128 0x17
 2066 0011 00       		.byte	0
 2067 0012 00       		.byte	0
 2068 0013 02       		.uleb128 0x2
 2069 0014 24       		.uleb128 0x24
 2070 0015 00       		.byte	0
 2071 0016 0B       		.uleb128 0xb
 2072 0017 0B       		.uleb128 0xb
 2073 0018 3E       		.uleb128 0x3e
 2074 0019 0B       		.uleb128 0xb
 2075 001a 03       		.uleb128 0x3
 2076 001b 0E       		.uleb128 0xe
 2077 001c 00       		.byte	0
 2078 001d 00       		.byte	0
 2079 001e 03       		.uleb128 0x3
 2080 001f 16       		.uleb128 0x16
 2081 0020 00       		.byte	0
 2082 0021 03       		.uleb128 0x3
 2083 0022 0E       		.uleb128 0xe
 2084 0023 3A       		.uleb128 0x3a
 2085 0024 0B       		.uleb128 0xb
 2086 0025 3B       		.uleb128 0x3b
 2087 0026 0B       		.uleb128 0xb
 2088 0027 49       		.uleb128 0x49
 2089 0028 13       		.uleb128 0x13
 2090 0029 00       		.byte	0
 2091 002a 00       		.byte	0
 2092 002b 04       		.uleb128 0x4
 2093 002c 24       		.uleb128 0x24
 2094 002d 00       		.byte	0
 2095 002e 0B       		.uleb128 0xb
 2096 002f 0B       		.uleb128 0xb
 2097 0030 3E       		.uleb128 0x3e
 2098 0031 0B       		.uleb128 0xb
 2099 0032 03       		.uleb128 0x3
 2100 0033 08       		.uleb128 0x8
 2101 0034 00       		.byte	0
 2102 0035 00       		.byte	0
 2103 0036 05       		.uleb128 0x5
 2104 0037 16       		.uleb128 0x16
 2105 0038 00       		.byte	0
 2106 0039 03       		.uleb128 0x3
 2107 003a 0E       		.uleb128 0xe
 2108 003b 3A       		.uleb128 0x3a
 2109 003c 0B       		.uleb128 0xb
 2110 003d 3B       		.uleb128 0x3b
 2111 003e 05       		.uleb128 0x5
 2112 003f 49       		.uleb128 0x49
 2113 0040 13       		.uleb128 0x13
 2114 0041 00       		.byte	0
 2115 0042 00       		.byte	0
 2116 0043 06       		.uleb128 0x6
 2117 0044 35       		.uleb128 0x35
 2118 0045 00       		.byte	0
 2119 0046 49       		.uleb128 0x49
 2120 0047 13       		.uleb128 0x13
 2121 0048 00       		.byte	0
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccO3WBxN.s 			page 46


 2122 0049 00       		.byte	0
 2123 004a 07       		.uleb128 0x7
 2124 004b 2E       		.uleb128 0x2e
 2125 004c 01       		.byte	0x1
 2126 004d 3F       		.uleb128 0x3f
 2127 004e 19       		.uleb128 0x19
 2128 004f 03       		.uleb128 0x3
 2129 0050 0E       		.uleb128 0xe
 2130 0051 3A       		.uleb128 0x3a
 2131 0052 0B       		.uleb128 0xb
 2132 0053 3B       		.uleb128 0x3b
 2133 0054 0B       		.uleb128 0xb
 2134 0055 27       		.uleb128 0x27
 2135 0056 19       		.uleb128 0x19
 2136 0057 49       		.uleb128 0x49
 2137 0058 13       		.uleb128 0x13
 2138 0059 11       		.uleb128 0x11
 2139 005a 01       		.uleb128 0x1
 2140 005b 12       		.uleb128 0x12
 2141 005c 06       		.uleb128 0x6
 2142 005d 40       		.uleb128 0x40
 2143 005e 18       		.uleb128 0x18
 2144 005f 9642     		.uleb128 0x2116
 2145 0061 19       		.uleb128 0x19
 2146 0062 01       		.uleb128 0x1
 2147 0063 13       		.uleb128 0x13
 2148 0064 00       		.byte	0
 2149 0065 00       		.byte	0
 2150 0066 08       		.uleb128 0x8
 2151 0067 05       		.uleb128 0x5
 2152 0068 00       		.byte	0
 2153 0069 03       		.uleb128 0x3
 2154 006a 0E       		.uleb128 0xe
 2155 006b 3A       		.uleb128 0x3a
 2156 006c 0B       		.uleb128 0xb
 2157 006d 3B       		.uleb128 0x3b
 2158 006e 0B       		.uleb128 0xb
 2159 006f 49       		.uleb128 0x49
 2160 0070 13       		.uleb128 0x13
 2161 0071 02       		.uleb128 0x2
 2162 0072 18       		.uleb128 0x18
 2163 0073 00       		.byte	0
 2164 0074 00       		.byte	0
 2165 0075 09       		.uleb128 0x9
 2166 0076 34       		.uleb128 0x34
 2167 0077 00       		.byte	0
 2168 0078 03       		.uleb128 0x3
 2169 0079 0E       		.uleb128 0xe
 2170 007a 3A       		.uleb128 0x3a
 2171 007b 0B       		.uleb128 0xb
 2172 007c 3B       		.uleb128 0x3b
 2173 007d 0B       		.uleb128 0xb
 2174 007e 49       		.uleb128 0x49
 2175 007f 13       		.uleb128 0x13
 2176 0080 02       		.uleb128 0x2
 2177 0081 18       		.uleb128 0x18
 2178 0082 00       		.byte	0
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccO3WBxN.s 			page 47


 2179 0083 00       		.byte	0
 2180 0084 0A       		.uleb128 0xa
 2181 0085 2E       		.uleb128 0x2e
 2182 0086 01       		.byte	0x1
 2183 0087 3F       		.uleb128 0x3f
 2184 0088 19       		.uleb128 0x19
 2185 0089 03       		.uleb128 0x3
 2186 008a 0E       		.uleb128 0xe
 2187 008b 3A       		.uleb128 0x3a
 2188 008c 0B       		.uleb128 0xb
 2189 008d 3B       		.uleb128 0x3b
 2190 008e 0B       		.uleb128 0xb
 2191 008f 27       		.uleb128 0x27
 2192 0090 19       		.uleb128 0x19
 2193 0091 11       		.uleb128 0x11
 2194 0092 01       		.uleb128 0x1
 2195 0093 12       		.uleb128 0x12
 2196 0094 06       		.uleb128 0x6
 2197 0095 40       		.uleb128 0x40
 2198 0096 18       		.uleb128 0x18
 2199 0097 9642     		.uleb128 0x2116
 2200 0099 19       		.uleb128 0x19
 2201 009a 01       		.uleb128 0x1
 2202 009b 13       		.uleb128 0x13
 2203 009c 00       		.byte	0
 2204 009d 00       		.byte	0
 2205 009e 0B       		.uleb128 0xb
 2206 009f 0B       		.uleb128 0xb
 2207 00a0 01       		.byte	0x1
 2208 00a1 11       		.uleb128 0x11
 2209 00a2 01       		.uleb128 0x1
 2210 00a3 12       		.uleb128 0x12
 2211 00a4 06       		.uleb128 0x6
 2212 00a5 01       		.uleb128 0x1
 2213 00a6 13       		.uleb128 0x13
 2214 00a7 00       		.byte	0
 2215 00a8 00       		.byte	0
 2216 00a9 0C       		.uleb128 0xc
 2217 00aa 34       		.uleb128 0x34
 2218 00ab 00       		.byte	0
 2219 00ac 03       		.uleb128 0x3
 2220 00ad 08       		.uleb128 0x8
 2221 00ae 3A       		.uleb128 0x3a
 2222 00af 0B       		.uleb128 0xb
 2223 00b0 3B       		.uleb128 0x3b
 2224 00b1 0B       		.uleb128 0xb
 2225 00b2 49       		.uleb128 0x49
 2226 00b3 13       		.uleb128 0x13
 2227 00b4 02       		.uleb128 0x2
 2228 00b5 18       		.uleb128 0x18
 2229 00b6 00       		.byte	0
 2230 00b7 00       		.byte	0
 2231 00b8 0D       		.uleb128 0xd
 2232 00b9 0B       		.uleb128 0xb
 2233 00ba 01       		.byte	0x1
 2234 00bb 11       		.uleb128 0x11
 2235 00bc 01       		.uleb128 0x1
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccO3WBxN.s 			page 48


 2236 00bd 12       		.uleb128 0x12
 2237 00be 06       		.uleb128 0x6
 2238 00bf 00       		.byte	0
 2239 00c0 00       		.byte	0
 2240 00c1 0E       		.uleb128 0xe
 2241 00c2 2E       		.uleb128 0x2e
 2242 00c3 01       		.byte	0x1
 2243 00c4 3F       		.uleb128 0x3f
 2244 00c5 19       		.uleb128 0x19
 2245 00c6 03       		.uleb128 0x3
 2246 00c7 0E       		.uleb128 0xe
 2247 00c8 3A       		.uleb128 0x3a
 2248 00c9 0B       		.uleb128 0xb
 2249 00ca 3B       		.uleb128 0x3b
 2250 00cb 0B       		.uleb128 0xb
 2251 00cc 49       		.uleb128 0x49
 2252 00cd 13       		.uleb128 0x13
 2253 00ce 11       		.uleb128 0x11
 2254 00cf 01       		.uleb128 0x1
 2255 00d0 12       		.uleb128 0x12
 2256 00d1 06       		.uleb128 0x6
 2257 00d2 40       		.uleb128 0x40
 2258 00d3 18       		.uleb128 0x18
 2259 00d4 9642     		.uleb128 0x2116
 2260 00d6 19       		.uleb128 0x19
 2261 00d7 01       		.uleb128 0x1
 2262 00d8 13       		.uleb128 0x13
 2263 00d9 00       		.byte	0
 2264 00da 00       		.byte	0
 2265 00db 0F       		.uleb128 0xf
 2266 00dc 34       		.uleb128 0x34
 2267 00dd 00       		.byte	0
 2268 00de 03       		.uleb128 0x3
 2269 00df 0E       		.uleb128 0xe
 2270 00e0 3A       		.uleb128 0x3a
 2271 00e1 0B       		.uleb128 0xb
 2272 00e2 3B       		.uleb128 0x3b
 2273 00e3 05       		.uleb128 0x5
 2274 00e4 49       		.uleb128 0x49
 2275 00e5 13       		.uleb128 0x13
 2276 00e6 00       		.byte	0
 2277 00e7 00       		.byte	0
 2278 00e8 10       		.uleb128 0x10
 2279 00e9 34       		.uleb128 0x34
 2280 00ea 00       		.byte	0
 2281 00eb 03       		.uleb128 0x3
 2282 00ec 08       		.uleb128 0x8
 2283 00ed 3A       		.uleb128 0x3a
 2284 00ee 0B       		.uleb128 0xb
 2285 00ef 3B       		.uleb128 0x3b
 2286 00f0 05       		.uleb128 0x5
 2287 00f1 49       		.uleb128 0x49
 2288 00f2 13       		.uleb128 0x13
 2289 00f3 02       		.uleb128 0x2
 2290 00f4 18       		.uleb128 0x18
 2291 00f5 00       		.byte	0
 2292 00f6 00       		.byte	0
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccO3WBxN.s 			page 49


 2293 00f7 11       		.uleb128 0x11
 2294 00f8 34       		.uleb128 0x34
 2295 00f9 00       		.byte	0
 2296 00fa 03       		.uleb128 0x3
 2297 00fb 0E       		.uleb128 0xe
 2298 00fc 3A       		.uleb128 0x3a
 2299 00fd 0B       		.uleb128 0xb
 2300 00fe 3B       		.uleb128 0x3b
 2301 00ff 05       		.uleb128 0x5
 2302 0100 49       		.uleb128 0x49
 2303 0101 13       		.uleb128 0x13
 2304 0102 02       		.uleb128 0x2
 2305 0103 18       		.uleb128 0x18
 2306 0104 00       		.byte	0
 2307 0105 00       		.byte	0
 2308 0106 12       		.uleb128 0x12
 2309 0107 01       		.uleb128 0x1
 2310 0108 01       		.byte	0x1
 2311 0109 49       		.uleb128 0x49
 2312 010a 13       		.uleb128 0x13
 2313 010b 01       		.uleb128 0x1
 2314 010c 13       		.uleb128 0x13
 2315 010d 00       		.byte	0
 2316 010e 00       		.byte	0
 2317 010f 13       		.uleb128 0x13
 2318 0110 21       		.uleb128 0x21
 2319 0111 00       		.byte	0
 2320 0112 49       		.uleb128 0x49
 2321 0113 13       		.uleb128 0x13
 2322 0114 2F       		.uleb128 0x2f
 2323 0115 0B       		.uleb128 0xb
 2324 0116 00       		.byte	0
 2325 0117 00       		.byte	0
 2326 0118 14       		.uleb128 0x14
 2327 0119 34       		.uleb128 0x34
 2328 011a 00       		.byte	0
 2329 011b 03       		.uleb128 0x3
 2330 011c 0E       		.uleb128 0xe
 2331 011d 3A       		.uleb128 0x3a
 2332 011e 0B       		.uleb128 0xb
 2333 011f 3B       		.uleb128 0x3b
 2334 0120 05       		.uleb128 0x5
 2335 0121 49       		.uleb128 0x49
 2336 0122 13       		.uleb128 0x13
 2337 0123 3F       		.uleb128 0x3f
 2338 0124 19       		.uleb128 0x19
 2339 0125 3C       		.uleb128 0x3c
 2340 0126 19       		.uleb128 0x19
 2341 0127 00       		.byte	0
 2342 0128 00       		.byte	0
 2343 0129 15       		.uleb128 0x15
 2344 012a 34       		.uleb128 0x34
 2345 012b 00       		.byte	0
 2346 012c 03       		.uleb128 0x3
 2347 012d 0E       		.uleb128 0xe
 2348 012e 3A       		.uleb128 0x3a
 2349 012f 0B       		.uleb128 0xb
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccO3WBxN.s 			page 50


 2350 0130 3B       		.uleb128 0x3b
 2351 0131 0B       		.uleb128 0xb
 2352 0132 49       		.uleb128 0x49
 2353 0133 13       		.uleb128 0x13
 2354 0134 3F       		.uleb128 0x3f
 2355 0135 19       		.uleb128 0x19
 2356 0136 02       		.uleb128 0x2
 2357 0137 18       		.uleb128 0x18
 2358 0138 00       		.byte	0
 2359 0139 00       		.byte	0
 2360 013a 16       		.uleb128 0x16
 2361 013b 34       		.uleb128 0x34
 2362 013c 00       		.byte	0
 2363 013d 03       		.uleb128 0x3
 2364 013e 08       		.uleb128 0x8
 2365 013f 3A       		.uleb128 0x3a
 2366 0140 0B       		.uleb128 0xb
 2367 0141 3B       		.uleb128 0x3b
 2368 0142 0B       		.uleb128 0xb
 2369 0143 49       		.uleb128 0x49
 2370 0144 13       		.uleb128 0x13
 2371 0145 3F       		.uleb128 0x3f
 2372 0146 19       		.uleb128 0x19
 2373 0147 02       		.uleb128 0x2
 2374 0148 18       		.uleb128 0x18
 2375 0149 00       		.byte	0
 2376 014a 00       		.byte	0
 2377 014b 00       		.byte	0
 2378              		.section	.debug_aranges,"",%progbits
 2379 0000 34000000 		.4byte	0x34
 2380 0004 0200     		.2byte	0x2
 2381 0006 00000000 		.4byte	.Ldebug_info0
 2382 000a 04       		.byte	0x4
 2383 000b 00       		.byte	0
 2384 000c 0000     		.2byte	0
 2385 000e 0000     		.2byte	0
 2386 0010 00000000 		.4byte	.LFB64
 2387 0014 74000000 		.4byte	.LFE64-.LFB64
 2388 0018 00000000 		.4byte	.LFB65
 2389 001c F8000000 		.4byte	.LFE65-.LFB65
 2390 0020 00000000 		.4byte	.LFB66
 2391 0024 A8020000 		.4byte	.LFE66-.LFB66
 2392 0028 00000000 		.4byte	.LFB67
 2393 002c 60050000 		.4byte	.LFE67-.LFB67
 2394 0030 00000000 		.4byte	0
 2395 0034 00000000 		.4byte	0
 2396              		.section	.debug_ranges,"",%progbits
 2397              	.Ldebug_ranges0:
 2398 0000 00000000 		.4byte	.LFB64
 2399 0004 74000000 		.4byte	.LFE64
 2400 0008 00000000 		.4byte	.LFB65
 2401 000c F8000000 		.4byte	.LFE65
 2402 0010 00000000 		.4byte	.LFB66
 2403 0014 A8020000 		.4byte	.LFE66
 2404 0018 00000000 		.4byte	.LFB67
 2405 001c 60050000 		.4byte	.LFE67
 2406 0020 00000000 		.4byte	0
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccO3WBxN.s 			page 51


 2407 0024 00000000 		.4byte	0
 2408              		.section	.debug_line,"",%progbits
 2409              	.Ldebug_line0:
 2410 0000 EA020000 		.section	.debug_str,"MS",%progbits,1
 2410      02004C01 
 2410      00000201 
 2410      FB0E0D00 
 2410      01010101 
 2411              	.LASF40:
 2412 0000 6E65775F 		.ascii	"new_angle\000"
 2412      616E676C 
 2412      6500
 2413              	.LASF27:
 2414 000a 70726576 		.ascii	"prev_err\000"
 2414      5F657272 
 2414      00
 2415              	.LASF42:
 2416 0013 616E676C 		.ascii	"angle\000"
 2416      6500
 2417              	.LASF36:
 2418 0019 64696666 		.ascii	"diff\000"
 2418      00
 2419              	.LASF41:
 2420 001e 6E65775F 		.ascii	"new_pos_set\000"
 2420      706F735F 
 2420      73657400 
 2421              	.LASF48:
 2422 002a 74656D70 		.ascii	"temp\000"
 2422      00
 2423              	.LASF2:
 2424 002f 73686F72 		.ascii	"short int\000"
 2424      7420696E 
 2424      7400
 2425              	.LASF18:
 2426 0039 73697A65 		.ascii	"sizetype\000"
 2426      74797065 
 2426      00
 2427              	.LASF55:
 2428 0042 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 2428      43313120 
 2428      352E342E 
 2428      31203230 
 2428      31363036 
 2429 0075 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 2429      20726576 
 2429      6973696F 
 2429      6E203233 
 2429      37373135 
 2430 00a8 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 2430      66756E63 
 2430      74696F6E 
 2430      2D736563 
 2430      74696F6E 
 2431              	.LASF17:
 2432 00d0 6C6F6E67 		.ascii	"long double\000"
 2432      20646F75 
 2432      626C6500 
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccO3WBxN.s 			page 52


 2433              	.LASF49:
 2434 00dc 68656C70 		.ascii	"help\000"
 2434      00
 2435              	.LASF54:
 2436 00e1 6C65645F 		.ascii	"led_switch\000"
 2436      73776974 
 2436      636800
 2437              	.LASF39:
 2438 00ec 64617461 		.ascii	"data_read_mode\000"
 2438      5F726561 
 2438      645F6D6F 
 2438      646500
 2439              	.LASF11:
 2440 00fb 75696E74 		.ascii	"uint8\000"
 2440      3800
 2441              	.LASF38:
 2442 0101 6572726F 		.ascii	"errorStatus\000"
 2442      72537461 
 2442      74757300 
 2443              	.LASF13:
 2444 010d 666C6F61 		.ascii	"float\000"
 2444      7400
 2445              	.LASF6:
 2446 0113 6C6F6E67 		.ascii	"long long int\000"
 2446      206C6F6E 
 2446      6720696E 
 2446      7400
 2447              	.LASF33:
 2448 0121 75707065 		.ascii	"upper_offset\000"
 2448      725F6F66 
 2448      66736574 
 2448      00
 2449              	.LASF4:
 2450 012e 6C6F6E67 		.ascii	"long int\000"
 2450      20696E74 
 2450      00
 2451              	.LASF59:
 2452 0137 74696D65 		.ascii	"timercapture\000"
 2452      72636170 
 2452      74757265 
 2452      00
 2453              	.LASF32:
 2454 0144 6C6F7765 		.ascii	"lower_offset_set\000"
 2454      725F6F66 
 2454      66736574 
 2454      5F736574 
 2454      00
 2455              	.LASF1:
 2456 0155 756E7369 		.ascii	"unsigned char\000"
 2456      676E6564 
 2456      20636861 
 2456      7200
 2457              	.LASF52:
 2458 0163 6D6F7669 		.ascii	"moving_median\000"
 2458      6E675F6D 
 2458      65646961 
 2458      6E00
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccO3WBxN.s 			page 53


 2459              	.LASF34:
 2460 0171 6C6F7765 		.ascii	"lower_offset\000"
 2460      725F6F66 
 2460      66736574 
 2460      00
 2461              	.LASF22:
 2462 017e 72785374 		.ascii	"rxStatus\000"
 2462      61747573 
 2462      00
 2463              	.LASF50:
 2464 0187 6E65775F 		.ascii	"new_pos\000"
 2464      706F7300 
 2465              	.LASF0:
 2466 018f 7369676E 		.ascii	"signed char\000"
 2466      65642063 
 2466      68617200 
 2467              	.LASF7:
 2468 019b 6C6F6E67 		.ascii	"long long unsigned int\000"
 2468      206C6F6E 
 2468      6720756E 
 2468      7369676E 
 2468      65642069 
 2469              	.LASF8:
 2470 01b2 756E7369 		.ascii	"unsigned int\000"
 2470      676E6564 
 2470      20696E74 
 2470      00
 2471              	.LASF29:
 2472 01bf 74696D65 		.ascii	"time\000"
 2472      00
 2473              	.LASF21:
 2474 01c4 52784973 		.ascii	"RxIsr\000"
 2474      7200
 2475              	.LASF3:
 2476 01ca 73686F72 		.ascii	"short unsigned int\000"
 2476      7420756E 
 2476      7369676E 
 2476      65642069 
 2476      6E7400
 2477              	.LASF57:
 2478 01dd 433A5C55 		.ascii	"C:\\Users\\Andrew\\Documents\\GitHub\\Hydraulic-Mim"
 2478      73657273 
 2478      5C416E64 
 2478      7265775C 
 2478      446F6375 
 2479 020b 69632D41 		.ascii	"ic-Arm\\PSOC_arm_project.cydsn\000"
 2479      726D5C50 
 2479      534F435F 
 2479      61726D5F 
 2479      70726F6A 
 2480              	.LASF15:
 2481 0229 63686172 		.ascii	"char\000"
 2481      00
 2482              	.LASF24:
 2483 022e 6D61696E 		.ascii	"main\000"
 2483      00
 2484              	.LASF10:
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccO3WBxN.s 			page 54


 2485 0233 696E7433 		.ascii	"int32_t\000"
 2485      325F7400 
 2486              	.LASF19:
 2487 023b 70756C73 		.ascii	"pulselength\000"
 2487      656C656E 
 2487      67746800 
 2488              	.LASF43:
 2489 0247 616E676C 		.ascii	"angletemp\000"
 2489      6574656D 
 2489      7000
 2490              	.LASF30:
 2491 0251 6D6F7669 		.ascii	"moving_avg\000"
 2491      6E675F61 
 2491      766700
 2492              	.LASF12:
 2493 025c 75696E74 		.ascii	"uint16\000"
 2493      313600
 2494              	.LASF47:
 2495 0263 61646356 		.ascii	"adcValue2\000"
 2495      616C7565 
 2495      3200
 2496              	.LASF56:
 2497 026d 6D61696E 		.ascii	"main.c\000"
 2497      2E6300
 2498              	.LASF16:
 2499 0274 72656738 		.ascii	"reg8\000"
 2499      00
 2500              	.LASF5:
 2501 0279 6C6F6E67 		.ascii	"long unsigned int\000"
 2501      20756E73 
 2501      69676E65 
 2501      6420696E 
 2501      7400
 2502              	.LASF44:
 2503 028b 69734E65 		.ascii	"isNegative\000"
 2503      67617469 
 2503      766500
 2504              	.LASF28:
 2505 0296 7069645F 		.ascii	"pid_integral\000"
 2505      696E7465 
 2505      6772616C 
 2505      00
 2506              	.LASF25:
 2507 02a3 62757474 		.ascii	"button\000"
 2507      6F6E00
 2508              	.LASF35:
 2509 02aa 70726576 		.ascii	"prev_adcValue\000"
 2509      5F616463 
 2509      56616C75 
 2509      6500
 2510              	.LASF9:
 2511 02b8 5F5F696E 		.ascii	"__int32_t\000"
 2511      7433325F 
 2511      7400
 2512              	.LASF51:
 2513 02c2 73746172 		.ascii	"start_calib\000"
 2513      745F6361 
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccO3WBxN.s 			page 55


 2513      6C696200 
 2514              	.LASF31:
 2515 02ce 75707065 		.ascii	"upper_offset_set\000"
 2515      725F6F66 
 2515      66736574 
 2515      5F736574 
 2515      00
 2516              	.LASF23:
 2517 02df 72784461 		.ascii	"rxData\000"
 2517      746100
 2518              	.LASF20:
 2519 02e6 6164635F 		.ascii	"adc_update\000"
 2519      75706461 
 2519      746500
 2520              	.LASF53:
 2521 02f1 74656D70 		.ascii	"tempArray\000"
 2521      41727261 
 2521      7900
 2522              	.LASF45:
 2523 02fb 73656E64 		.ascii	"sendValue\000"
 2523      56616C75 
 2523      6500
 2524              	.LASF14:
 2525 0305 646F7562 		.ascii	"double\000"
 2525      6C6500
 2526              	.LASF37:
 2527 030c 49544D5F 		.ascii	"ITM_RxBuffer\000"
 2527      52784275 
 2527      66666572 
 2527      00
 2528              	.LASF58:
 2529 0319 64757479 		.ascii	"dutycyclelength\000"
 2529      6379636C 
 2529      656C656E 
 2529      67746800 
 2530              	.LASF46:
 2531 0329 61646356 		.ascii	"adcValue1\000"
 2531      616C7565 
 2531      3100
 2532              	.LASF26:
 2533 0333 62757474 		.ascii	"buttonPre\000"
 2533      6F6E5072 
 2533      6500
 2534              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
