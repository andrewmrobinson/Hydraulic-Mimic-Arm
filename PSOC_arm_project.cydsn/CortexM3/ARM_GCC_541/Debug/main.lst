ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccpXTCnJ.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.syntax unified
  20              		.global _printf_float
  21              		.thumb
  22              		.syntax unified
  23              		.global	errorStatus
  24              		.bss
  25              		.type	errorStatus, %object
  26              		.size	errorStatus, 1
  27              	errorStatus:
  28 0000 00       		.space	1
  29              		.global	__aeabi_i2d
  30              		.global	__aeabi_dadd
  31              		.global	__aeabi_ddiv
  32              		.global	__aeabi_dmul
  33              		.global	__aeabi_d2uiz
  34              		.section	.text.dutycyclelength,"ax",%progbits
  35              		.align	2
  36              		.global	dutycyclelength
  37              		.thumb
  38              		.thumb_func
  39              		.type	dutycyclelength, %function
  40              	dutycyclelength:
  41              	.LFB64:
  42              		.file 1 "main.c"
   1:main.c        **** 
   2:main.c        **** #include <project.h>
   3:main.c        **** #include <stdio.h>
   4:main.c        **** #include "common.h"
   5:main.c        **** #include <math.h>
   6:main.c        **** #include <stdlib.h>     /* strtod */
   7:main.c        **** 
   8:main.c        **** #define	Frequency 1000000.0			// Frequency of PWMClock
   9:main.c        **** #define	One_ms (Frequency/1000.0)	// 1 ms constant
  10:main.c        **** 
  11:main.c        **** /* Add an explicit reference to the floating point printf library to allow
  12:main.c        **** the usage of floating point conversion specifier */
  13:main.c        **** #if defined (__GNUC__)
  14:main.c        ****     asm (".global _printf_float");
  15:main.c        **** #endif
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccpXTCnJ.s 			page 2


  16:main.c        **** 
  17:main.c        **** uint8 errorStatus = 0u;
  18:main.c        **** 
  19:main.c        **** uint16 dutycyclelength(int angle)
  20:main.c        **** {
  43              		.loc 1 20 0
  44              		.cfi_startproc
  45              		@ args = 0, pretend = 0, frame = 16
  46              		@ frame_needed = 1, uses_anonymous_args = 0
  47 0000 90B5     		push	{r4, r7, lr}
  48              		.cfi_def_cfa_offset 12
  49              		.cfi_offset 4, -12
  50              		.cfi_offset 7, -8
  51              		.cfi_offset 14, -4
  52 0002 85B0     		sub	sp, sp, #20
  53              		.cfi_def_cfa_offset 32
  54 0004 00AF     		add	r7, sp, #0
  55              		.cfi_def_cfa_register 7
  56 0006 7860     		str	r0, [r7, #4]
  21:main.c        ****     uint16 pulselength=(uint16)One_ms + ((angle+45.0)/90.0) * One_ms;
  57              		.loc 1 21 0
  58 0008 7868     		ldr	r0, [r7, #4]
  59 000a FFF7FEFF 		bl	__aeabi_i2d
  60 000e 4FF00002 		mov	r2, #0
  61 0012 154B     		ldr	r3, .L3
  62 0014 FFF7FEFF 		bl	__aeabi_dadd
  63 0018 0346     		mov	r3, r0
  64 001a 0C46     		mov	r4, r1
  65 001c 1846     		mov	r0, r3
  66 001e 2146     		mov	r1, r4
  67 0020 4FF00002 		mov	r2, #0
  68 0024 114B     		ldr	r3, .L3+4
  69 0026 FFF7FEFF 		bl	__aeabi_ddiv
  70 002a 0346     		mov	r3, r0
  71 002c 0C46     		mov	r4, r1
  72 002e 1846     		mov	r0, r3
  73 0030 2146     		mov	r1, r4
  74 0032 4FF00002 		mov	r2, #0
  75 0036 0E4B     		ldr	r3, .L3+8
  76 0038 FFF7FEFF 		bl	__aeabi_dmul
  77 003c 0346     		mov	r3, r0
  78 003e 0C46     		mov	r4, r1
  79 0040 1846     		mov	r0, r3
  80 0042 2146     		mov	r1, r4
  81 0044 4FF00002 		mov	r2, #0
  82 0048 094B     		ldr	r3, .L3+8
  83 004a FFF7FEFF 		bl	__aeabi_dadd
  84 004e 0346     		mov	r3, r0
  85 0050 0C46     		mov	r4, r1
  86 0052 1846     		mov	r0, r3
  87 0054 2146     		mov	r1, r4
  88 0056 FFF7FEFF 		bl	__aeabi_d2uiz
  89 005a 0346     		mov	r3, r0
  90 005c FB81     		strh	r3, [r7, #14]	@ movhi
  22:main.c        ****     return pulselength;
  91              		.loc 1 22 0
  92 005e FB89     		ldrh	r3, [r7, #14]
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccpXTCnJ.s 			page 3


  23:main.c        **** }
  93              		.loc 1 23 0
  94 0060 1846     		mov	r0, r3
  95 0062 1437     		adds	r7, r7, #20
  96              		.cfi_def_cfa_offset 12
  97 0064 BD46     		mov	sp, r7
  98              		.cfi_def_cfa_register 13
  99              		@ sp needed
 100 0066 90BD     		pop	{r4, r7, pc}
 101              	.L4:
 102              		.align	2
 103              	.L3:
 104 0068 00804640 		.word	1078362112
 105 006c 00805640 		.word	1079410688
 106 0070 00408F40 		.word	1083129856
 107              		.cfi_endproc
 108              	.LFE64:
 109              		.size	dutycyclelength, .-dutycyclelength
 110              		.global	data_read_mode
 111              		.bss
 112 0001 000000   		.align	2
 113              		.type	data_read_mode, %object
 114              		.size	data_read_mode, 4
 115              	data_read_mode:
 116 0004 00000000 		.space	4
 117              		.global	new_angle
 118              		.align	2
 119              		.type	new_angle, %object
 120              		.size	new_angle, 4
 121              	new_angle:
 122 0008 00000000 		.space	4
 123              		.global	new_pos_set
 124              		.align	2
 125              		.type	new_pos_set, %object
 126              		.size	new_pos_set, 4
 127              	new_pos_set:
 128 000c 00000000 		.space	4
 129              		.global	angle
 130              		.align	2
 131              		.type	angle, %object
 132              		.size	angle, 4
 133              	angle:
 134 0010 00000000 		.space	4
 135              		.global	angletemp
 136              		.align	2
 137              		.type	angletemp, %object
 138              		.size	angletemp, 4
 139              	angletemp:
 140 0014 00000000 		.space	4
 141              		.global	isNegative
 142              		.align	2
 143              		.type	isNegative, %object
 144              		.size	isNegative, 4
 145              	isNegative:
 146 0018 00000000 		.space	4
 147              		.comm	sendValue,100,4
 148              		.comm	adcValue1,2,2
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccpXTCnJ.s 			page 4


 149              		.comm	adcValue2,2,2
 150              		.comm	temp,9,4
 151              		.global	nn
 152              		.align	2
 153              		.type	nn, %object
 154              		.size	nn, 4
 155              	nn:
 156 001c 00000000 		.space	4
 157              		.global	pid
 158              		.data
 159              		.align	3
 160              		.type	pid, %object
 161              		.size	pid, 24
 162              	pid:
 163 0000 9A999999 		.word	-1717986918
 164 0004 9999A93F 		.word	1068079513
 165 0008 00000000 		.word	0
 166 000c 00000000 		.word	0
 167 0010 00000000 		.word	0
 168 0014 00000000 		.word	0
 169              		.comm	help,100,4
 170              		.global	tt
 171              		.bss
 172              		.align	2
 173              		.type	tt, %object
 174              		.size	tt, 4
 175              	tt:
 176 0020 00000000 		.space	4
 177              		.global	pos
 178              		.data
 179              		.align	2
 180              		.type	pos, %object
 181              		.size	pos, 4
 182              	pos:
 183 0018 40060000 		.word	1600
 184              		.comm	new_pos,4,4
 185              		.comm	err,8,8
 186              		.section	.rodata
 187              		.align	2
 188              	.LC0:
 189 0000 25303864 		.ascii	"%08d\011%08.0f\011%08d\000"
 189      09253038 
 189      2E306609 
 189      25303864 
 189      00
 190              		.section	.text.RxIsr,"ax",%progbits
 191              		.align	2
 192              		.global	RxIsr
 193              		.thumb
 194              		.thumb_func
 195              		.type	RxIsr, %function
 196              	RxIsr:
 197              	.LFB65:
  24:main.c        **** 
  25:main.c        **** /*******************************************************************************
  26:main.c        **** * Function Name: RxIsr
  27:main.c        **** ********************************************************************************
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccpXTCnJ.s 			page 5


  28:main.c        **** *
  29:main.c        **** * Summary:
  30:main.c        **** *  Interrupt Service Routine for RX portion of the UART
  31:main.c        **** *
  32:main.c        **** * Parameters:
  33:main.c        **** *  None.
  34:main.c        **** *
  35:main.c        **** * Return:
  36:main.c        **** *  None.
  37:main.c        **** *
  38:main.c        **** *******************************************************************************/
  39:main.c        **** int data_read_mode = 0;
  40:main.c        **** volatile int new_angle = 0;
  41:main.c        **** volatile int new_pos_set = 0;
  42:main.c        **** int angle = 0;
  43:main.c        **** int angletemp=0;
  44:main.c        **** int isNegative=0;
  45:main.c        **** char sendValue[100];
  46:main.c        **** uint16 adcValue1;
  47:main.c        **** uint16 adcValue2;
  48:main.c        **** char temp[9];
  49:main.c        **** int nn=0;
  50:main.c        **** double pid[3] = {0.05,0.000,0};
  51:main.c        **** char help[100];
  52:main.c        **** int tt = 0;
  53:main.c        **** int pos=1600;
  54:main.c        **** int new_pos;
  55:main.c        **** double err;
  56:main.c        **** CY_ISR(RxIsr)
  57:main.c        **** {
 198              		.loc 1 57 0
 199              		.cfi_startproc
 200              		@ args = 0, pretend = 0, frame = 8
 201              		@ frame_needed = 1, uses_anonymous_args = 0
 202 0000 90B5     		push	{r4, r7, lr}
 203              		.cfi_def_cfa_offset 12
 204              		.cfi_offset 4, -12
 205              		.cfi_offset 7, -8
 206              		.cfi_offset 14, -4
 207 0002 87B0     		sub	sp, sp, #28
 208              		.cfi_def_cfa_offset 40
 209 0004 04AF     		add	r7, sp, #16
 210              		.cfi_def_cfa 7, 24
 211              	.L32:
  58:main.c        ****     uint8 rxStatus;         
  59:main.c        ****     uint8 rxData;           
  60:main.c        ****     
  61:main.c        ****     do
  62:main.c        ****     {
  63:main.c        ****         /* Read receiver status register */
  64:main.c        ****         rxStatus = UART_RXSTATUS_REG;
 212              		.loc 1 64 0
 213 0006 924B     		ldr	r3, .L35
 214 0008 1B78     		ldrb	r3, [r3]
 215 000a FB70     		strb	r3, [r7, #3]
  65:main.c        **** 
  66:main.c        ****         if((rxStatus & (UART_RX_STS_BREAK      | UART_RX_STS_PAR_ERROR |
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccpXTCnJ.s 			page 6


  67:main.c        ****                         UART_RX_STS_STOP_ERROR | UART_RX_STS_OVERRUN)) != 0u)
 216              		.loc 1 67 0
 217 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 218 000e 03F01E03 		and	r3, r3, #30
  66:main.c        ****                         UART_RX_STS_STOP_ERROR | UART_RX_STS_OVERRUN)) != 0u)
 219              		.loc 1 66 0
 220 0012 002B     		cmp	r3, #0
 221 0014 0CD0     		beq	.L6
  68:main.c        ****         {
  69:main.c        ****             /* ERROR handling. */
  70:main.c        ****             errorStatus |= rxStatus & ( UART_RX_STS_BREAK      | UART_RX_STS_PAR_ERROR | 
 222              		.loc 1 70 0
 223 0016 97F90330 		ldrsb	r3, [r7, #3]
 224 001a 03F01E03 		and	r3, r3, #30
 225 001e 5AB2     		sxtb	r2, r3
 226 0020 8C4B     		ldr	r3, .L35+4
 227 0022 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 228 0024 5BB2     		sxtb	r3, r3
 229 0026 1343     		orrs	r3, r3, r2
 230 0028 5BB2     		sxtb	r3, r3
 231 002a DAB2     		uxtb	r2, r3
 232 002c 894B     		ldr	r3, .L35+4
 233 002e 1A70     		strb	r2, [r3]
 234              	.L6:
  71:main.c        ****                                         UART_RX_STS_STOP_ERROR | UART_RX_STS_OVERRUN);
  72:main.c        ****         }
  73:main.c        ****         
  74:main.c        ****         if((rxStatus & UART_RX_STS_FIFO_NOTEMPTY) != 0u)
 235              		.loc 1 74 0
 236 0030 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 237 0032 03F02003 		and	r3, r3, #32
 238 0036 002B     		cmp	r3, #0
 239 0038 00F0FF80 		beq	.L7
  75:main.c        ****         {
  76:main.c        ****             /* Read data from the RX data register */
  77:main.c        ****             rxData = UART_RXDATA_REG;
 240              		.loc 1 77 0
 241 003c 864B     		ldr	r3, .L35+8
 242 003e 1B78     		ldrb	r3, [r3]
 243 0040 BB70     		strb	r3, [r7, #2]
  78:main.c        ****             help[tt] = rxData;
 244              		.loc 1 78 0
 245 0042 864B     		ldr	r3, .L35+12
 246 0044 1B68     		ldr	r3, [r3]
 247 0046 8649     		ldr	r1, .L35+16
 248 0048 BA78     		ldrb	r2, [r7, #2]
 249 004a CA54     		strb	r2, [r1, r3]
  79:main.c        ****             tt++;
 250              		.loc 1 79 0
 251 004c 834B     		ldr	r3, .L35+12
 252 004e 1B68     		ldr	r3, [r3]
 253 0050 0133     		adds	r3, r3, #1
 254 0052 824A     		ldr	r2, .L35+12
 255 0054 1360     		str	r3, [r2]
  80:main.c        ****             if(tt==99){tt=0;}
 256              		.loc 1 80 0
 257 0056 814B     		ldr	r3, .L35+12
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccpXTCnJ.s 			page 7


 258 0058 1B68     		ldr	r3, [r3]
 259 005a 632B     		cmp	r3, #99
 260 005c 02D1     		bne	.L8
 261              		.loc 1 80 0 is_stmt 0 discriminator 1
 262 005e 7F4B     		ldr	r3, .L35+12
 263 0060 0022     		movs	r2, #0
 264 0062 1A60     		str	r2, [r3]
 265              	.L8:
  81:main.c        ****             
  82:main.c        ****             switch(data_read_mode)
 266              		.loc 1 82 0 is_stmt 1
 267 0064 7F4B     		ldr	r3, .L35+20
 268 0066 1B68     		ldr	r3, [r3]
 269 0068 052B     		cmp	r3, #5
 270 006a 00F2E680 		bhi	.L7
 271 006e 01A2     		adr	r2, .L11
 272 0070 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 273              		.p2align 2
 274              	.L11:
 275 0074 8D000000 		.word	.L10+1
 276 0078 C9000000 		.word	.L12+1
 277 007c 03010000 		.word	.L13+1
 278 0080 6D010000 		.word	.L14+1
 279 0084 AF010000 		.word	.L15+1
 280 0088 F1010000 		.word	.L16+1
 281              		.p2align 1
 282              	.L10:
  83:main.c        ****             {
  84:main.c        ****                 case 0:
  85:main.c        ****                     if(rxData=='{' )
 283              		.loc 1 85 0
 284 008c BB78     		ldrb	r3, [r7, #2]	@ zero_extendqisi2
 285 008e 7B2B     		cmp	r3, #123
 286 0090 40F0D080 		bne	.L33
 287              	.LBB2:
  86:main.c        ****                     {
  87:main.c        ****                         for(int pp=1;pp<9;pp++){
 288              		.loc 1 87 0
 289 0094 0123     		movs	r3, #1
 290 0096 7B60     		str	r3, [r7, #4]
 291 0098 07E0     		b	.L18
 292              	.L19:
  88:main.c        ****                             temp[pp] = ' ';
 293              		.loc 1 88 0 discriminator 3
 294 009a 734A     		ldr	r2, .L35+24
 295 009c 7B68     		ldr	r3, [r7, #4]
 296 009e 1344     		add	r3, r3, r2
 297 00a0 2022     		movs	r2, #32
 298 00a2 1A70     		strb	r2, [r3]
  87:main.c        ****                             temp[pp] = ' ';
 299              		.loc 1 87 0 discriminator 3
 300 00a4 7B68     		ldr	r3, [r7, #4]
 301 00a6 0133     		adds	r3, r3, #1
 302 00a8 7B60     		str	r3, [r7, #4]
 303              	.L18:
  87:main.c        ****                             temp[pp] = ' ';
 304              		.loc 1 87 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccpXTCnJ.s 			page 8


 305 00aa 7B68     		ldr	r3, [r7, #4]
 306 00ac 082B     		cmp	r3, #8
 307 00ae F4DD     		ble	.L19
 308              	.LBE2:
  89:main.c        ****                         }
  90:main.c        ****                         temp[0] = '\0';
 309              		.loc 1 90 0 is_stmt 1
 310 00b0 6D4B     		ldr	r3, .L35+24
 311 00b2 0022     		movs	r2, #0
 312 00b4 1A70     		strb	r2, [r3]
  91:main.c        ****                         new_angle = 0;
 313              		.loc 1 91 0
 314 00b6 6D4B     		ldr	r3, .L35+28
 315 00b8 0022     		movs	r2, #0
 316 00ba 1A60     		str	r2, [r3]
  92:main.c        ****                         data_read_mode++;
 317              		.loc 1 92 0
 318 00bc 694B     		ldr	r3, .L35+20
 319 00be 1B68     		ldr	r3, [r3]
 320 00c0 0133     		adds	r3, r3, #1
 321 00c2 684A     		ldr	r2, .L35+20
 322 00c4 1360     		str	r3, [r2]
  93:main.c        ****                     }
  94:main.c        ****                 break;
 323              		.loc 1 94 0
 324 00c6 B5E0     		b	.L33
 325              	.L12:
  95:main.c        ****                 case 1:
  96:main.c        ****                     if(rxData=='x'){
 326              		.loc 1 96 0
 327 00c8 BB78     		ldrb	r3, [r7, #2]	@ zero_extendqisi2
 328 00ca 782B     		cmp	r3, #120
 329 00cc 03D1     		bne	.L20
  97:main.c        ****                         data_read_mode = 2;}
 330              		.loc 1 97 0
 331 00ce 654B     		ldr	r3, .L35+20
 332 00d0 0222     		movs	r2, #2
 333 00d2 1A60     		str	r2, [r3]
  98:main.c        ****                     else if(rxData=='p'){
  99:main.c        ****                         data_read_mode = 3;}
 100:main.c        ****                     else if(rxData=='i'){
 101:main.c        ****                         data_read_mode = 4;}
 102:main.c        ****                     else if(rxData=='d'){
 103:main.c        ****                         data_read_mode = 5;}
 104:main.c        ****                 break;
 334              		.loc 1 104 0
 335 00d4 B0E0     		b	.L34
 336              	.L20:
  98:main.c        ****                     else if(rxData=='p'){
 337              		.loc 1 98 0
 338 00d6 BB78     		ldrb	r3, [r7, #2]	@ zero_extendqisi2
 339 00d8 702B     		cmp	r3, #112
 340 00da 03D1     		bne	.L22
  99:main.c        ****                     else if(rxData=='i'){
 341              		.loc 1 99 0
 342 00dc 614B     		ldr	r3, .L35+20
 343 00de 0322     		movs	r2, #3
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccpXTCnJ.s 			page 9


 344 00e0 1A60     		str	r2, [r3]
 345              		.loc 1 104 0
 346 00e2 A9E0     		b	.L34
 347              	.L22:
 100:main.c        ****                         data_read_mode = 4;}
 348              		.loc 1 100 0
 349 00e4 BB78     		ldrb	r3, [r7, #2]	@ zero_extendqisi2
 350 00e6 692B     		cmp	r3, #105
 351 00e8 03D1     		bne	.L23
 101:main.c        ****                     else if(rxData=='d'){
 352              		.loc 1 101 0
 353 00ea 5E4B     		ldr	r3, .L35+20
 354 00ec 0422     		movs	r2, #4
 355 00ee 1A60     		str	r2, [r3]
 356              		.loc 1 104 0
 357 00f0 A2E0     		b	.L34
 358              	.L23:
 102:main.c        ****                         data_read_mode = 5;}
 359              		.loc 1 102 0
 360 00f2 BB78     		ldrb	r3, [r7, #2]	@ zero_extendqisi2
 361 00f4 642B     		cmp	r3, #100
 362 00f6 40F09F80 		bne	.L34
 103:main.c        ****                 break;
 363              		.loc 1 103 0
 364 00fa 5A4B     		ldr	r3, .L35+20
 365 00fc 0522     		movs	r2, #5
 366 00fe 1A60     		str	r2, [r3]
 367              		.loc 1 104 0
 368 0100 9AE0     		b	.L34
 369              	.L13:
 105:main.c        ****                 case 2:
 106:main.c        ****                     if(rxData != '}'){
 370              		.loc 1 106 0
 371 0102 BB78     		ldrb	r3, [r7, #2]	@ zero_extendqisi2
 372 0104 7D2B     		cmp	r3, #125
 373 0106 0AD0     		beq	.L24
 107:main.c        ****                         temp[nn] = rxData;
 374              		.loc 1 107 0
 375 0108 594B     		ldr	r3, .L35+32
 376 010a 1B68     		ldr	r3, [r3]
 377 010c 5649     		ldr	r1, .L35+24
 378 010e BA78     		ldrb	r2, [r7, #2]
 379 0110 CA54     		strb	r2, [r1, r3]
 108:main.c        ****                         nn++;
 380              		.loc 1 108 0
 381 0112 574B     		ldr	r3, .L35+32
 382 0114 1B68     		ldr	r3, [r3]
 383 0116 0133     		adds	r3, r3, #1
 384 0118 554A     		ldr	r2, .L35+32
 385 011a 1360     		str	r3, [r2]
 109:main.c        ****                     }
 110:main.c        ****                     else {
 111:main.c        ****                         new_pos = (int) strtol(temp, (char **)NULL, 10);
 112:main.c        ****                         new_pos_set = 1;
 113:main.c        ****                         nn=0; 
 114:main.c        ****                     
 115:main.c        ****                         sprintf(sendValue,"%08d\t%08.0f\t%08d",adcValue1,err,angletemp);
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccpXTCnJ.s 			page 10


 116:main.c        ****                         UART_PutString(sendValue);
 117:main.c        ****                         temp[0] = '\0';
 118:main.c        ****                         
 119:main.c        ****                         data_read_mode = 0;
 120:main.c        ****                     }
 121:main.c        ****                   
 122:main.c        ****                 break;
 386              		.loc 1 122 0
 387 011c 8DE0     		b	.L7
 388              	.L24:
 111:main.c        ****                         new_pos_set = 1;
 389              		.loc 1 111 0
 390 011e 0A22     		movs	r2, #10
 391 0120 0021     		movs	r1, #0
 392 0122 5148     		ldr	r0, .L35+24
 393 0124 FFF7FEFF 		bl	strtol
 394 0128 0246     		mov	r2, r0
 395 012a 524B     		ldr	r3, .L35+36
 396 012c 1A60     		str	r2, [r3]
 112:main.c        ****                         nn=0; 
 397              		.loc 1 112 0
 398 012e 524B     		ldr	r3, .L35+40
 399 0130 0122     		movs	r2, #1
 400 0132 1A60     		str	r2, [r3]
 113:main.c        ****                     
 401              		.loc 1 113 0
 402 0134 4E4B     		ldr	r3, .L35+32
 403 0136 0022     		movs	r2, #0
 404 0138 1A60     		str	r2, [r3]
 115:main.c        ****                         UART_PutString(sendValue);
 405              		.loc 1 115 0
 406 013a 504B     		ldr	r3, .L35+44
 407 013c 1B88     		ldrh	r3, [r3]
 408 013e 1946     		mov	r1, r3
 409 0140 4F4B     		ldr	r3, .L35+48
 410 0142 18CB     		ldmia	r3, {r3-r4}
 411 0144 4F4A     		ldr	r2, .L35+52
 412 0146 1268     		ldr	r2, [r2]
 413 0148 0292     		str	r2, [sp, #8]
 414 014a CDE90034 		strd	r3, [sp]
 415 014e 0A46     		mov	r2, r1
 416 0150 4D49     		ldr	r1, .L35+56
 417 0152 4E48     		ldr	r0, .L35+60
 418 0154 FFF7FEFF 		bl	sprintf
 116:main.c        ****                         temp[0] = '\0';
 419              		.loc 1 116 0
 420 0158 4C48     		ldr	r0, .L35+60
 421 015a FFF7FEFF 		bl	UART_PutString
 117:main.c        ****                         
 422              		.loc 1 117 0
 423 015e 424B     		ldr	r3, .L35+24
 424 0160 0022     		movs	r2, #0
 425 0162 1A70     		strb	r2, [r3]
 119:main.c        ****                     }
 426              		.loc 1 119 0
 427 0164 3F4B     		ldr	r3, .L35+20
 428 0166 0022     		movs	r2, #0
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccpXTCnJ.s 			page 11


 429 0168 1A60     		str	r2, [r3]
 430              		.loc 1 122 0
 431 016a 66E0     		b	.L7
 432              	.L14:
 123:main.c        ****                 case 3:
 124:main.c        ****                     if(rxData != '}'){
 433              		.loc 1 124 0
 434 016c BB78     		ldrb	r3, [r7, #2]	@ zero_extendqisi2
 435 016e 7D2B     		cmp	r3, #125
 436 0170 0AD0     		beq	.L26
 125:main.c        ****                         temp[nn] = rxData;
 437              		.loc 1 125 0
 438 0172 3F4B     		ldr	r3, .L35+32
 439 0174 1B68     		ldr	r3, [r3]
 440 0176 3C49     		ldr	r1, .L35+24
 441 0178 BA78     		ldrb	r2, [r7, #2]
 442 017a CA54     		strb	r2, [r1, r3]
 126:main.c        ****                         nn++;
 443              		.loc 1 126 0
 444 017c 3C4B     		ldr	r3, .L35+32
 445 017e 1B68     		ldr	r3, [r3]
 446 0180 0133     		adds	r3, r3, #1
 447 0182 3B4A     		ldr	r2, .L35+32
 448 0184 1360     		str	r3, [r2]
 127:main.c        ****                     }
 128:main.c        ****                     else {
 129:main.c        ****                         pid[0] = strtod(temp, NULL);
 130:main.c        ****                         nn=0;
 131:main.c        ****                         temp[0] = '\0';
 132:main.c        ****                         data_read_mode = 0;
 133:main.c        ****                     }
 134:main.c        ****                     
 135:main.c        ****                 break;
 449              		.loc 1 135 0
 450 0186 58E0     		b	.L7
 451              	.L26:
 129:main.c        ****                         nn=0;
 452              		.loc 1 129 0
 453 0188 0021     		movs	r1, #0
 454 018a 3748     		ldr	r0, .L35+24
 455 018c FFF7FEFF 		bl	strtod
 456 0190 0346     		mov	r3, r0
 457 0192 0C46     		mov	r4, r1
 458 0194 3E4A     		ldr	r2, .L35+64
 459 0196 C2E90034 		strd	r3, [r2]
 130:main.c        ****                         temp[0] = '\0';
 460              		.loc 1 130 0
 461 019a 354B     		ldr	r3, .L35+32
 462 019c 0022     		movs	r2, #0
 463 019e 1A60     		str	r2, [r3]
 131:main.c        ****                         data_read_mode = 0;
 464              		.loc 1 131 0
 465 01a0 314B     		ldr	r3, .L35+24
 466 01a2 0022     		movs	r2, #0
 467 01a4 1A70     		strb	r2, [r3]
 132:main.c        ****                     }
 468              		.loc 1 132 0
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccpXTCnJ.s 			page 12


 469 01a6 2F4B     		ldr	r3, .L35+20
 470 01a8 0022     		movs	r2, #0
 471 01aa 1A60     		str	r2, [r3]
 472              		.loc 1 135 0
 473 01ac 45E0     		b	.L7
 474              	.L15:
 136:main.c        ****                 case 4:
 137:main.c        ****                     if(rxData != '}'){
 475              		.loc 1 137 0
 476 01ae BB78     		ldrb	r3, [r7, #2]	@ zero_extendqisi2
 477 01b0 7D2B     		cmp	r3, #125
 478 01b2 0AD0     		beq	.L28
 138:main.c        ****                         temp[nn] = rxData;
 479              		.loc 1 138 0
 480 01b4 2E4B     		ldr	r3, .L35+32
 481 01b6 1B68     		ldr	r3, [r3]
 482 01b8 2B49     		ldr	r1, .L35+24
 483 01ba BA78     		ldrb	r2, [r7, #2]
 484 01bc CA54     		strb	r2, [r1, r3]
 139:main.c        ****                         nn++;
 485              		.loc 1 139 0
 486 01be 2C4B     		ldr	r3, .L35+32
 487 01c0 1B68     		ldr	r3, [r3]
 488 01c2 0133     		adds	r3, r3, #1
 489 01c4 2A4A     		ldr	r2, .L35+32
 490 01c6 1360     		str	r3, [r2]
 140:main.c        ****                     }
 141:main.c        ****                     else {
 142:main.c        ****                         pid[1] = strtod(temp, NULL);
 143:main.c        ****                         nn=0;
 144:main.c        ****                         temp[0] = '\0';
 145:main.c        ****                         data_read_mode = 0;
 146:main.c        ****                     }
 147:main.c        ****                     
 148:main.c        ****                 break;
 491              		.loc 1 148 0
 492 01c8 37E0     		b	.L7
 493              	.L28:
 142:main.c        ****                         nn=0;
 494              		.loc 1 142 0
 495 01ca 0021     		movs	r1, #0
 496 01cc 2648     		ldr	r0, .L35+24
 497 01ce FFF7FEFF 		bl	strtod
 498 01d2 0346     		mov	r3, r0
 499 01d4 0C46     		mov	r4, r1
 500 01d6 2E4A     		ldr	r2, .L35+64
 501 01d8 C2E90234 		strd	r3, [r2, #8]
 143:main.c        ****                         temp[0] = '\0';
 502              		.loc 1 143 0
 503 01dc 244B     		ldr	r3, .L35+32
 504 01de 0022     		movs	r2, #0
 505 01e0 1A60     		str	r2, [r3]
 144:main.c        ****                         data_read_mode = 0;
 506              		.loc 1 144 0
 507 01e2 214B     		ldr	r3, .L35+24
 508 01e4 0022     		movs	r2, #0
 509 01e6 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccpXTCnJ.s 			page 13


 145:main.c        ****                     }
 510              		.loc 1 145 0
 511 01e8 1E4B     		ldr	r3, .L35+20
 512 01ea 0022     		movs	r2, #0
 513 01ec 1A60     		str	r2, [r3]
 514              		.loc 1 148 0
 515 01ee 24E0     		b	.L7
 516              	.L16:
 149:main.c        ****                 case 5:
 150:main.c        ****                     if(rxData != '}'){
 517              		.loc 1 150 0
 518 01f0 BB78     		ldrb	r3, [r7, #2]	@ zero_extendqisi2
 519 01f2 7D2B     		cmp	r3, #125
 520 01f4 0AD0     		beq	.L30
 151:main.c        ****                         temp[nn] = rxData;
 521              		.loc 1 151 0
 522 01f6 1E4B     		ldr	r3, .L35+32
 523 01f8 1B68     		ldr	r3, [r3]
 524 01fa 1B49     		ldr	r1, .L35+24
 525 01fc BA78     		ldrb	r2, [r7, #2]
 526 01fe CA54     		strb	r2, [r1, r3]
 152:main.c        ****                         nn++;
 527              		.loc 1 152 0
 528 0200 1B4B     		ldr	r3, .L35+32
 529 0202 1B68     		ldr	r3, [r3]
 530 0204 0133     		adds	r3, r3, #1
 531 0206 1A4A     		ldr	r2, .L35+32
 532 0208 1360     		str	r3, [r2]
 153:main.c        ****                     }
 154:main.c        ****                     else {
 155:main.c        ****                         pid[2] = strtod(temp, NULL);
 156:main.c        ****                         nn=0;
 157:main.c        ****                         temp[0] = '\0';
 158:main.c        ****                         data_read_mode = 0;
 159:main.c        ****                     }
 160:main.c        ****                     
 161:main.c        ****                 break;
 533              		.loc 1 161 0
 534 020a 16E0     		b	.L7
 535              	.L30:
 155:main.c        ****                         nn=0;
 536              		.loc 1 155 0
 537 020c 0021     		movs	r1, #0
 538 020e 1648     		ldr	r0, .L35+24
 539 0210 FFF7FEFF 		bl	strtod
 540 0214 0346     		mov	r3, r0
 541 0216 0C46     		mov	r4, r1
 542 0218 1D4A     		ldr	r2, .L35+64
 543 021a C2E90434 		strd	r3, [r2, #16]
 156:main.c        ****                         temp[0] = '\0';
 544              		.loc 1 156 0
 545 021e 144B     		ldr	r3, .L35+32
 546 0220 0022     		movs	r2, #0
 547 0222 1A60     		str	r2, [r3]
 157:main.c        ****                         data_read_mode = 0;
 548              		.loc 1 157 0
 549 0224 104B     		ldr	r3, .L35+24
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccpXTCnJ.s 			page 14


 550 0226 0022     		movs	r2, #0
 551 0228 1A70     		strb	r2, [r3]
 158:main.c        ****                     }
 552              		.loc 1 158 0
 553 022a 0E4B     		ldr	r3, .L35+20
 554 022c 0022     		movs	r2, #0
 555 022e 1A60     		str	r2, [r3]
 556              		.loc 1 161 0
 557 0230 00BF     		nop
 558 0232 02E0     		b	.L7
 559              	.L33:
  94:main.c        ****                 case 1:
 560              		.loc 1 94 0
 561 0234 00BF     		nop
 562 0236 00E0     		b	.L7
 563              	.L34:
 104:main.c        ****                 case 2:
 564              		.loc 1 104 0
 565 0238 00BF     		nop
 566              	.L7:
 162:main.c        ****             }
 163:main.c        ****             
 164:main.c        ****             if(errorStatus == 0u)
 165:main.c        ****             {
 166:main.c        ****                 /* Send data backward */
 167:main.c        ****                 //UART_TXDATA_REG = rxData;
 168:main.c        ****             }
 169:main.c        ****         }
 170:main.c        ****     }while((rxStatus & UART_RX_STS_FIFO_NOTEMPTY) != 0u);
 567              		.loc 1 170 0
 568 023a FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 569 023c 03F02003 		and	r3, r3, #32
 570 0240 002B     		cmp	r3, #0
 571 0242 7FF4E0AE 		bne	.L32
 171:main.c        **** 
 172:main.c        **** }
 572              		.loc 1 172 0
 573 0246 00BF     		nop
 574 0248 0C37     		adds	r7, r7, #12
 575              		.cfi_def_cfa_offset 12
 576 024a BD46     		mov	sp, r7
 577              		.cfi_def_cfa_register 13
 578              		@ sp needed
 579 024c 90BD     		pop	{r4, r7, pc}
 580              	.L36:
 581 024e 00BF     		.align	2
 582              	.L35:
 583 0250 6B650040 		.word	1073767787
 584 0254 00000000 		.word	errorStatus
 585 0258 48650040 		.word	1073767752
 586 025c 00000000 		.word	tt
 587 0260 00000000 		.word	help
 588 0264 00000000 		.word	data_read_mode
 589 0268 00000000 		.word	temp
 590 026c 00000000 		.word	new_angle
 591 0270 00000000 		.word	nn
 592 0274 00000000 		.word	new_pos
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccpXTCnJ.s 			page 15


 593 0278 00000000 		.word	new_pos_set
 594 027c 00000000 		.word	adcValue1
 595 0280 00000000 		.word	err
 596 0284 00000000 		.word	angletemp
 597 0288 00000000 		.word	.LC0
 598 028c 00000000 		.word	sendValue
 599 0290 00000000 		.word	pid
 600              		.cfi_endproc
 601              	.LFE65:
 602              		.size	RxIsr, .-RxIsr
 603              		.global	led_switch
 604              		.bss
 605              		.align	2
 606              		.type	led_switch, %object
 607              		.size	led_switch, 4
 608              	led_switch:
 609 0024 00000000 		.space	4
 610              		.global	__aeabi_dsub
 611              		.global	__aeabi_d2iz
 612              		.global	__aeabi_ui2d
 613              		.section	.text.main,"ax",%progbits
 614              		.align	2
 615              		.global	main
 616              		.thumb
 617              		.thumb_func
 618              		.type	main, %function
 619              	main:
 620              	.LFB66:
 173:main.c        ****     
 174:main.c        **** 
 175:main.c        **** /*******************************************************************************
 176:main.c        **** * Function Name: main()
 177:main.c        **** ********************************************************************************
 178:main.c        **** * Summary:
 179:main.c        **** *  Main function for the project.
 180:main.c        **** *
 181:main.c        **** * Theory:
 182:main.c        **** *  The function starts UART and interrupt components.
 183:main.c        **** *
 184:main.c        **** *******************************************************************************/
 185:main.c        **** int led_switch = 0;
 186:main.c        **** int main()
 187:main.c        **** {
 621              		.loc 1 187 0
 622              		.cfi_startproc
 623              		@ args = 0, pretend = 0, frame = 48
 624              		@ frame_needed = 1, uses_anonymous_args = 0
 625 0000 B0B5     		push	{r4, r5, r7, lr}
 626              		.cfi_def_cfa_offset 16
 627              		.cfi_offset 4, -16
 628              		.cfi_offset 5, -12
 629              		.cfi_offset 7, -8
 630              		.cfi_offset 14, -4
 631 0002 90B0     		sub	sp, sp, #64
 632              		.cfi_def_cfa_offset 80
 633 0004 04AF     		add	r7, sp, #16
 634              		.cfi_def_cfa 7, 64
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccpXTCnJ.s 			page 16


 188:main.c        ****     
 189:main.c        ****     
 190:main.c        ****     //PWM variables
 191:main.c        **** 
 192:main.c        ****     PWM_1_Start();
 635              		.loc 1 192 0
 636 0006 FFF7FEFF 		bl	PWM_1_Start
 193:main.c        ****     ADC_SAR_1_Start(); 
 637              		.loc 1 193 0
 638 000a FFF7FEFF 		bl	ADC_SAR_1_Start
 194:main.c        ****     Timer_1_Start();
 639              		.loc 1 194 0
 640 000e FFF7FEFF 		bl	Timer_1_Start
 195:main.c        ****     Timer_1_Stop();
 641              		.loc 1 195 0
 642 0012 FFF7FEFF 		bl	Timer_1_Stop
 196:main.c        ****     //ADC_SAR_1_StartConvert(); 
 197:main.c        ****     //ADC_SAR_2_Start(); 
 198:main.c        ****     //ADC_SAR_2_StartConvert(); 
 199:main.c        ****     
 200:main.c        ****     uint8 button = 0u;
 643              		.loc 1 200 0
 644 0016 0023     		movs	r3, #0
 645 0018 FB75     		strb	r3, [r7, #23]
 201:main.c        ****     uint8 buttonPre = 0u;
 646              		.loc 1 201 0
 647 001a 0023     		movs	r3, #0
 648 001c BB75     		strb	r3, [r7, #22]
 202:main.c        ****     
 203:main.c        ****     LED_Write(LED_OFF);     /* Clear LED */
 649              		.loc 1 203 0
 650 001e 0020     		movs	r0, #0
 651 0020 FFF7FEFF 		bl	LED_Write
 204:main.c        **** 
 205:main.c        ****     UART_Start();           /* Start communication component */
 652              		.loc 1 205 0
 653 0024 FFF7FEFF 		bl	UART_Start
 206:main.c        **** 
 207:main.c        **** #if(INTERRUPT_CODE_ENABLED == ENABLED)
 208:main.c        ****     isr_rx_StartEx(RxIsr);
 654              		.loc 1 208 0
 655 0028 9B48     		ldr	r0, .L45+8
 656 002a FFF7FEFF 		bl	isr_rx_StartEx
 209:main.c        **** #endif /* INTERRUPT_CODE_ENABLED == ENABLED */
 210:main.c        ****     
 211:main.c        ****     CyGlobalIntEnable;      /* Enable global interrupts. */
 657              		.loc 1 211 0
 658              		.syntax unified
 659              	@ 211 "main.c" 1
 660 002e 62B6     		CPSIE   i
 661              	@ 0 "" 2
 212:main.c        ****     
 213:main.c        **** 
 214:main.c        ****     angle = -89;
 662              		.loc 1 214 0
 663              		.thumb
 664              		.syntax unified
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccpXTCnJ.s 			page 17


 665 0030 9A4B     		ldr	r3, .L45+12
 666 0032 6FF05802 		mvn	r2, #88
 667 0036 1A60     		str	r2, [r3]
 215:main.c        ****     int up = 1;
 668              		.loc 1 215 0
 669 0038 0123     		movs	r3, #1
 670 003a 3B61     		str	r3, [r7, #16]
 216:main.c        ****     int cycle = 1000;
 671              		.loc 1 216 0
 672 003c 4FF47A73 		mov	r3, #1000
 673 0040 FB60     		str	r3, [r7, #12]
 217:main.c        ****     uint16 timercapture;
 218:main.c        ****     double der, prev_err, pid_integral,dt;
 219:main.c        ****     der = 0; prev_err = 0; pid_integral = 0; 
 674              		.loc 1 219 0
 675 0042 4FF00003 		mov	r3, #0
 676 0046 4FF00004 		mov	r4, #0
 677 004a C7E90034 		strd	r3, [r7]
 678 004e 4FF00003 		mov	r3, #0
 679 0052 4FF00004 		mov	r4, #0
 680 0056 C7E90A34 		strd	r3, [r7, #40]
 681 005a 4FF00003 		mov	r3, #0
 682 005e 4FF00004 		mov	r4, #0
 683 0062 C7E90834 		strd	r3, [r7, #32]
 220:main.c        ****     dt = 0.025; //assumes cydelay = 10 below for a 100Hz frequency.
 684              		.loc 1 220 0
 685 0066 8AA4     		adr	r4, .L45
 686 0068 D4E90034 		ldrd	r3, [r4]
 687 006c C7E90634 		strd	r3, [r7, #24]
 221:main.c        **** 
 222:main.c        ****     sprintf(sendValue,"%08d\t%08.0f\t%08d",adcValue1,err,angletemp);
 688              		.loc 1 222 0
 689 0070 8B4B     		ldr	r3, .L45+16
 690 0072 1B88     		ldrh	r3, [r3]
 691 0074 1946     		mov	r1, r3
 692 0076 8B4B     		ldr	r3, .L45+20
 693 0078 18CB     		ldmia	r3, {r3-r4}
 694 007a 8B4A     		ldr	r2, .L45+24
 695 007c 1268     		ldr	r2, [r2]
 696 007e 0292     		str	r2, [sp, #8]
 697 0080 CDE90034 		strd	r3, [sp]
 698 0084 0A46     		mov	r2, r1
 699 0086 8949     		ldr	r1, .L45+28
 700 0088 8948     		ldr	r0, .L45+32
 701 008a FFF7FEFF 		bl	sprintf
 223:main.c        ****     UART_PutString(sendValue);
 702              		.loc 1 223 0
 703 008e 8848     		ldr	r0, .L45+32
 704 0090 FFF7FEFF 		bl	UART_PutString
 705              	.L44:
 224:main.c        ****     
 225:main.c        ****     for(;;)
 226:main.c        ****     {
 227:main.c        ****         Timer_1_Start();
 706              		.loc 1 227 0
 707 0094 FFF7FEFF 		bl	Timer_1_Start
 228:main.c        ****         /*adcValue1 = ADC_SAR_1_GetResult16() ;
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccpXTCnJ.s 			page 18


 229:main.c        ****         adcValue2 = ADC_SAR_2_GetResult16() ;
 230:main.c        ****         sprintf(sendValue,"%04d \t %04d \n",adcValue1,adcValue2);
 231:main.c        ****         UART_PutString(sendValue);
 232:main.c        ****         */
 233:main.c        ****         ADC_SAR_1_StartConvert();
 708              		.loc 1 233 0
 709 0098 FFF7FEFF 		bl	ADC_SAR_1_StartConvert
 234:main.c        ****         ADC_SAR_1_IsEndConversion(ADC_SAR_1_WAIT_FOR_RESULT);
 710              		.loc 1 234 0
 711 009c 0020     		movs	r0, #0
 712 009e FFF7FEFF 		bl	ADC_SAR_1_IsEndConversion
 235:main.c        ****         
 236:main.c        ****         adcValue1 = ADC_SAR_1_GetResult16();
 713              		.loc 1 236 0
 714 00a2 FFF7FEFF 		bl	ADC_SAR_1_GetResult16
 715 00a6 0346     		mov	r3, r0
 716 00a8 9AB2     		uxth	r2, r3
 717 00aa 7D4B     		ldr	r3, .L45+16
 718 00ac 1A80     		strh	r2, [r3]	@ movhi
 237:main.c        ****         
 238:main.c        ****         if(new_pos_set){
 719              		.loc 1 238 0
 720 00ae 814B     		ldr	r3, .L45+36
 721 00b0 1B68     		ldr	r3, [r3]
 722 00b2 002B     		cmp	r3, #0
 723 00b4 09D0     		beq	.L38
 239:main.c        ****             pos = new_pos;
 724              		.loc 1 239 0
 725 00b6 804B     		ldr	r3, .L45+40
 726 00b8 1B68     		ldr	r3, [r3]
 727 00ba 804A     		ldr	r2, .L45+44
 728 00bc 1360     		str	r3, [r2]
 240:main.c        ****             new_pos_set = 0;
 729              		.loc 1 240 0
 730 00be 7D4B     		ldr	r3, .L45+36
 731 00c0 0022     		movs	r2, #0
 732 00c2 1A60     		str	r2, [r3]
 241:main.c        ****             new_angle = 0;
 733              		.loc 1 241 0
 734 00c4 7E4B     		ldr	r3, .L45+48
 735 00c6 0022     		movs	r2, #0
 736 00c8 1A60     		str	r2, [r3]
 737              	.L38:
 242:main.c        ****             
 243:main.c        ****             /*
 244:main.c        ****             //if(pos<0){pos = pos - 13;}
 245:main.c        ****             //if(pos>0){pos = pos + 12;}
 246:main.c        ****             if(pos>45){pos=45;}
 247:main.c        ****             if(pos<-45){pos=-45;}
 248:main.c        ****             if(pos<46 & pos>-46){
 249:main.c        ****                 PWM_1_WriteCompare(dutycyclelength(pos));
 250:main.c        ****             }
 251:main.c        ****             */            
 252:main.c        ****         }
 253:main.c        ****         
 254:main.c        ****         /* PID */
 255:main.c        ****         err = -pos + adcValue1;
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccpXTCnJ.s 			page 19


 738              		.loc 1 255 0
 739 00ca 754B     		ldr	r3, .L45+16
 740 00cc 1B88     		ldrh	r3, [r3]
 741 00ce 1A46     		mov	r2, r3
 742 00d0 7A4B     		ldr	r3, .L45+44
 743 00d2 1B68     		ldr	r3, [r3]
 744 00d4 D31A     		subs	r3, r2, r3
 745 00d6 1846     		mov	r0, r3
 746 00d8 FFF7FEFF 		bl	__aeabi_i2d
 747 00dc 0346     		mov	r3, r0
 748 00de 0C46     		mov	r4, r1
 749 00e0 704A     		ldr	r2, .L45+20
 750 00e2 C2E90034 		strd	r3, [r2]
 256:main.c        ****         der = err - prev_err;
 751              		.loc 1 256 0
 752 00e6 6F4B     		ldr	r3, .L45+20
 753 00e8 D3E90001 		ldrd	r0, [r3]
 754 00ec D7E90A23 		ldrd	r2, [r7, #40]
 755 00f0 FFF7FEFF 		bl	__aeabi_dsub
 756 00f4 0346     		mov	r3, r0
 757 00f6 0C46     		mov	r4, r1
 758 00f8 C7E90034 		strd	r3, [r7]
 257:main.c        ****         pid_integral = err + pid_integral;
 759              		.loc 1 257 0
 760 00fc 694B     		ldr	r3, .L45+20
 761 00fe 18CB     		ldmia	r3, {r3-r4}
 762 0100 1A46     		mov	r2, r3
 763 0102 2346     		mov	r3, r4
 764 0104 D7E90801 		ldrd	r0, [r7, #32]
 765 0108 FFF7FEFF 		bl	__aeabi_dadd
 766 010c 0346     		mov	r3, r0
 767 010e 0C46     		mov	r4, r1
 768 0110 C7E90834 		strd	r3, [r7, #32]
 258:main.c        ****         angletemp = pid[0] * err + ( pid[1] * pid_integral * dt) + ( pid[2] * der / dt );
 769              		.loc 1 258 0
 770 0114 6B4B     		ldr	r3, .L45+52
 771 0116 D3E90001 		ldrd	r0, [r3]
 772 011a 624B     		ldr	r3, .L45+20
 773 011c 18CB     		ldmia	r3, {r3-r4}
 774 011e 1A46     		mov	r2, r3
 775 0120 2346     		mov	r3, r4
 776 0122 FFF7FEFF 		bl	__aeabi_dmul
 777 0126 0346     		mov	r3, r0
 778 0128 0C46     		mov	r4, r1
 779 012a 2546     		mov	r5, r4
 780 012c 1C46     		mov	r4, r3
 781 012e 654B     		ldr	r3, .L45+52
 782 0130 D3E90201 		ldrd	r0, [r3, #8]
 783 0134 D7E90823 		ldrd	r2, [r7, #32]
 784 0138 FFF7FEFF 		bl	__aeabi_dmul
 785 013c 0246     		mov	r2, r0
 786 013e 0B46     		mov	r3, r1
 787 0140 1046     		mov	r0, r2
 788 0142 1946     		mov	r1, r3
 789 0144 D7E90623 		ldrd	r2, [r7, #24]
 790 0148 FFF7FEFF 		bl	__aeabi_dmul
 791 014c 0246     		mov	r2, r0
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccpXTCnJ.s 			page 20


 792 014e 0B46     		mov	r3, r1
 793 0150 2046     		mov	r0, r4
 794 0152 2946     		mov	r1, r5
 795 0154 FFF7FEFF 		bl	__aeabi_dadd
 796 0158 0346     		mov	r3, r0
 797 015a 0C46     		mov	r4, r1
 798 015c 2546     		mov	r5, r4
 799 015e 1C46     		mov	r4, r3
 800 0160 584B     		ldr	r3, .L45+52
 801 0162 D3E90401 		ldrd	r0, [r3, #16]
 802 0166 D7E90023 		ldrd	r2, [r7]
 803 016a FFF7FEFF 		bl	__aeabi_dmul
 804 016e 0246     		mov	r2, r0
 805 0170 0B46     		mov	r3, r1
 806 0172 1046     		mov	r0, r2
 807 0174 1946     		mov	r1, r3
 808 0176 D7E90623 		ldrd	r2, [r7, #24]
 809 017a FFF7FEFF 		bl	__aeabi_ddiv
 810 017e 0246     		mov	r2, r0
 811 0180 0B46     		mov	r3, r1
 812 0182 2046     		mov	r0, r4
 813 0184 2946     		mov	r1, r5
 814 0186 FFF7FEFF 		bl	__aeabi_dadd
 815 018a 0346     		mov	r3, r0
 816 018c 0C46     		mov	r4, r1
 817 018e 1846     		mov	r0, r3
 818 0190 2146     		mov	r1, r4
 819 0192 FFF7FEFF 		bl	__aeabi_d2iz
 820 0196 0246     		mov	r2, r0
 821 0198 434B     		ldr	r3, .L45+24
 822 019a 1A60     		str	r2, [r3]
 259:main.c        ****         angle=angletemp;
 823              		.loc 1 259 0
 824 019c 424B     		ldr	r3, .L45+24
 825 019e 1B68     		ldr	r3, [r3]
 826 01a0 3E4A     		ldr	r2, .L45+12
 827 01a2 1360     		str	r3, [r2]
 260:main.c        ****         //Limit angles of proportional valve
 261:main.c        ****         if(angle<0){angle = angle - 14;}
 828              		.loc 1 261 0
 829 01a4 3D4B     		ldr	r3, .L45+12
 830 01a6 1B68     		ldr	r3, [r3]
 831 01a8 002B     		cmp	r3, #0
 832 01aa 04DA     		bge	.L39
 833              		.loc 1 261 0 is_stmt 0 discriminator 1
 834 01ac 3B4B     		ldr	r3, .L45+12
 835 01ae 1B68     		ldr	r3, [r3]
 836 01b0 0E3B     		subs	r3, r3, #14
 837 01b2 3A4A     		ldr	r2, .L45+12
 838 01b4 1360     		str	r3, [r2]
 839              	.L39:
 262:main.c        ****         if(angle>0){angle = angle + 13;}
 840              		.loc 1 262 0 is_stmt 1
 841 01b6 394B     		ldr	r3, .L45+12
 842 01b8 1B68     		ldr	r3, [r3]
 843 01ba 002B     		cmp	r3, #0
 844 01bc 04DD     		ble	.L40
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccpXTCnJ.s 			page 21


 845              		.loc 1 262 0 is_stmt 0 discriminator 1
 846 01be 374B     		ldr	r3, .L45+12
 847 01c0 1B68     		ldr	r3, [r3]
 848 01c2 0D33     		adds	r3, r3, #13
 849 01c4 354A     		ldr	r2, .L45+12
 850 01c6 1360     		str	r3, [r2]
 851              	.L40:
 263:main.c        ****         if(angle>45){angle=45;}
 852              		.loc 1 263 0 is_stmt 1
 853 01c8 344B     		ldr	r3, .L45+12
 854 01ca 1B68     		ldr	r3, [r3]
 855 01cc 2D2B     		cmp	r3, #45
 856 01ce 02DD     		ble	.L41
 857              		.loc 1 263 0 is_stmt 0 discriminator 1
 858 01d0 324B     		ldr	r3, .L45+12
 859 01d2 2D22     		movs	r2, #45
 860 01d4 1A60     		str	r2, [r3]
 861              	.L41:
 264:main.c        ****         if(angle<-45){angle=-45;}
 862              		.loc 1 264 0 is_stmt 1
 863 01d6 314B     		ldr	r3, .L45+12
 864 01d8 1B68     		ldr	r3, [r3]
 865 01da 13F12D0F 		cmn	r3, #45
 866 01de 03DA     		bge	.L42
 867              		.loc 1 264 0 is_stmt 0 discriminator 1
 868 01e0 2E4B     		ldr	r3, .L45+12
 869 01e2 6FF02C02 		mvn	r2, #44
 870 01e6 1A60     		str	r2, [r3]
 871              	.L42:
 265:main.c        ****         if(angle<46 & angle>-46){
 872              		.loc 1 265 0 is_stmt 1
 873 01e8 2C4B     		ldr	r3, .L45+12
 874 01ea 1B68     		ldr	r3, [r3]
 875 01ec 2D2B     		cmp	r3, #45
 876 01ee D4BF     		ite	le
 877 01f0 0123     		movle	r3, #1
 878 01f2 0023     		movgt	r3, #0
 879 01f4 DAB2     		uxtb	r2, r3
 880 01f6 294B     		ldr	r3, .L45+12
 881 01f8 1B68     		ldr	r3, [r3]
 882 01fa 13F12D0F 		cmn	r3, #45
 883 01fe ACBF     		ite	ge
 884 0200 0123     		movge	r3, #1
 885 0202 0023     		movlt	r3, #0
 886 0204 DBB2     		uxtb	r3, r3
 887 0206 1340     		ands	r3, r3, r2
 888 0208 DBB2     		uxtb	r3, r3
 889 020a 002B     		cmp	r3, #0
 890 020c 08D0     		beq	.L43
 266:main.c        ****             PWM_1_WriteCompare(dutycyclelength(angle));
 891              		.loc 1 266 0
 892 020e 234B     		ldr	r3, .L45+12
 893 0210 1B68     		ldr	r3, [r3]
 894 0212 1846     		mov	r0, r3
 895 0214 FFF7FEFF 		bl	dutycyclelength
 896 0218 0346     		mov	r3, r0
 897 021a 1846     		mov	r0, r3
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccpXTCnJ.s 			page 22


 898 021c FFF7FEFF 		bl	PWM_1_WriteCompare
 899              	.L43:
 267:main.c        ****         }
 268:main.c        ****         prev_err = err;
 900              		.loc 1 268 0
 901 0220 204B     		ldr	r3, .L45+20
 902 0222 18CB     		ldmia	r3, {r3-r4}
 903 0224 C7E90A34 		strd	r3, [r7, #40]
 269:main.c        ****         
 270:main.c        ****         /* END PID CODE */
 271:main.c        ****         
 272:main.c        ****         CyDelay(10);
 904              		.loc 1 272 0
 905 0228 0A20     		movs	r0, #10
 906 022a FFF7FEFF 		bl	CyDelay
 273:main.c        ****         dt=(65536-(double)Timer_1_ReadCounter())*66/65536/1000;
 907              		.loc 1 273 0
 908 022e FFF7FEFF 		bl	Timer_1_ReadCounter
 909 0232 0346     		mov	r3, r0
 910 0234 1846     		mov	r0, r3
 911 0236 FFF7FEFF 		bl	__aeabi_ui2d
 912 023a 0346     		mov	r3, r0
 913 023c 0C46     		mov	r4, r1
 914 023e 1A46     		mov	r2, r3
 915 0240 2346     		mov	r3, r4
 916 0242 4FF00000 		mov	r0, #0
 917 0246 2049     		ldr	r1, .L45+56
 918 0248 FFF7FEFF 		bl	__aeabi_dsub
 919 024c 0346     		mov	r3, r0
 920 024e 0C46     		mov	r4, r1
 921 0250 1846     		mov	r0, r3
 922 0252 2146     		mov	r1, r4
 923 0254 4FF00002 		mov	r2, #0
 924 0258 1C4B     		ldr	r3, .L45+60
 925 025a FFF7FEFF 		bl	__aeabi_dmul
 926 025e 0346     		mov	r3, r0
 927 0260 0C46     		mov	r4, r1
 928 0262 1846     		mov	r0, r3
 929 0264 2146     		mov	r1, r4
 930 0266 4FF00002 		mov	r2, #0
 931 026a 174B     		ldr	r3, .L45+56
 932 026c FFF7FEFF 		bl	__aeabi_ddiv
 933 0270 0346     		mov	r3, r0
 934 0272 0C46     		mov	r4, r1
 935 0274 1846     		mov	r0, r3
 936 0276 2146     		mov	r1, r4
 937 0278 4FF00002 		mov	r2, #0
 938 027c 144B     		ldr	r3, .L45+64
 939 027e FFF7FEFF 		bl	__aeabi_ddiv
 940 0282 0346     		mov	r3, r0
 941 0284 0C46     		mov	r4, r1
 942 0286 C7E90634 		strd	r3, [r7, #24]
 274:main.c        ****         Timer_1_Stop();
 943              		.loc 1 274 0
 944 028a FFF7FEFF 		bl	Timer_1_Stop
 275:main.c        ****         
 276:main.c        ****         
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccpXTCnJ.s 			page 23


 277:main.c        ****         
 278:main.c        ****        
 279:main.c        ****     }
 945              		.loc 1 279 0
 946 028e 01E7     		b	.L44
 947              	.L46:
 948              		.align	3
 949              	.L45:
 950 0290 9A999999 		.word	-1717986918
 951 0294 9999993F 		.word	1067030937
 952 0298 00000000 		.word	RxIsr
 953 029c 00000000 		.word	angle
 954 02a0 00000000 		.word	adcValue1
 955 02a4 00000000 		.word	err
 956 02a8 00000000 		.word	angletemp
 957 02ac 00000000 		.word	.LC0
 958 02b0 00000000 		.word	sendValue
 959 02b4 00000000 		.word	new_pos_set
 960 02b8 00000000 		.word	new_pos
 961 02bc 00000000 		.word	pos
 962 02c0 00000000 		.word	new_angle
 963 02c4 00000000 		.word	pid
 964 02c8 0000F040 		.word	1089470464
 965 02cc 00805040 		.word	1079017472
 966 02d0 00408F40 		.word	1083129856
 967              		.cfi_endproc
 968              	.LFE66:
 969              		.size	main, .-main
 970              		.text
 971              	.Letext0:
 972              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 973              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 974              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 975              		.file 5 "Generated_Source\\PSoC5/core_cm3.h"
 976              		.section	.debug_info,"",%progbits
 977              	.Ldebug_info0:
 978 0000 63030000 		.4byte	0x363
 979 0004 0400     		.2byte	0x4
 980 0006 00000000 		.4byte	.Ldebug_abbrev0
 981 000a 04       		.byte	0x4
 982 000b 01       		.uleb128 0x1
 983 000c 18000000 		.4byte	.LASF44
 984 0010 0C       		.byte	0xc
 985 0011 02020000 		.4byte	.LASF45
 986 0015 18020000 		.4byte	.LASF46
 987 0019 00000000 		.4byte	.Ldebug_ranges0+0
 988 001d 00000000 		.4byte	0
 989 0021 00000000 		.4byte	.Ldebug_line0
 990 0025 02       		.uleb128 0x2
 991 0026 01       		.byte	0x1
 992 0027 06       		.byte	0x6
 993 0028 91020000 		.4byte	.LASF0
 994 002c 02       		.uleb128 0x2
 995 002d 01       		.byte	0x1
 996 002e 08       		.byte	0x8
 997 002f 0C010000 		.4byte	.LASF1
 998 0033 02       		.uleb128 0x2
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccpXTCnJ.s 			page 24


 999 0034 02       		.byte	0x2
 1000 0035 05       		.byte	0x5
 1001 0036 0E020000 		.4byte	.LASF2
 1002 003a 02       		.uleb128 0x2
 1003 003b 02       		.byte	0x2
 1004 003c 07       		.byte	0x7
 1005 003d 52010000 		.4byte	.LASF3
 1006 0041 03       		.uleb128 0x3
 1007 0042 A6000000 		.4byte	.LASF9
 1008 0046 02       		.byte	0x2
 1009 0047 3F       		.byte	0x3f
 1010 0048 4C000000 		.4byte	0x4c
 1011 004c 02       		.uleb128 0x2
 1012 004d 04       		.byte	0x4
 1013 004e 05       		.byte	0x5
 1014 004f 75020000 		.4byte	.LASF4
 1015 0053 02       		.uleb128 0x2
 1016 0054 04       		.byte	0x4
 1017 0055 07       		.byte	0x7
 1018 0056 3B010000 		.4byte	.LASF5
 1019 005a 02       		.uleb128 0x2
 1020 005b 08       		.byte	0x8
 1021 005c 05       		.byte	0x5
 1022 005d 00000000 		.4byte	.LASF6
 1023 0061 02       		.uleb128 0x2
 1024 0062 08       		.byte	0x8
 1025 0063 07       		.byte	0x7
 1026 0064 BF010000 		.4byte	.LASF7
 1027 0068 04       		.uleb128 0x4
 1028 0069 04       		.byte	0x4
 1029 006a 05       		.byte	0x5
 1030 006b 696E7400 		.ascii	"int\000"
 1031 006f 02       		.uleb128 0x2
 1032 0070 04       		.byte	0x4
 1033 0071 07       		.byte	0x7
 1034 0072 B2010000 		.4byte	.LASF8
 1035 0076 03       		.uleb128 0x3
 1036 0077 EC010000 		.4byte	.LASF10
 1037 007b 03       		.byte	0x3
 1038 007c 2C       		.byte	0x2c
 1039 007d 41000000 		.4byte	0x41
 1040 0081 05       		.uleb128 0x5
 1041 0082 FD000000 		.4byte	.LASF11
 1042 0086 04       		.byte	0x4
 1043 0087 9201     		.2byte	0x192
 1044 0089 2C000000 		.4byte	0x2c
 1045 008d 05       		.uleb128 0x5
 1046 008e 85010000 		.4byte	.LASF12
 1047 0092 04       		.byte	0x4
 1048 0093 9301     		.2byte	0x193
 1049 0095 3A000000 		.4byte	0x3a
 1050 0099 02       		.uleb128 0x2
 1051 009a 04       		.byte	0x4
 1052 009b 04       		.byte	0x4
 1053 009c F7000000 		.4byte	.LASF13
 1054 00a0 02       		.uleb128 0x2
 1055 00a1 08       		.byte	0x8
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccpXTCnJ.s 			page 25


 1056 00a2 04       		.byte	0x4
 1057 00a3 C9000000 		.4byte	.LASF14
 1058 00a7 02       		.uleb128 0x2
 1059 00a8 01       		.byte	0x1
 1060 00a9 08       		.byte	0x8
 1061 00aa 09020000 		.4byte	.LASF15
 1062 00ae 05       		.uleb128 0x5
 1063 00af 2A010000 		.4byte	.LASF16
 1064 00b3 04       		.byte	0x4
 1065 00b4 3C02     		.2byte	0x23c
 1066 00b6 BA000000 		.4byte	0xba
 1067 00ba 06       		.uleb128 0x6
 1068 00bb 81000000 		.4byte	0x81
 1069 00bf 02       		.uleb128 0x2
 1070 00c0 08       		.byte	0x8
 1071 00c1 04       		.byte	0x4
 1072 00c2 85020000 		.4byte	.LASF17
 1073 00c6 02       		.uleb128 0x2
 1074 00c7 04       		.byte	0x4
 1075 00c8 07       		.byte	0x7
 1076 00c9 F4010000 		.4byte	.LASF18
 1077 00cd 07       		.uleb128 0x7
 1078 00ce 1A010000 		.4byte	.LASF47
 1079 00d2 01       		.byte	0x1
 1080 00d3 13       		.byte	0x13
 1081 00d4 8D000000 		.4byte	0x8d
 1082 00d8 00000000 		.4byte	.LFB64
 1083 00dc 74000000 		.4byte	.LFE64-.LFB64
 1084 00e0 01       		.uleb128 0x1
 1085 00e1 9C       		.byte	0x9c
 1086 00e2 03010000 		.4byte	0x103
 1087 00e6 08       		.uleb128 0x8
 1088 00e7 65010000 		.4byte	.LASF34
 1089 00eb 01       		.byte	0x1
 1090 00ec 13       		.byte	0x13
 1091 00ed 68000000 		.4byte	0x68
 1092 00f1 02       		.uleb128 0x2
 1093 00f2 91       		.byte	0x91
 1094 00f3 64       		.sleb128 -28
 1095 00f4 09       		.uleb128 0x9
 1096 00f5 2F010000 		.4byte	.LASF19
 1097 00f9 01       		.byte	0x1
 1098 00fa 15       		.byte	0x15
 1099 00fb 8D000000 		.4byte	0x8d
 1100 00ff 02       		.uleb128 0x2
 1101 0100 91       		.byte	0x91
 1102 0101 6E       		.sleb128 -18
 1103 0102 00       		.byte	0
 1104 0103 0A       		.uleb128 0xa
 1105 0104 F1000000 		.4byte	.LASF22
 1106 0108 01       		.byte	0x1
 1107 0109 38       		.byte	0x38
 1108 010a 00000000 		.4byte	.LFB65
 1109 010e 94020000 		.4byte	.LFE65-.LFB65
 1110 0112 01       		.uleb128 0x1
 1111 0113 9C       		.byte	0x9c
 1112 0114 4C010000 		.4byte	0x14c
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccpXTCnJ.s 			page 26


 1113 0118 09       		.uleb128 0x9
 1114 0119 7C010000 		.4byte	.LASF20
 1115 011d 01       		.byte	0x1
 1116 011e 3A       		.byte	0x3a
 1117 011f 81000000 		.4byte	0x81
 1118 0123 02       		.uleb128 0x2
 1119 0124 91       		.byte	0x91
 1120 0125 6B       		.sleb128 -21
 1121 0126 09       		.uleb128 0x9
 1122 0127 6B010000 		.4byte	.LASF21
 1123 012b 01       		.byte	0x1
 1124 012c 3B       		.byte	0x3b
 1125 012d 81000000 		.4byte	0x81
 1126 0131 02       		.uleb128 0x2
 1127 0132 91       		.byte	0x91
 1128 0133 6A       		.sleb128 -22
 1129 0134 0B       		.uleb128 0xb
 1130 0135 94000000 		.4byte	.LBB2
 1131 0139 1C000000 		.4byte	.LBE2-.LBB2
 1132 013d 0C       		.uleb128 0xc
 1133 013e 707000   		.ascii	"pp\000"
 1134 0141 01       		.byte	0x1
 1135 0142 57       		.byte	0x57
 1136 0143 68000000 		.4byte	0x68
 1137 0147 02       		.uleb128 0x2
 1138 0148 91       		.byte	0x91
 1139 0149 6C       		.sleb128 -20
 1140 014a 00       		.byte	0
 1141 014b 00       		.byte	0
 1142 014c 0D       		.uleb128 0xd
 1143 014d FD010000 		.4byte	.LASF23
 1144 0151 01       		.byte	0x1
 1145 0152 BA       		.byte	0xba
 1146 0153 68000000 		.4byte	0x68
 1147 0157 00000000 		.4byte	.LFB66
 1148 015b D4020000 		.4byte	.LFE66-.LFB66
 1149 015f 01       		.uleb128 0x1
 1150 0160 9C       		.byte	0x9c
 1151 0161 DF010000 		.4byte	0x1df
 1152 0165 09       		.uleb128 0x9
 1153 0166 7E020000 		.4byte	.LASF24
 1154 016a 01       		.byte	0x1
 1155 016b C8       		.byte	0xc8
 1156 016c 81000000 		.4byte	0x81
 1157 0170 02       		.uleb128 0x2
 1158 0171 91       		.byte	0x91
 1159 0172 57       		.sleb128 -41
 1160 0173 09       		.uleb128 0x9
 1161 0174 D6010000 		.4byte	.LASF25
 1162 0178 01       		.byte	0x1
 1163 0179 C9       		.byte	0xc9
 1164 017a 81000000 		.4byte	0x81
 1165 017e 02       		.uleb128 0x2
 1166 017f 91       		.byte	0x91
 1167 0180 56       		.sleb128 -42
 1168 0181 0C       		.uleb128 0xc
 1169 0182 757000   		.ascii	"up\000"
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccpXTCnJ.s 			page 27


 1170 0185 01       		.byte	0x1
 1171 0186 D7       		.byte	0xd7
 1172 0187 68000000 		.4byte	0x68
 1173 018b 02       		.uleb128 0x2
 1174 018c 91       		.byte	0x91
 1175 018d 50       		.sleb128 -48
 1176 018e 09       		.uleb128 0x9
 1177 018f 64020000 		.4byte	.LASF26
 1178 0193 01       		.byte	0x1
 1179 0194 D8       		.byte	0xd8
 1180 0195 68000000 		.4byte	0x68
 1181 0199 02       		.uleb128 0x2
 1182 019a 91       		.byte	0x91
 1183 019b 4C       		.sleb128 -52
 1184 019c 0E       		.uleb128 0xe
 1185 019d A5010000 		.4byte	.LASF48
 1186 01a1 01       		.byte	0x1
 1187 01a2 D9       		.byte	0xd9
 1188 01a3 8D000000 		.4byte	0x8d
 1189 01a7 0C       		.uleb128 0xc
 1190 01a8 64657200 		.ascii	"der\000"
 1191 01ac 01       		.byte	0x1
 1192 01ad DA       		.byte	0xda
 1193 01ae A0000000 		.4byte	0xa0
 1194 01b2 02       		.uleb128 0x2
 1195 01b3 91       		.byte	0x91
 1196 01b4 40       		.sleb128 -64
 1197 01b5 09       		.uleb128 0x9
 1198 01b6 03010000 		.4byte	.LASF27
 1199 01ba 01       		.byte	0x1
 1200 01bb DA       		.byte	0xda
 1201 01bc A0000000 		.4byte	0xa0
 1202 01c0 02       		.uleb128 0x2
 1203 01c1 91       		.byte	0x91
 1204 01c2 68       		.sleb128 -24
 1205 01c3 09       		.uleb128 0x9
 1206 01c4 9D020000 		.4byte	.LASF28
 1207 01c8 01       		.byte	0x1
 1208 01c9 DA       		.byte	0xda
 1209 01ca A0000000 		.4byte	0xa0
 1210 01ce 02       		.uleb128 0x2
 1211 01cf 91       		.byte	0x91
 1212 01d0 60       		.sleb128 -32
 1213 01d1 0C       		.uleb128 0xc
 1214 01d2 647400   		.ascii	"dt\000"
 1215 01d5 01       		.byte	0x1
 1216 01d6 DA       		.byte	0xda
 1217 01d7 A0000000 		.4byte	0xa0
 1218 01db 02       		.uleb128 0x2
 1219 01dc 91       		.byte	0x91
 1220 01dd 58       		.sleb128 -40
 1221 01de 00       		.byte	0
 1222 01df 0F       		.uleb128 0xf
 1223 01e0 98010000 		.4byte	.LASF29
 1224 01e4 05       		.byte	0x5
 1225 01e5 1207     		.2byte	0x712
 1226 01e7 EB010000 		.4byte	0x1eb
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccpXTCnJ.s 			page 28


 1227 01eb 06       		.uleb128 0x6
 1228 01ec 76000000 		.4byte	0x76
 1229 01f0 10       		.uleb128 0x10
 1230 01f1 8C010000 		.4byte	.LASF30
 1231 01f5 01       		.byte	0x1
 1232 01f6 11       		.byte	0x11
 1233 01f7 81000000 		.4byte	0x81
 1234 01fb 05       		.uleb128 0x5
 1235 01fc 03       		.byte	0x3
 1236 01fd 00000000 		.4byte	errorStatus
 1237 0201 10       		.uleb128 0x10
 1238 0202 D0000000 		.4byte	.LASF31
 1239 0206 01       		.byte	0x1
 1240 0207 27       		.byte	0x27
 1241 0208 68000000 		.4byte	0x68
 1242 020c 05       		.uleb128 0x5
 1243 020d 03       		.byte	0x3
 1244 020e 00000000 		.4byte	data_read_mode
 1245 0212 10       		.uleb128 0x10
 1246 0213 DF000000 		.4byte	.LASF32
 1247 0217 01       		.byte	0x1
 1248 0218 28       		.byte	0x28
 1249 0219 23020000 		.4byte	0x223
 1250 021d 05       		.uleb128 0x5
 1251 021e 03       		.byte	0x3
 1252 021f 00000000 		.4byte	new_angle
 1253 0223 06       		.uleb128 0x6
 1254 0224 68000000 		.4byte	0x68
 1255 0228 10       		.uleb128 0x10
 1256 0229 E0010000 		.4byte	.LASF33
 1257 022d 01       		.byte	0x1
 1258 022e 29       		.byte	0x29
 1259 022f 23020000 		.4byte	0x223
 1260 0233 05       		.uleb128 0x5
 1261 0234 03       		.byte	0x3
 1262 0235 00000000 		.4byte	new_pos_set
 1263 0239 10       		.uleb128 0x10
 1264 023a 65010000 		.4byte	.LASF34
 1265 023e 01       		.byte	0x1
 1266 023f 2A       		.byte	0x2a
 1267 0240 68000000 		.4byte	0x68
 1268 0244 05       		.uleb128 0x5
 1269 0245 03       		.byte	0x3
 1270 0246 00000000 		.4byte	angle
 1271 024a 10       		.uleb128 0x10
 1272 024b 72010000 		.4byte	.LASF35
 1273 024f 01       		.byte	0x1
 1274 0250 2B       		.byte	0x2b
 1275 0251 68000000 		.4byte	0x68
 1276 0255 05       		.uleb128 0x5
 1277 0256 03       		.byte	0x3
 1278 0257 00000000 		.4byte	angletemp
 1279 025b 10       		.uleb128 0x10
 1280 025c 6A020000 		.4byte	.LASF36
 1281 0260 01       		.byte	0x1
 1282 0261 2C       		.byte	0x2c
 1283 0262 68000000 		.4byte	0x68
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccpXTCnJ.s 			page 29


 1284 0266 05       		.uleb128 0x5
 1285 0267 03       		.byte	0x3
 1286 0268 00000000 		.4byte	isNegative
 1287 026c 11       		.uleb128 0x11
 1288 026d A7000000 		.4byte	0xa7
 1289 0271 7C020000 		.4byte	0x27c
 1290 0275 12       		.uleb128 0x12
 1291 0276 C6000000 		.4byte	0xc6
 1292 027a 63       		.byte	0x63
 1293 027b 00       		.byte	0
 1294 027c 10       		.uleb128 0x10
 1295 027d 0E000000 		.4byte	.LASF37
 1296 0281 01       		.byte	0x1
 1297 0282 2D       		.byte	0x2d
 1298 0283 6C020000 		.4byte	0x26c
 1299 0287 05       		.uleb128 0x5
 1300 0288 03       		.byte	0x3
 1301 0289 00000000 		.4byte	sendValue
 1302 028d 10       		.uleb128 0x10
 1303 028e B0000000 		.4byte	.LASF38
 1304 0292 01       		.byte	0x1
 1305 0293 2E       		.byte	0x2e
 1306 0294 8D000000 		.4byte	0x8d
 1307 0298 05       		.uleb128 0x5
 1308 0299 03       		.byte	0x3
 1309 029a 00000000 		.4byte	adcValue1
 1310 029e 10       		.uleb128 0x10
 1311 029f BA000000 		.4byte	.LASF39
 1312 02a3 01       		.byte	0x1
 1313 02a4 2F       		.byte	0x2f
 1314 02a5 8D000000 		.4byte	0x8d
 1315 02a9 05       		.uleb128 0x5
 1316 02aa 03       		.byte	0x3
 1317 02ab 00000000 		.4byte	adcValue2
 1318 02af 11       		.uleb128 0x11
 1319 02b0 A7000000 		.4byte	0xa7
 1320 02b4 BF020000 		.4byte	0x2bf
 1321 02b8 12       		.uleb128 0x12
 1322 02b9 C6000000 		.4byte	0xc6
 1323 02bd 08       		.byte	0x8
 1324 02be 00       		.byte	0
 1325 02bf 10       		.uleb128 0x10
 1326 02c0 4D010000 		.4byte	.LASF40
 1327 02c4 01       		.byte	0x1
 1328 02c5 30       		.byte	0x30
 1329 02c6 AF020000 		.4byte	0x2af
 1330 02ca 05       		.uleb128 0x5
 1331 02cb 03       		.byte	0x3
 1332 02cc 00000000 		.4byte	temp
 1333 02d0 13       		.uleb128 0x13
 1334 02d1 6E6E00   		.ascii	"nn\000"
 1335 02d4 01       		.byte	0x1
 1336 02d5 31       		.byte	0x31
 1337 02d6 68000000 		.4byte	0x68
 1338 02da 05       		.uleb128 0x5
 1339 02db 03       		.byte	0x3
 1340 02dc 00000000 		.4byte	nn
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccpXTCnJ.s 			page 30


 1341 02e0 11       		.uleb128 0x11
 1342 02e1 A0000000 		.4byte	0xa0
 1343 02e5 F0020000 		.4byte	0x2f0
 1344 02e9 12       		.uleb128 0x12
 1345 02ea C6000000 		.4byte	0xc6
 1346 02ee 02       		.byte	0x2
 1347 02ef 00       		.byte	0
 1348 02f0 13       		.uleb128 0x13
 1349 02f1 70696400 		.ascii	"pid\000"
 1350 02f5 01       		.byte	0x1
 1351 02f6 32       		.byte	0x32
 1352 02f7 E0020000 		.4byte	0x2e0
 1353 02fb 05       		.uleb128 0x5
 1354 02fc 03       		.byte	0x3
 1355 02fd 00000000 		.4byte	pid
 1356 0301 10       		.uleb128 0x10
 1357 0302 C4000000 		.4byte	.LASF41
 1358 0306 01       		.byte	0x1
 1359 0307 33       		.byte	0x33
 1360 0308 6C020000 		.4byte	0x26c
 1361 030c 05       		.uleb128 0x5
 1362 030d 03       		.byte	0x3
 1363 030e 00000000 		.4byte	help
 1364 0312 13       		.uleb128 0x13
 1365 0313 747400   		.ascii	"tt\000"
 1366 0316 01       		.byte	0x1
 1367 0317 34       		.byte	0x34
 1368 0318 68000000 		.4byte	0x68
 1369 031c 05       		.uleb128 0x5
 1370 031d 03       		.byte	0x3
 1371 031e 00000000 		.4byte	tt
 1372 0322 13       		.uleb128 0x13
 1373 0323 706F7300 		.ascii	"pos\000"
 1374 0327 01       		.byte	0x1
 1375 0328 35       		.byte	0x35
 1376 0329 68000000 		.4byte	0x68
 1377 032d 05       		.uleb128 0x5
 1378 032e 03       		.byte	0x3
 1379 032f 00000000 		.4byte	pos
 1380 0333 10       		.uleb128 0x10
 1381 0334 E9000000 		.4byte	.LASF42
 1382 0338 01       		.byte	0x1
 1383 0339 36       		.byte	0x36
 1384 033a 68000000 		.4byte	0x68
 1385 033e 05       		.uleb128 0x5
 1386 033f 03       		.byte	0x3
 1387 0340 00000000 		.4byte	new_pos
 1388 0344 13       		.uleb128 0x13
 1389 0345 65727200 		.ascii	"err\000"
 1390 0349 01       		.byte	0x1
 1391 034a 37       		.byte	0x37
 1392 034b A0000000 		.4byte	0xa0
 1393 034f 05       		.uleb128 0x5
 1394 0350 03       		.byte	0x3
 1395 0351 00000000 		.4byte	err
 1396 0355 10       		.uleb128 0x10
 1397 0356 AA020000 		.4byte	.LASF43
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccpXTCnJ.s 			page 31


 1398 035a 01       		.byte	0x1
 1399 035b B9       		.byte	0xb9
 1400 035c 68000000 		.4byte	0x68
 1401 0360 05       		.uleb128 0x5
 1402 0361 03       		.byte	0x3
 1403 0362 00000000 		.4byte	led_switch
 1404 0366 00       		.byte	0
 1405              		.section	.debug_abbrev,"",%progbits
 1406              	.Ldebug_abbrev0:
 1407 0000 01       		.uleb128 0x1
 1408 0001 11       		.uleb128 0x11
 1409 0002 01       		.byte	0x1
 1410 0003 25       		.uleb128 0x25
 1411 0004 0E       		.uleb128 0xe
 1412 0005 13       		.uleb128 0x13
 1413 0006 0B       		.uleb128 0xb
 1414 0007 03       		.uleb128 0x3
 1415 0008 0E       		.uleb128 0xe
 1416 0009 1B       		.uleb128 0x1b
 1417 000a 0E       		.uleb128 0xe
 1418 000b 55       		.uleb128 0x55
 1419 000c 17       		.uleb128 0x17
 1420 000d 11       		.uleb128 0x11
 1421 000e 01       		.uleb128 0x1
 1422 000f 10       		.uleb128 0x10
 1423 0010 17       		.uleb128 0x17
 1424 0011 00       		.byte	0
 1425 0012 00       		.byte	0
 1426 0013 02       		.uleb128 0x2
 1427 0014 24       		.uleb128 0x24
 1428 0015 00       		.byte	0
 1429 0016 0B       		.uleb128 0xb
 1430 0017 0B       		.uleb128 0xb
 1431 0018 3E       		.uleb128 0x3e
 1432 0019 0B       		.uleb128 0xb
 1433 001a 03       		.uleb128 0x3
 1434 001b 0E       		.uleb128 0xe
 1435 001c 00       		.byte	0
 1436 001d 00       		.byte	0
 1437 001e 03       		.uleb128 0x3
 1438 001f 16       		.uleb128 0x16
 1439 0020 00       		.byte	0
 1440 0021 03       		.uleb128 0x3
 1441 0022 0E       		.uleb128 0xe
 1442 0023 3A       		.uleb128 0x3a
 1443 0024 0B       		.uleb128 0xb
 1444 0025 3B       		.uleb128 0x3b
 1445 0026 0B       		.uleb128 0xb
 1446 0027 49       		.uleb128 0x49
 1447 0028 13       		.uleb128 0x13
 1448 0029 00       		.byte	0
 1449 002a 00       		.byte	0
 1450 002b 04       		.uleb128 0x4
 1451 002c 24       		.uleb128 0x24
 1452 002d 00       		.byte	0
 1453 002e 0B       		.uleb128 0xb
 1454 002f 0B       		.uleb128 0xb
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccpXTCnJ.s 			page 32


 1455 0030 3E       		.uleb128 0x3e
 1456 0031 0B       		.uleb128 0xb
 1457 0032 03       		.uleb128 0x3
 1458 0033 08       		.uleb128 0x8
 1459 0034 00       		.byte	0
 1460 0035 00       		.byte	0
 1461 0036 05       		.uleb128 0x5
 1462 0037 16       		.uleb128 0x16
 1463 0038 00       		.byte	0
 1464 0039 03       		.uleb128 0x3
 1465 003a 0E       		.uleb128 0xe
 1466 003b 3A       		.uleb128 0x3a
 1467 003c 0B       		.uleb128 0xb
 1468 003d 3B       		.uleb128 0x3b
 1469 003e 05       		.uleb128 0x5
 1470 003f 49       		.uleb128 0x49
 1471 0040 13       		.uleb128 0x13
 1472 0041 00       		.byte	0
 1473 0042 00       		.byte	0
 1474 0043 06       		.uleb128 0x6
 1475 0044 35       		.uleb128 0x35
 1476 0045 00       		.byte	0
 1477 0046 49       		.uleb128 0x49
 1478 0047 13       		.uleb128 0x13
 1479 0048 00       		.byte	0
 1480 0049 00       		.byte	0
 1481 004a 07       		.uleb128 0x7
 1482 004b 2E       		.uleb128 0x2e
 1483 004c 01       		.byte	0x1
 1484 004d 3F       		.uleb128 0x3f
 1485 004e 19       		.uleb128 0x19
 1486 004f 03       		.uleb128 0x3
 1487 0050 0E       		.uleb128 0xe
 1488 0051 3A       		.uleb128 0x3a
 1489 0052 0B       		.uleb128 0xb
 1490 0053 3B       		.uleb128 0x3b
 1491 0054 0B       		.uleb128 0xb
 1492 0055 27       		.uleb128 0x27
 1493 0056 19       		.uleb128 0x19
 1494 0057 49       		.uleb128 0x49
 1495 0058 13       		.uleb128 0x13
 1496 0059 11       		.uleb128 0x11
 1497 005a 01       		.uleb128 0x1
 1498 005b 12       		.uleb128 0x12
 1499 005c 06       		.uleb128 0x6
 1500 005d 40       		.uleb128 0x40
 1501 005e 18       		.uleb128 0x18
 1502 005f 9642     		.uleb128 0x2116
 1503 0061 19       		.uleb128 0x19
 1504 0062 01       		.uleb128 0x1
 1505 0063 13       		.uleb128 0x13
 1506 0064 00       		.byte	0
 1507 0065 00       		.byte	0
 1508 0066 08       		.uleb128 0x8
 1509 0067 05       		.uleb128 0x5
 1510 0068 00       		.byte	0
 1511 0069 03       		.uleb128 0x3
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccpXTCnJ.s 			page 33


 1512 006a 0E       		.uleb128 0xe
 1513 006b 3A       		.uleb128 0x3a
 1514 006c 0B       		.uleb128 0xb
 1515 006d 3B       		.uleb128 0x3b
 1516 006e 0B       		.uleb128 0xb
 1517 006f 49       		.uleb128 0x49
 1518 0070 13       		.uleb128 0x13
 1519 0071 02       		.uleb128 0x2
 1520 0072 18       		.uleb128 0x18
 1521 0073 00       		.byte	0
 1522 0074 00       		.byte	0
 1523 0075 09       		.uleb128 0x9
 1524 0076 34       		.uleb128 0x34
 1525 0077 00       		.byte	0
 1526 0078 03       		.uleb128 0x3
 1527 0079 0E       		.uleb128 0xe
 1528 007a 3A       		.uleb128 0x3a
 1529 007b 0B       		.uleb128 0xb
 1530 007c 3B       		.uleb128 0x3b
 1531 007d 0B       		.uleb128 0xb
 1532 007e 49       		.uleb128 0x49
 1533 007f 13       		.uleb128 0x13
 1534 0080 02       		.uleb128 0x2
 1535 0081 18       		.uleb128 0x18
 1536 0082 00       		.byte	0
 1537 0083 00       		.byte	0
 1538 0084 0A       		.uleb128 0xa
 1539 0085 2E       		.uleb128 0x2e
 1540 0086 01       		.byte	0x1
 1541 0087 3F       		.uleb128 0x3f
 1542 0088 19       		.uleb128 0x19
 1543 0089 03       		.uleb128 0x3
 1544 008a 0E       		.uleb128 0xe
 1545 008b 3A       		.uleb128 0x3a
 1546 008c 0B       		.uleb128 0xb
 1547 008d 3B       		.uleb128 0x3b
 1548 008e 0B       		.uleb128 0xb
 1549 008f 27       		.uleb128 0x27
 1550 0090 19       		.uleb128 0x19
 1551 0091 11       		.uleb128 0x11
 1552 0092 01       		.uleb128 0x1
 1553 0093 12       		.uleb128 0x12
 1554 0094 06       		.uleb128 0x6
 1555 0095 40       		.uleb128 0x40
 1556 0096 18       		.uleb128 0x18
 1557 0097 9642     		.uleb128 0x2116
 1558 0099 19       		.uleb128 0x19
 1559 009a 01       		.uleb128 0x1
 1560 009b 13       		.uleb128 0x13
 1561 009c 00       		.byte	0
 1562 009d 00       		.byte	0
 1563 009e 0B       		.uleb128 0xb
 1564 009f 0B       		.uleb128 0xb
 1565 00a0 01       		.byte	0x1
 1566 00a1 11       		.uleb128 0x11
 1567 00a2 01       		.uleb128 0x1
 1568 00a3 12       		.uleb128 0x12
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccpXTCnJ.s 			page 34


 1569 00a4 06       		.uleb128 0x6
 1570 00a5 00       		.byte	0
 1571 00a6 00       		.byte	0
 1572 00a7 0C       		.uleb128 0xc
 1573 00a8 34       		.uleb128 0x34
 1574 00a9 00       		.byte	0
 1575 00aa 03       		.uleb128 0x3
 1576 00ab 08       		.uleb128 0x8
 1577 00ac 3A       		.uleb128 0x3a
 1578 00ad 0B       		.uleb128 0xb
 1579 00ae 3B       		.uleb128 0x3b
 1580 00af 0B       		.uleb128 0xb
 1581 00b0 49       		.uleb128 0x49
 1582 00b1 13       		.uleb128 0x13
 1583 00b2 02       		.uleb128 0x2
 1584 00b3 18       		.uleb128 0x18
 1585 00b4 00       		.byte	0
 1586 00b5 00       		.byte	0
 1587 00b6 0D       		.uleb128 0xd
 1588 00b7 2E       		.uleb128 0x2e
 1589 00b8 01       		.byte	0x1
 1590 00b9 3F       		.uleb128 0x3f
 1591 00ba 19       		.uleb128 0x19
 1592 00bb 03       		.uleb128 0x3
 1593 00bc 0E       		.uleb128 0xe
 1594 00bd 3A       		.uleb128 0x3a
 1595 00be 0B       		.uleb128 0xb
 1596 00bf 3B       		.uleb128 0x3b
 1597 00c0 0B       		.uleb128 0xb
 1598 00c1 49       		.uleb128 0x49
 1599 00c2 13       		.uleb128 0x13
 1600 00c3 11       		.uleb128 0x11
 1601 00c4 01       		.uleb128 0x1
 1602 00c5 12       		.uleb128 0x12
 1603 00c6 06       		.uleb128 0x6
 1604 00c7 40       		.uleb128 0x40
 1605 00c8 18       		.uleb128 0x18
 1606 00c9 9642     		.uleb128 0x2116
 1607 00cb 19       		.uleb128 0x19
 1608 00cc 01       		.uleb128 0x1
 1609 00cd 13       		.uleb128 0x13
 1610 00ce 00       		.byte	0
 1611 00cf 00       		.byte	0
 1612 00d0 0E       		.uleb128 0xe
 1613 00d1 34       		.uleb128 0x34
 1614 00d2 00       		.byte	0
 1615 00d3 03       		.uleb128 0x3
 1616 00d4 0E       		.uleb128 0xe
 1617 00d5 3A       		.uleb128 0x3a
 1618 00d6 0B       		.uleb128 0xb
 1619 00d7 3B       		.uleb128 0x3b
 1620 00d8 0B       		.uleb128 0xb
 1621 00d9 49       		.uleb128 0x49
 1622 00da 13       		.uleb128 0x13
 1623 00db 00       		.byte	0
 1624 00dc 00       		.byte	0
 1625 00dd 0F       		.uleb128 0xf
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccpXTCnJ.s 			page 35


 1626 00de 34       		.uleb128 0x34
 1627 00df 00       		.byte	0
 1628 00e0 03       		.uleb128 0x3
 1629 00e1 0E       		.uleb128 0xe
 1630 00e2 3A       		.uleb128 0x3a
 1631 00e3 0B       		.uleb128 0xb
 1632 00e4 3B       		.uleb128 0x3b
 1633 00e5 05       		.uleb128 0x5
 1634 00e6 49       		.uleb128 0x49
 1635 00e7 13       		.uleb128 0x13
 1636 00e8 3F       		.uleb128 0x3f
 1637 00e9 19       		.uleb128 0x19
 1638 00ea 3C       		.uleb128 0x3c
 1639 00eb 19       		.uleb128 0x19
 1640 00ec 00       		.byte	0
 1641 00ed 00       		.byte	0
 1642 00ee 10       		.uleb128 0x10
 1643 00ef 34       		.uleb128 0x34
 1644 00f0 00       		.byte	0
 1645 00f1 03       		.uleb128 0x3
 1646 00f2 0E       		.uleb128 0xe
 1647 00f3 3A       		.uleb128 0x3a
 1648 00f4 0B       		.uleb128 0xb
 1649 00f5 3B       		.uleb128 0x3b
 1650 00f6 0B       		.uleb128 0xb
 1651 00f7 49       		.uleb128 0x49
 1652 00f8 13       		.uleb128 0x13
 1653 00f9 3F       		.uleb128 0x3f
 1654 00fa 19       		.uleb128 0x19
 1655 00fb 02       		.uleb128 0x2
 1656 00fc 18       		.uleb128 0x18
 1657 00fd 00       		.byte	0
 1658 00fe 00       		.byte	0
 1659 00ff 11       		.uleb128 0x11
 1660 0100 01       		.uleb128 0x1
 1661 0101 01       		.byte	0x1
 1662 0102 49       		.uleb128 0x49
 1663 0103 13       		.uleb128 0x13
 1664 0104 01       		.uleb128 0x1
 1665 0105 13       		.uleb128 0x13
 1666 0106 00       		.byte	0
 1667 0107 00       		.byte	0
 1668 0108 12       		.uleb128 0x12
 1669 0109 21       		.uleb128 0x21
 1670 010a 00       		.byte	0
 1671 010b 49       		.uleb128 0x49
 1672 010c 13       		.uleb128 0x13
 1673 010d 2F       		.uleb128 0x2f
 1674 010e 0B       		.uleb128 0xb
 1675 010f 00       		.byte	0
 1676 0110 00       		.byte	0
 1677 0111 13       		.uleb128 0x13
 1678 0112 34       		.uleb128 0x34
 1679 0113 00       		.byte	0
 1680 0114 03       		.uleb128 0x3
 1681 0115 08       		.uleb128 0x8
 1682 0116 3A       		.uleb128 0x3a
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccpXTCnJ.s 			page 36


 1683 0117 0B       		.uleb128 0xb
 1684 0118 3B       		.uleb128 0x3b
 1685 0119 0B       		.uleb128 0xb
 1686 011a 49       		.uleb128 0x49
 1687 011b 13       		.uleb128 0x13
 1688 011c 3F       		.uleb128 0x3f
 1689 011d 19       		.uleb128 0x19
 1690 011e 02       		.uleb128 0x2
 1691 011f 18       		.uleb128 0x18
 1692 0120 00       		.byte	0
 1693 0121 00       		.byte	0
 1694 0122 00       		.byte	0
 1695              		.section	.debug_aranges,"",%progbits
 1696 0000 2C000000 		.4byte	0x2c
 1697 0004 0200     		.2byte	0x2
 1698 0006 00000000 		.4byte	.Ldebug_info0
 1699 000a 04       		.byte	0x4
 1700 000b 00       		.byte	0
 1701 000c 0000     		.2byte	0
 1702 000e 0000     		.2byte	0
 1703 0010 00000000 		.4byte	.LFB64
 1704 0014 74000000 		.4byte	.LFE64-.LFB64
 1705 0018 00000000 		.4byte	.LFB65
 1706 001c 94020000 		.4byte	.LFE65-.LFB65
 1707 0020 00000000 		.4byte	.LFB66
 1708 0024 D4020000 		.4byte	.LFE66-.LFB66
 1709 0028 00000000 		.4byte	0
 1710 002c 00000000 		.4byte	0
 1711              		.section	.debug_ranges,"",%progbits
 1712              	.Ldebug_ranges0:
 1713 0000 00000000 		.4byte	.LFB64
 1714 0004 74000000 		.4byte	.LFE64
 1715 0008 00000000 		.4byte	.LFB65
 1716 000c 94020000 		.4byte	.LFE65
 1717 0010 00000000 		.4byte	.LFB66
 1718 0014 D4020000 		.4byte	.LFE66
 1719 0018 00000000 		.4byte	0
 1720 001c 00000000 		.4byte	0
 1721              		.section	.debug_line,"",%progbits
 1722              	.Ldebug_line0:
 1723 0000 4C020000 		.section	.debug_str,"MS",%progbits,1
 1723      02004C01 
 1723      00000201 
 1723      FB0E0D00 
 1723      01010101 
 1724              	.LASF6:
 1725 0000 6C6F6E67 		.ascii	"long long int\000"
 1725      206C6F6E 
 1725      6720696E 
 1725      7400
 1726              	.LASF37:
 1727 000e 73656E64 		.ascii	"sendValue\000"
 1727      56616C75 
 1727      6500
 1728              	.LASF44:
 1729 0018 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 1729      43313120 
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccpXTCnJ.s 			page 37


 1729      352E342E 
 1729      31203230 
 1729      31363036 
 1730 004b 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 1730      20726576 
 1730      6973696F 
 1730      6E203233 
 1730      37373135 
 1731 007e 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 1731      66756E63 
 1731      74696F6E 
 1731      2D736563 
 1731      74696F6E 
 1732              	.LASF9:
 1733 00a6 5F5F696E 		.ascii	"__int32_t\000"
 1733      7433325F 
 1733      7400
 1734              	.LASF38:
 1735 00b0 61646356 		.ascii	"adcValue1\000"
 1735      616C7565 
 1735      3100
 1736              	.LASF39:
 1737 00ba 61646356 		.ascii	"adcValue2\000"
 1737      616C7565 
 1737      3200
 1738              	.LASF41:
 1739 00c4 68656C70 		.ascii	"help\000"
 1739      00
 1740              	.LASF14:
 1741 00c9 646F7562 		.ascii	"double\000"
 1741      6C6500
 1742              	.LASF31:
 1743 00d0 64617461 		.ascii	"data_read_mode\000"
 1743      5F726561 
 1743      645F6D6F 
 1743      646500
 1744              	.LASF32:
 1745 00df 6E65775F 		.ascii	"new_angle\000"
 1745      616E676C 
 1745      6500
 1746              	.LASF42:
 1747 00e9 6E65775F 		.ascii	"new_pos\000"
 1747      706F7300 
 1748              	.LASF22:
 1749 00f1 52784973 		.ascii	"RxIsr\000"
 1749      7200
 1750              	.LASF13:
 1751 00f7 666C6F61 		.ascii	"float\000"
 1751      7400
 1752              	.LASF11:
 1753 00fd 75696E74 		.ascii	"uint8\000"
 1753      3800
 1754              	.LASF27:
 1755 0103 70726576 		.ascii	"prev_err\000"
 1755      5F657272 
 1755      00
 1756              	.LASF1:
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccpXTCnJ.s 			page 38


 1757 010c 756E7369 		.ascii	"unsigned char\000"
 1757      676E6564 
 1757      20636861 
 1757      7200
 1758              	.LASF47:
 1759 011a 64757479 		.ascii	"dutycyclelength\000"
 1759      6379636C 
 1759      656C656E 
 1759      67746800 
 1760              	.LASF16:
 1761 012a 72656738 		.ascii	"reg8\000"
 1761      00
 1762              	.LASF19:
 1763 012f 70756C73 		.ascii	"pulselength\000"
 1763      656C656E 
 1763      67746800 
 1764              	.LASF5:
 1765 013b 6C6F6E67 		.ascii	"long unsigned int\000"
 1765      20756E73 
 1765      69676E65 
 1765      6420696E 
 1765      7400
 1766              	.LASF40:
 1767 014d 74656D70 		.ascii	"temp\000"
 1767      00
 1768              	.LASF3:
 1769 0152 73686F72 		.ascii	"short unsigned int\000"
 1769      7420756E 
 1769      7369676E 
 1769      65642069 
 1769      6E7400
 1770              	.LASF34:
 1771 0165 616E676C 		.ascii	"angle\000"
 1771      6500
 1772              	.LASF21:
 1773 016b 72784461 		.ascii	"rxData\000"
 1773      746100
 1774              	.LASF35:
 1775 0172 616E676C 		.ascii	"angletemp\000"
 1775      6574656D 
 1775      7000
 1776              	.LASF20:
 1777 017c 72785374 		.ascii	"rxStatus\000"
 1777      61747573 
 1777      00
 1778              	.LASF12:
 1779 0185 75696E74 		.ascii	"uint16\000"
 1779      313600
 1780              	.LASF30:
 1781 018c 6572726F 		.ascii	"errorStatus\000"
 1781      72537461 
 1781      74757300 
 1782              	.LASF29:
 1783 0198 49544D5F 		.ascii	"ITM_RxBuffer\000"
 1783      52784275 
 1783      66666572 
 1783      00
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccpXTCnJ.s 			page 39


 1784              	.LASF48:
 1785 01a5 74696D65 		.ascii	"timercapture\000"
 1785      72636170 
 1785      74757265 
 1785      00
 1786              	.LASF8:
 1787 01b2 756E7369 		.ascii	"unsigned int\000"
 1787      676E6564 
 1787      20696E74 
 1787      00
 1788              	.LASF7:
 1789 01bf 6C6F6E67 		.ascii	"long long unsigned int\000"
 1789      206C6F6E 
 1789      6720756E 
 1789      7369676E 
 1789      65642069 
 1790              	.LASF25:
 1791 01d6 62757474 		.ascii	"buttonPre\000"
 1791      6F6E5072 
 1791      6500
 1792              	.LASF33:
 1793 01e0 6E65775F 		.ascii	"new_pos_set\000"
 1793      706F735F 
 1793      73657400 
 1794              	.LASF10:
 1795 01ec 696E7433 		.ascii	"int32_t\000"
 1795      325F7400 
 1796              	.LASF18:
 1797 01f4 73697A65 		.ascii	"sizetype\000"
 1797      74797065 
 1797      00
 1798              	.LASF23:
 1799 01fd 6D61696E 		.ascii	"main\000"
 1799      00
 1800              	.LASF45:
 1801 0202 6D61696E 		.ascii	"main.c\000"
 1801      2E6300
 1802              	.LASF15:
 1803 0209 63686172 		.ascii	"char\000"
 1803      00
 1804              	.LASF2:
 1805 020e 73686F72 		.ascii	"short int\000"
 1805      7420696E 
 1805      7400
 1806              	.LASF46:
 1807 0218 433A5C55 		.ascii	"C:\\Users\\Andrew\\Documents\\GitHub\\Hydraulic-Mim"
 1807      73657273 
 1807      5C416E64 
 1807      7265775C 
 1807      446F6375 
 1808 0246 69632D41 		.ascii	"ic-Arm\\PSOC_arm_project.cydsn\000"
 1808      726D5C50 
 1808      534F435F 
 1808      61726D5F 
 1808      70726F6A 
 1809              	.LASF26:
 1810 0264 6379636C 		.ascii	"cycle\000"
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccpXTCnJ.s 			page 40


 1810      6500
 1811              	.LASF36:
 1812 026a 69734E65 		.ascii	"isNegative\000"
 1812      67617469 
 1812      766500
 1813              	.LASF4:
 1814 0275 6C6F6E67 		.ascii	"long int\000"
 1814      20696E74 
 1814      00
 1815              	.LASF24:
 1816 027e 62757474 		.ascii	"button\000"
 1816      6F6E00
 1817              	.LASF17:
 1818 0285 6C6F6E67 		.ascii	"long double\000"
 1818      20646F75 
 1818      626C6500 
 1819              	.LASF0:
 1820 0291 7369676E 		.ascii	"signed char\000"
 1820      65642063 
 1820      68617200 
 1821              	.LASF28:
 1822 029d 7069645F 		.ascii	"pid_integral\000"
 1822      696E7465 
 1822      6772616C 
 1822      00
 1823              	.LASF43:
 1824 02aa 6C65645F 		.ascii	"led_switch\000"
 1824      73776974 
 1824      636800
 1825              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
