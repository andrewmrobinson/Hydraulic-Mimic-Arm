ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccuzGkEA.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.syntax unified
  20              		.global _printf_float
  21              		.thumb
  22              		.syntax unified
  23              		.global	errorStatus
  24              		.bss
  25              		.type	errorStatus, %object
  26              		.size	errorStatus, 1
  27              	errorStatus:
  28 0000 00       		.space	1
  29              		.section	.text.writePWM,"ax",%progbits
  30              		.align	2
  31              		.global	writePWM
  32              		.thumb
  33              		.thumb_func
  34              		.type	writePWM, %function
  35              	writePWM:
  36              	.LFB64:
  37              		.file 1 "main.c"
   1:main.c        **** 
   2:main.c        **** #include <project.h>
   3:main.c        **** #include <stdio.h>
   4:main.c        **** #include "common.h"
   5:main.c        **** #include <math.h>
   6:main.c        **** #include <stdlib.h>     /* strtod */
   7:main.c        **** 
   8:main.c        **** #define	Frequency 1000000.0			// Frequency of PWMClock
   9:main.c        **** #define	One_ms (Frequency/1000.0)	// 1 ms constant
  10:main.c        **** #define filter_size 7
  11:main.c        **** #define CYL_NO 4                    // Number of connected cylinders
  12:main.c        **** 
  13:main.c        **** /* Add an explicit reference to the floating point printf library to allow
  14:main.c        **** the usage of floating point conversion specifier */
  15:main.c        **** #if defined (__GNUC__)
  16:main.c        ****     asm (".global _printf_float");
  17:main.c        **** #endif
  18:main.c        **** 
  19:main.c        **** uint8 errorStatus = 0u;
  20:main.c        **** 
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccuzGkEA.s 			page 2


  21:main.c        **** void writePWM(int cylinder, int pulse){
  38              		.loc 1 21 0
  39              		.cfi_startproc
  40              		@ args = 0, pretend = 0, frame = 8
  41              		@ frame_needed = 1, uses_anonymous_args = 0
  42 0000 80B5     		push	{r7, lr}
  43              		.cfi_def_cfa_offset 8
  44              		.cfi_offset 7, -8
  45              		.cfi_offset 14, -4
  46 0002 82B0     		sub	sp, sp, #8
  47              		.cfi_def_cfa_offset 16
  48 0004 00AF     		add	r7, sp, #0
  49              		.cfi_def_cfa_register 7
  50 0006 7860     		str	r0, [r7, #4]
  51 0008 3960     		str	r1, [r7]
  22:main.c        ****     switch(cylinder){
  52              		.loc 1 22 0
  53 000a 7B68     		ldr	r3, [r7, #4]
  54 000c 032B     		cmp	r3, #3
  55 000e 2FD8     		bhi	.L8
  56 0010 01A2     		adr	r2, .L4
  57 0012 52F823F0 		ldr	pc, [r2, r3, lsl #2]
  58 0016 00BF     		.p2align 2
  59              	.L4:
  60 0018 29000000 		.word	.L3+1
  61 001c 3B000000 		.word	.L5+1
  62 0020 4D000000 		.word	.L6+1
  63 0024 5F000000 		.word	.L7+1
  64              		.p2align 1
  65              	.L3:
  23:main.c        ****                 case 0:
  24:main.c        ****                     PWM_0_WriteCompare(pulse + 1500);
  66              		.loc 1 24 0
  67 0028 3B68     		ldr	r3, [r7]
  68 002a 9BB2     		uxth	r3, r3
  69 002c 03F2DC53 		addw	r3, r3, #1500
  70 0030 9BB2     		uxth	r3, r3
  71 0032 1846     		mov	r0, r3
  72 0034 FFF7FEFF 		bl	PWM_0_WriteCompare
  25:main.c        ****                     break;
  73              		.loc 1 25 0
  74 0038 1AE0     		b	.L2
  75              	.L5:
  26:main.c        ****                 case 1:
  27:main.c        ****                     PWM_1_WriteCompare(pulse + 1500);
  76              		.loc 1 27 0
  77 003a 3B68     		ldr	r3, [r7]
  78 003c 9BB2     		uxth	r3, r3
  79 003e 03F2DC53 		addw	r3, r3, #1500
  80 0042 9BB2     		uxth	r3, r3
  81 0044 1846     		mov	r0, r3
  82 0046 FFF7FEFF 		bl	PWM_1_WriteCompare
  28:main.c        ****                     break;
  83              		.loc 1 28 0
  84 004a 11E0     		b	.L2
  85              	.L6:
  29:main.c        ****                 case 2:
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccuzGkEA.s 			page 3


  30:main.c        ****                     PWM_2_WriteCompare(pulse + 1500);
  86              		.loc 1 30 0
  87 004c 3B68     		ldr	r3, [r7]
  88 004e 9BB2     		uxth	r3, r3
  89 0050 03F2DC53 		addw	r3, r3, #1500
  90 0054 9BB2     		uxth	r3, r3
  91 0056 1846     		mov	r0, r3
  92 0058 FFF7FEFF 		bl	PWM_2_WriteCompare
  31:main.c        ****                     break;
  93              		.loc 1 31 0
  94 005c 08E0     		b	.L2
  95              	.L7:
  32:main.c        ****                 case 3:
  33:main.c        ****                     PWM_3_WriteCompare(pulse + 1500);
  96              		.loc 1 33 0
  97 005e 3B68     		ldr	r3, [r7]
  98 0060 9BB2     		uxth	r3, r3
  99 0062 03F2DC53 		addw	r3, r3, #1500
 100 0066 9BB2     		uxth	r3, r3
 101 0068 1846     		mov	r0, r3
 102 006a FFF7FEFF 		bl	PWM_3_WriteCompare
  34:main.c        ****                     break;
 103              		.loc 1 34 0
 104 006e 00BF     		nop
 105              	.L2:
 106              	.L8:
  35:main.c        ****             }  
  36:main.c        **** }
 107              		.loc 1 36 0
 108 0070 00BF     		nop
 109 0072 0837     		adds	r7, r7, #8
 110              		.cfi_def_cfa_offset 8
 111 0074 BD46     		mov	sp, r7
 112              		.cfi_def_cfa_register 13
 113              		@ sp needed
 114 0076 80BD     		pop	{r7, pc}
 115              		.cfi_endproc
 116              	.LFE64:
 117              		.size	writePWM, .-writePWM
 118              		.section	.text.pulseCheck,"ax",%progbits
 119              		.align	2
 120              		.global	pulseCheck
 121              		.thumb
 122              		.thumb_func
 123              		.type	pulseCheck, %function
 124              	pulseCheck:
 125              	.LFB65:
  37:main.c        **** 
  38:main.c        **** int pulseCheck(int pulse, int offset_upper, int offset_lower) {
 126              		.loc 1 38 0
 127              		.cfi_startproc
 128              		@ args = 0, pretend = 0, frame = 16
 129              		@ frame_needed = 1, uses_anonymous_args = 0
 130              		@ link register save eliminated.
 131 0000 80B4     		push	{r7}
 132              		.cfi_def_cfa_offset 4
 133              		.cfi_offset 7, -4
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccuzGkEA.s 			page 4


 134 0002 85B0     		sub	sp, sp, #20
 135              		.cfi_def_cfa_offset 24
 136 0004 00AF     		add	r7, sp, #0
 137              		.cfi_def_cfa_register 7
 138 0006 F860     		str	r0, [r7, #12]
 139 0008 B960     		str	r1, [r7, #8]
 140 000a 7A60     		str	r2, [r7, #4]
  39:main.c        ****     if(pulse<0){pulse = pulse - offset_lower;}
 141              		.loc 1 39 0
 142 000c FB68     		ldr	r3, [r7, #12]
 143 000e 002B     		cmp	r3, #0
 144 0010 03DA     		bge	.L10
 145              		.loc 1 39 0 is_stmt 0 discriminator 1
 146 0012 FA68     		ldr	r2, [r7, #12]
 147 0014 7B68     		ldr	r3, [r7, #4]
 148 0016 D31A     		subs	r3, r2, r3
 149 0018 FB60     		str	r3, [r7, #12]
 150              	.L10:
  40:main.c        ****         if(pulse>0){pulse = pulse + offset_upper;}
 151              		.loc 1 40 0 is_stmt 1
 152 001a FB68     		ldr	r3, [r7, #12]
 153 001c 002B     		cmp	r3, #0
 154 001e 03DD     		ble	.L11
 155              		.loc 1 40 0 is_stmt 0 discriminator 1
 156 0020 FA68     		ldr	r2, [r7, #12]
 157 0022 BB68     		ldr	r3, [r7, #8]
 158 0024 1344     		add	r3, r3, r2
 159 0026 FB60     		str	r3, [r7, #12]
 160              	.L11:
  41:main.c        ****         if(pulse<-500){pulse=-500;}
 161              		.loc 1 41 0 is_stmt 1
 162 0028 FB68     		ldr	r3, [r7, #12]
 163 002a 13F5FA7F 		cmn	r3, #500
 164 002e 01DA     		bge	.L12
 165              		.loc 1 41 0 is_stmt 0 discriminator 1
 166 0030 074B     		ldr	r3, .L15
 167 0032 FB60     		str	r3, [r7, #12]
 168              	.L12:
  42:main.c        ****         if(pulse>500){pulse=500;}
 169              		.loc 1 42 0 is_stmt 1
 170 0034 FB68     		ldr	r3, [r7, #12]
 171 0036 B3F5FA7F 		cmp	r3, #500
 172 003a 02DD     		ble	.L13
 173              		.loc 1 42 0 is_stmt 0 discriminator 1
 174 003c 4FF4FA73 		mov	r3, #500
 175 0040 FB60     		str	r3, [r7, #12]
 176              	.L13:
  43:main.c        ****     return pulse;
 177              		.loc 1 43 0 is_stmt 1
 178 0042 FB68     		ldr	r3, [r7, #12]
  44:main.c        **** }
 179              		.loc 1 44 0
 180 0044 1846     		mov	r0, r3
 181 0046 1437     		adds	r7, r7, #20
 182              		.cfi_def_cfa_offset 4
 183 0048 BD46     		mov	sp, r7
 184              		.cfi_def_cfa_register 13
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccuzGkEA.s 			page 5


 185              		@ sp needed
 186 004a 80BC     		pop	{r7}
 187              		.cfi_restore 7
 188              		.cfi_def_cfa_offset 0
 189 004c 7047     		bx	lr
 190              	.L16:
 191 004e 00BF     		.align	2
 192              	.L15:
 193 0050 0CFEFFFF 		.word	-500
 194              		.cfi_endproc
 195              	.LFE65:
 196              		.size	pulseCheck, .-pulseCheck
 197              		.global	data_read_mode
 198              		.bss
 199 0001 000000   		.align	2
 200              		.type	data_read_mode, %object
 201              		.size	data_read_mode, 4
 202              	data_read_mode:
 203 0004 00000000 		.space	4
 204              		.global	new_pos_set
 205              		.align	2
 206              		.type	new_pos_set, %object
 207              		.size	new_pos_set, 16
 208              	new_pos_set:
 209 0008 00000000 		.space	16
 209      00000000 
 209      00000000 
 209      00000000 
 210              		.comm	new_pos,16,4
 211              		.global	pos
 212              		.data
 213              		.align	2
 214              		.type	pos, %object
 215              		.size	pos, 16
 216              	pos:
 217 0000 D0070000 		.word	2000
 218 0004 D0070000 		.word	2000
 219 0008 D0070000 		.word	2000
 220 000c D0070000 		.word	2000
 221              		.global	pulse
 222              		.bss
 223              		.align	2
 224              		.type	pulse, %object
 225              		.size	pulse, 16
 226              	pulse:
 227 0018 00000000 		.space	16
 227      00000000 
 227      00000000 
 227      00000000 
 228              		.global	pulse_temp
 229              		.align	2
 230              		.type	pulse_temp, %object
 231              		.size	pulse_temp, 16
 232              	pulse_temp:
 233 0028 00000000 		.space	16
 233      00000000 
 233      00000000 
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccuzGkEA.s 			page 6


 233      00000000 
 234              		.comm	err,32,8
 235              		.comm	adcValue,8,4
 236              		.global	der
 237              		.align	3
 238              		.type	der, %object
 239              		.size	der, 32
 240              	der:
 241 0038 00000000 		.space	32
 241      00000000 
 241      00000000 
 241      00000000 
 241      00000000 
 242              		.global	prev_err
 243              		.align	3
 244              		.type	prev_err, %object
 245              		.size	prev_err, 32
 246              	prev_err:
 247 0058 00000000 		.space	32
 247      00000000 
 247      00000000 
 247      00000000 
 247      00000000 
 248              		.global	pid_integral
 249              		.align	3
 250              		.type	pid_integral, %object
 251              		.size	pid_integral, 32
 252              	pid_integral:
 253 0078 00000000 		.space	32
 253      00000000 
 253      00000000 
 253      00000000 
 253      00000000 
 254              		.global	cyl_set
 255              		.align	2
 256              		.type	cyl_set, %object
 257              		.size	cyl_set, 4
 258              	cyl_set:
 259 0098 00000000 		.space	4
 260              		.comm	cyl_tmp,1,4
 261              		.global	offsets
 262              		.data
 263              		.align	2
 264              		.type	offsets, %object
 265              		.size	offsets, 32
 266              	offsets:
 267 0010 7D000000 		.word	125
 268 0014 B3000000 		.word	179
 269 0018 7E000000 		.word	126
 270 001c B0000000 		.word	176
 271 0020 93000000 		.word	147
 272 0024 F2000000 		.word	242
 273 0028 23000000 		.word	35
 274 002c 18010000 		.word	280
 275              		.comm	sendValue,100,4
 276              		.comm	temp,20,4
 277              		.global	nn
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccuzGkEA.s 			page 7


 278              		.bss
 279              		.align	2
 280              		.type	nn, %object
 281              		.size	nn, 4
 282              	nn:
 283 009c 00000000 		.space	4
 284              		.global	pid
 285              		.data
 286              		.align	3
 287              		.type	pid, %object
 288              		.size	pid, 24
 289              	pid:
 290 0030 66666666 		.word	1717986918
 291 0034 6666E63F 		.word	1072064102
 292 0038 FCA9F1D2 		.word	-755914244
 293 003c 4D62503F 		.word	1062232653
 294 0040 7B14AE47 		.word	1202590843
 295 0044 E17AA43F 		.word	1067743969
 296              		.comm	help,100,4
 297              		.global	tt
 298              		.bss
 299              		.align	2
 300              		.type	tt, %object
 301              		.size	tt, 4
 302              	tt:
 303 00a0 00000000 		.space	4
 304              		.global	start_calib
 305              		.align	2
 306              		.type	start_calib, %object
 307              		.size	start_calib, 4
 308              	start_calib:
 309 00a4 00000000 		.space	4
 310              		.global	cyl_no
 311              		.align	2
 312              		.type	cyl_no, %object
 313              		.size	cyl_no, 4
 314              	cyl_no:
 315 00a8 00000000 		.space	4
 316              		.global	moving_median
 317              		.align	2
 318              		.type	moving_median, %object
 319              		.size	moving_median, 56
 320              	moving_median:
 321 00ac 00000000 		.space	56
 321      00000000 
 321      00000000 
 321      00000000 
 321      00000000 
 322              		.comm	tempArray,14,4
 323              		.comm	tmp,2,2
 324              		.section	.text.adc_update,"ax",%progbits
 325              		.align	2
 326              		.global	adc_update
 327              		.thumb
 328              		.thumb_func
 329              		.type	adc_update, %function
 330              	adc_update:
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccuzGkEA.s 			page 8


 331              	.LFB66:
  45:main.c        **** 
  46:main.c        **** 
  47:main.c        **** int data_read_mode = 0;
  48:main.c        **** 
  49:main.c        **** volatile int new_pos_set[CYL_NO] = {0};
  50:main.c        **** int new_pos[CYL_NO];
  51:main.c        **** int pos[CYL_NO]={2000,2000,2000,2000};
  52:main.c        **** int pulse[CYL_NO] = {0};
  53:main.c        **** int pulse_temp[CYL_NO] = {0};
  54:main.c        **** double err[CYL_NO];
  55:main.c        **** uint16 adcValue[CYL_NO];
  56:main.c        **** double der[CYL_NO] = {0};
  57:main.c        **** double prev_err[CYL_NO] = {0};
  58:main.c        **** double pid_integral[CYL_NO] = {0};
  59:main.c        **** int cyl_set = 0;
  60:main.c        **** char cyl_tmp[1];
  61:main.c        **** 
  62:main.c        **** int offsets[4][2] = {{125,179},{126,176},{147,242},{35,280}}; //{lower,upper} - both positive
  63:main.c        **** 
  64:main.c        **** char sendValue[100];
  65:main.c        **** char temp[20];
  66:main.c        **** int nn=0;
  67:main.c        **** double pid[3] = {0.7,0.001,0.04};
  68:main.c        **** //double pid[3] = { -2.22,-0.0307,0.0 };
  69:main.c        **** char help[100];
  70:main.c        **** int tt = 0;
  71:main.c        **** 
  72:main.c        **** int start_calib = 0;
  73:main.c        **** int cyl_no = 0;
  74:main.c        **** 
  75:main.c        **** uint16 moving_median[CYL_NO][filter_size] = {0};
  76:main.c        **** uint16 tempArray[filter_size];
  77:main.c        **** uint16 tmp;
  78:main.c        **** 
  79:main.c        **** CY_ISR(adc_update){
 332              		.loc 1 79 0
 333              		.cfi_startproc
 334              		@ args = 0, pretend = 0, frame = 24
 335              		@ frame_needed = 1, uses_anonymous_args = 0
 336 0000 80B5     		push	{r7, lr}
 337              		.cfi_def_cfa_offset 8
 338              		.cfi_offset 7, -8
 339              		.cfi_offset 14, -4
 340 0002 86B0     		sub	sp, sp, #24
 341              		.cfi_def_cfa_offset 32
 342 0004 00AF     		add	r7, sp, #0
 343              		.cfi_def_cfa_register 7
 344              	.LBB2:
  80:main.c        ****     for(int c = 0;c<CYL_NO;c++){
 345              		.loc 1 80 0
 346 0006 0023     		movs	r3, #0
 347 0008 7B61     		str	r3, [r7, #20]
 348 000a 9DE0     		b	.L18
 349              	.L28:
  81:main.c        ****         AMux_0_FastSelect(c);
 350              		.loc 1 81 0
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccuzGkEA.s 			page 9


 351 000c 7B69     		ldr	r3, [r7, #20]
 352 000e DBB2     		uxtb	r3, r3
 353 0010 1846     		mov	r0, r3
 354 0012 FFF7FEFF 		bl	AMux_0_FastSelect
 355              	.LBB3:
  82:main.c        ****         
  83:main.c        ****         for(int j=0;j<filter_size-1;j++){
 356              		.loc 1 83 0
 357 0016 0023     		movs	r3, #0
 358 0018 3B61     		str	r3, [r7, #16]
 359 001a 16E0     		b	.L19
 360              	.L20:
  84:main.c        ****                 moving_median[c][j] = moving_median[c][j+1]; 
 361              		.loc 1 84 0 discriminator 3
 362 001c 3B69     		ldr	r3, [r7, #16]
 363 001e 591C     		adds	r1, r3, #1
 364 0020 4E48     		ldr	r0, .L29
 365 0022 7A69     		ldr	r2, [r7, #20]
 366 0024 1346     		mov	r3, r2
 367 0026 DB00     		lsls	r3, r3, #3
 368 0028 9B1A     		subs	r3, r3, r2
 369 002a 0B44     		add	r3, r3, r1
 370 002c 30F81300 		ldrh	r0, [r0, r3, lsl #1]
 371 0030 4A49     		ldr	r1, .L29
 372 0032 7A69     		ldr	r2, [r7, #20]
 373 0034 1346     		mov	r3, r2
 374 0036 DB00     		lsls	r3, r3, #3
 375 0038 9B1A     		subs	r3, r3, r2
 376 003a 3A69     		ldr	r2, [r7, #16]
 377 003c 1344     		add	r3, r3, r2
 378 003e 0246     		mov	r2, r0	@ movhi
 379 0040 21F81320 		strh	r2, [r1, r3, lsl #1]	@ movhi
  83:main.c        ****                 moving_median[c][j] = moving_median[c][j+1]; 
 380              		.loc 1 83 0 discriminator 3
 381 0044 3B69     		ldr	r3, [r7, #16]
 382 0046 0133     		adds	r3, r3, #1
 383 0048 3B61     		str	r3, [r7, #16]
 384              	.L19:
  83:main.c        ****                 moving_median[c][j] = moving_median[c][j+1]; 
 385              		.loc 1 83 0 is_stmt 0 discriminator 1
 386 004a 3B69     		ldr	r3, [r7, #16]
 387 004c 052B     		cmp	r3, #5
 388 004e E5DD     		ble	.L20
 389              	.LBE3:
  85:main.c        ****         }
  86:main.c        ****         
  87:main.c        ****         moving_median[c][filter_size-1] = ADC_0_GetResult16();
 390              		.loc 1 87 0 is_stmt 1
 391 0050 FFF7FEFF 		bl	ADC_0_GetResult16
 392 0054 0346     		mov	r3, r0
 393 0056 98B2     		uxth	r0, r3
 394 0058 4049     		ldr	r1, .L29
 395 005a 7A69     		ldr	r2, [r7, #20]
 396 005c 1346     		mov	r3, r2
 397 005e DB00     		lsls	r3, r3, #3
 398 0060 9B1A     		subs	r3, r3, r2
 399 0062 5B00     		lsls	r3, r3, #1
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccuzGkEA.s 			page 10


 400 0064 0B44     		add	r3, r3, r1
 401 0066 0C33     		adds	r3, r3, #12
 402 0068 0246     		mov	r2, r0	@ movhi
 403 006a 1A80     		strh	r2, [r3]	@ movhi
  88:main.c        ****         moving_median[c][filter_size-1] = ADC_0_GetResult16();
 404              		.loc 1 88 0
 405 006c FFF7FEFF 		bl	ADC_0_GetResult16
 406 0070 0346     		mov	r3, r0
 407 0072 98B2     		uxth	r0, r3
 408 0074 3949     		ldr	r1, .L29
 409 0076 7A69     		ldr	r2, [r7, #20]
 410 0078 1346     		mov	r3, r2
 411 007a DB00     		lsls	r3, r3, #3
 412 007c 9B1A     		subs	r3, r3, r2
 413 007e 5B00     		lsls	r3, r3, #1
 414 0080 0B44     		add	r3, r3, r1
 415 0082 0C33     		adds	r3, r3, #12
 416 0084 0246     		mov	r2, r0	@ movhi
 417 0086 1A80     		strh	r2, [r3]	@ movhi
  89:main.c        ****         ADC_0_IsEndConversion(ADC_0_WAIT_FOR_RESULT);
 418              		.loc 1 89 0
 419 0088 0020     		movs	r0, #0
 420 008a FFF7FEFF 		bl	ADC_0_IsEndConversion
  90:main.c        ****         moving_median[c][filter_size-1] = ADC_0_GetResult16();
 421              		.loc 1 90 0
 422 008e FFF7FEFF 		bl	ADC_0_GetResult16
 423 0092 0346     		mov	r3, r0
 424 0094 98B2     		uxth	r0, r3
 425 0096 3149     		ldr	r1, .L29
 426 0098 7A69     		ldr	r2, [r7, #20]
 427 009a 1346     		mov	r3, r2
 428 009c DB00     		lsls	r3, r3, #3
 429 009e 9B1A     		subs	r3, r3, r2
 430 00a0 5B00     		lsls	r3, r3, #1
 431 00a2 0B44     		add	r3, r3, r1
 432 00a4 0C33     		adds	r3, r3, #12
 433 00a6 0246     		mov	r2, r0	@ movhi
 434 00a8 1A80     		strh	r2, [r3]	@ movhi
 435              	.LBB4:
  91:main.c        ****         
  92:main.c        ****         for(int j=0;j<filter_size;j++){
 436              		.loc 1 92 0
 437 00aa 0023     		movs	r3, #0
 438 00ac FB60     		str	r3, [r7, #12]
 439 00ae 0FE0     		b	.L21
 440              	.L22:
  93:main.c        ****                 tempArray[j] = moving_median[c][j]; 
 441              		.loc 1 93 0 discriminator 3
 442 00b0 2A49     		ldr	r1, .L29
 443 00b2 7A69     		ldr	r2, [r7, #20]
 444 00b4 1346     		mov	r3, r2
 445 00b6 DB00     		lsls	r3, r3, #3
 446 00b8 9B1A     		subs	r3, r3, r2
 447 00ba FA68     		ldr	r2, [r7, #12]
 448 00bc 1344     		add	r3, r3, r2
 449 00be 31F81310 		ldrh	r1, [r1, r3, lsl #1]
 450 00c2 274A     		ldr	r2, .L29+4
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccuzGkEA.s 			page 11


 451 00c4 FB68     		ldr	r3, [r7, #12]
 452 00c6 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
  92:main.c        ****                 tempArray[j] = moving_median[c][j]; 
 453              		.loc 1 92 0 discriminator 3
 454 00ca FB68     		ldr	r3, [r7, #12]
 455 00cc 0133     		adds	r3, r3, #1
 456 00ce FB60     		str	r3, [r7, #12]
 457              	.L21:
  92:main.c        ****                 tempArray[j] = moving_median[c][j]; 
 458              		.loc 1 92 0 is_stmt 0 discriminator 1
 459 00d0 FB68     		ldr	r3, [r7, #12]
 460 00d2 062B     		cmp	r3, #6
 461 00d4 ECDD     		ble	.L22
 462              	.LBE4:
 463              	.LBB5:
  94:main.c        ****         }
  95:main.c        ****         for(int i = 0; i < filter_size; i++){                     //Loop for ascending ordering
 464              		.loc 1 95 0 is_stmt 1
 465 00d6 0023     		movs	r3, #0
 466 00d8 BB60     		str	r3, [r7, #8]
 467 00da 29E0     		b	.L23
 468              	.L27:
 469              	.LBB6:
  96:main.c        ****         	for (int j = 0; j < filter_size; j++)             //Loop for comparing other values
 470              		.loc 1 96 0
 471 00dc 0023     		movs	r3, #0
 472 00de 7B60     		str	r3, [r7, #4]
 473 00e0 20E0     		b	.L24
 474              	.L26:
  97:main.c        ****         	{
  98:main.c        ****         		if (tempArray[j] > tempArray[i])                //Comparing other array elements
 475              		.loc 1 98 0
 476 00e2 1F4A     		ldr	r2, .L29+4
 477 00e4 7B68     		ldr	r3, [r7, #4]
 478 00e6 32F81320 		ldrh	r2, [r2, r3, lsl #1]
 479 00ea 1D49     		ldr	r1, .L29+4
 480 00ec BB68     		ldr	r3, [r7, #8]
 481 00ee 31F81330 		ldrh	r3, [r1, r3, lsl #1]
 482 00f2 9A42     		cmp	r2, r3
 483 00f4 13D9     		bls	.L25
  99:main.c        ****         		{
 100:main.c        ****         			tmp = tempArray[i];         //Using temporary variable for storing last value
 484              		.loc 1 100 0
 485 00f6 1A4A     		ldr	r2, .L29+4
 486 00f8 BB68     		ldr	r3, [r7, #8]
 487 00fa 32F81320 		ldrh	r2, [r2, r3, lsl #1]
 488 00fe 194B     		ldr	r3, .L29+8
 489 0100 1A80     		strh	r2, [r3]	@ movhi
 101:main.c        ****         			tempArray[i] = tempArray[j];            //replacing value
 490              		.loc 1 101 0
 491 0102 174A     		ldr	r2, .L29+4
 492 0104 7B68     		ldr	r3, [r7, #4]
 493 0106 32F81310 		ldrh	r1, [r2, r3, lsl #1]
 494 010a 154A     		ldr	r2, .L29+4
 495 010c BB68     		ldr	r3, [r7, #8]
 496 010e 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
 102:main.c        ****         			tempArray[j] = tmp;             //storing last value
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccuzGkEA.s 			page 12


 497              		.loc 1 102 0
 498 0112 144B     		ldr	r3, .L29+8
 499 0114 1988     		ldrh	r1, [r3]
 500 0116 124A     		ldr	r2, .L29+4
 501 0118 7B68     		ldr	r3, [r7, #4]
 502 011a 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
 503              	.L25:
  96:main.c        ****         	{
 504              		.loc 1 96 0 discriminator 2
 505 011e 7B68     		ldr	r3, [r7, #4]
 506 0120 0133     		adds	r3, r3, #1
 507 0122 7B60     		str	r3, [r7, #4]
 508              	.L24:
  96:main.c        ****         	{
 509              		.loc 1 96 0 is_stmt 0 discriminator 1
 510 0124 7B68     		ldr	r3, [r7, #4]
 511 0126 062B     		cmp	r3, #6
 512 0128 DBDD     		ble	.L26
 513              	.LBE6:
  95:main.c        ****         	for (int j = 0; j < filter_size; j++)             //Loop for comparing other values
 514              		.loc 1 95 0 is_stmt 1 discriminator 2
 515 012a BB68     		ldr	r3, [r7, #8]
 516 012c 0133     		adds	r3, r3, #1
 517 012e BB60     		str	r3, [r7, #8]
 518              	.L23:
  95:main.c        ****         	for (int j = 0; j < filter_size; j++)             //Loop for comparing other values
 519              		.loc 1 95 0 is_stmt 0 discriminator 1
 520 0130 BB68     		ldr	r3, [r7, #8]
 521 0132 062B     		cmp	r3, #6
 522 0134 D2DD     		ble	.L27
 523              	.LBE5:
 103:main.c        ****         		}  
 104:main.c        ****         	}
 105:main.c        ****         }
 106:main.c        ****         adcValue[c] = tempArray[(filter_size-1)/2];
 524              		.loc 1 106 0 is_stmt 1 discriminator 2
 525 0136 0A4B     		ldr	r3, .L29+4
 526 0138 D988     		ldrh	r1, [r3, #6]
 527 013a 0B4A     		ldr	r2, .L29+12
 528 013c 7B69     		ldr	r3, [r7, #20]
 529 013e 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
  80:main.c        ****         AMux_0_FastSelect(c);
 530              		.loc 1 80 0 discriminator 2
 531 0142 7B69     		ldr	r3, [r7, #20]
 532 0144 0133     		adds	r3, r3, #1
 533 0146 7B61     		str	r3, [r7, #20]
 534              	.L18:
  80:main.c        ****         AMux_0_FastSelect(c);
 535              		.loc 1 80 0 is_stmt 0 discriminator 1
 536 0148 7B69     		ldr	r3, [r7, #20]
 537 014a 032B     		cmp	r3, #3
 538 014c 7FF75EAF 		ble	.L28
 539              	.LBE2:
 107:main.c        ****     }
 108:main.c        ****     update_median_isr_ClearPending();
 540              		.loc 1 108 0 is_stmt 1
 541 0150 FFF7FEFF 		bl	update_median_isr_ClearPending
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccuzGkEA.s 			page 13


 109:main.c        ****     
 110:main.c        **** }
 542              		.loc 1 110 0
 543 0154 00BF     		nop
 544 0156 1837     		adds	r7, r7, #24
 545              		.cfi_def_cfa_offset 8
 546 0158 BD46     		mov	sp, r7
 547              		.cfi_def_cfa_register 13
 548              		@ sp needed
 549 015a 80BD     		pop	{r7, pc}
 550              	.L30:
 551              		.align	2
 552              	.L29:
 553 015c 00000000 		.word	moving_median
 554 0160 00000000 		.word	tempArray
 555 0164 00000000 		.word	tmp
 556 0168 00000000 		.word	adcValue
 557              		.cfi_endproc
 558              	.LFE66:
 559              		.size	adc_update, .-adc_update
 560              		.section	.text.RxIsr,"ax",%progbits
 561              		.align	2
 562              		.global	RxIsr
 563              		.thumb
 564              		.thumb_func
 565              		.type	RxIsr, %function
 566              	RxIsr:
 567              	.LFB67:
 111:main.c        **** 
 112:main.c        **** 
 113:main.c        **** CY_ISR(RxIsr)
 114:main.c        **** {
 568              		.loc 1 114 0
 569              		.cfi_startproc
 570              		@ args = 0, pretend = 0, frame = 8
 571              		@ frame_needed = 1, uses_anonymous_args = 0
 572 0000 90B5     		push	{r4, r7, lr}
 573              		.cfi_def_cfa_offset 12
 574              		.cfi_offset 4, -12
 575              		.cfi_offset 7, -8
 576              		.cfi_offset 14, -4
 577 0002 83B0     		sub	sp, sp, #12
 578              		.cfi_def_cfa_offset 24
 579 0004 00AF     		add	r7, sp, #0
 580              		.cfi_def_cfa_register 7
 581              	.L63:
 115:main.c        ****     uint8 rxStatus;         
 116:main.c        ****     uint8 rxData;           
 117:main.c        ****     
 118:main.c        ****     do
 119:main.c        ****     {
 120:main.c        ****         /* Read receiver status register */
 121:main.c        ****         rxStatus = UART_RXSTATUS_REG;
 582              		.loc 1 121 0
 583 0006 A24B     		ldr	r3, .L66
 584 0008 1B78     		ldrb	r3, [r3]
 585 000a FB70     		strb	r3, [r7, #3]
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccuzGkEA.s 			page 14


 122:main.c        **** 
 123:main.c        ****         if((rxStatus & (UART_RX_STS_BREAK      | UART_RX_STS_PAR_ERROR |
 124:main.c        ****                         UART_RX_STS_STOP_ERROR | UART_RX_STS_OVERRUN)) != 0u)
 586              		.loc 1 124 0
 587 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 588 000e 03F01E03 		and	r3, r3, #30
 123:main.c        ****                         UART_RX_STS_STOP_ERROR | UART_RX_STS_OVERRUN)) != 0u)
 589              		.loc 1 123 0
 590 0012 002B     		cmp	r3, #0
 591 0014 0CD0     		beq	.L32
 125:main.c        ****         {
 126:main.c        ****             /* ERROR handling. */
 127:main.c        ****             errorStatus |= rxStatus & ( UART_RX_STS_BREAK      | UART_RX_STS_PAR_ERROR | 
 592              		.loc 1 127 0
 593 0016 97F90330 		ldrsb	r3, [r7, #3]
 594 001a 03F01E03 		and	r3, r3, #30
 595 001e 5AB2     		sxtb	r2, r3
 596 0020 9C4B     		ldr	r3, .L66+4
 597 0022 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 598 0024 5BB2     		sxtb	r3, r3
 599 0026 1343     		orrs	r3, r3, r2
 600 0028 5BB2     		sxtb	r3, r3
 601 002a DAB2     		uxtb	r2, r3
 602 002c 994B     		ldr	r3, .L66+4
 603 002e 1A70     		strb	r2, [r3]
 604              	.L32:
 128:main.c        ****                                         UART_RX_STS_STOP_ERROR | UART_RX_STS_OVERRUN);
 129:main.c        ****         }
 130:main.c        ****         
 131:main.c        ****         if((rxStatus & UART_RX_STS_FIFO_NOTEMPTY) != 0u)
 605              		.loc 1 131 0
 606 0030 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 607 0032 03F02003 		and	r3, r3, #32
 608 0036 002B     		cmp	r3, #0
 609 0038 00F01F81 		beq	.L33
 132:main.c        ****         {
 133:main.c        ****             /* Read data from the RX data register */
 134:main.c        ****             rxData = UART_RXDATA_REG;
 610              		.loc 1 134 0
 611 003c 964B     		ldr	r3, .L66+8
 612 003e 1B78     		ldrb	r3, [r3]
 613 0040 BB70     		strb	r3, [r7, #2]
 135:main.c        ****             help[tt] = rxData;
 614              		.loc 1 135 0
 615 0042 964B     		ldr	r3, .L66+12
 616 0044 1B68     		ldr	r3, [r3]
 617 0046 9649     		ldr	r1, .L66+16
 618 0048 BA78     		ldrb	r2, [r7, #2]
 619 004a CA54     		strb	r2, [r1, r3]
 136:main.c        ****             tt++;
 620              		.loc 1 136 0
 621 004c 934B     		ldr	r3, .L66+12
 622 004e 1B68     		ldr	r3, [r3]
 623 0050 0133     		adds	r3, r3, #1
 624 0052 924A     		ldr	r2, .L66+12
 625 0054 1360     		str	r3, [r2]
 137:main.c        ****             if(tt==99){tt=0;}
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccuzGkEA.s 			page 15


 626              		.loc 1 137 0
 627 0056 914B     		ldr	r3, .L66+12
 628 0058 1B68     		ldr	r3, [r3]
 629 005a 632B     		cmp	r3, #99
 630 005c 02D1     		bne	.L34
 631              		.loc 1 137 0 is_stmt 0 discriminator 1
 632 005e 8F4B     		ldr	r3, .L66+12
 633 0060 0022     		movs	r2, #0
 634 0062 1A60     		str	r2, [r3]
 635              	.L34:
 138:main.c        ****             if(rxData=='b' ){start_calib=1;};
 636              		.loc 1 138 0 is_stmt 1
 637 0064 BB78     		ldrb	r3, [r7, #2]	@ zero_extendqisi2
 638 0066 622B     		cmp	r3, #98
 639 0068 02D1     		bne	.L35
 640              		.loc 1 138 0 is_stmt 0 discriminator 1
 641 006a 8E4B     		ldr	r3, .L66+20
 642 006c 0122     		movs	r2, #1
 643 006e 1A60     		str	r2, [r3]
 644              	.L35:
 139:main.c        ****             switch(data_read_mode)
 645              		.loc 1 139 0 is_stmt 1
 646 0070 8D4B     		ldr	r3, .L66+24
 647 0072 1B68     		ldr	r3, [r3]
 648 0074 062B     		cmp	r3, #6
 649 0076 00F20081 		bhi	.L33
 650 007a 01A2     		adr	r2, .L38
 651 007c 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 652              		.p2align 2
 653              	.L38:
 654 0080 9D000000 		.word	.L37+1
 655 0084 D3000000 		.word	.L39+1
 656 0088 1B010000 		.word	.L40+1
 657 008c 6D010000 		.word	.L41+1
 658 0090 AF010000 		.word	.L42+1
 659 0094 F1010000 		.word	.L43+1
 660 0098 33020000 		.word	.L44+1
 661              		.p2align 1
 662              	.L37:
 140:main.c        ****             {
 141:main.c        ****                 case 0:
 142:main.c        ****                     if(rxData=='{' )
 663              		.loc 1 142 0
 664 009c BB78     		ldrb	r3, [r7, #2]	@ zero_extendqisi2
 665 009e 7B2B     		cmp	r3, #123
 666 00a0 40F0E880 		bne	.L64
 667              	.LBB7:
 143:main.c        ****                     {
 144:main.c        ****                         //aaaa
 145:main.c        ****                         for(int pp=1;pp<20;pp++){
 668              		.loc 1 145 0
 669 00a4 0123     		movs	r3, #1
 670 00a6 7B60     		str	r3, [r7, #4]
 671 00a8 07E0     		b	.L46
 672              	.L47:
 146:main.c        ****                             temp[pp] = ' ';
 673              		.loc 1 146 0 discriminator 3
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccuzGkEA.s 			page 16


 674 00aa 804A     		ldr	r2, .L66+28
 675 00ac 7B68     		ldr	r3, [r7, #4]
 676 00ae 1344     		add	r3, r3, r2
 677 00b0 2022     		movs	r2, #32
 678 00b2 1A70     		strb	r2, [r3]
 145:main.c        ****                             temp[pp] = ' ';
 679              		.loc 1 145 0 discriminator 3
 680 00b4 7B68     		ldr	r3, [r7, #4]
 681 00b6 0133     		adds	r3, r3, #1
 682 00b8 7B60     		str	r3, [r7, #4]
 683              	.L46:
 145:main.c        ****                             temp[pp] = ' ';
 684              		.loc 1 145 0 is_stmt 0 discriminator 1
 685 00ba 7B68     		ldr	r3, [r7, #4]
 686 00bc 132B     		cmp	r3, #19
 687 00be F4DD     		ble	.L47
 688              	.LBE7:
 147:main.c        ****                         }
 148:main.c        ****                         temp[0] = '\0';
 689              		.loc 1 148 0 is_stmt 1
 690 00c0 7A4B     		ldr	r3, .L66+28
 691 00c2 0022     		movs	r2, #0
 692 00c4 1A70     		strb	r2, [r3]
 149:main.c        ****                         data_read_mode++;
 693              		.loc 1 149 0
 694 00c6 784B     		ldr	r3, .L66+24
 695 00c8 1B68     		ldr	r3, [r3]
 696 00ca 0133     		adds	r3, r3, #1
 697 00cc 764A     		ldr	r2, .L66+24
 698 00ce 1360     		str	r3, [r2]
 150:main.c        ****                     }
 151:main.c        ****                 break;
 699              		.loc 1 151 0
 700 00d0 D0E0     		b	.L64
 701              	.L39:
 152:main.c        ****                 case 1:
 153:main.c        ****                     if(rxData=='x'){
 702              		.loc 1 153 0
 703 00d2 BB78     		ldrb	r3, [r7, #2]	@ zero_extendqisi2
 704 00d4 782B     		cmp	r3, #120
 705 00d6 03D1     		bne	.L48
 154:main.c        ****                         data_read_mode = 2;}
 706              		.loc 1 154 0
 707 00d8 734B     		ldr	r3, .L66+24
 708 00da 0222     		movs	r2, #2
 709 00dc 1A60     		str	r2, [r3]
 155:main.c        ****                     else if(rxData=='p'){
 156:main.c        ****                         data_read_mode = 3;}
 157:main.c        ****                     else if(rxData=='i'){
 158:main.c        ****                         data_read_mode = 4;}
 159:main.c        ****                     else if(rxData=='d'){
 160:main.c        ****                         data_read_mode = 5;}
 161:main.c        ****                     else if(rxData=='c'){
 162:main.c        ****                         data_read_mode = 6;}
 163:main.c        ****                 break;
 710              		.loc 1 163 0
 711 00de CBE0     		b	.L65
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccuzGkEA.s 			page 17


 712              	.L48:
 155:main.c        ****                     else if(rxData=='p'){
 713              		.loc 1 155 0
 714 00e0 BB78     		ldrb	r3, [r7, #2]	@ zero_extendqisi2
 715 00e2 702B     		cmp	r3, #112
 716 00e4 03D1     		bne	.L50
 156:main.c        ****                     else if(rxData=='i'){
 717              		.loc 1 156 0
 718 00e6 704B     		ldr	r3, .L66+24
 719 00e8 0322     		movs	r2, #3
 720 00ea 1A60     		str	r2, [r3]
 721              		.loc 1 163 0
 722 00ec C4E0     		b	.L65
 723              	.L50:
 157:main.c        ****                         data_read_mode = 4;}
 724              		.loc 1 157 0
 725 00ee BB78     		ldrb	r3, [r7, #2]	@ zero_extendqisi2
 726 00f0 692B     		cmp	r3, #105
 727 00f2 03D1     		bne	.L51
 158:main.c        ****                     else if(rxData=='d'){
 728              		.loc 1 158 0
 729 00f4 6C4B     		ldr	r3, .L66+24
 730 00f6 0422     		movs	r2, #4
 731 00f8 1A60     		str	r2, [r3]
 732              		.loc 1 163 0
 733 00fa BDE0     		b	.L65
 734              	.L51:
 159:main.c        ****                         data_read_mode = 5;}
 735              		.loc 1 159 0
 736 00fc BB78     		ldrb	r3, [r7, #2]	@ zero_extendqisi2
 737 00fe 642B     		cmp	r3, #100
 738 0100 03D1     		bne	.L52
 160:main.c        ****                     else if(rxData=='c'){
 739              		.loc 1 160 0
 740 0102 694B     		ldr	r3, .L66+24
 741 0104 0522     		movs	r2, #5
 742 0106 1A60     		str	r2, [r3]
 743              		.loc 1 163 0
 744 0108 B6E0     		b	.L65
 745              	.L52:
 161:main.c        ****                         data_read_mode = 6;}
 746              		.loc 1 161 0
 747 010a BB78     		ldrb	r3, [r7, #2]	@ zero_extendqisi2
 748 010c 632B     		cmp	r3, #99
 749 010e 40F0B380 		bne	.L65
 162:main.c        ****                 break;
 750              		.loc 1 162 0
 751 0112 654B     		ldr	r3, .L66+24
 752 0114 0622     		movs	r2, #6
 753 0116 1A60     		str	r2, [r3]
 754              		.loc 1 163 0
 755 0118 AEE0     		b	.L65
 756              	.L40:
 164:main.c        ****                 case 2: //x
 165:main.c        ****                     if(rxData != '}'){
 757              		.loc 1 165 0
 758 011a BB78     		ldrb	r3, [r7, #2]	@ zero_extendqisi2
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccuzGkEA.s 			page 18


 759 011c 7D2B     		cmp	r3, #125
 760 011e 0AD0     		beq	.L53
 166:main.c        ****                         temp[nn] = rxData;
 761              		.loc 1 166 0
 762 0120 634B     		ldr	r3, .L66+32
 763 0122 1B68     		ldr	r3, [r3]
 764 0124 6149     		ldr	r1, .L66+28
 765 0126 BA78     		ldrb	r2, [r7, #2]
 766 0128 CA54     		strb	r2, [r1, r3]
 167:main.c        ****                         nn++;
 767              		.loc 1 167 0
 768 012a 614B     		ldr	r3, .L66+32
 769 012c 1B68     		ldr	r3, [r3]
 770 012e 0133     		adds	r3, r3, #1
 771 0130 5F4A     		ldr	r2, .L66+32
 772 0132 1360     		str	r3, [r2]
 168:main.c        ****                     }
 169:main.c        ****                     else {
 170:main.c        ****                         
 171:main.c        ****                         new_pos[cyl_no] = (int) strtol(temp, (char **)NULL, 10);
 172:main.c        ****                         new_pos_set[cyl_no] = 1;
 173:main.c        ****                         nn=0; 
 174:main.c        ****                         temp[0] = '\0';
 175:main.c        ****                         data_read_mode = 0;
 176:main.c        ****                         
 177:main.c        ****                     }
 178:main.c        ****                   
 179:main.c        ****                 break;
 773              		.loc 1 179 0
 774 0134 A1E0     		b	.L33
 775              	.L53:
 171:main.c        ****                         new_pos_set[cyl_no] = 1;
 776              		.loc 1 171 0
 777 0136 5F4B     		ldr	r3, .L66+36
 778 0138 1C68     		ldr	r4, [r3]
 779 013a 0A22     		movs	r2, #10
 780 013c 0021     		movs	r1, #0
 781 013e 5B48     		ldr	r0, .L66+28
 782 0140 FFF7FEFF 		bl	strtol
 783 0144 0246     		mov	r2, r0
 784 0146 5C4B     		ldr	r3, .L66+40
 785 0148 43F82420 		str	r2, [r3, r4, lsl #2]
 172:main.c        ****                         nn=0; 
 786              		.loc 1 172 0
 787 014c 594B     		ldr	r3, .L66+36
 788 014e 1B68     		ldr	r3, [r3]
 789 0150 5A4A     		ldr	r2, .L66+44
 790 0152 0121     		movs	r1, #1
 791 0154 42F82310 		str	r1, [r2, r3, lsl #2]
 173:main.c        ****                         temp[0] = '\0';
 792              		.loc 1 173 0
 793 0158 554B     		ldr	r3, .L66+32
 794 015a 0022     		movs	r2, #0
 795 015c 1A60     		str	r2, [r3]
 174:main.c        ****                         data_read_mode = 0;
 796              		.loc 1 174 0
 797 015e 534B     		ldr	r3, .L66+28
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccuzGkEA.s 			page 19


 798 0160 0022     		movs	r2, #0
 799 0162 1A70     		strb	r2, [r3]
 175:main.c        ****                         
 800              		.loc 1 175 0
 801 0164 504B     		ldr	r3, .L66+24
 802 0166 0022     		movs	r2, #0
 803 0168 1A60     		str	r2, [r3]
 804              		.loc 1 179 0
 805 016a 86E0     		b	.L33
 806              	.L41:
 180:main.c        ****                 case 3: //p
 181:main.c        ****                     if(rxData != '}'){
 807              		.loc 1 181 0
 808 016c BB78     		ldrb	r3, [r7, #2]	@ zero_extendqisi2
 809 016e 7D2B     		cmp	r3, #125
 810 0170 0AD0     		beq	.L55
 182:main.c        ****                         temp[nn] = rxData;
 811              		.loc 1 182 0
 812 0172 4F4B     		ldr	r3, .L66+32
 813 0174 1B68     		ldr	r3, [r3]
 814 0176 4D49     		ldr	r1, .L66+28
 815 0178 BA78     		ldrb	r2, [r7, #2]
 816 017a CA54     		strb	r2, [r1, r3]
 183:main.c        ****                         nn++;
 817              		.loc 1 183 0
 818 017c 4C4B     		ldr	r3, .L66+32
 819 017e 1B68     		ldr	r3, [r3]
 820 0180 0133     		adds	r3, r3, #1
 821 0182 4B4A     		ldr	r2, .L66+32
 822 0184 1360     		str	r3, [r2]
 184:main.c        ****                     }
 185:main.c        ****                     else {
 186:main.c        ****                         pid[0] = strtod(temp, NULL);
 187:main.c        ****                         nn=0;
 188:main.c        ****                         temp[0] = '\0';
 189:main.c        ****                         data_read_mode = 0;
 190:main.c        ****                     }
 191:main.c        ****                     
 192:main.c        ****                 break;
 823              		.loc 1 192 0
 824 0186 78E0     		b	.L33
 825              	.L55:
 186:main.c        ****                         nn=0;
 826              		.loc 1 186 0
 827 0188 0021     		movs	r1, #0
 828 018a 4848     		ldr	r0, .L66+28
 829 018c FFF7FEFF 		bl	strtod
 830 0190 0346     		mov	r3, r0
 831 0192 0C46     		mov	r4, r1
 832 0194 4A4A     		ldr	r2, .L66+48
 833 0196 C2E90034 		strd	r3, [r2]
 187:main.c        ****                         temp[0] = '\0';
 834              		.loc 1 187 0
 835 019a 454B     		ldr	r3, .L66+32
 836 019c 0022     		movs	r2, #0
 837 019e 1A60     		str	r2, [r3]
 188:main.c        ****                         data_read_mode = 0;
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccuzGkEA.s 			page 20


 838              		.loc 1 188 0
 839 01a0 424B     		ldr	r3, .L66+28
 840 01a2 0022     		movs	r2, #0
 841 01a4 1A70     		strb	r2, [r3]
 189:main.c        ****                     }
 842              		.loc 1 189 0
 843 01a6 404B     		ldr	r3, .L66+24
 844 01a8 0022     		movs	r2, #0
 845 01aa 1A60     		str	r2, [r3]
 846              		.loc 1 192 0
 847 01ac 65E0     		b	.L33
 848              	.L42:
 193:main.c        ****                 case 4: //i
 194:main.c        ****                     if(rxData != '}'){
 849              		.loc 1 194 0
 850 01ae BB78     		ldrb	r3, [r7, #2]	@ zero_extendqisi2
 851 01b0 7D2B     		cmp	r3, #125
 852 01b2 0AD0     		beq	.L57
 195:main.c        ****                         temp[nn] = rxData;
 853              		.loc 1 195 0
 854 01b4 3E4B     		ldr	r3, .L66+32
 855 01b6 1B68     		ldr	r3, [r3]
 856 01b8 3C49     		ldr	r1, .L66+28
 857 01ba BA78     		ldrb	r2, [r7, #2]
 858 01bc CA54     		strb	r2, [r1, r3]
 196:main.c        ****                         nn++;
 859              		.loc 1 196 0
 860 01be 3C4B     		ldr	r3, .L66+32
 861 01c0 1B68     		ldr	r3, [r3]
 862 01c2 0133     		adds	r3, r3, #1
 863 01c4 3A4A     		ldr	r2, .L66+32
 864 01c6 1360     		str	r3, [r2]
 197:main.c        ****                     }
 198:main.c        ****                     else {
 199:main.c        ****                         pid[1] = strtod(temp, NULL);
 200:main.c        ****                         nn=0;
 201:main.c        ****                         temp[0] = '\0';
 202:main.c        ****                         data_read_mode = 0;
 203:main.c        ****                     }
 204:main.c        ****                 break;
 865              		.loc 1 204 0
 866 01c8 57E0     		b	.L33
 867              	.L57:
 199:main.c        ****                         nn=0;
 868              		.loc 1 199 0
 869 01ca 0021     		movs	r1, #0
 870 01cc 3748     		ldr	r0, .L66+28
 871 01ce FFF7FEFF 		bl	strtod
 872 01d2 0346     		mov	r3, r0
 873 01d4 0C46     		mov	r4, r1
 874 01d6 3A4A     		ldr	r2, .L66+48
 875 01d8 C2E90234 		strd	r3, [r2, #8]
 200:main.c        ****                         temp[0] = '\0';
 876              		.loc 1 200 0
 877 01dc 344B     		ldr	r3, .L66+32
 878 01de 0022     		movs	r2, #0
 879 01e0 1A60     		str	r2, [r3]
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccuzGkEA.s 			page 21


 201:main.c        ****                         data_read_mode = 0;
 880              		.loc 1 201 0
 881 01e2 324B     		ldr	r3, .L66+28
 882 01e4 0022     		movs	r2, #0
 883 01e6 1A70     		strb	r2, [r3]
 202:main.c        ****                     }
 884              		.loc 1 202 0
 885 01e8 2F4B     		ldr	r3, .L66+24
 886 01ea 0022     		movs	r2, #0
 887 01ec 1A60     		str	r2, [r3]
 888              		.loc 1 204 0
 889 01ee 44E0     		b	.L33
 890              	.L43:
 205:main.c        ****                 case 5: //d
 206:main.c        ****                     if(rxData != '}'){
 891              		.loc 1 206 0
 892 01f0 BB78     		ldrb	r3, [r7, #2]	@ zero_extendqisi2
 893 01f2 7D2B     		cmp	r3, #125
 894 01f4 0AD0     		beq	.L59
 207:main.c        ****                         temp[nn] = rxData;
 895              		.loc 1 207 0
 896 01f6 2E4B     		ldr	r3, .L66+32
 897 01f8 1B68     		ldr	r3, [r3]
 898 01fa 2C49     		ldr	r1, .L66+28
 899 01fc BA78     		ldrb	r2, [r7, #2]
 900 01fe CA54     		strb	r2, [r1, r3]
 208:main.c        ****                         nn++;
 901              		.loc 1 208 0
 902 0200 2B4B     		ldr	r3, .L66+32
 903 0202 1B68     		ldr	r3, [r3]
 904 0204 0133     		adds	r3, r3, #1
 905 0206 2A4A     		ldr	r2, .L66+32
 906 0208 1360     		str	r3, [r2]
 209:main.c        ****                     }
 210:main.c        ****                     else {
 211:main.c        ****                         pid[2] = strtod(temp, NULL);
 212:main.c        ****                         nn=0;
 213:main.c        ****                         temp[0] = '\0';
 214:main.c        ****                         data_read_mode = 0;
 215:main.c        ****                     }
 216:main.c        ****                 break;
 907              		.loc 1 216 0
 908 020a 36E0     		b	.L33
 909              	.L59:
 211:main.c        ****                         nn=0;
 910              		.loc 1 211 0
 911 020c 0021     		movs	r1, #0
 912 020e 2748     		ldr	r0, .L66+28
 913 0210 FFF7FEFF 		bl	strtod
 914 0214 0346     		mov	r3, r0
 915 0216 0C46     		mov	r4, r1
 916 0218 294A     		ldr	r2, .L66+48
 917 021a C2E90434 		strd	r3, [r2, #16]
 212:main.c        ****                         temp[0] = '\0';
 918              		.loc 1 212 0
 919 021e 244B     		ldr	r3, .L66+32
 920 0220 0022     		movs	r2, #0
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccuzGkEA.s 			page 22


 921 0222 1A60     		str	r2, [r3]
 213:main.c        ****                         data_read_mode = 0;
 922              		.loc 1 213 0
 923 0224 214B     		ldr	r3, .L66+28
 924 0226 0022     		movs	r2, #0
 925 0228 1A70     		strb	r2, [r3]
 214:main.c        ****                     }
 926              		.loc 1 214 0
 927 022a 1F4B     		ldr	r3, .L66+24
 928 022c 0022     		movs	r2, #0
 929 022e 1A60     		str	r2, [r3]
 930              		.loc 1 216 0
 931 0230 23E0     		b	.L33
 932              	.L44:
 217:main.c        ****                 case 6: //c
 218:main.c        ****                     if(rxData != '}'){
 933              		.loc 1 218 0
 934 0232 BB78     		ldrb	r3, [r7, #2]	@ zero_extendqisi2
 935 0234 7D2B     		cmp	r3, #125
 936 0236 0AD0     		beq	.L61
 219:main.c        ****                         temp[nn] = rxData;
 937              		.loc 1 219 0
 938 0238 1D4B     		ldr	r3, .L66+32
 939 023a 1B68     		ldr	r3, [r3]
 940 023c 1B49     		ldr	r1, .L66+28
 941 023e BA78     		ldrb	r2, [r7, #2]
 942 0240 CA54     		strb	r2, [r1, r3]
 220:main.c        ****                         nn++;
 943              		.loc 1 220 0
 944 0242 1B4B     		ldr	r3, .L66+32
 945 0244 1B68     		ldr	r3, [r3]
 946 0246 0133     		adds	r3, r3, #1
 947 0248 194A     		ldr	r2, .L66+32
 948 024a 1360     		str	r3, [r2]
 221:main.c        ****                     }
 222:main.c        ****                     else {
 223:main.c        ****                         cyl_no = (int) strtol(temp, (char **)NULL, 10);
 224:main.c        ****                         nn=0; 
 225:main.c        ****                         temp[0] = '\0';
 226:main.c        ****                         data_read_mode = 0;
 227:main.c        ****                     }
 228:main.c        ****                   
 229:main.c        ****                 break;
 949              		.loc 1 229 0
 950 024c 15E0     		b	.L33
 951              	.L61:
 223:main.c        ****                         nn=0; 
 952              		.loc 1 223 0
 953 024e 0A22     		movs	r2, #10
 954 0250 0021     		movs	r1, #0
 955 0252 1648     		ldr	r0, .L66+28
 956 0254 FFF7FEFF 		bl	strtol
 957 0258 0246     		mov	r2, r0
 958 025a 164B     		ldr	r3, .L66+36
 959 025c 1A60     		str	r2, [r3]
 224:main.c        ****                         temp[0] = '\0';
 960              		.loc 1 224 0
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccuzGkEA.s 			page 23


 961 025e 144B     		ldr	r3, .L66+32
 962 0260 0022     		movs	r2, #0
 963 0262 1A60     		str	r2, [r3]
 225:main.c        ****                         data_read_mode = 0;
 964              		.loc 1 225 0
 965 0264 114B     		ldr	r3, .L66+28
 966 0266 0022     		movs	r2, #0
 967 0268 1A70     		strb	r2, [r3]
 226:main.c        ****                     }
 968              		.loc 1 226 0
 969 026a 0F4B     		ldr	r3, .L66+24
 970 026c 0022     		movs	r2, #0
 971 026e 1A60     		str	r2, [r3]
 972              		.loc 1 229 0
 973 0270 00BF     		nop
 974 0272 02E0     		b	.L33
 975              	.L64:
 151:main.c        ****                 case 1:
 976              		.loc 1 151 0
 977 0274 00BF     		nop
 978 0276 00E0     		b	.L33
 979              	.L65:
 163:main.c        ****                 case 2: //x
 980              		.loc 1 163 0
 981 0278 00BF     		nop
 982              	.L33:
 230:main.c        ****             }
 231:main.c        ****             
 232:main.c        ****             if(errorStatus == 0u)
 233:main.c        ****             {
 234:main.c        ****                 /* Send data backward */
 235:main.c        ****                 //UART_TXDATA_REG = rxData;
 236:main.c        ****             }
 237:main.c        ****         }
 238:main.c        ****     }while((rxStatus & UART_RX_STS_FIFO_NOTEMPTY) != 0u);
 983              		.loc 1 238 0
 984 027a FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 985 027c 03F02003 		and	r3, r3, #32
 986 0280 002B     		cmp	r3, #0
 987 0282 7FF4C0AE 		bne	.L63
 239:main.c        **** }
 988              		.loc 1 239 0
 989 0286 00BF     		nop
 990 0288 0C37     		adds	r7, r7, #12
 991              		.cfi_def_cfa_offset 12
 992 028a BD46     		mov	sp, r7
 993              		.cfi_def_cfa_register 13
 994              		@ sp needed
 995 028c 90BD     		pop	{r4, r7, pc}
 996              	.L67:
 997 028e 00BF     		.align	2
 998              	.L66:
 999 0290 69650040 		.word	1073767785
 1000 0294 00000000 		.word	errorStatus
 1001 0298 4A650040 		.word	1073767754
 1002 029c 00000000 		.word	tt
 1003 02a0 00000000 		.word	help
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccuzGkEA.s 			page 24


 1004 02a4 00000000 		.word	start_calib
 1005 02a8 00000000 		.word	data_read_mode
 1006 02ac 00000000 		.word	temp
 1007 02b0 00000000 		.word	nn
 1008 02b4 00000000 		.word	cyl_no
 1009 02b8 00000000 		.word	new_pos
 1010 02bc 00000000 		.word	new_pos_set
 1011 02c0 00000000 		.word	pid
 1012              		.cfi_endproc
 1013              	.LFE67:
 1014              		.size	RxIsr, .-RxIsr
 1015              		.global	led_switch
 1016              		.bss
 1017              		.align	2
 1018              		.type	led_switch, %object
 1019              		.size	led_switch, 4
 1020              	led_switch:
 1021 00e4 00000000 		.space	4
 1022              		.section	.rodata
 1023              		.align	2
 1024              	.LC0:
 1025 0000 25303864 		.ascii	"%08d\011%08.2f\011%08d\011%08.2f\000"
 1025      09253038 
 1025      2E326609 
 1025      25303864 
 1025      09253038 
 1026              		.global	__aeabi_i2d
 1027              		.global	__aeabi_dsub
 1028              		.global	__aeabi_dadd
 1029              		.global	__aeabi_dmul
 1030              		.global	__aeabi_ddiv
 1031              		.global	__aeabi_d2iz
 1032              		.align	2
 1033              	.LC1:
 1034 0018 55505045 		.ascii	"UPPER:\011Lower Offset: %d \011Upper Offset: %d \011"
 1034      523A094C 
 1034      6F776572 
 1034      204F6666 
 1034      7365743A 
 1035 0043 20414443 		.ascii	" ADC Diff: %d\012\000"
 1035      20446966 
 1035      663A2025 
 1035      640A00
 1036 0052 0000     		.align	2
 1037              	.LC2:
 1038 0054 4C4F5745 		.ascii	"LOWER:\011Lower Offset: %d \011Upper Offset: %d \011"
 1038      523A094C 
 1038      6F776572 
 1038      204F6666 
 1038      7365743A 
 1039 007f 20414443 		.ascii	" ADC Diff: %d\012\000"
 1039      20446966 
 1039      663A2025 
 1039      640A00
 1040 008e 0000     		.align	2
 1041              	.LC3:
 1042 0090 4C6F7765 		.ascii	"Lower Offset: %d \011 Upper Offset: %d \012\000"
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccuzGkEA.s 			page 25


 1042      72204F66 
 1042      66736574 
 1042      3A202564 
 1042      20092055 
 1043              		.global	__aeabi_ui2d
 1044              		.section	.text.main,"ax",%progbits
 1045              		.align	2
 1046              		.global	main
 1047              		.thumb
 1048              		.thumb_func
 1049              		.type	main, %function
 1050              	main:
 1051              	.LFB68:
 240:main.c        ****     
 241:main.c        **** 
 242:main.c        **** 
 243:main.c        **** int led_switch = 0;
 244:main.c        **** int main()
 245:main.c        **** {
 1052              		.loc 1 245 0
 1053              		.cfi_startproc
 1054              		@ args = 0, pretend = 0, frame = 64
 1055              		@ frame_needed = 1, uses_anonymous_args = 0
 1056 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1057              		.cfi_def_cfa_offset 20
 1058              		.cfi_offset 4, -20
 1059              		.cfi_offset 5, -16
 1060              		.cfi_offset 6, -12
 1061              		.cfi_offset 7, -8
 1062              		.cfi_offset 14, -4
 1063 0002 97B0     		sub	sp, sp, #92
 1064              		.cfi_def_cfa_offset 112
 1065 0004 06AF     		add	r7, sp, #24
 1066              		.cfi_def_cfa 7, 88
 246:main.c        ****     
 247:main.c        ****     //PWM variables
 248:main.c        ****     PWM_0_Start();
 1067              		.loc 1 248 0
 1068 0006 FFF7FEFF 		bl	PWM_0_Start
 249:main.c        ****     PWM_1_Start();
 1069              		.loc 1 249 0
 1070 000a FFF7FEFF 		bl	PWM_1_Start
 250:main.c        ****     PWM_2_Start();
 1071              		.loc 1 250 0
 1072 000e FFF7FEFF 		bl	PWM_2_Start
 251:main.c        ****     PWM_3_Start();
 1073              		.loc 1 251 0
 1074 0012 FFF7FEFF 		bl	PWM_3_Start
 252:main.c        ****     ADC_0_Start();
 1075              		.loc 1 252 0
 1076 0016 FFF7FEFF 		bl	ADC_0_Start
 253:main.c        ****     ADC_0_StartConvert();
 1077              		.loc 1 253 0
 1078 001a FFF7FEFF 		bl	ADC_0_StartConvert
 254:main.c        ****     AMux_0_Init();
 1079              		.loc 1 254 0
 1080 001e FFF7FEFF 		bl	AMux_0_Start
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccuzGkEA.s 			page 26


 255:main.c        ****     
 256:main.c        ****     UART_Start();           /* Start communication component */
 1081              		.loc 1 256 0
 1082 0022 FFF7FEFF 		bl	UART_Start
 257:main.c        **** 
 258:main.c        **** #if(INTERRUPT_CODE_ENABLED == ENABLED)
 259:main.c        ****     isr_rx_StartEx(RxIsr);
 1083              		.loc 1 259 0
 1084 0026 AA48     		ldr	r0, .L86+8
 1085 0028 FFF7FEFF 		bl	isr_rx_StartEx
 260:main.c        ****     update_median_isr_StartEx(adc_update);
 1086              		.loc 1 260 0
 1087 002c A948     		ldr	r0, .L86+12
 1088 002e FFF7FEFF 		bl	update_median_isr_StartEx
 261:main.c        **** #endif /* INTERRUPT_CODE_ENABLED == ENABLED */
 262:main.c        ****     
 263:main.c        ****     CyGlobalIntEnable;      /* Enable global interrupts. */
 1089              		.loc 1 263 0
 1090              		.syntax unified
 1091              	@ 263 "main.c" 1
 1092 0032 62B6     		CPSIE   i
 1093              	@ 0 "" 2
 264:main.c        ****     
 265:main.c        ****     double dt;
 266:main.c        ****     double time;
 267:main.c        ****     
 268:main.c        ****     dt = 0.025; //initialised dt, corrected by timer  below
 1094              		.loc 1 268 0
 1095              		.thumb
 1096              		.syntax unified
 1097 0034 A4A4     		adr	r4, .L86
 1098 0036 D4E90034 		ldrd	r3, [r4]
 1099 003a C7E90E34 		strd	r3, [r7, #56]
 269:main.c        **** 
 270:main.c        ****     sprintf(sendValue,"%08d\t%08.2f\t%08d\t%08.2f",adcValue[0],err[0],adcValue[1],err[1]);
 1100              		.loc 1 270 0
 1101 003e A64B     		ldr	r3, .L86+16
 1102 0040 1B88     		ldrh	r3, [r3]
 1103 0042 1D46     		mov	r5, r3
 1104 0044 A54B     		ldr	r3, .L86+20
 1105 0046 18CB     		ldmia	r3, {r3-r4}
 1106 0048 A34A     		ldr	r2, .L86+16
 1107 004a 5288     		ldrh	r2, [r2, #2]
 1108 004c 1046     		mov	r0, r2
 1109 004e A34A     		ldr	r2, .L86+20
 1110 0050 D2E90212 		ldrd	r1, [r2, #8]
 1111 0054 CDE90412 		strd	r1, [sp, #16]
 1112 0058 0290     		str	r0, [sp, #8]
 1113 005a CDE90034 		strd	r3, [sp]
 1114 005e 2A46     		mov	r2, r5
 1115 0060 9F49     		ldr	r1, .L86+24
 1116 0062 A048     		ldr	r0, .L86+28
 1117 0064 FFF7FEFF 		bl	sprintf
 271:main.c        ****     UART_PutString(sendValue);
 1118              		.loc 1 271 0
 1119 0068 9E48     		ldr	r0, .L86+28
 1120 006a FFF7FEFF 		bl	UART_PutString
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccuzGkEA.s 			page 27


 272:main.c        ****     
 273:main.c        ****     median_timer_Start();
 1121              		.loc 1 273 0
 1122 006e FFF7FEFF 		bl	median_timer_Start
 274:main.c        ****     Timer_1_Start();
 1123              		.loc 1 274 0
 1124 0072 FFF7FEFF 		bl	Timer_1_Start
 275:main.c        ****    int send_now = 0;
 1125              		.loc 1 275 0
 1126 0076 0023     		movs	r3, #0
 1127 0078 7B61     		str	r3, [r7, #20]
 1128              	.L85:
 276:main.c        ****     
 277:main.c        ****     for(;;)
 278:main.c        ****     {
 279:main.c        ****         Timer_1_WriteCounter(65535);
 1129              		.loc 1 279 0
 1130 007a 4FF6FF70 		movw	r0, #65535
 1131 007e FFF7FEFF 		bl	Timer_1_WriteCounter
 280:main.c        ****         sprintf(sendValue,"%08d\t%08.2f\t%08d\t%08.2f",adcValue[0],err[0],adcValue[1],err[1]);
 1132              		.loc 1 280 0
 1133 0082 954B     		ldr	r3, .L86+16
 1134 0084 1B88     		ldrh	r3, [r3]
 1135 0086 1D46     		mov	r5, r3
 1136 0088 944B     		ldr	r3, .L86+20
 1137 008a 18CB     		ldmia	r3, {r3-r4}
 1138 008c 924A     		ldr	r2, .L86+16
 1139 008e 5288     		ldrh	r2, [r2, #2]
 1140 0090 1046     		mov	r0, r2
 1141 0092 924A     		ldr	r2, .L86+20
 1142 0094 D2E90212 		ldrd	r1, [r2, #8]
 1143 0098 CDE90412 		strd	r1, [sp, #16]
 1144 009c 0290     		str	r0, [sp, #8]
 1145 009e CDE90034 		strd	r3, [sp]
 1146 00a2 2A46     		mov	r2, r5
 1147 00a4 8E49     		ldr	r1, .L86+24
 1148 00a6 8F48     		ldr	r0, .L86+28
 1149 00a8 FFF7FEFF 		bl	sprintf
 281:main.c        ****         UART_PutString(sendValue);
 1150              		.loc 1 281 0
 1151 00ac 8D48     		ldr	r0, .L86+28
 1152 00ae FFF7FEFF 		bl	UART_PutString
 1153              	.LBB8:
 282:main.c        ****         //sprintf(sendValue,"%08d\t%08.2f\t%08d\t%08.2f",adcValue[0],err[0],adcValue[1],err[1]);
 283:main.c        ****         //UART_PutString(sendValue);
 284:main.c        ****         /* START PID CODE */
 285:main.c        ****         for(int cyl = 0;cyl<CYL_NO;cyl++){
 1154              		.loc 1 285 0
 1155 00b2 0023     		movs	r3, #0
 1156 00b4 7B63     		str	r3, [r7, #52]
 1157 00b6 D7E0     		b	.L69
 1158              	.L71:
 286:main.c        ****             if(new_pos_set[cyl]){
 1159              		.loc 1 286 0
 1160 00b8 8B4A     		ldr	r2, .L86+32
 1161 00ba 7B6B     		ldr	r3, [r7, #52]
 1162 00bc 52F82330 		ldr	r3, [r2, r3, lsl #2]
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccuzGkEA.s 			page 28


 1163 00c0 002B     		cmp	r3, #0
 1164 00c2 0CD0     		beq	.L70
 287:main.c        ****                 pos[cyl] = new_pos[cyl];
 1165              		.loc 1 287 0
 1166 00c4 894A     		ldr	r2, .L86+36
 1167 00c6 7B6B     		ldr	r3, [r7, #52]
 1168 00c8 52F82320 		ldr	r2, [r2, r3, lsl #2]
 1169 00cc 8849     		ldr	r1, .L86+40
 1170 00ce 7B6B     		ldr	r3, [r7, #52]
 1171 00d0 41F82320 		str	r2, [r1, r3, lsl #2]
 288:main.c        ****                 new_pos_set[cyl] = 0;
 1172              		.loc 1 288 0
 1173 00d4 844A     		ldr	r2, .L86+32
 1174 00d6 7B6B     		ldr	r3, [r7, #52]
 1175 00d8 0021     		movs	r1, #0
 1176 00da 42F82310 		str	r1, [r2, r3, lsl #2]
 1177              	.L70:
 289:main.c        ****             }
 290:main.c        ****             
 291:main.c        ****             err[cyl] = -pos[cyl] + adcValue[cyl];
 1178              		.loc 1 291 0 discriminator 2
 1179 00de 7E4A     		ldr	r2, .L86+16
 1180 00e0 7B6B     		ldr	r3, [r7, #52]
 1181 00e2 32F81330 		ldrh	r3, [r2, r3, lsl #1]
 1182 00e6 1946     		mov	r1, r3
 1183 00e8 814A     		ldr	r2, .L86+40
 1184 00ea 7B6B     		ldr	r3, [r7, #52]
 1185 00ec 52F82330 		ldr	r3, [r2, r3, lsl #2]
 1186 00f0 CB1A     		subs	r3, r1, r3
 1187 00f2 1846     		mov	r0, r3
 1188 00f4 FFF7FEFF 		bl	__aeabi_i2d
 1189 00f8 0346     		mov	r3, r0
 1190 00fa 0C46     		mov	r4, r1
 1191 00fc 7749     		ldr	r1, .L86+20
 1192 00fe 7A6B     		ldr	r2, [r7, #52]
 1193 0100 D200     		lsls	r2, r2, #3
 1194 0102 0A44     		add	r2, r2, r1
 1195 0104 C2E90034 		strd	r3, [r2]
 292:main.c        ****             der[cyl] = err[cyl] - prev_err[cyl];
 1196              		.loc 1 292 0 discriminator 2
 1197 0108 744A     		ldr	r2, .L86+20
 1198 010a 7B6B     		ldr	r3, [r7, #52]
 1199 010c DB00     		lsls	r3, r3, #3
 1200 010e 1344     		add	r3, r3, r2
 1201 0110 D3E90001 		ldrd	r0, [r3]
 1202 0114 774A     		ldr	r2, .L86+44
 1203 0116 7B6B     		ldr	r3, [r7, #52]
 1204 0118 DB00     		lsls	r3, r3, #3
 1205 011a 1344     		add	r3, r3, r2
 1206 011c 18CB     		ldmia	r3, {r3-r4}
 1207 011e 1A46     		mov	r2, r3
 1208 0120 2346     		mov	r3, r4
 1209 0122 FFF7FEFF 		bl	__aeabi_dsub
 1210 0126 0346     		mov	r3, r0
 1211 0128 0C46     		mov	r4, r1
 1212 012a 7349     		ldr	r1, .L86+48
 1213 012c 7A6B     		ldr	r2, [r7, #52]
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccuzGkEA.s 			page 29


 1214 012e D200     		lsls	r2, r2, #3
 1215 0130 0A44     		add	r2, r2, r1
 1216 0132 C2E90034 		strd	r3, [r2]
 293:main.c        ****             pid_integral[cyl] = err[cyl] + pid_integral[cyl];
 1217              		.loc 1 293 0 discriminator 2
 1218 0136 694A     		ldr	r2, .L86+20
 1219 0138 7B6B     		ldr	r3, [r7, #52]
 1220 013a DB00     		lsls	r3, r3, #3
 1221 013c 1344     		add	r3, r3, r2
 1222 013e D3E90001 		ldrd	r0, [r3]
 1223 0142 6E4A     		ldr	r2, .L86+52
 1224 0144 7B6B     		ldr	r3, [r7, #52]
 1225 0146 DB00     		lsls	r3, r3, #3
 1226 0148 1344     		add	r3, r3, r2
 1227 014a 18CB     		ldmia	r3, {r3-r4}
 1228 014c 1A46     		mov	r2, r3
 1229 014e 2346     		mov	r3, r4
 1230 0150 FFF7FEFF 		bl	__aeabi_dadd
 1231 0154 0346     		mov	r3, r0
 1232 0156 0C46     		mov	r4, r1
 1233 0158 6849     		ldr	r1, .L86+52
 1234 015a 7A6B     		ldr	r2, [r7, #52]
 1235 015c D200     		lsls	r2, r2, #3
 1236 015e 0A44     		add	r2, r2, r1
 1237 0160 C2E90034 		strd	r3, [r2]
 294:main.c        ****             pulse_temp[cyl] = pid[0] * err[cyl] + ( pid[1] * pid_integral[cyl] * dt) + ( pid[2] * d
 1238              		.loc 1 294 0 discriminator 2
 1239 0164 664B     		ldr	r3, .L86+56
 1240 0166 D3E90001 		ldrd	r0, [r3]
 1241 016a 5C4A     		ldr	r2, .L86+20
 1242 016c 7B6B     		ldr	r3, [r7, #52]
 1243 016e DB00     		lsls	r3, r3, #3
 1244 0170 1344     		add	r3, r3, r2
 1245 0172 18CB     		ldmia	r3, {r3-r4}
 1246 0174 1A46     		mov	r2, r3
 1247 0176 2346     		mov	r3, r4
 1248 0178 FFF7FEFF 		bl	__aeabi_dmul
 1249 017c 0346     		mov	r3, r0
 1250 017e 0C46     		mov	r4, r1
 1251 0180 1D46     		mov	r5, r3
 1252 0182 2646     		mov	r6, r4
 1253 0184 5E4B     		ldr	r3, .L86+56
 1254 0186 D3E90201 		ldrd	r0, [r3, #8]
 1255 018a 5C4A     		ldr	r2, .L86+52
 1256 018c 7B6B     		ldr	r3, [r7, #52]
 1257 018e DB00     		lsls	r3, r3, #3
 1258 0190 1344     		add	r3, r3, r2
 1259 0192 18CB     		ldmia	r3, {r3-r4}
 1260 0194 1A46     		mov	r2, r3
 1261 0196 2346     		mov	r3, r4
 1262 0198 FFF7FEFF 		bl	__aeabi_dmul
 1263 019c 0346     		mov	r3, r0
 1264 019e 0C46     		mov	r4, r1
 1265 01a0 1846     		mov	r0, r3
 1266 01a2 2146     		mov	r1, r4
 1267 01a4 D7E90E23 		ldrd	r2, [r7, #56]
 1268 01a8 FFF7FEFF 		bl	__aeabi_dmul
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccuzGkEA.s 			page 30


 1269 01ac 0346     		mov	r3, r0
 1270 01ae 0C46     		mov	r4, r1
 1271 01b0 1A46     		mov	r2, r3
 1272 01b2 2346     		mov	r3, r4
 1273 01b4 2846     		mov	r0, r5
 1274 01b6 3146     		mov	r1, r6
 1275 01b8 FFF7FEFF 		bl	__aeabi_dadd
 1276 01bc 0346     		mov	r3, r0
 1277 01be 0C46     		mov	r4, r1
 1278 01c0 1D46     		mov	r5, r3
 1279 01c2 2646     		mov	r6, r4
 1280 01c4 4E4B     		ldr	r3, .L86+56
 1281 01c6 D3E90401 		ldrd	r0, [r3, #16]
 1282 01ca 4B4A     		ldr	r2, .L86+48
 1283 01cc 7B6B     		ldr	r3, [r7, #52]
 1284 01ce DB00     		lsls	r3, r3, #3
 1285 01d0 1344     		add	r3, r3, r2
 1286 01d2 18CB     		ldmia	r3, {r3-r4}
 1287 01d4 1A46     		mov	r2, r3
 1288 01d6 2346     		mov	r3, r4
 1289 01d8 FFF7FEFF 		bl	__aeabi_dmul
 1290 01dc 0346     		mov	r3, r0
 1291 01de 0C46     		mov	r4, r1
 1292 01e0 1846     		mov	r0, r3
 1293 01e2 2146     		mov	r1, r4
 1294 01e4 D7E90E23 		ldrd	r2, [r7, #56]
 1295 01e8 FFF7FEFF 		bl	__aeabi_ddiv
 1296 01ec 0346     		mov	r3, r0
 1297 01ee 0C46     		mov	r4, r1
 1298 01f0 1A46     		mov	r2, r3
 1299 01f2 2346     		mov	r3, r4
 1300 01f4 2846     		mov	r0, r5
 1301 01f6 3146     		mov	r1, r6
 1302 01f8 FFF7FEFF 		bl	__aeabi_dadd
 1303 01fc 0346     		mov	r3, r0
 1304 01fe 0C46     		mov	r4, r1
 1305 0200 1846     		mov	r0, r3
 1306 0202 2146     		mov	r1, r4
 1307 0204 FFF7FEFF 		bl	__aeabi_d2iz
 1308 0208 0146     		mov	r1, r0
 1309 020a 3E4A     		ldr	r2, .L86+60
 1310 020c 7B6B     		ldr	r3, [r7, #52]
 1311 020e 42F82310 		str	r1, [r2, r3, lsl #2]
 295:main.c        ****             
 296:main.c        ****             pulse[cyl] = pulseCheck(pulse_temp[cyl],offsets[cyl][1],offsets[cyl][0]);
 1312              		.loc 1 296 0 discriminator 2
 1313 0212 3C4A     		ldr	r2, .L86+60
 1314 0214 7B6B     		ldr	r3, [r7, #52]
 1315 0216 52F82300 		ldr	r0, [r2, r3, lsl #2]
 1316 021a 3B4A     		ldr	r2, .L86+64
 1317 021c 7B6B     		ldr	r3, [r7, #52]
 1318 021e DB00     		lsls	r3, r3, #3
 1319 0220 1344     		add	r3, r3, r2
 1320 0222 5968     		ldr	r1, [r3, #4]
 1321 0224 384A     		ldr	r2, .L86+64
 1322 0226 7B6B     		ldr	r3, [r7, #52]
 1323 0228 52F83330 		ldr	r3, [r2, r3, lsl #3]
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccuzGkEA.s 			page 31


 1324 022c 1A46     		mov	r2, r3
 1325 022e FFF7FEFF 		bl	pulseCheck
 1326 0232 0146     		mov	r1, r0
 1327 0234 354A     		ldr	r2, .L86+68
 1328 0236 7B6B     		ldr	r3, [r7, #52]
 1329 0238 42F82310 		str	r1, [r2, r3, lsl #2]
 297:main.c        ****             
 298:main.c        ****             writePWM(cyl,pulse[cyl]);
 1330              		.loc 1 298 0 discriminator 2
 1331 023c 334A     		ldr	r2, .L86+68
 1332 023e 7B6B     		ldr	r3, [r7, #52]
 1333 0240 52F82330 		ldr	r3, [r2, r3, lsl #2]
 1334 0244 1946     		mov	r1, r3
 1335 0246 786B     		ldr	r0, [r7, #52]
 1336 0248 FFF7FEFF 		bl	writePWM
 299:main.c        ****             prev_err[cyl] = err[cyl];
 1337              		.loc 1 299 0 discriminator 2
 1338 024c 234A     		ldr	r2, .L86+20
 1339 024e 7B6B     		ldr	r3, [r7, #52]
 1340 0250 DB00     		lsls	r3, r3, #3
 1341 0252 1344     		add	r3, r3, r2
 1342 0254 18CB     		ldmia	r3, {r3-r4}
 1343 0256 2749     		ldr	r1, .L86+44
 1344 0258 7A6B     		ldr	r2, [r7, #52]
 1345 025a D200     		lsls	r2, r2, #3
 1346 025c 0A44     		add	r2, r2, r1
 1347 025e C2E90034 		strd	r3, [r2]
 285:main.c        ****             if(new_pos_set[cyl]){
 1348              		.loc 1 285 0 discriminator 2
 1349 0262 7B6B     		ldr	r3, [r7, #52]
 1350 0264 0133     		adds	r3, r3, #1
 1351 0266 7B63     		str	r3, [r7, #52]
 1352              	.L69:
 285:main.c        ****             if(new_pos_set[cyl]){
 1353              		.loc 1 285 0 is_stmt 0 discriminator 1
 1354 0268 7B6B     		ldr	r3, [r7, #52]
 1355 026a 032B     		cmp	r3, #3
 1356 026c 7FF724AF 		ble	.L71
 1357              	.LBE8:
 300:main.c        ****         }
 301:main.c        ****         
 302:main.c        ****         
 303:main.c        ****         /* END PID CODE */
 304:main.c        ****         if(start_calib){
 1358              		.loc 1 304 0 is_stmt 1
 1359 0270 274B     		ldr	r3, .L86+72
 1360 0272 1B68     		ldr	r3, [r3]
 1361 0274 002B     		cmp	r3, #0
 1362 0276 00F0DA80 		beq	.L72
 1363              	.LBB9:
 305:main.c        ****             int calib_cyl = 3;
 1364              		.loc 1 305 0
 1365 027a 0323     		movs	r3, #3
 1366 027c 3B61     		str	r3, [r7, #16]
 306:main.c        ****             int upper_offset_set = 0;
 1367              		.loc 1 306 0
 1368 027e 0023     		movs	r3, #0
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccuzGkEA.s 			page 32


 1369 0280 3B63     		str	r3, [r7, #48]
 307:main.c        ****             int lower_offset_set = 0;
 1370              		.loc 1 307 0
 1371 0282 0023     		movs	r3, #0
 1372 0284 FB62     		str	r3, [r7, #44]
 308:main.c        ****             int upper_offset = 0;
 1373              		.loc 1 308 0
 1374 0286 0023     		movs	r3, #0
 1375 0288 BB62     		str	r3, [r7, #40]
 309:main.c        ****             int lower_offset = 0;
 1376              		.loc 1 309 0
 1377 028a 0023     		movs	r3, #0
 1378 028c 7B62     		str	r3, [r7, #36]
 310:main.c        ****             int lower_check_no = 0;
 1379              		.loc 1 310 0
 1380 028e 0023     		movs	r3, #0
 1381 0290 3B62     		str	r3, [r7, #32]
 311:main.c        ****             int upper_check_no = 0;
 1382              		.loc 1 311 0
 1383 0292 0023     		movs	r3, #0
 1384 0294 FB61     		str	r3, [r7, #28]
 312:main.c        ****             uint16 prev_adcValue = adcValue[0];
 1385              		.loc 1 312 0
 1386 0296 104B     		ldr	r3, .L86+16
 1387 0298 1B88     		ldrh	r3, [r3]	@ movhi
 1388 029a FB81     		strh	r3, [r7, #14]	@ movhi
 313:main.c        ****             uint16 diff = 0;
 1389              		.loc 1 313 0
 1390 029c 0023     		movs	r3, #0
 1391 029e BB81     		strh	r3, [r7, #12]	@ movhi
 1392              	.LBB10:
 314:main.c        ****             for(int g = 0;g<CYL_NO;g++)
 1393              		.loc 1 314 0
 1394 02a0 0023     		movs	r3, #0
 1395 02a2 BB61     		str	r3, [r7, #24]
 1396 02a4 06E0     		b	.L73
 1397              	.L74:
 315:main.c        ****                 writePWM(g,0);
 1398              		.loc 1 315 0 discriminator 3
 1399 02a6 0021     		movs	r1, #0
 1400 02a8 B869     		ldr	r0, [r7, #24]
 1401 02aa FFF7FEFF 		bl	writePWM
 314:main.c        ****             for(int g = 0;g<CYL_NO;g++)
 1402              		.loc 1 314 0 discriminator 3
 1403 02ae BB69     		ldr	r3, [r7, #24]
 1404 02b0 0133     		adds	r3, r3, #1
 1405 02b2 BB61     		str	r3, [r7, #24]
 1406              	.L73:
 314:main.c        ****             for(int g = 0;g<CYL_NO;g++)
 1407              		.loc 1 314 0 is_stmt 0 discriminator 1
 1408 02b4 BB69     		ldr	r3, [r7, #24]
 1409 02b6 032B     		cmp	r3, #3
 1410 02b8 F5DD     		ble	.L74
 1411              	.LBE10:
 316:main.c        ****                 
 317:main.c        ****             CyDelay(1000);
 1412              		.loc 1 317 0 is_stmt 1
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccuzGkEA.s 			page 33


 1413 02ba 4FF47A70 		mov	r0, #1000
 1414 02be FFF7FEFF 		bl	CyDelay
 318:main.c        ****         
 319:main.c        ****             while(upper_offset_set==0 || lower_offset_set==0){
 1415              		.loc 1 319 0
 1416 02c2 A1E0     		b	.L75
 1417              	.L87:
 1418 02c4 AFF30080 		.align	3
 1419              	.L86:
 1420 02c8 9A999999 		.word	-1717986918
 1421 02cc 9999993F 		.word	1067030937
 1422 02d0 00000000 		.word	RxIsr
 1423 02d4 00000000 		.word	adc_update
 1424 02d8 00000000 		.word	adcValue
 1425 02dc 00000000 		.word	err
 1426 02e0 00000000 		.word	.LC0
 1427 02e4 00000000 		.word	sendValue
 1428 02e8 00000000 		.word	new_pos_set
 1429 02ec 00000000 		.word	new_pos
 1430 02f0 00000000 		.word	pos
 1431 02f4 00000000 		.word	prev_err
 1432 02f8 00000000 		.word	der
 1433 02fc 00000000 		.word	pid_integral
 1434 0300 00000000 		.word	pid
 1435 0304 00000000 		.word	pulse_temp
 1436 0308 00000000 		.word	offsets
 1437 030c 00000000 		.word	pulse
 1438 0310 00000000 		.word	start_calib
 1439              	.L84:
 320:main.c        ****                 
 321:main.c        ****                 prev_adcValue = adcValue[calib_cyl];
 1440              		.loc 1 321 0
 1441 0314 5C4A     		ldr	r2, .L88+16
 1442 0316 3B69     		ldr	r3, [r7, #16]
 1443 0318 32F81330 		ldrh	r3, [r2, r3, lsl #1]	@ movhi
 1444 031c FB81     		strh	r3, [r7, #14]	@ movhi
 322:main.c        ****                 if(upper_offset_set==0){
 1445              		.loc 1 322 0
 1446 031e 3B6B     		ldr	r3, [r7, #48]
 1447 0320 002B     		cmp	r3, #0
 1448 0322 27D1     		bne	.L76
 323:main.c        ****                     writePWM(calib_cyl,upper_offset);
 1449              		.loc 1 323 0
 1450 0324 B96A     		ldr	r1, [r7, #40]
 1451 0326 3869     		ldr	r0, [r7, #16]
 1452 0328 FFF7FEFF 		bl	writePWM
 324:main.c        ****                     CyDelay(200);
 1453              		.loc 1 324 0
 1454 032c C820     		movs	r0, #200
 1455 032e FFF7FEFF 		bl	CyDelay
 325:main.c        ****                     diff = abs(prev_adcValue-adcValue[calib_cyl]);
 1456              		.loc 1 325 0
 1457 0332 FB89     		ldrh	r3, [r7, #14]
 1458 0334 5449     		ldr	r1, .L88+16
 1459 0336 3A69     		ldr	r2, [r7, #16]
 1460 0338 31F81220 		ldrh	r2, [r1, r2, lsl #1]
 1461 033c 9B1A     		subs	r3, r3, r2
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccuzGkEA.s 			page 34


 1462 033e 002B     		cmp	r3, #0
 1463 0340 B8BF     		it	lt
 1464 0342 5B42     		rsblt	r3, r3, #0
 1465 0344 BB81     		strh	r3, [r7, #12]	@ movhi
 326:main.c        ****                     if(diff>10){
 1466              		.loc 1 326 0
 1467 0346 BB89     		ldrh	r3, [r7, #12]
 1468 0348 0A2B     		cmp	r3, #10
 1469 034a 03D9     		bls	.L77
 327:main.c        ****                         upper_check_no ++;;
 1470              		.loc 1 327 0
 1471 034c FB69     		ldr	r3, [r7, #28]
 1472 034e 0133     		adds	r3, r3, #1
 1473 0350 FB61     		str	r3, [r7, #28]
 1474 0352 04E0     		b	.L78
 1475              	.L77:
 328:main.c        ****                     }else{
 329:main.c        ****                         upper_offset = upper_offset + 5;
 1476              		.loc 1 329 0
 1477 0354 BB6A     		ldr	r3, [r7, #40]
 1478 0356 0533     		adds	r3, r3, #5
 1479 0358 BB62     		str	r3, [r7, #40]
 330:main.c        ****                         upper_check_no=0;
 1480              		.loc 1 330 0
 1481 035a 0023     		movs	r3, #0
 1482 035c FB61     		str	r3, [r7, #28]
 1483              	.L78:
 331:main.c        ****                     }
 332:main.c        ****                     sprintf(sendValue,"UPPER:\tLower Offset: %d \tUpper Offset: %d \t ADC Diff: %d\
 1484              		.loc 1 332 0
 1485 035e BB89     		ldrh	r3, [r7, #12]
 1486 0360 0093     		str	r3, [sp]
 1487 0362 BB6A     		ldr	r3, [r7, #40]
 1488 0364 7A6A     		ldr	r2, [r7, #36]
 1489 0366 4949     		ldr	r1, .L88+20
 1490 0368 4948     		ldr	r0, .L88+24
 1491 036a FFF7FEFF 		bl	sprintf
 333:main.c        ****                     UART_PutString(sendValue);
 1492              		.loc 1 333 0
 1493 036e 4848     		ldr	r0, .L88+24
 1494 0370 FFF7FEFF 		bl	UART_PutString
 1495              	.L76:
 334:main.c        ****                 }
 335:main.c        ****                 writePWM(calib_cyl,0);
 1496              		.loc 1 335 0
 1497 0374 0021     		movs	r1, #0
 1498 0376 3869     		ldr	r0, [r7, #16]
 1499 0378 FFF7FEFF 		bl	writePWM
 336:main.c        ****                 CyDelay(500);
 1500              		.loc 1 336 0
 1501 037c 4FF4FA70 		mov	r0, #500
 1502 0380 FFF7FEFF 		bl	CyDelay
 337:main.c        ****                 
 338:main.c        ****                 prev_adcValue = adcValue[calib_cyl];
 1503              		.loc 1 338 0
 1504 0384 404A     		ldr	r2, .L88+16
 1505 0386 3B69     		ldr	r3, [r7, #16]
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccuzGkEA.s 			page 35


 1506 0388 32F81330 		ldrh	r3, [r2, r3, lsl #1]	@ movhi
 1507 038c FB81     		strh	r3, [r7, #14]	@ movhi
 339:main.c        ****                 if(lower_offset_set==0){
 1508              		.loc 1 339 0
 1509 038e FB6A     		ldr	r3, [r7, #44]
 1510 0390 002B     		cmp	r3, #0
 1511 0392 27D1     		bne	.L79
 340:main.c        ****                     writePWM(calib_cyl,lower_offset);
 1512              		.loc 1 340 0
 1513 0394 796A     		ldr	r1, [r7, #36]
 1514 0396 3869     		ldr	r0, [r7, #16]
 1515 0398 FFF7FEFF 		bl	writePWM
 341:main.c        ****                     CyDelay(200);
 1516              		.loc 1 341 0
 1517 039c C820     		movs	r0, #200
 1518 039e FFF7FEFF 		bl	CyDelay
 342:main.c        ****                     diff = abs(prev_adcValue-adcValue[calib_cyl]);
 1519              		.loc 1 342 0
 1520 03a2 FB89     		ldrh	r3, [r7, #14]
 1521 03a4 3849     		ldr	r1, .L88+16
 1522 03a6 3A69     		ldr	r2, [r7, #16]
 1523 03a8 31F81220 		ldrh	r2, [r1, r2, lsl #1]
 1524 03ac 9B1A     		subs	r3, r3, r2
 1525 03ae 002B     		cmp	r3, #0
 1526 03b0 B8BF     		it	lt
 1527 03b2 5B42     		rsblt	r3, r3, #0
 1528 03b4 BB81     		strh	r3, [r7, #12]	@ movhi
 343:main.c        ****                     if(diff>10){
 1529              		.loc 1 343 0
 1530 03b6 BB89     		ldrh	r3, [r7, #12]
 1531 03b8 0A2B     		cmp	r3, #10
 1532 03ba 03D9     		bls	.L80
 344:main.c        ****                         lower_check_no++;
 1533              		.loc 1 344 0
 1534 03bc 3B6A     		ldr	r3, [r7, #32]
 1535 03be 0133     		adds	r3, r3, #1
 1536 03c0 3B62     		str	r3, [r7, #32]
 1537 03c2 04E0     		b	.L81
 1538              	.L80:
 345:main.c        ****                     }else{
 346:main.c        ****                         lower_offset = lower_offset - 5;
 1539              		.loc 1 346 0
 1540 03c4 7B6A     		ldr	r3, [r7, #36]
 1541 03c6 053B     		subs	r3, r3, #5
 1542 03c8 7B62     		str	r3, [r7, #36]
 347:main.c        ****                         lower_check_no = 0;
 1543              		.loc 1 347 0
 1544 03ca 0023     		movs	r3, #0
 1545 03cc 3B62     		str	r3, [r7, #32]
 1546              	.L81:
 348:main.c        ****                     }
 349:main.c        ****                     sprintf(sendValue,"LOWER:\tLower Offset: %d \tUpper Offset: %d \t ADC Diff: %d\
 1547              		.loc 1 349 0
 1548 03ce BB89     		ldrh	r3, [r7, #12]
 1549 03d0 0093     		str	r3, [sp]
 1550 03d2 BB6A     		ldr	r3, [r7, #40]
 1551 03d4 7A6A     		ldr	r2, [r7, #36]
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccuzGkEA.s 			page 36


 1552 03d6 2F49     		ldr	r1, .L88+28
 1553 03d8 2D48     		ldr	r0, .L88+24
 1554 03da FFF7FEFF 		bl	sprintf
 350:main.c        ****                     UART_PutString(sendValue);
 1555              		.loc 1 350 0
 1556 03de 2C48     		ldr	r0, .L88+24
 1557 03e0 FFF7FEFF 		bl	UART_PutString
 1558              	.L79:
 351:main.c        ****             
 352:main.c        ****                 }
 353:main.c        ****                 
 354:main.c        ****                 if(upper_check_no>2){
 1559              		.loc 1 354 0
 1560 03e4 FB69     		ldr	r3, [r7, #28]
 1561 03e6 022B     		cmp	r3, #2
 1562 03e8 01DD     		ble	.L82
 355:main.c        ****                     upper_offset_set=1;}
 1563              		.loc 1 355 0
 1564 03ea 0123     		movs	r3, #1
 1565 03ec 3B63     		str	r3, [r7, #48]
 1566              	.L82:
 356:main.c        ****                 if(lower_check_no>2){
 1567              		.loc 1 356 0
 1568 03ee 3B6A     		ldr	r3, [r7, #32]
 1569 03f0 022B     		cmp	r3, #2
 1570 03f2 01DD     		ble	.L83
 357:main.c        ****                     lower_offset_set=1;}
 1571              		.loc 1 357 0
 1572 03f4 0123     		movs	r3, #1
 1573 03f6 FB62     		str	r3, [r7, #44]
 1574              	.L83:
 358:main.c        ****                 
 359:main.c        ****                 writePWM(calib_cyl,0);
 1575              		.loc 1 359 0
 1576 03f8 0021     		movs	r1, #0
 1577 03fa 3869     		ldr	r0, [r7, #16]
 1578 03fc FFF7FEFF 		bl	writePWM
 360:main.c        ****                 CyDelay(500);
 1579              		.loc 1 360 0
 1580 0400 4FF4FA70 		mov	r0, #500
 1581 0404 FFF7FEFF 		bl	CyDelay
 1582              	.L75:
 319:main.c        ****                 
 1583              		.loc 1 319 0
 1584 0408 3B6B     		ldr	r3, [r7, #48]
 1585 040a 002B     		cmp	r3, #0
 1586 040c 82D0     		beq	.L84
 319:main.c        ****                 
 1587              		.loc 1 319 0 is_stmt 0 discriminator 1
 1588 040e FB6A     		ldr	r3, [r7, #44]
 1589 0410 002B     		cmp	r3, #0
 1590 0412 3FF47FAF 		beq	.L84
 361:main.c        ****                 
 362:main.c        ****             }
 363:main.c        ****             
 364:main.c        ****             sprintf(sendValue,"Lower Offset: %d \t Upper Offset: %d \n",lower_offset,upper_offset);
 1591              		.loc 1 364 0 is_stmt 1
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccuzGkEA.s 			page 37


 1592 0416 BB6A     		ldr	r3, [r7, #40]
 1593 0418 7A6A     		ldr	r2, [r7, #36]
 1594 041a 1F49     		ldr	r1, .L88+32
 1595 041c 1C48     		ldr	r0, .L88+24
 1596 041e FFF7FEFF 		bl	sprintf
 365:main.c        ****             UART_PutString(sendValue);
 1597              		.loc 1 365 0
 1598 0422 1B48     		ldr	r0, .L88+24
 1599 0424 FFF7FEFF 		bl	UART_PutString
 366:main.c        ****             
 367:main.c        ****             //while(1){CyDelay(100);};
 368:main.c        ****             start_calib = 0;
 1600              		.loc 1 368 0
 1601 0428 1C4B     		ldr	r3, .L88+36
 1602 042a 0022     		movs	r2, #0
 1603 042c 1A60     		str	r2, [r3]
 1604              	.L72:
 1605              	.LBE9:
 369:main.c        ****         }
 370:main.c        ****         CyDelay(10);
 1606              		.loc 1 370 0
 1607 042e 0A20     		movs	r0, #10
 1608 0430 FFF7FEFF 		bl	CyDelay
 371:main.c        ****         time = Timer_1_ReadCounter();
 1609              		.loc 1 371 0
 1610 0434 FFF7FEFF 		bl	Timer_1_ReadCounter
 1611 0438 0346     		mov	r3, r0
 1612 043a 1846     		mov	r0, r3
 1613 043c FFF7FEFF 		bl	__aeabi_ui2d
 1614 0440 0346     		mov	r3, r0
 1615 0442 0C46     		mov	r4, r1
 1616 0444 C7E90034 		strd	r3, [r7]
 372:main.c        ****         dt=(double)(65535-time)/1000000;
 1617              		.loc 1 372 0
 1618 0448 D7E90023 		ldrd	r2, [r7]
 1619 044c 0AA1     		adr	r1, .L88
 1620 044e D1E90001 		ldrd	r0, [r1]
 1621 0452 FFF7FEFF 		bl	__aeabi_dsub
 1622 0456 0346     		mov	r3, r0
 1623 0458 0C46     		mov	r4, r1
 1624 045a 1846     		mov	r0, r3
 1625 045c 2146     		mov	r1, r4
 1626 045e 08A3     		adr	r3, .L88+8
 1627 0460 D3E90023 		ldrd	r2, [r3]
 1628 0464 FFF7FEFF 		bl	__aeabi_ddiv
 1629 0468 0346     		mov	r3, r0
 1630 046a 0C46     		mov	r4, r1
 1631 046c C7E90E34 		strd	r3, [r7, #56]
 373:main.c        **** 
 374:main.c        ****     }
 1632              		.loc 1 374 0
 1633 0470 03E6     		b	.L85
 1634              	.L89:
 1635 0472 00BFAFF3 		.align	3
 1635      0080
 1636              	.L88:
 1637 0478 00000000 		.word	0
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccuzGkEA.s 			page 38


 1638 047c E0FFEF40 		.word	1089470432
 1639 0480 00000000 		.word	0
 1640 0484 80842E41 		.word	1093567616
 1641 0488 00000000 		.word	adcValue
 1642 048c 18000000 		.word	.LC1
 1643 0490 00000000 		.word	sendValue
 1644 0494 54000000 		.word	.LC2
 1645 0498 90000000 		.word	.LC3
 1646 049c 00000000 		.word	start_calib
 1647              		.cfi_endproc
 1648              	.LFE68:
 1649              		.size	main, .-main
 1650              		.text
 1651              	.Letext0:
 1652              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 1653              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 1654              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 1655              		.file 5 "Generated_Source\\PSoC5/core_cm3.h"
 1656              		.section	.debug_info,"",%progbits
 1657              	.Ldebug_info0:
 1658 0000 C5050000 		.4byte	0x5c5
 1659 0004 0400     		.2byte	0x4
 1660 0006 00000000 		.4byte	.Ldebug_abbrev0
 1661 000a 04       		.byte	0x4
 1662 000b 01       		.uleb128 0x1
 1663 000c 75000000 		.4byte	.LASF60
 1664 0010 0C       		.byte	0xc
 1665 0011 A0020000 		.4byte	.LASF61
 1666 0015 27020000 		.4byte	.LASF62
 1667 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1668 001d 00000000 		.4byte	0
 1669 0021 00000000 		.4byte	.Ldebug_line0
 1670 0025 02       		.uleb128 0x2
 1671 0026 01       		.byte	0x1
 1672 0027 06       		.byte	0x6
 1673 0028 51010000 		.4byte	.LASF0
 1674 002c 02       		.uleb128 0x2
 1675 002d 01       		.byte	0x1
 1676 002e 08       		.byte	0x8
 1677 002f A5010000 		.4byte	.LASF1
 1678 0033 02       		.uleb128 0x2
 1679 0034 02       		.byte	0x2
 1680 0035 05       		.byte	0x5
 1681 0036 50000000 		.4byte	.LASF2
 1682 003a 02       		.uleb128 0x2
 1683 003b 02       		.byte	0x2
 1684 003c 07       		.byte	0x7
 1685 003d 14020000 		.4byte	.LASF3
 1686 0041 03       		.uleb128 0x3
 1687 0042 D9020000 		.4byte	.LASF9
 1688 0046 02       		.byte	0x2
 1689 0047 3F       		.byte	0x3f
 1690 0048 4C000000 		.4byte	0x4c
 1691 004c 02       		.uleb128 0x2
 1692 004d 04       		.byte	0x4
 1693 004e 05       		.byte	0x5
 1694 004f 84010000 		.4byte	.LASF4
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccuzGkEA.s 			page 39


 1695 0053 02       		.uleb128 0x2
 1696 0054 04       		.byte	0x4
 1697 0055 07       		.byte	0x7
 1698 0056 AC020000 		.4byte	.LASF5
 1699 005a 02       		.uleb128 0x2
 1700 005b 08       		.byte	0x8
 1701 005c 05       		.byte	0x5
 1702 005d 03010000 		.4byte	.LASF6
 1703 0061 02       		.uleb128 0x2
 1704 0062 08       		.byte	0x8
 1705 0063 07       		.byte	0x7
 1706 0064 E5010000 		.4byte	.LASF7
 1707 0068 04       		.uleb128 0x4
 1708 0069 04       		.byte	0x4
 1709 006a 05       		.byte	0x5
 1710 006b 696E7400 		.ascii	"int\000"
 1711 006f 02       		.uleb128 0x2
 1712 0070 04       		.byte	0x4
 1713 0071 07       		.byte	0x7
 1714 0072 FC010000 		.4byte	.LASF8
 1715 0076 03       		.uleb128 0x3
 1716 0077 82020000 		.4byte	.LASF10
 1717 007b 03       		.byte	0x3
 1718 007c 2C       		.byte	0x2c
 1719 007d 41000000 		.4byte	0x41
 1720 0081 05       		.uleb128 0x5
 1721 0082 36010000 		.4byte	.LASF11
 1722 0086 04       		.byte	0x4
 1723 0087 9201     		.2byte	0x192
 1724 0089 2C000000 		.4byte	0x2c
 1725 008d 05       		.uleb128 0x5
 1726 008e 8A020000 		.4byte	.LASF12
 1727 0092 04       		.byte	0x4
 1728 0093 9301     		.2byte	0x193
 1729 0095 3A000000 		.4byte	0x3a
 1730 0099 02       		.uleb128 0x2
 1731 009a 04       		.byte	0x4
 1732 009b 04       		.byte	0x4
 1733 009c 2B000000 		.4byte	.LASF13
 1734 00a0 02       		.uleb128 0x2
 1735 00a1 08       		.byte	0x8
 1736 00a2 04       		.byte	0x4
 1737 00a3 3B030000 		.4byte	.LASF14
 1738 00a7 02       		.uleb128 0x2
 1739 00a8 01       		.byte	0x1
 1740 00a9 08       		.byte	0x8
 1741 00aa 73020000 		.4byte	.LASF15
 1742 00ae 05       		.uleb128 0x5
 1743 00af A7020000 		.4byte	.LASF16
 1744 00b3 04       		.byte	0x4
 1745 00b4 3C02     		.2byte	0x23c
 1746 00b6 BA000000 		.4byte	0xba
 1747 00ba 06       		.uleb128 0x6
 1748 00bb 81000000 		.4byte	0x81
 1749 00bf 02       		.uleb128 0x2
 1750 00c0 08       		.byte	0x8
 1751 00c1 04       		.byte	0x4
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccuzGkEA.s 			page 40


 1752 00c2 00000000 		.4byte	.LASF17
 1753 00c6 02       		.uleb128 0x2
 1754 00c7 04       		.byte	0x4
 1755 00c8 07       		.byte	0x7
 1756 00c9 67000000 		.4byte	.LASF18
 1757 00cd 07       		.uleb128 0x7
 1758 00ce 66010000 		.4byte	.LASF23
 1759 00d2 01       		.byte	0x1
 1760 00d3 15       		.byte	0x15
 1761 00d4 00000000 		.4byte	.LFB64
 1762 00d8 78000000 		.4byte	.LFE64-.LFB64
 1763 00dc 01       		.uleb128 0x1
 1764 00dd 9C       		.byte	0x9c
 1765 00de FF000000 		.4byte	0xff
 1766 00e2 08       		.uleb128 0x8
 1767 00e3 3C010000 		.4byte	.LASF19
 1768 00e7 01       		.byte	0x1
 1769 00e8 15       		.byte	0x15
 1770 00e9 68000000 		.4byte	0x68
 1771 00ed 02       		.uleb128 0x2
 1772 00ee 91       		.byte	0x91
 1773 00ef 74       		.sleb128 -12
 1774 00f0 08       		.uleb128 0x8
 1775 00f1 30010000 		.4byte	.LASF20
 1776 00f5 01       		.byte	0x1
 1777 00f6 15       		.byte	0x15
 1778 00f7 68000000 		.4byte	0x68
 1779 00fb 02       		.uleb128 0x2
 1780 00fc 91       		.byte	0x91
 1781 00fd 70       		.sleb128 -16
 1782 00fe 00       		.byte	0
 1783 00ff 09       		.uleb128 0x9
 1784 0100 F0020000 		.4byte	.LASF63
 1785 0104 01       		.byte	0x1
 1786 0105 26       		.byte	0x26
 1787 0106 68000000 		.4byte	0x68
 1788 010a 00000000 		.4byte	.LFB65
 1789 010e 54000000 		.4byte	.LFE65-.LFB65
 1790 0112 01       		.uleb128 0x1
 1791 0113 9C       		.byte	0x9c
 1792 0114 43010000 		.4byte	0x143
 1793 0118 08       		.uleb128 0x8
 1794 0119 30010000 		.4byte	.LASF20
 1795 011d 01       		.byte	0x1
 1796 011e 26       		.byte	0x26
 1797 011f 68000000 		.4byte	0x68
 1798 0123 02       		.uleb128 0x2
 1799 0124 91       		.byte	0x91
 1800 0125 74       		.sleb128 -12
 1801 0126 08       		.uleb128 0x8
 1802 0127 E3020000 		.4byte	.LASF21
 1803 012b 01       		.byte	0x1
 1804 012c 26       		.byte	0x26
 1805 012d 68000000 		.4byte	0x68
 1806 0131 02       		.uleb128 0x2
 1807 0132 91       		.byte	0x91
 1808 0133 70       		.sleb128 -16
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccuzGkEA.s 			page 41


 1809 0134 08       		.uleb128 0x8
 1810 0135 5A000000 		.4byte	.LASF22
 1811 0139 01       		.byte	0x1
 1812 013a 26       		.byte	0x26
 1813 013b 68000000 		.4byte	0x68
 1814 013f 02       		.uleb128 0x2
 1815 0140 91       		.byte	0x91
 1816 0141 6C       		.sleb128 -20
 1817 0142 00       		.byte	0
 1818 0143 07       		.uleb128 0x7
 1819 0144 07030000 		.4byte	.LASF24
 1820 0148 01       		.byte	0x1
 1821 0149 4F       		.byte	0x4f
 1822 014a 00000000 		.4byte	.LFB66
 1823 014e 6C010000 		.4byte	.LFE66-.LFB66
 1824 0152 01       		.uleb128 0x1
 1825 0153 9C       		.byte	0x9c
 1826 0154 CF010000 		.4byte	0x1cf
 1827 0158 0A       		.uleb128 0xa
 1828 0159 06000000 		.4byte	.LBB2
 1829 015d 4A010000 		.4byte	.LBE2-.LBB2
 1830 0161 0B       		.uleb128 0xb
 1831 0162 6300     		.ascii	"c\000"
 1832 0164 01       		.byte	0x1
 1833 0165 50       		.byte	0x50
 1834 0166 68000000 		.4byte	0x68
 1835 016a 02       		.uleb128 0x2
 1836 016b 91       		.byte	0x91
 1837 016c 74       		.sleb128 -12
 1838 016d 0C       		.uleb128 0xc
 1839 016e 16000000 		.4byte	.LBB3
 1840 0172 3A000000 		.4byte	.LBE3-.LBB3
 1841 0176 87010000 		.4byte	0x187
 1842 017a 0B       		.uleb128 0xb
 1843 017b 6A00     		.ascii	"j\000"
 1844 017d 01       		.byte	0x1
 1845 017e 53       		.byte	0x53
 1846 017f 68000000 		.4byte	0x68
 1847 0183 02       		.uleb128 0x2
 1848 0184 91       		.byte	0x91
 1849 0185 70       		.sleb128 -16
 1850 0186 00       		.byte	0
 1851 0187 0C       		.uleb128 0xc
 1852 0188 AA000000 		.4byte	.LBB4
 1853 018c 2C000000 		.4byte	.LBE4-.LBB4
 1854 0190 A1010000 		.4byte	0x1a1
 1855 0194 0B       		.uleb128 0xb
 1856 0195 6A00     		.ascii	"j\000"
 1857 0197 01       		.byte	0x1
 1858 0198 5C       		.byte	0x5c
 1859 0199 68000000 		.4byte	0x68
 1860 019d 02       		.uleb128 0x2
 1861 019e 91       		.byte	0x91
 1862 019f 6C       		.sleb128 -20
 1863 01a0 00       		.byte	0
 1864 01a1 0A       		.uleb128 0xa
 1865 01a2 D6000000 		.4byte	.LBB5
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccuzGkEA.s 			page 42


 1866 01a6 60000000 		.4byte	.LBE5-.LBB5
 1867 01aa 0B       		.uleb128 0xb
 1868 01ab 6900     		.ascii	"i\000"
 1869 01ad 01       		.byte	0x1
 1870 01ae 5F       		.byte	0x5f
 1871 01af 68000000 		.4byte	0x68
 1872 01b3 02       		.uleb128 0x2
 1873 01b4 91       		.byte	0x91
 1874 01b5 68       		.sleb128 -24
 1875 01b6 0A       		.uleb128 0xa
 1876 01b7 DC000000 		.4byte	.LBB6
 1877 01bb 4E000000 		.4byte	.LBE6-.LBB6
 1878 01bf 0B       		.uleb128 0xb
 1879 01c0 6A00     		.ascii	"j\000"
 1880 01c2 01       		.byte	0x1
 1881 01c3 60       		.byte	0x60
 1882 01c4 68000000 		.4byte	0x68
 1883 01c8 02       		.uleb128 0x2
 1884 01c9 91       		.byte	0x91
 1885 01ca 64       		.sleb128 -28
 1886 01cb 00       		.byte	0
 1887 01cc 00       		.byte	0
 1888 01cd 00       		.byte	0
 1889 01ce 00       		.byte	0
 1890 01cf 07       		.uleb128 0x7
 1891 01d0 0E020000 		.4byte	.LASF25
 1892 01d4 01       		.byte	0x1
 1893 01d5 71       		.byte	0x71
 1894 01d6 00000000 		.4byte	.LFB67
 1895 01da C4020000 		.4byte	.LFE67-.LFB67
 1896 01de 01       		.uleb128 0x1
 1897 01df 9C       		.byte	0x9c
 1898 01e0 18020000 		.4byte	0x218
 1899 01e4 0D       		.uleb128 0xd
 1900 01e5 CB010000 		.4byte	.LASF26
 1901 01e9 01       		.byte	0x1
 1902 01ea 73       		.byte	0x73
 1903 01eb 81000000 		.4byte	0x81
 1904 01ef 02       		.uleb128 0x2
 1905 01f0 91       		.byte	0x91
 1906 01f1 6B       		.sleb128 -21
 1907 01f2 0D       		.uleb128 0xd
 1908 01f3 12030000 		.4byte	.LASF27
 1909 01f7 01       		.byte	0x1
 1910 01f8 74       		.byte	0x74
 1911 01f9 81000000 		.4byte	0x81
 1912 01fd 02       		.uleb128 0x2
 1913 01fe 91       		.byte	0x91
 1914 01ff 6A       		.sleb128 -22
 1915 0200 0A       		.uleb128 0xa
 1916 0201 A4000000 		.4byte	.LBB7
 1917 0205 1C000000 		.4byte	.LBE7-.LBB7
 1918 0209 0B       		.uleb128 0xb
 1919 020a 707000   		.ascii	"pp\000"
 1920 020d 01       		.byte	0x1
 1921 020e 91       		.byte	0x91
 1922 020f 68000000 		.4byte	0x68
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccuzGkEA.s 			page 43


 1923 0213 02       		.uleb128 0x2
 1924 0214 91       		.byte	0x91
 1925 0215 6C       		.sleb128 -20
 1926 0216 00       		.byte	0
 1927 0217 00       		.byte	0
 1928 0218 0E       		.uleb128 0xe
 1929 0219 70000000 		.4byte	.LASF28
 1930 021d 01       		.byte	0x1
 1931 021e F4       		.byte	0xf4
 1932 021f 68000000 		.4byte	0x68
 1933 0223 00000000 		.4byte	.LFB68
 1934 0227 A0040000 		.4byte	.LFE68-.LFB68
 1935 022b 01       		.uleb128 0x1
 1936 022c 9C       		.byte	0x9c
 1937 022d 28030000 		.4byte	0x328
 1938 0231 0F       		.uleb128 0xf
 1939 0232 647400   		.ascii	"dt\000"
 1940 0235 01       		.byte	0x1
 1941 0236 0901     		.2byte	0x109
 1942 0238 A0000000 		.4byte	0xa0
 1943 023c 02       		.uleb128 0x2
 1944 023d 91       		.byte	0x91
 1945 023e 60       		.sleb128 -32
 1946 023f 10       		.uleb128 0x10
 1947 0240 09020000 		.4byte	.LASF29
 1948 0244 01       		.byte	0x1
 1949 0245 0A01     		.2byte	0x10a
 1950 0247 A0000000 		.4byte	0xa0
 1951 024b 03       		.uleb128 0x3
 1952 024c 91       		.byte	0x91
 1953 024d A87F     		.sleb128 -88
 1954 024f 10       		.uleb128 0x10
 1955 0250 5D010000 		.4byte	.LASF30
 1956 0254 01       		.byte	0x1
 1957 0255 1301     		.2byte	0x113
 1958 0257 68000000 		.4byte	0x68
 1959 025b 03       		.uleb128 0x3
 1960 025c 91       		.byte	0x91
 1961 025d BC7F     		.sleb128 -68
 1962 025f 0C       		.uleb128 0xc
 1963 0260 B2000000 		.4byte	.LBB8
 1964 0264 BE010000 		.4byte	.LBE8-.LBB8
 1965 0268 7C020000 		.4byte	0x27c
 1966 026c 0F       		.uleb128 0xf
 1967 026d 63796C00 		.ascii	"cyl\000"
 1968 0271 01       		.byte	0x1
 1969 0272 1D01     		.2byte	0x11d
 1970 0274 68000000 		.4byte	0x68
 1971 0278 02       		.uleb128 0x2
 1972 0279 91       		.byte	0x91
 1973 027a 5C       		.sleb128 -36
 1974 027b 00       		.byte	0
 1975 027c 0A       		.uleb128 0xa
 1976 027d 7A020000 		.4byte	.LBB9
 1977 0281 B4010000 		.4byte	.LBE9-.LBB9
 1978 0285 10       		.uleb128 0x10
 1979 0286 78020000 		.4byte	.LASF31
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccuzGkEA.s 			page 44


 1980 028a 01       		.byte	0x1
 1981 028b 3101     		.2byte	0x131
 1982 028d 68000000 		.4byte	0x68
 1983 0291 03       		.uleb128 0x3
 1984 0292 91       		.byte	0x91
 1985 0293 B87F     		.sleb128 -72
 1986 0295 10       		.uleb128 0x10
 1987 0296 4F030000 		.4byte	.LASF32
 1988 029a 01       		.byte	0x1
 1989 029b 3201     		.2byte	0x132
 1990 029d 68000000 		.4byte	0x68
 1991 02a1 02       		.uleb128 0x2
 1992 02a2 91       		.byte	0x91
 1993 02a3 58       		.sleb128 -40
 1994 02a4 10       		.uleb128 0x10
 1995 02a5 94010000 		.4byte	.LASF33
 1996 02a9 01       		.byte	0x1
 1997 02aa 3301     		.2byte	0x133
 1998 02ac 68000000 		.4byte	0x68
 1999 02b0 02       		.uleb128 0x2
 2000 02b1 91       		.byte	0x91
 2001 02b2 54       		.sleb128 -44
 2002 02b3 10       		.uleb128 0x10
 2003 02b4 77010000 		.4byte	.LASF34
 2004 02b8 01       		.byte	0x1
 2005 02b9 3401     		.2byte	0x134
 2006 02bb 68000000 		.4byte	0x68
 2007 02bf 02       		.uleb128 0x2
 2008 02c0 91       		.byte	0x91
 2009 02c1 50       		.sleb128 -48
 2010 02c2 10       		.uleb128 0x10
 2011 02c3 BE010000 		.4byte	.LASF35
 2012 02c7 01       		.byte	0x1
 2013 02c8 3501     		.2byte	0x135
 2014 02ca 68000000 		.4byte	0x68
 2015 02ce 02       		.uleb128 0x2
 2016 02cf 91       		.byte	0x91
 2017 02d0 4C       		.sleb128 -52
 2018 02d1 10       		.uleb128 0x10
 2019 02d2 0C000000 		.4byte	.LASF36
 2020 02d6 01       		.byte	0x1
 2021 02d7 3601     		.2byte	0x136
 2022 02d9 68000000 		.4byte	0x68
 2023 02dd 02       		.uleb128 0x2
 2024 02de 91       		.byte	0x91
 2025 02df 48       		.sleb128 -56
 2026 02e0 10       		.uleb128 0x10
 2027 02e1 91020000 		.4byte	.LASF37
 2028 02e5 01       		.byte	0x1
 2029 02e6 3701     		.2byte	0x137
 2030 02e8 68000000 		.4byte	0x68
 2031 02ec 02       		.uleb128 0x2
 2032 02ed 91       		.byte	0x91
 2033 02ee 44       		.sleb128 -60
 2034 02ef 10       		.uleb128 0x10
 2035 02f0 CB020000 		.4byte	.LASF38
 2036 02f4 01       		.byte	0x1
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccuzGkEA.s 			page 45


 2037 02f5 3801     		.2byte	0x138
 2038 02f7 8D000000 		.4byte	0x8d
 2039 02fb 03       		.uleb128 0x3
 2040 02fc 91       		.byte	0x91
 2041 02fd B67F     		.sleb128 -74
 2042 02ff 10       		.uleb128 0x10
 2043 0300 3A000000 		.4byte	.LASF39
 2044 0304 01       		.byte	0x1
 2045 0305 3901     		.2byte	0x139
 2046 0307 8D000000 		.4byte	0x8d
 2047 030b 03       		.uleb128 0x3
 2048 030c 91       		.byte	0x91
 2049 030d B47F     		.sleb128 -76
 2050 030f 0A       		.uleb128 0xa
 2051 0310 A0020000 		.4byte	.LBB10
 2052 0314 1A000000 		.4byte	.LBE10-.LBB10
 2053 0318 0F       		.uleb128 0xf
 2054 0319 6700     		.ascii	"g\000"
 2055 031b 01       		.byte	0x1
 2056 031c 3A01     		.2byte	0x13a
 2057 031e 68000000 		.4byte	0x68
 2058 0322 02       		.uleb128 0x2
 2059 0323 91       		.byte	0x91
 2060 0324 40       		.sleb128 -64
 2061 0325 00       		.byte	0
 2062 0326 00       		.byte	0
 2063 0327 00       		.byte	0
 2064 0328 11       		.uleb128 0x11
 2065 0329 42030000 		.4byte	.LASF40
 2066 032d 05       		.byte	0x5
 2067 032e 1207     		.2byte	0x712
 2068 0330 34030000 		.4byte	0x334
 2069 0334 06       		.uleb128 0x6
 2070 0335 76000000 		.4byte	0x76
 2071 0339 12       		.uleb128 0x12
 2072 033a 45010000 		.4byte	.LASF41
 2073 033e 01       		.byte	0x1
 2074 033f 13       		.byte	0x13
 2075 0340 81000000 		.4byte	0x81
 2076 0344 05       		.uleb128 0x5
 2077 0345 03       		.byte	0x3
 2078 0346 00000000 		.4byte	errorStatus
 2079 034a 12       		.uleb128 0x12
 2080 034b 21010000 		.4byte	.LASF42
 2081 034f 01       		.byte	0x1
 2082 0350 2F       		.byte	0x2f
 2083 0351 68000000 		.4byte	0x68
 2084 0355 05       		.uleb128 0x5
 2085 0356 03       		.byte	0x3
 2086 0357 00000000 		.4byte	data_read_mode
 2087 035b 13       		.uleb128 0x13
 2088 035c 6B030000 		.4byte	0x36b
 2089 0360 6B030000 		.4byte	0x36b
 2090 0364 14       		.uleb128 0x14
 2091 0365 C6000000 		.4byte	0xc6
 2092 0369 03       		.byte	0x3
 2093 036a 00       		.byte	0
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccuzGkEA.s 			page 46


 2094 036b 06       		.uleb128 0x6
 2095 036c 68000000 		.4byte	0x68
 2096 0370 12       		.uleb128 0x12
 2097 0371 3F000000 		.4byte	.LASF43
 2098 0375 01       		.byte	0x1
 2099 0376 31       		.byte	0x31
 2100 0377 81030000 		.4byte	0x381
 2101 037b 05       		.uleb128 0x5
 2102 037c 03       		.byte	0x3
 2103 037d 00000000 		.4byte	new_pos_set
 2104 0381 06       		.uleb128 0x6
 2105 0382 5B030000 		.4byte	0x35b
 2106 0386 13       		.uleb128 0x13
 2107 0387 68000000 		.4byte	0x68
 2108 038b 96030000 		.4byte	0x396
 2109 038f 14       		.uleb128 0x14
 2110 0390 C6000000 		.4byte	0xc6
 2111 0394 03       		.byte	0x3
 2112 0395 00       		.byte	0
 2113 0396 12       		.uleb128 0x12
 2114 0397 D4010000 		.4byte	.LASF44
 2115 039b 01       		.byte	0x1
 2116 039c 32       		.byte	0x32
 2117 039d 86030000 		.4byte	0x386
 2118 03a1 05       		.uleb128 0x5
 2119 03a2 03       		.byte	0x3
 2120 03a3 00000000 		.4byte	new_pos
 2121 03a7 15       		.uleb128 0x15
 2122 03a8 706F7300 		.ascii	"pos\000"
 2123 03ac 01       		.byte	0x1
 2124 03ad 33       		.byte	0x33
 2125 03ae 86030000 		.4byte	0x386
 2126 03b2 05       		.uleb128 0x5
 2127 03b3 03       		.byte	0x3
 2128 03b4 00000000 		.4byte	pos
 2129 03b8 12       		.uleb128 0x12
 2130 03b9 30010000 		.4byte	.LASF20
 2131 03bd 01       		.byte	0x1
 2132 03be 34       		.byte	0x34
 2133 03bf 86030000 		.4byte	0x386
 2134 03c3 05       		.uleb128 0x5
 2135 03c4 03       		.byte	0x3
 2136 03c5 00000000 		.4byte	pulse
 2137 03c9 12       		.uleb128 0x12
 2138 03ca B3010000 		.4byte	.LASF45
 2139 03ce 01       		.byte	0x1
 2140 03cf 35       		.byte	0x35
 2141 03d0 86030000 		.4byte	0x386
 2142 03d4 05       		.uleb128 0x5
 2143 03d5 03       		.byte	0x3
 2144 03d6 00000000 		.4byte	pulse_temp
 2145 03da 13       		.uleb128 0x13
 2146 03db A0000000 		.4byte	0xa0
 2147 03df EA030000 		.4byte	0x3ea
 2148 03e3 14       		.uleb128 0x14
 2149 03e4 C6000000 		.4byte	0xc6
 2150 03e8 03       		.byte	0x3
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccuzGkEA.s 			page 47


 2151 03e9 00       		.byte	0
 2152 03ea 15       		.uleb128 0x15
 2153 03eb 65727200 		.ascii	"err\000"
 2154 03ef 01       		.byte	0x1
 2155 03f0 36       		.byte	0x36
 2156 03f1 DA030000 		.4byte	0x3da
 2157 03f5 05       		.uleb128 0x5
 2158 03f6 03       		.byte	0x3
 2159 03f7 00000000 		.4byte	err
 2160 03fb 13       		.uleb128 0x13
 2161 03fc 8D000000 		.4byte	0x8d
 2162 0400 0B040000 		.4byte	0x40b
 2163 0404 14       		.uleb128 0x14
 2164 0405 C6000000 		.4byte	0xc6
 2165 0409 03       		.byte	0x3
 2166 040a 00       		.byte	0
 2167 040b 12       		.uleb128 0x12
 2168 040c DC010000 		.4byte	.LASF46
 2169 0410 01       		.byte	0x1
 2170 0411 37       		.byte	0x37
 2171 0412 FB030000 		.4byte	0x3fb
 2172 0416 05       		.uleb128 0x5
 2173 0417 03       		.byte	0x3
 2174 0418 00000000 		.4byte	adcValue
 2175 041c 15       		.uleb128 0x15
 2176 041d 64657200 		.ascii	"der\000"
 2177 0421 01       		.byte	0x1
 2178 0422 38       		.byte	0x38
 2179 0423 DA030000 		.4byte	0x3da
 2180 0427 05       		.uleb128 0x5
 2181 0428 03       		.byte	0x3
 2182 0429 00000000 		.4byte	der
 2183 042d 12       		.uleb128 0x12
 2184 042e 31000000 		.4byte	.LASF47
 2185 0432 01       		.byte	0x1
 2186 0433 39       		.byte	0x39
 2187 0434 DA030000 		.4byte	0x3da
 2188 0438 05       		.uleb128 0x5
 2189 0439 03       		.byte	0x3
 2190 043a 00000000 		.4byte	prev_err
 2191 043e 12       		.uleb128 0x12
 2192 043f BE020000 		.4byte	.LASF48
 2193 0443 01       		.byte	0x1
 2194 0444 3A       		.byte	0x3a
 2195 0445 DA030000 		.4byte	0x3da
 2196 0449 05       		.uleb128 0x5
 2197 044a 03       		.byte	0x3
 2198 044b 00000000 		.4byte	pid_integral
 2199 044f 12       		.uleb128 0x12
 2200 0450 1B000000 		.4byte	.LASF49
 2201 0454 01       		.byte	0x1
 2202 0455 3B       		.byte	0x3b
 2203 0456 68000000 		.4byte	0x68
 2204 045a 05       		.uleb128 0x5
 2205 045b 03       		.byte	0x3
 2206 045c 00000000 		.4byte	cyl_set
 2207 0460 13       		.uleb128 0x13
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccuzGkEA.s 			page 48


 2208 0461 A7000000 		.4byte	0xa7
 2209 0465 70040000 		.4byte	0x470
 2210 0469 14       		.uleb128 0x14
 2211 046a C6000000 		.4byte	0xc6
 2212 046e 00       		.byte	0
 2213 046f 00       		.byte	0
 2214 0470 12       		.uleb128 0x12
 2215 0471 23000000 		.4byte	.LASF50
 2216 0475 01       		.byte	0x1
 2217 0476 3C       		.byte	0x3c
 2218 0477 60040000 		.4byte	0x460
 2219 047b 05       		.uleb128 0x5
 2220 047c 03       		.byte	0x3
 2221 047d 00000000 		.4byte	cyl_tmp
 2222 0481 13       		.uleb128 0x13
 2223 0482 68000000 		.4byte	0x68
 2224 0486 97040000 		.4byte	0x497
 2225 048a 14       		.uleb128 0x14
 2226 048b C6000000 		.4byte	0xc6
 2227 048f 03       		.byte	0x3
 2228 0490 14       		.uleb128 0x14
 2229 0491 C6000000 		.4byte	0xc6
 2230 0495 01       		.byte	0x1
 2231 0496 00       		.byte	0
 2232 0497 12       		.uleb128 0x12
 2233 0498 6F010000 		.4byte	.LASF51
 2234 049c 01       		.byte	0x1
 2235 049d 3E       		.byte	0x3e
 2236 049e 81040000 		.4byte	0x481
 2237 04a2 05       		.uleb128 0x5
 2238 04a3 03       		.byte	0x3
 2239 04a4 00000000 		.4byte	offsets
 2240 04a8 13       		.uleb128 0x13
 2241 04a9 A7000000 		.4byte	0xa7
 2242 04ad B8040000 		.4byte	0x4b8
 2243 04b1 14       		.uleb128 0x14
 2244 04b2 C6000000 		.4byte	0xc6
 2245 04b6 63       		.byte	0x63
 2246 04b7 00       		.byte	0
 2247 04b8 12       		.uleb128 0x12
 2248 04b9 31030000 		.4byte	.LASF52
 2249 04bd 01       		.byte	0x1
 2250 04be 40       		.byte	0x40
 2251 04bf A8040000 		.4byte	0x4a8
 2252 04c3 05       		.uleb128 0x5
 2253 04c4 03       		.byte	0x3
 2254 04c5 00000000 		.4byte	sendValue
 2255 04c9 13       		.uleb128 0x13
 2256 04ca A7000000 		.4byte	0xa7
 2257 04ce D9040000 		.4byte	0x4d9
 2258 04d2 14       		.uleb128 0x14
 2259 04d3 C6000000 		.4byte	0xc6
 2260 04d7 13       		.byte	0x13
 2261 04d8 00       		.byte	0
 2262 04d9 12       		.uleb128 0x12
 2263 04da 4B000000 		.4byte	.LASF53
 2264 04de 01       		.byte	0x1
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccuzGkEA.s 			page 49


 2265 04df 41       		.byte	0x41
 2266 04e0 C9040000 		.4byte	0x4c9
 2267 04e4 05       		.uleb128 0x5
 2268 04e5 03       		.byte	0x3
 2269 04e6 00000000 		.4byte	temp
 2270 04ea 15       		.uleb128 0x15
 2271 04eb 6E6E00   		.ascii	"nn\000"
 2272 04ee 01       		.byte	0x1
 2273 04ef 42       		.byte	0x42
 2274 04f0 68000000 		.4byte	0x68
 2275 04f4 05       		.uleb128 0x5
 2276 04f5 03       		.byte	0x3
 2277 04f6 00000000 		.4byte	nn
 2278 04fa 13       		.uleb128 0x13
 2279 04fb A0000000 		.4byte	0xa0
 2280 04ff 0A050000 		.4byte	0x50a
 2281 0503 14       		.uleb128 0x14
 2282 0504 C6000000 		.4byte	0xc6
 2283 0508 02       		.byte	0x2
 2284 0509 00       		.byte	0
 2285 050a 15       		.uleb128 0x15
 2286 050b 70696400 		.ascii	"pid\000"
 2287 050f 01       		.byte	0x1
 2288 0510 43       		.byte	0x43
 2289 0511 FA040000 		.4byte	0x4fa
 2290 0515 05       		.uleb128 0x5
 2291 0516 03       		.byte	0x3
 2292 0517 00000000 		.4byte	pid
 2293 051b 12       		.uleb128 0x12
 2294 051c 11010000 		.4byte	.LASF54
 2295 0520 01       		.byte	0x1
 2296 0521 45       		.byte	0x45
 2297 0522 A8040000 		.4byte	0x4a8
 2298 0526 05       		.uleb128 0x5
 2299 0527 03       		.byte	0x3
 2300 0528 00000000 		.4byte	help
 2301 052c 15       		.uleb128 0x15
 2302 052d 747400   		.ascii	"tt\000"
 2303 0530 01       		.byte	0x1
 2304 0531 46       		.byte	0x46
 2305 0532 68000000 		.4byte	0x68
 2306 0536 05       		.uleb128 0x5
 2307 0537 03       		.byte	0x3
 2308 0538 00000000 		.4byte	tt
 2309 053c 12       		.uleb128 0x12
 2310 053d FB020000 		.4byte	.LASF55
 2311 0541 01       		.byte	0x1
 2312 0542 48       		.byte	0x48
 2313 0543 68000000 		.4byte	0x68
 2314 0547 05       		.uleb128 0x5
 2315 0548 03       		.byte	0x3
 2316 0549 00000000 		.4byte	start_calib
 2317 054d 12       		.uleb128 0x12
 2318 054e 8D010000 		.4byte	.LASF56
 2319 0552 01       		.byte	0x1
 2320 0553 49       		.byte	0x49
 2321 0554 68000000 		.4byte	0x68
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccuzGkEA.s 			page 50


 2322 0558 05       		.uleb128 0x5
 2323 0559 03       		.byte	0x3
 2324 055a 00000000 		.4byte	cyl_no
 2325 055e 13       		.uleb128 0x13
 2326 055f 8D000000 		.4byte	0x8d
 2327 0563 74050000 		.4byte	0x574
 2328 0567 14       		.uleb128 0x14
 2329 0568 C6000000 		.4byte	0xc6
 2330 056c 03       		.byte	0x3
 2331 056d 14       		.uleb128 0x14
 2332 056e C6000000 		.4byte	0xc6
 2333 0572 06       		.byte	0x6
 2334 0573 00       		.byte	0
 2335 0574 12       		.uleb128 0x12
 2336 0575 19030000 		.4byte	.LASF57
 2337 0579 01       		.byte	0x1
 2338 057a 4B       		.byte	0x4b
 2339 057b 5E050000 		.4byte	0x55e
 2340 057f 05       		.uleb128 0x5
 2341 0580 03       		.byte	0x3
 2342 0581 00000000 		.4byte	moving_median
 2343 0585 13       		.uleb128 0x13
 2344 0586 8D000000 		.4byte	0x8d
 2345 058a 95050000 		.4byte	0x595
 2346 058e 14       		.uleb128 0x14
 2347 058f C6000000 		.4byte	0xc6
 2348 0593 06       		.byte	0x6
 2349 0594 00       		.byte	0
 2350 0595 12       		.uleb128 0x12
 2351 0596 27030000 		.4byte	.LASF58
 2352 059a 01       		.byte	0x1
 2353 059b 4C       		.byte	0x4c
 2354 059c 85050000 		.4byte	0x585
 2355 05a0 05       		.uleb128 0x5
 2356 05a1 03       		.byte	0x3
 2357 05a2 00000000 		.4byte	tempArray
 2358 05a6 15       		.uleb128 0x15
 2359 05a7 746D7000 		.ascii	"tmp\000"
 2360 05ab 01       		.byte	0x1
 2361 05ac 4D       		.byte	0x4d
 2362 05ad 8D000000 		.4byte	0x8d
 2363 05b1 05       		.uleb128 0x5
 2364 05b2 03       		.byte	0x3
 2365 05b3 00000000 		.4byte	tmp
 2366 05b7 12       		.uleb128 0x12
 2367 05b8 16010000 		.4byte	.LASF59
 2368 05bc 01       		.byte	0x1
 2369 05bd F3       		.byte	0xf3
 2370 05be 68000000 		.4byte	0x68
 2371 05c2 05       		.uleb128 0x5
 2372 05c3 03       		.byte	0x3
 2373 05c4 00000000 		.4byte	led_switch
 2374 05c8 00       		.byte	0
 2375              		.section	.debug_abbrev,"",%progbits
 2376              	.Ldebug_abbrev0:
 2377 0000 01       		.uleb128 0x1
 2378 0001 11       		.uleb128 0x11
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccuzGkEA.s 			page 51


 2379 0002 01       		.byte	0x1
 2380 0003 25       		.uleb128 0x25
 2381 0004 0E       		.uleb128 0xe
 2382 0005 13       		.uleb128 0x13
 2383 0006 0B       		.uleb128 0xb
 2384 0007 03       		.uleb128 0x3
 2385 0008 0E       		.uleb128 0xe
 2386 0009 1B       		.uleb128 0x1b
 2387 000a 0E       		.uleb128 0xe
 2388 000b 55       		.uleb128 0x55
 2389 000c 17       		.uleb128 0x17
 2390 000d 11       		.uleb128 0x11
 2391 000e 01       		.uleb128 0x1
 2392 000f 10       		.uleb128 0x10
 2393 0010 17       		.uleb128 0x17
 2394 0011 00       		.byte	0
 2395 0012 00       		.byte	0
 2396 0013 02       		.uleb128 0x2
 2397 0014 24       		.uleb128 0x24
 2398 0015 00       		.byte	0
 2399 0016 0B       		.uleb128 0xb
 2400 0017 0B       		.uleb128 0xb
 2401 0018 3E       		.uleb128 0x3e
 2402 0019 0B       		.uleb128 0xb
 2403 001a 03       		.uleb128 0x3
 2404 001b 0E       		.uleb128 0xe
 2405 001c 00       		.byte	0
 2406 001d 00       		.byte	0
 2407 001e 03       		.uleb128 0x3
 2408 001f 16       		.uleb128 0x16
 2409 0020 00       		.byte	0
 2410 0021 03       		.uleb128 0x3
 2411 0022 0E       		.uleb128 0xe
 2412 0023 3A       		.uleb128 0x3a
 2413 0024 0B       		.uleb128 0xb
 2414 0025 3B       		.uleb128 0x3b
 2415 0026 0B       		.uleb128 0xb
 2416 0027 49       		.uleb128 0x49
 2417 0028 13       		.uleb128 0x13
 2418 0029 00       		.byte	0
 2419 002a 00       		.byte	0
 2420 002b 04       		.uleb128 0x4
 2421 002c 24       		.uleb128 0x24
 2422 002d 00       		.byte	0
 2423 002e 0B       		.uleb128 0xb
 2424 002f 0B       		.uleb128 0xb
 2425 0030 3E       		.uleb128 0x3e
 2426 0031 0B       		.uleb128 0xb
 2427 0032 03       		.uleb128 0x3
 2428 0033 08       		.uleb128 0x8
 2429 0034 00       		.byte	0
 2430 0035 00       		.byte	0
 2431 0036 05       		.uleb128 0x5
 2432 0037 16       		.uleb128 0x16
 2433 0038 00       		.byte	0
 2434 0039 03       		.uleb128 0x3
 2435 003a 0E       		.uleb128 0xe
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccuzGkEA.s 			page 52


 2436 003b 3A       		.uleb128 0x3a
 2437 003c 0B       		.uleb128 0xb
 2438 003d 3B       		.uleb128 0x3b
 2439 003e 05       		.uleb128 0x5
 2440 003f 49       		.uleb128 0x49
 2441 0040 13       		.uleb128 0x13
 2442 0041 00       		.byte	0
 2443 0042 00       		.byte	0
 2444 0043 06       		.uleb128 0x6
 2445 0044 35       		.uleb128 0x35
 2446 0045 00       		.byte	0
 2447 0046 49       		.uleb128 0x49
 2448 0047 13       		.uleb128 0x13
 2449 0048 00       		.byte	0
 2450 0049 00       		.byte	0
 2451 004a 07       		.uleb128 0x7
 2452 004b 2E       		.uleb128 0x2e
 2453 004c 01       		.byte	0x1
 2454 004d 3F       		.uleb128 0x3f
 2455 004e 19       		.uleb128 0x19
 2456 004f 03       		.uleb128 0x3
 2457 0050 0E       		.uleb128 0xe
 2458 0051 3A       		.uleb128 0x3a
 2459 0052 0B       		.uleb128 0xb
 2460 0053 3B       		.uleb128 0x3b
 2461 0054 0B       		.uleb128 0xb
 2462 0055 27       		.uleb128 0x27
 2463 0056 19       		.uleb128 0x19
 2464 0057 11       		.uleb128 0x11
 2465 0058 01       		.uleb128 0x1
 2466 0059 12       		.uleb128 0x12
 2467 005a 06       		.uleb128 0x6
 2468 005b 40       		.uleb128 0x40
 2469 005c 18       		.uleb128 0x18
 2470 005d 9642     		.uleb128 0x2116
 2471 005f 19       		.uleb128 0x19
 2472 0060 01       		.uleb128 0x1
 2473 0061 13       		.uleb128 0x13
 2474 0062 00       		.byte	0
 2475 0063 00       		.byte	0
 2476 0064 08       		.uleb128 0x8
 2477 0065 05       		.uleb128 0x5
 2478 0066 00       		.byte	0
 2479 0067 03       		.uleb128 0x3
 2480 0068 0E       		.uleb128 0xe
 2481 0069 3A       		.uleb128 0x3a
 2482 006a 0B       		.uleb128 0xb
 2483 006b 3B       		.uleb128 0x3b
 2484 006c 0B       		.uleb128 0xb
 2485 006d 49       		.uleb128 0x49
 2486 006e 13       		.uleb128 0x13
 2487 006f 02       		.uleb128 0x2
 2488 0070 18       		.uleb128 0x18
 2489 0071 00       		.byte	0
 2490 0072 00       		.byte	0
 2491 0073 09       		.uleb128 0x9
 2492 0074 2E       		.uleb128 0x2e
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccuzGkEA.s 			page 53


 2493 0075 01       		.byte	0x1
 2494 0076 3F       		.uleb128 0x3f
 2495 0077 19       		.uleb128 0x19
 2496 0078 03       		.uleb128 0x3
 2497 0079 0E       		.uleb128 0xe
 2498 007a 3A       		.uleb128 0x3a
 2499 007b 0B       		.uleb128 0xb
 2500 007c 3B       		.uleb128 0x3b
 2501 007d 0B       		.uleb128 0xb
 2502 007e 27       		.uleb128 0x27
 2503 007f 19       		.uleb128 0x19
 2504 0080 49       		.uleb128 0x49
 2505 0081 13       		.uleb128 0x13
 2506 0082 11       		.uleb128 0x11
 2507 0083 01       		.uleb128 0x1
 2508 0084 12       		.uleb128 0x12
 2509 0085 06       		.uleb128 0x6
 2510 0086 40       		.uleb128 0x40
 2511 0087 18       		.uleb128 0x18
 2512 0088 9742     		.uleb128 0x2117
 2513 008a 19       		.uleb128 0x19
 2514 008b 01       		.uleb128 0x1
 2515 008c 13       		.uleb128 0x13
 2516 008d 00       		.byte	0
 2517 008e 00       		.byte	0
 2518 008f 0A       		.uleb128 0xa
 2519 0090 0B       		.uleb128 0xb
 2520 0091 01       		.byte	0x1
 2521 0092 11       		.uleb128 0x11
 2522 0093 01       		.uleb128 0x1
 2523 0094 12       		.uleb128 0x12
 2524 0095 06       		.uleb128 0x6
 2525 0096 00       		.byte	0
 2526 0097 00       		.byte	0
 2527 0098 0B       		.uleb128 0xb
 2528 0099 34       		.uleb128 0x34
 2529 009a 00       		.byte	0
 2530 009b 03       		.uleb128 0x3
 2531 009c 08       		.uleb128 0x8
 2532 009d 3A       		.uleb128 0x3a
 2533 009e 0B       		.uleb128 0xb
 2534 009f 3B       		.uleb128 0x3b
 2535 00a0 0B       		.uleb128 0xb
 2536 00a1 49       		.uleb128 0x49
 2537 00a2 13       		.uleb128 0x13
 2538 00a3 02       		.uleb128 0x2
 2539 00a4 18       		.uleb128 0x18
 2540 00a5 00       		.byte	0
 2541 00a6 00       		.byte	0
 2542 00a7 0C       		.uleb128 0xc
 2543 00a8 0B       		.uleb128 0xb
 2544 00a9 01       		.byte	0x1
 2545 00aa 11       		.uleb128 0x11
 2546 00ab 01       		.uleb128 0x1
 2547 00ac 12       		.uleb128 0x12
 2548 00ad 06       		.uleb128 0x6
 2549 00ae 01       		.uleb128 0x1
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccuzGkEA.s 			page 54


 2550 00af 13       		.uleb128 0x13
 2551 00b0 00       		.byte	0
 2552 00b1 00       		.byte	0
 2553 00b2 0D       		.uleb128 0xd
 2554 00b3 34       		.uleb128 0x34
 2555 00b4 00       		.byte	0
 2556 00b5 03       		.uleb128 0x3
 2557 00b6 0E       		.uleb128 0xe
 2558 00b7 3A       		.uleb128 0x3a
 2559 00b8 0B       		.uleb128 0xb
 2560 00b9 3B       		.uleb128 0x3b
 2561 00ba 0B       		.uleb128 0xb
 2562 00bb 49       		.uleb128 0x49
 2563 00bc 13       		.uleb128 0x13
 2564 00bd 02       		.uleb128 0x2
 2565 00be 18       		.uleb128 0x18
 2566 00bf 00       		.byte	0
 2567 00c0 00       		.byte	0
 2568 00c1 0E       		.uleb128 0xe
 2569 00c2 2E       		.uleb128 0x2e
 2570 00c3 01       		.byte	0x1
 2571 00c4 3F       		.uleb128 0x3f
 2572 00c5 19       		.uleb128 0x19
 2573 00c6 03       		.uleb128 0x3
 2574 00c7 0E       		.uleb128 0xe
 2575 00c8 3A       		.uleb128 0x3a
 2576 00c9 0B       		.uleb128 0xb
 2577 00ca 3B       		.uleb128 0x3b
 2578 00cb 0B       		.uleb128 0xb
 2579 00cc 49       		.uleb128 0x49
 2580 00cd 13       		.uleb128 0x13
 2581 00ce 11       		.uleb128 0x11
 2582 00cf 01       		.uleb128 0x1
 2583 00d0 12       		.uleb128 0x12
 2584 00d1 06       		.uleb128 0x6
 2585 00d2 40       		.uleb128 0x40
 2586 00d3 18       		.uleb128 0x18
 2587 00d4 9642     		.uleb128 0x2116
 2588 00d6 19       		.uleb128 0x19
 2589 00d7 01       		.uleb128 0x1
 2590 00d8 13       		.uleb128 0x13
 2591 00d9 00       		.byte	0
 2592 00da 00       		.byte	0
 2593 00db 0F       		.uleb128 0xf
 2594 00dc 34       		.uleb128 0x34
 2595 00dd 00       		.byte	0
 2596 00de 03       		.uleb128 0x3
 2597 00df 08       		.uleb128 0x8
 2598 00e0 3A       		.uleb128 0x3a
 2599 00e1 0B       		.uleb128 0xb
 2600 00e2 3B       		.uleb128 0x3b
 2601 00e3 05       		.uleb128 0x5
 2602 00e4 49       		.uleb128 0x49
 2603 00e5 13       		.uleb128 0x13
 2604 00e6 02       		.uleb128 0x2
 2605 00e7 18       		.uleb128 0x18
 2606 00e8 00       		.byte	0
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccuzGkEA.s 			page 55


 2607 00e9 00       		.byte	0
 2608 00ea 10       		.uleb128 0x10
 2609 00eb 34       		.uleb128 0x34
 2610 00ec 00       		.byte	0
 2611 00ed 03       		.uleb128 0x3
 2612 00ee 0E       		.uleb128 0xe
 2613 00ef 3A       		.uleb128 0x3a
 2614 00f0 0B       		.uleb128 0xb
 2615 00f1 3B       		.uleb128 0x3b
 2616 00f2 05       		.uleb128 0x5
 2617 00f3 49       		.uleb128 0x49
 2618 00f4 13       		.uleb128 0x13
 2619 00f5 02       		.uleb128 0x2
 2620 00f6 18       		.uleb128 0x18
 2621 00f7 00       		.byte	0
 2622 00f8 00       		.byte	0
 2623 00f9 11       		.uleb128 0x11
 2624 00fa 34       		.uleb128 0x34
 2625 00fb 00       		.byte	0
 2626 00fc 03       		.uleb128 0x3
 2627 00fd 0E       		.uleb128 0xe
 2628 00fe 3A       		.uleb128 0x3a
 2629 00ff 0B       		.uleb128 0xb
 2630 0100 3B       		.uleb128 0x3b
 2631 0101 05       		.uleb128 0x5
 2632 0102 49       		.uleb128 0x49
 2633 0103 13       		.uleb128 0x13
 2634 0104 3F       		.uleb128 0x3f
 2635 0105 19       		.uleb128 0x19
 2636 0106 3C       		.uleb128 0x3c
 2637 0107 19       		.uleb128 0x19
 2638 0108 00       		.byte	0
 2639 0109 00       		.byte	0
 2640 010a 12       		.uleb128 0x12
 2641 010b 34       		.uleb128 0x34
 2642 010c 00       		.byte	0
 2643 010d 03       		.uleb128 0x3
 2644 010e 0E       		.uleb128 0xe
 2645 010f 3A       		.uleb128 0x3a
 2646 0110 0B       		.uleb128 0xb
 2647 0111 3B       		.uleb128 0x3b
 2648 0112 0B       		.uleb128 0xb
 2649 0113 49       		.uleb128 0x49
 2650 0114 13       		.uleb128 0x13
 2651 0115 3F       		.uleb128 0x3f
 2652 0116 19       		.uleb128 0x19
 2653 0117 02       		.uleb128 0x2
 2654 0118 18       		.uleb128 0x18
 2655 0119 00       		.byte	0
 2656 011a 00       		.byte	0
 2657 011b 13       		.uleb128 0x13
 2658 011c 01       		.uleb128 0x1
 2659 011d 01       		.byte	0x1
 2660 011e 49       		.uleb128 0x49
 2661 011f 13       		.uleb128 0x13
 2662 0120 01       		.uleb128 0x1
 2663 0121 13       		.uleb128 0x13
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccuzGkEA.s 			page 56


 2664 0122 00       		.byte	0
 2665 0123 00       		.byte	0
 2666 0124 14       		.uleb128 0x14
 2667 0125 21       		.uleb128 0x21
 2668 0126 00       		.byte	0
 2669 0127 49       		.uleb128 0x49
 2670 0128 13       		.uleb128 0x13
 2671 0129 2F       		.uleb128 0x2f
 2672 012a 0B       		.uleb128 0xb
 2673 012b 00       		.byte	0
 2674 012c 00       		.byte	0
 2675 012d 15       		.uleb128 0x15
 2676 012e 34       		.uleb128 0x34
 2677 012f 00       		.byte	0
 2678 0130 03       		.uleb128 0x3
 2679 0131 08       		.uleb128 0x8
 2680 0132 3A       		.uleb128 0x3a
 2681 0133 0B       		.uleb128 0xb
 2682 0134 3B       		.uleb128 0x3b
 2683 0135 0B       		.uleb128 0xb
 2684 0136 49       		.uleb128 0x49
 2685 0137 13       		.uleb128 0x13
 2686 0138 3F       		.uleb128 0x3f
 2687 0139 19       		.uleb128 0x19
 2688 013a 02       		.uleb128 0x2
 2689 013b 18       		.uleb128 0x18
 2690 013c 00       		.byte	0
 2691 013d 00       		.byte	0
 2692 013e 00       		.byte	0
 2693              		.section	.debug_aranges,"",%progbits
 2694 0000 3C000000 		.4byte	0x3c
 2695 0004 0200     		.2byte	0x2
 2696 0006 00000000 		.4byte	.Ldebug_info0
 2697 000a 04       		.byte	0x4
 2698 000b 00       		.byte	0
 2699 000c 0000     		.2byte	0
 2700 000e 0000     		.2byte	0
 2701 0010 00000000 		.4byte	.LFB64
 2702 0014 78000000 		.4byte	.LFE64-.LFB64
 2703 0018 00000000 		.4byte	.LFB65
 2704 001c 54000000 		.4byte	.LFE65-.LFB65
 2705 0020 00000000 		.4byte	.LFB66
 2706 0024 6C010000 		.4byte	.LFE66-.LFB66
 2707 0028 00000000 		.4byte	.LFB67
 2708 002c C4020000 		.4byte	.LFE67-.LFB67
 2709 0030 00000000 		.4byte	.LFB68
 2710 0034 A0040000 		.4byte	.LFE68-.LFB68
 2711 0038 00000000 		.4byte	0
 2712 003c 00000000 		.4byte	0
 2713              		.section	.debug_ranges,"",%progbits
 2714              	.Ldebug_ranges0:
 2715 0000 00000000 		.4byte	.LFB64
 2716 0004 78000000 		.4byte	.LFE64
 2717 0008 00000000 		.4byte	.LFB65
 2718 000c 54000000 		.4byte	.LFE65
 2719 0010 00000000 		.4byte	.LFB66
 2720 0014 6C010000 		.4byte	.LFE66
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccuzGkEA.s 			page 57


 2721 0018 00000000 		.4byte	.LFB67
 2722 001c C4020000 		.4byte	.LFE67
 2723 0020 00000000 		.4byte	.LFB68
 2724 0024 A0040000 		.4byte	.LFE68
 2725 0028 00000000 		.4byte	0
 2726 002c 00000000 		.4byte	0
 2727              		.section	.debug_line,"",%progbits
 2728              	.Ldebug_line0:
 2729 0000 60030000 		.section	.debug_str,"MS",%progbits,1
 2729      02004C01 
 2729      00000201 
 2729      FB0E0D00 
 2729      01010101 
 2730              	.LASF17:
 2731 0000 6C6F6E67 		.ascii	"long double\000"
 2731      20646F75 
 2731      626C6500 
 2732              	.LASF36:
 2733 000c 6C6F7765 		.ascii	"lower_check_no\000"
 2733      725F6368 
 2733      65636B5F 
 2733      6E6F00
 2734              	.LASF49:
 2735 001b 63796C5F 		.ascii	"cyl_set\000"
 2735      73657400 
 2736              	.LASF50:
 2737 0023 63796C5F 		.ascii	"cyl_tmp\000"
 2737      746D7000 
 2738              	.LASF13:
 2739 002b 666C6F61 		.ascii	"float\000"
 2739      7400
 2740              	.LASF47:
 2741 0031 70726576 		.ascii	"prev_err\000"
 2741      5F657272 
 2741      00
 2742              	.LASF39:
 2743 003a 64696666 		.ascii	"diff\000"
 2743      00
 2744              	.LASF43:
 2745 003f 6E65775F 		.ascii	"new_pos_set\000"
 2745      706F735F 
 2745      73657400 
 2746              	.LASF53:
 2747 004b 74656D70 		.ascii	"temp\000"
 2747      00
 2748              	.LASF2:
 2749 0050 73686F72 		.ascii	"short int\000"
 2749      7420696E 
 2749      7400
 2750              	.LASF22:
 2751 005a 6F666673 		.ascii	"offset_lower\000"
 2751      65745F6C 
 2751      6F776572 
 2751      00
 2752              	.LASF18:
 2753 0067 73697A65 		.ascii	"sizetype\000"
 2753      74797065 
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccuzGkEA.s 			page 58


 2753      00
 2754              	.LASF28:
 2755 0070 6D61696E 		.ascii	"main\000"
 2755      00
 2756              	.LASF60:
 2757 0075 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 2757      43313120 
 2757      352E342E 
 2757      31203230 
 2757      31363036 
 2758 00a8 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 2758      20726576 
 2758      6973696F 
 2758      6E203233 
 2758      37373135 
 2759 00db 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 2759      66756E63 
 2759      74696F6E 
 2759      2D736563 
 2759      74696F6E 
 2760              	.LASF6:
 2761 0103 6C6F6E67 		.ascii	"long long int\000"
 2761      206C6F6E 
 2761      6720696E 
 2761      7400
 2762              	.LASF54:
 2763 0111 68656C70 		.ascii	"help\000"
 2763      00
 2764              	.LASF59:
 2765 0116 6C65645F 		.ascii	"led_switch\000"
 2765      73776974 
 2765      636800
 2766              	.LASF42:
 2767 0121 64617461 		.ascii	"data_read_mode\000"
 2767      5F726561 
 2767      645F6D6F 
 2767      646500
 2768              	.LASF20:
 2769 0130 70756C73 		.ascii	"pulse\000"
 2769      6500
 2770              	.LASF11:
 2771 0136 75696E74 		.ascii	"uint8\000"
 2771      3800
 2772              	.LASF19:
 2773 013c 63796C69 		.ascii	"cylinder\000"
 2773      6E646572 
 2773      00
 2774              	.LASF41:
 2775 0145 6572726F 		.ascii	"errorStatus\000"
 2775      72537461 
 2775      74757300 
 2776              	.LASF0:
 2777 0151 7369676E 		.ascii	"signed char\000"
 2777      65642063 
 2777      68617200 
 2778              	.LASF30:
 2779 015d 73656E64 		.ascii	"send_now\000"
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccuzGkEA.s 			page 59


 2779      5F6E6F77 
 2779      00
 2780              	.LASF23:
 2781 0166 77726974 		.ascii	"writePWM\000"
 2781      6550574D 
 2781      00
 2782              	.LASF51:
 2783 016f 6F666673 		.ascii	"offsets\000"
 2783      65747300 
 2784              	.LASF34:
 2785 0177 75707065 		.ascii	"upper_offset\000"
 2785      725F6F66 
 2785      66736574 
 2785      00
 2786              	.LASF4:
 2787 0184 6C6F6E67 		.ascii	"long int\000"
 2787      20696E74 
 2787      00
 2788              	.LASF56:
 2789 018d 63796C5F 		.ascii	"cyl_no\000"
 2789      6E6F00
 2790              	.LASF33:
 2791 0194 6C6F7765 		.ascii	"lower_offset_set\000"
 2791      725F6F66 
 2791      66736574 
 2791      5F736574 
 2791      00
 2792              	.LASF1:
 2793 01a5 756E7369 		.ascii	"unsigned char\000"
 2793      676E6564 
 2793      20636861 
 2793      7200
 2794              	.LASF45:
 2795 01b3 70756C73 		.ascii	"pulse_temp\000"
 2795      655F7465 
 2795      6D7000
 2796              	.LASF35:
 2797 01be 6C6F7765 		.ascii	"lower_offset\000"
 2797      725F6F66 
 2797      66736574 
 2797      00
 2798              	.LASF26:
 2799 01cb 72785374 		.ascii	"rxStatus\000"
 2799      61747573 
 2799      00
 2800              	.LASF44:
 2801 01d4 6E65775F 		.ascii	"new_pos\000"
 2801      706F7300 
 2802              	.LASF46:
 2803 01dc 61646356 		.ascii	"adcValue\000"
 2803      616C7565 
 2803      00
 2804              	.LASF7:
 2805 01e5 6C6F6E67 		.ascii	"long long unsigned int\000"
 2805      206C6F6E 
 2805      6720756E 
 2805      7369676E 
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccuzGkEA.s 			page 60


 2805      65642069 
 2806              	.LASF8:
 2807 01fc 756E7369 		.ascii	"unsigned int\000"
 2807      676E6564 
 2807      20696E74 
 2807      00
 2808              	.LASF29:
 2809 0209 74696D65 		.ascii	"time\000"
 2809      00
 2810              	.LASF25:
 2811 020e 52784973 		.ascii	"RxIsr\000"
 2811      7200
 2812              	.LASF3:
 2813 0214 73686F72 		.ascii	"short unsigned int\000"
 2813      7420756E 
 2813      7369676E 
 2813      65642069 
 2813      6E7400
 2814              	.LASF62:
 2815 0227 433A5C55 		.ascii	"C:\\Users\\Andrew\\Documents\\GitHub\\Hydraulic-Mim"
 2815      73657273 
 2815      5C416E64 
 2815      7265775C 
 2815      446F6375 
 2816 0255 69632D41 		.ascii	"ic-Arm\\PSOC_arm_project.cydsn\000"
 2816      726D5C50 
 2816      534F435F 
 2816      61726D5F 
 2816      70726F6A 
 2817              	.LASF15:
 2818 0273 63686172 		.ascii	"char\000"
 2818      00
 2819              	.LASF31:
 2820 0278 63616C69 		.ascii	"calib_cyl\000"
 2820      625F6379 
 2820      6C00
 2821              	.LASF10:
 2822 0282 696E7433 		.ascii	"int32_t\000"
 2822      325F7400 
 2823              	.LASF12:
 2824 028a 75696E74 		.ascii	"uint16\000"
 2824      313600
 2825              	.LASF37:
 2826 0291 75707065 		.ascii	"upper_check_no\000"
 2826      725F6368 
 2826      65636B5F 
 2826      6E6F00
 2827              	.LASF61:
 2828 02a0 6D61696E 		.ascii	"main.c\000"
 2828      2E6300
 2829              	.LASF16:
 2830 02a7 72656738 		.ascii	"reg8\000"
 2830      00
 2831              	.LASF5:
 2832 02ac 6C6F6E67 		.ascii	"long unsigned int\000"
 2832      20756E73 
 2832      69676E65 
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccuzGkEA.s 			page 61


 2832      6420696E 
 2832      7400
 2833              	.LASF48:
 2834 02be 7069645F 		.ascii	"pid_integral\000"
 2834      696E7465 
 2834      6772616C 
 2834      00
 2835              	.LASF38:
 2836 02cb 70726576 		.ascii	"prev_adcValue\000"
 2836      5F616463 
 2836      56616C75 
 2836      6500
 2837              	.LASF9:
 2838 02d9 5F5F696E 		.ascii	"__int32_t\000"
 2838      7433325F 
 2838      7400
 2839              	.LASF21:
 2840 02e3 6F666673 		.ascii	"offset_upper\000"
 2840      65745F75 
 2840      70706572 
 2840      00
 2841              	.LASF63:
 2842 02f0 70756C73 		.ascii	"pulseCheck\000"
 2842      65436865 
 2842      636B00
 2843              	.LASF55:
 2844 02fb 73746172 		.ascii	"start_calib\000"
 2844      745F6361 
 2844      6C696200 
 2845              	.LASF24:
 2846 0307 6164635F 		.ascii	"adc_update\000"
 2846      75706461 
 2846      746500
 2847              	.LASF27:
 2848 0312 72784461 		.ascii	"rxData\000"
 2848      746100
 2849              	.LASF57:
 2850 0319 6D6F7669 		.ascii	"moving_median\000"
 2850      6E675F6D 
 2850      65646961 
 2850      6E00
 2851              	.LASF58:
 2852 0327 74656D70 		.ascii	"tempArray\000"
 2852      41727261 
 2852      7900
 2853              	.LASF52:
 2854 0331 73656E64 		.ascii	"sendValue\000"
 2854      56616C75 
 2854      6500
 2855              	.LASF14:
 2856 033b 646F7562 		.ascii	"double\000"
 2856      6C6500
 2857              	.LASF40:
 2858 0342 49544D5F 		.ascii	"ITM_RxBuffer\000"
 2858      52784275 
 2858      66666572 
 2858      00
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccuzGkEA.s 			page 62


 2859              	.LASF32:
 2860 034f 75707065 		.ascii	"upper_offset_set\000"
 2860      725F6F66 
 2860      66736574 
 2860      5F736574 
 2860      00
 2861              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
