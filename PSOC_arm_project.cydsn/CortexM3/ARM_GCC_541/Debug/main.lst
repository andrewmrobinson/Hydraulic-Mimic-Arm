ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccdG4o5x.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.syntax unified
  20              		.global _printf_float
  21              		.thumb
  22              		.syntax unified
  23              		.global	errorStatus
  24              		.bss
  25              		.type	errorStatus, %object
  26              		.size	errorStatus, 1
  27              	errorStatus:
  28 0000 00       		.space	1
  29              		.global	__aeabi_dadd
  30              		.global	__aeabi_ddiv
  31              		.global	__aeabi_dmul
  32              		.global	__aeabi_d2uiz
  33              		.section	.text.dutycyclelength,"ax",%progbits
  34              		.align	2
  35              		.global	dutycyclelength
  36              		.thumb
  37              		.thumb_func
  38              		.type	dutycyclelength, %function
  39              	dutycyclelength:
  40              	.LFB64:
  41              		.file 1 "main.c"
   1:main.c        **** 
   2:main.c        **** #include <project.h>
   3:main.c        **** #include <stdio.h>
   4:main.c        **** #include "common.h"
   5:main.c        **** #include <math.h>
   6:main.c        **** #include <stdlib.h>     /* strtod */
   7:main.c        **** 
   8:main.c        **** #define	Frequency 1000000.0			// Frequency of PWMClock
   9:main.c        **** #define	One_ms (Frequency/1000.0)	// 1 ms constant
  10:main.c        **** #define filter_size 7
  11:main.c        **** 
  12:main.c        **** /* Add an explicit reference to the floating point printf library to allow
  13:main.c        **** the usage of floating point conversion specifier */
  14:main.c        **** #if defined (__GNUC__)
  15:main.c        ****     asm (".global _printf_float");
  16:main.c        **** #endif
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccdG4o5x.s 			page 2


  17:main.c        **** 
  18:main.c        **** uint8 errorStatus = 0u;
  19:main.c        **** 
  20:main.c        **** uint16 dutycyclelength(double angle)
  21:main.c        **** {
  42              		.loc 1 21 0
  43              		.cfi_startproc
  44              		@ args = 0, pretend = 0, frame = 16
  45              		@ frame_needed = 1, uses_anonymous_args = 0
  46 0000 90B5     		push	{r4, r7, lr}
  47              		.cfi_def_cfa_offset 12
  48              		.cfi_offset 4, -12
  49              		.cfi_offset 7, -8
  50              		.cfi_offset 14, -4
  51 0002 85B0     		sub	sp, sp, #20
  52              		.cfi_def_cfa_offset 32
  53 0004 00AF     		add	r7, sp, #0
  54              		.cfi_def_cfa_register 7
  55 0006 C7E90001 		strd	r0, [r7]
  22:main.c        ****     uint16 pulselength=(uint16)One_ms + ((angle+45.0)/90.0) * One_ms;
  56              		.loc 1 22 0
  57 000a 4FF00002 		mov	r2, #0
  58 000e 164B     		ldr	r3, .L3
  59 0010 D7E90001 		ldrd	r0, [r7]
  60 0014 FFF7FEFF 		bl	__aeabi_dadd
  61 0018 0346     		mov	r3, r0
  62 001a 0C46     		mov	r4, r1
  63 001c 1846     		mov	r0, r3
  64 001e 2146     		mov	r1, r4
  65 0020 4FF00002 		mov	r2, #0
  66 0024 114B     		ldr	r3, .L3+4
  67 0026 FFF7FEFF 		bl	__aeabi_ddiv
  68 002a 0346     		mov	r3, r0
  69 002c 0C46     		mov	r4, r1
  70 002e 1846     		mov	r0, r3
  71 0030 2146     		mov	r1, r4
  72 0032 4FF00002 		mov	r2, #0
  73 0036 0E4B     		ldr	r3, .L3+8
  74 0038 FFF7FEFF 		bl	__aeabi_dmul
  75 003c 0346     		mov	r3, r0
  76 003e 0C46     		mov	r4, r1
  77 0040 1846     		mov	r0, r3
  78 0042 2146     		mov	r1, r4
  79 0044 4FF00002 		mov	r2, #0
  80 0048 094B     		ldr	r3, .L3+8
  81 004a FFF7FEFF 		bl	__aeabi_dadd
  82 004e 0346     		mov	r3, r0
  83 0050 0C46     		mov	r4, r1
  84 0052 1846     		mov	r0, r3
  85 0054 2146     		mov	r1, r4
  86 0056 FFF7FEFF 		bl	__aeabi_d2uiz
  87 005a 0346     		mov	r3, r0
  88 005c FB81     		strh	r3, [r7, #14]	@ movhi
  23:main.c        ****     return pulselength;
  89              		.loc 1 23 0
  90 005e FB89     		ldrh	r3, [r7, #14]
  24:main.c        **** }
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccdG4o5x.s 			page 3


  91              		.loc 1 24 0
  92 0060 1846     		mov	r0, r3
  93 0062 1437     		adds	r7, r7, #20
  94              		.cfi_def_cfa_offset 12
  95 0064 BD46     		mov	sp, r7
  96              		.cfi_def_cfa_register 13
  97              		@ sp needed
  98 0066 90BD     		pop	{r4, r7, pc}
  99              	.L4:
 100              		.align	2
 101              	.L3:
 102 0068 00804640 		.word	1078362112
 103 006c 00805640 		.word	1079410688
 104 0070 00408F40 		.word	1083129856
 105              		.cfi_endproc
 106              	.LFE64:
 107              		.size	dutycyclelength, .-dutycyclelength
 108              		.global	data_read_mode
 109              		.bss
 110 0001 000000   		.align	2
 111              		.type	data_read_mode, %object
 112              		.size	data_read_mode, 4
 113              	data_read_mode:
 114 0004 00000000 		.space	4
 115              		.global	new_angle
 116              		.align	2
 117              		.type	new_angle, %object
 118              		.size	new_angle, 4
 119              	new_angle:
 120 0008 00000000 		.space	4
 121              		.global	new_pos_set
 122              		.align	2
 123              		.type	new_pos_set, %object
 124              		.size	new_pos_set, 4
 125              	new_pos_set:
 126 000c 00000000 		.space	4
 127              		.global	angle
 128              		.align	3
 129              		.type	angle, %object
 130              		.size	angle, 8
 131              	angle:
 132 0010 00000000 		.space	8
 132      00000000 
 133              		.global	angletemp
 134              		.align	3
 135              		.type	angletemp, %object
 136              		.size	angletemp, 8
 137              	angletemp:
 138 0018 00000000 		.space	8
 138      00000000 
 139              		.global	pulse
 140              		.align	1
 141              		.type	pulse, %object
 142              		.size	pulse, 2
 143              	pulse:
 144 0020 0000     		.space	2
 145              		.global	pulse_temp
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccdG4o5x.s 			page 4


 146              		.align	1
 147              		.type	pulse_temp, %object
 148              		.size	pulse_temp, 2
 149              	pulse_temp:
 150 0022 0000     		.space	2
 151              		.global	isNegative
 152              		.align	2
 153              		.type	isNegative, %object
 154              		.size	isNegative, 4
 155              	isNegative:
 156 0024 00000000 		.space	4
 157              		.comm	sendValue,100,4
 158              		.comm	adcValue1,2,2
 159              		.comm	adcValue2,2,2
 160              		.comm	temp,20,4
 161              		.global	nn
 162              		.align	2
 163              		.type	nn, %object
 164              		.size	nn, 4
 165              	nn:
 166 0028 00000000 		.space	4
 167              		.global	pid
 168              		.data
 169              		.align	3
 170              		.type	pid, %object
 171              		.size	pid, 24
 172              	pid:
 173 0000 FA7E6ABC 		.word	-1133871366
 174 0004 7493683F 		.word	1063818100
 175 0008 00000000 		.word	0
 176 000c 00000000 		.word	0
 177 0010 FCA9F1D2 		.word	-755914244
 178 0014 4D62503F 		.word	1062232653
 179              		.comm	help,100,4
 180              		.global	tt
 181              		.bss
 182              		.align	2
 183              		.type	tt, %object
 184              		.size	tt, 4
 185              	tt:
 186 002c 00000000 		.space	4
 187              		.global	pos
 188              		.data
 189              		.align	2
 190              		.type	pos, %object
 191              		.size	pos, 4
 192              	pos:
 193 0018 40060000 		.word	1600
 194              		.comm	new_pos,4,4
 195              		.comm	err,8,8
 196              		.global	start_calib
 197              		.bss
 198              		.align	2
 199              		.type	start_calib, %object
 200              		.size	start_calib, 4
 201              	start_calib:
 202 0030 00000000 		.space	4
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccdG4o5x.s 			page 5


 203              		.global	moving_median
 204              		.align	2
 205              		.type	moving_median, %object
 206              		.size	moving_median, 14
 207              	moving_median:
 208 0034 00000000 		.space	14
 208      00000000 
 208      00000000 
 208      0000
 209              		.comm	tempArray,14,4
 210              		.comm	tmp,2,2
 211              		.section	.text.adc_update,"ax",%progbits
 212              		.align	2
 213              		.global	adc_update
 214              		.thumb
 215              		.thumb_func
 216              		.type	adc_update, %function
 217              	adc_update:
 218              	.LFB65:
  25:main.c        **** 
  26:main.c        **** /*******************************************************************************
  27:main.c        **** * Function Name: RxIsr
  28:main.c        **** ********************************************************************************
  29:main.c        **** *
  30:main.c        **** * Summary:
  31:main.c        **** *  Interrupt Service Routine for RX portion of the UART
  32:main.c        **** *
  33:main.c        **** * Parameters:
  34:main.c        **** *  None.
  35:main.c        **** *
  36:main.c        **** * Return:
  37:main.c        **** *  None.
  38:main.c        **** *
  39:main.c        **** *******************************************************************************/
  40:main.c        **** int data_read_mode = 0;
  41:main.c        **** volatile int new_angle = 0;
  42:main.c        **** volatile int new_pos_set = 0;
  43:main.c        **** double angle = 0;
  44:main.c        **** double angletemp=0;
  45:main.c        **** int16 pulse = 0;
  46:main.c        **** int16 pulse_temp = 0;
  47:main.c        **** int isNegative=0;
  48:main.c        **** char sendValue[100];
  49:main.c        **** uint16 adcValue1;
  50:main.c        **** uint16 adcValue2;
  51:main.c        **** char temp[20];
  52:main.c        **** int nn=0;
  53:main.c        **** double pid[3] = {0.003,0.000,0.001};
  54:main.c        **** //double pid[3] = { -2.22,-0.0307,0.0 };
  55:main.c        **** char help[100];
  56:main.c        **** int tt = 0;
  57:main.c        **** int pos=1600;
  58:main.c        **** int new_pos;
  59:main.c        **** double err;
  60:main.c        **** int start_calib = 0;
  61:main.c        **** 
  62:main.c        **** 
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccdG4o5x.s 			page 6


  63:main.c        **** uint16 moving_median[filter_size] = {0,0,0};
  64:main.c        **** uint16 tempArray[filter_size];
  65:main.c        **** uint16 tmp;
  66:main.c        **** 
  67:main.c        **** CY_ISR(adc_update){
 219              		.loc 1 67 0
 220              		.cfi_startproc
 221              		@ args = 0, pretend = 0, frame = 16
 222              		@ frame_needed = 1, uses_anonymous_args = 0
 223 0000 80B5     		push	{r7, lr}
 224              		.cfi_def_cfa_offset 8
 225              		.cfi_offset 7, -8
 226              		.cfi_offset 14, -4
 227 0002 84B0     		sub	sp, sp, #16
 228              		.cfi_def_cfa_offset 24
 229 0004 00AF     		add	r7, sp, #0
 230              		.cfi_def_cfa_register 7
 231              	.LBB2:
  68:main.c        ****     for(int j=0;j<filter_size-1;j++){
 232              		.loc 1 68 0
 233 0006 0023     		movs	r3, #0
 234 0008 FB60     		str	r3, [r7, #12]
 235 000a 0BE0     		b	.L6
 236              	.L7:
  69:main.c        ****             moving_median[j] = moving_median[j+1]; 
 237              		.loc 1 69 0 discriminator 3
 238 000c FB68     		ldr	r3, [r7, #12]
 239 000e 0133     		adds	r3, r3, #1
 240 0010 354A     		ldr	r2, .L16
 241 0012 32F81310 		ldrh	r1, [r2, r3, lsl #1]
 242 0016 344A     		ldr	r2, .L16
 243 0018 FB68     		ldr	r3, [r7, #12]
 244 001a 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
  68:main.c        ****     for(int j=0;j<filter_size-1;j++){
 245              		.loc 1 68 0 discriminator 3
 246 001e FB68     		ldr	r3, [r7, #12]
 247 0020 0133     		adds	r3, r3, #1
 248 0022 FB60     		str	r3, [r7, #12]
 249              	.L6:
  68:main.c        ****     for(int j=0;j<filter_size-1;j++){
 250              		.loc 1 68 0 is_stmt 0 discriminator 1
 251 0024 FB68     		ldr	r3, [r7, #12]
 252 0026 052B     		cmp	r3, #5
 253 0028 F0DD     		ble	.L7
 254              	.LBE2:
  70:main.c        ****     }
  71:main.c        ****     ADC_SAR_1_StartConvert();
 255              		.loc 1 71 0 is_stmt 1
 256 002a FFF7FEFF 		bl	ADC_SAR_1_StartConvert
  72:main.c        ****     ADC_SAR_1_IsEndConversion(ADC_SAR_1_WAIT_FOR_RESULT);
 257              		.loc 1 72 0
 258 002e 0020     		movs	r0, #0
 259 0030 FFF7FEFF 		bl	ADC_SAR_1_IsEndConversion
  73:main.c        ****         
  74:main.c        ****     moving_median[filter_size-1] = ADC_SAR_1_GetResult16();
 260              		.loc 1 74 0
 261 0034 FFF7FEFF 		bl	ADC_SAR_1_GetResult16
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccdG4o5x.s 			page 7


 262 0038 0346     		mov	r3, r0
 263 003a 9AB2     		uxth	r2, r3
 264 003c 2A4B     		ldr	r3, .L16
 265 003e 9A81     		strh	r2, [r3, #12]	@ movhi
 266              	.LBB3:
  75:main.c        ****     
  76:main.c        ****     for(int j=0;j<filter_size;j++){
 267              		.loc 1 76 0
 268 0040 0023     		movs	r3, #0
 269 0042 BB60     		str	r3, [r7, #8]
 270 0044 0AE0     		b	.L8
 271              	.L9:
  77:main.c        ****             tempArray[j] = moving_median[j]; 
 272              		.loc 1 77 0 discriminator 3
 273 0046 284A     		ldr	r2, .L16
 274 0048 BB68     		ldr	r3, [r7, #8]
 275 004a 32F81310 		ldrh	r1, [r2, r3, lsl #1]
 276 004e 274A     		ldr	r2, .L16+4
 277 0050 BB68     		ldr	r3, [r7, #8]
 278 0052 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
  76:main.c        ****             tempArray[j] = moving_median[j]; 
 279              		.loc 1 76 0 discriminator 3
 280 0056 BB68     		ldr	r3, [r7, #8]
 281 0058 0133     		adds	r3, r3, #1
 282 005a BB60     		str	r3, [r7, #8]
 283              	.L8:
  76:main.c        ****             tempArray[j] = moving_median[j]; 
 284              		.loc 1 76 0 is_stmt 0 discriminator 1
 285 005c BB68     		ldr	r3, [r7, #8]
 286 005e 062B     		cmp	r3, #6
 287 0060 F1DD     		ble	.L9
 288              	.LBE3:
 289              	.LBB4:
  78:main.c        ****     }
  79:main.c        ****     for(int i = 0; i < filter_size; i++){                     //Loop for ascending ordering
 290              		.loc 1 79 0 is_stmt 1
 291 0062 0023     		movs	r3, #0
 292 0064 7B60     		str	r3, [r7, #4]
 293 0066 29E0     		b	.L10
 294              	.L14:
 295              	.LBB5:
  80:main.c        ****     	for (int j = 0; j < filter_size; j++)             //Loop for comparing other values
 296              		.loc 1 80 0
 297 0068 0023     		movs	r3, #0
 298 006a 3B60     		str	r3, [r7]
 299 006c 20E0     		b	.L11
 300              	.L13:
  81:main.c        ****     	{
  82:main.c        ****     		if (tempArray[j] > tempArray[i])                //Comparing other array elements
 301              		.loc 1 82 0
 302 006e 1F4A     		ldr	r2, .L16+4
 303 0070 3B68     		ldr	r3, [r7]
 304 0072 32F81320 		ldrh	r2, [r2, r3, lsl #1]
 305 0076 1D49     		ldr	r1, .L16+4
 306 0078 7B68     		ldr	r3, [r7, #4]
 307 007a 31F81330 		ldrh	r3, [r1, r3, lsl #1]
 308 007e 9A42     		cmp	r2, r3
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccdG4o5x.s 			page 8


 309 0080 13D9     		bls	.L12
  83:main.c        ****     		{
  84:main.c        ****     			tmp = tempArray[i];         //Using temporary variable for storing last value
 310              		.loc 1 84 0
 311 0082 1A4A     		ldr	r2, .L16+4
 312 0084 7B68     		ldr	r3, [r7, #4]
 313 0086 32F81320 		ldrh	r2, [r2, r3, lsl #1]
 314 008a 194B     		ldr	r3, .L16+8
 315 008c 1A80     		strh	r2, [r3]	@ movhi
  85:main.c        ****     			tempArray[i] = tempArray[j];            //replacing value
 316              		.loc 1 85 0
 317 008e 174A     		ldr	r2, .L16+4
 318 0090 3B68     		ldr	r3, [r7]
 319 0092 32F81310 		ldrh	r1, [r2, r3, lsl #1]
 320 0096 154A     		ldr	r2, .L16+4
 321 0098 7B68     		ldr	r3, [r7, #4]
 322 009a 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
  86:main.c        ****     			tempArray[j] = tmp;             //storing last value
 323              		.loc 1 86 0
 324 009e 144B     		ldr	r3, .L16+8
 325 00a0 1988     		ldrh	r1, [r3]
 326 00a2 124A     		ldr	r2, .L16+4
 327 00a4 3B68     		ldr	r3, [r7]
 328 00a6 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
 329              	.L12:
  80:main.c        ****     	{
 330              		.loc 1 80 0 discriminator 2
 331 00aa 3B68     		ldr	r3, [r7]
 332 00ac 0133     		adds	r3, r3, #1
 333 00ae 3B60     		str	r3, [r7]
 334              	.L11:
  80:main.c        ****     	{
 335              		.loc 1 80 0 is_stmt 0 discriminator 1
 336 00b0 3B68     		ldr	r3, [r7]
 337 00b2 062B     		cmp	r3, #6
 338 00b4 DBDD     		ble	.L13
 339              	.LBE5:
  79:main.c        ****     	for (int j = 0; j < filter_size; j++)             //Loop for comparing other values
 340              		.loc 1 79 0 is_stmt 1 discriminator 2
 341 00b6 7B68     		ldr	r3, [r7, #4]
 342 00b8 0133     		adds	r3, r3, #1
 343 00ba 7B60     		str	r3, [r7, #4]
 344              	.L10:
  79:main.c        ****     	for (int j = 0; j < filter_size; j++)             //Loop for comparing other values
 345              		.loc 1 79 0 is_stmt 0 discriminator 1
 346 00bc 7B68     		ldr	r3, [r7, #4]
 347 00be 062B     		cmp	r3, #6
 348 00c0 D2DD     		ble	.L14
 349              	.LBE4:
  87:main.c        ****     		}  
  88:main.c        ****     	}
  89:main.c        ****     }
  90:main.c        ****     adcValue1 = tempArray[(filter_size-1)/2];
 350              		.loc 1 90 0 is_stmt 1
 351 00c2 0A4B     		ldr	r3, .L16+4
 352 00c4 DA88     		ldrh	r2, [r3, #6]
 353 00c6 0B4B     		ldr	r3, .L16+12
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccdG4o5x.s 			page 9


 354 00c8 1A80     		strh	r2, [r3]	@ movhi
  91:main.c        ****     if(adcValue1<4000){
 355              		.loc 1 91 0
 356 00ca 0A4B     		ldr	r3, .L16+12
 357 00cc 1B88     		ldrh	r3, [r3]
 358 00ce B3F57A6F 		cmp	r3, #4000
 359 00d2 03D2     		bcs	.L15
  92:main.c        ****         adcValue1 = adcValue1;
 360              		.loc 1 92 0
 361 00d4 074B     		ldr	r3, .L16+12
 362 00d6 1A88     		ldrh	r2, [r3]
 363 00d8 064B     		ldr	r3, .L16+12
 364 00da 1A80     		strh	r2, [r3]	@ movhi
 365              	.L15:
  93:main.c        ****     }
  94:main.c        ****     
  95:main.c        ****     update_median_isr_ClearPending();
 366              		.loc 1 95 0
 367 00dc FFF7FEFF 		bl	update_median_isr_ClearPending
  96:main.c        ****     
  97:main.c        **** }
 368              		.loc 1 97 0
 369 00e0 00BF     		nop
 370 00e2 1037     		adds	r7, r7, #16
 371              		.cfi_def_cfa_offset 8
 372 00e4 BD46     		mov	sp, r7
 373              		.cfi_def_cfa_register 13
 374              		@ sp needed
 375 00e6 80BD     		pop	{r7, pc}
 376              	.L17:
 377              		.align	2
 378              	.L16:
 379 00e8 00000000 		.word	moving_median
 380 00ec 00000000 		.word	tempArray
 381 00f0 00000000 		.word	tmp
 382 00f4 00000000 		.word	adcValue1
 383              		.cfi_endproc
 384              	.LFE65:
 385              		.size	adc_update, .-adc_update
 386              		.section	.rodata
 387              		.align	2
 388              	.LC0:
 389 0000 25303864 		.ascii	"%08d\011%8.2f\011%8d\000"
 389      0925382E 
 389      32660925 
 389      386400
 390              		.section	.text.RxIsr,"ax",%progbits
 391              		.align	2
 392              		.global	RxIsr
 393              		.thumb
 394              		.thumb_func
 395              		.type	RxIsr, %function
 396              	RxIsr:
 397              	.LFB66:
  98:main.c        **** 
  99:main.c        **** 
 100:main.c        **** CY_ISR(RxIsr)
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccdG4o5x.s 			page 10


 101:main.c        **** {
 398              		.loc 1 101 0
 399              		.cfi_startproc
 400              		@ args = 0, pretend = 0, frame = 8
 401              		@ frame_needed = 1, uses_anonymous_args = 0
 402 0000 90B5     		push	{r4, r7, lr}
 403              		.cfi_def_cfa_offset 12
 404              		.cfi_offset 4, -12
 405              		.cfi_offset 7, -8
 406              		.cfi_offset 14, -4
 407 0002 87B0     		sub	sp, sp, #28
 408              		.cfi_def_cfa_offset 40
 409 0004 04AF     		add	r7, sp, #16
 410              		.cfi_def_cfa 7, 24
 411              	.L46:
 102:main.c        ****     uint8 rxStatus;         
 103:main.c        ****     uint8 rxData;           
 104:main.c        ****     
 105:main.c        ****     do
 106:main.c        ****     {
 107:main.c        ****         /* Read receiver status register */
 108:main.c        ****         rxStatus = UART_RXSTATUS_REG;
 412              		.loc 1 108 0
 413 0006 954B     		ldr	r3, .L49
 414 0008 1B78     		ldrb	r3, [r3]
 415 000a FB70     		strb	r3, [r7, #3]
 109:main.c        **** 
 110:main.c        ****         if((rxStatus & (UART_RX_STS_BREAK      | UART_RX_STS_PAR_ERROR |
 111:main.c        ****                         UART_RX_STS_STOP_ERROR | UART_RX_STS_OVERRUN)) != 0u)
 416              		.loc 1 111 0
 417 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 418 000e 03F01E03 		and	r3, r3, #30
 110:main.c        ****                         UART_RX_STS_STOP_ERROR | UART_RX_STS_OVERRUN)) != 0u)
 419              		.loc 1 110 0
 420 0012 002B     		cmp	r3, #0
 421 0014 0CD0     		beq	.L19
 112:main.c        ****         {
 113:main.c        ****             /* ERROR handling. */
 114:main.c        ****             errorStatus |= rxStatus & ( UART_RX_STS_BREAK      | UART_RX_STS_PAR_ERROR | 
 422              		.loc 1 114 0
 423 0016 97F90330 		ldrsb	r3, [r7, #3]
 424 001a 03F01E03 		and	r3, r3, #30
 425 001e 5AB2     		sxtb	r2, r3
 426 0020 8F4B     		ldr	r3, .L49+4
 427 0022 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 428 0024 5BB2     		sxtb	r3, r3
 429 0026 1343     		orrs	r3, r3, r2
 430 0028 5BB2     		sxtb	r3, r3
 431 002a DAB2     		uxtb	r2, r3
 432 002c 8C4B     		ldr	r3, .L49+4
 433 002e 1A70     		strb	r2, [r3]
 434              	.L19:
 115:main.c        ****                                         UART_RX_STS_STOP_ERROR | UART_RX_STS_OVERRUN);
 116:main.c        ****         }
 117:main.c        ****         
 118:main.c        ****         if((rxStatus & UART_RX_STS_FIFO_NOTEMPTY) != 0u)
 435              		.loc 1 118 0
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccdG4o5x.s 			page 11


 436 0030 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 437 0032 03F02003 		and	r3, r3, #32
 438 0036 002B     		cmp	r3, #0
 439 0038 00F00681 		beq	.L20
 119:main.c        ****         {
 120:main.c        ****             /* Read data from the RX data register */
 121:main.c        ****             rxData = UART_RXDATA_REG;
 440              		.loc 1 121 0
 441 003c 894B     		ldr	r3, .L49+8
 442 003e 1B78     		ldrb	r3, [r3]
 443 0040 BB70     		strb	r3, [r7, #2]
 122:main.c        ****             help[tt] = rxData;
 444              		.loc 1 122 0
 445 0042 894B     		ldr	r3, .L49+12
 446 0044 1B68     		ldr	r3, [r3]
 447 0046 8949     		ldr	r1, .L49+16
 448 0048 BA78     		ldrb	r2, [r7, #2]
 449 004a CA54     		strb	r2, [r1, r3]
 123:main.c        ****             tt++;
 450              		.loc 1 123 0
 451 004c 864B     		ldr	r3, .L49+12
 452 004e 1B68     		ldr	r3, [r3]
 453 0050 0133     		adds	r3, r3, #1
 454 0052 854A     		ldr	r2, .L49+12
 455 0054 1360     		str	r3, [r2]
 124:main.c        ****             if(tt==99){tt=0;}
 456              		.loc 1 124 0
 457 0056 844B     		ldr	r3, .L49+12
 458 0058 1B68     		ldr	r3, [r3]
 459 005a 632B     		cmp	r3, #99
 460 005c 02D1     		bne	.L21
 461              		.loc 1 124 0 is_stmt 0 discriminator 1
 462 005e 824B     		ldr	r3, .L49+12
 463 0060 0022     		movs	r2, #0
 464 0062 1A60     		str	r2, [r3]
 465              	.L21:
 125:main.c        ****             if(rxData=='b' ){start_calib=1;};
 466              		.loc 1 125 0 is_stmt 1
 467 0064 BB78     		ldrb	r3, [r7, #2]	@ zero_extendqisi2
 468 0066 622B     		cmp	r3, #98
 469 0068 02D1     		bne	.L22
 470              		.loc 1 125 0 is_stmt 0 discriminator 1
 471 006a 814B     		ldr	r3, .L49+20
 472 006c 0122     		movs	r2, #1
 473 006e 1A60     		str	r2, [r3]
 474              	.L22:
 126:main.c        ****             switch(data_read_mode)
 475              		.loc 1 126 0 is_stmt 1
 476 0070 804B     		ldr	r3, .L49+24
 477 0072 1B68     		ldr	r3, [r3]
 478 0074 052B     		cmp	r3, #5
 479 0076 00F2E780 		bhi	.L20
 480 007a 01A2     		adr	r2, .L25
 481 007c 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 482              		.p2align 2
 483              	.L25:
 484 0080 99000000 		.word	.L24+1
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccdG4o5x.s 			page 12


 485 0084 D5000000 		.word	.L26+1
 486 0088 0F010000 		.word	.L27+1
 487 008c 7B010000 		.word	.L28+1
 488 0090 BD010000 		.word	.L29+1
 489 0094 FF010000 		.word	.L30+1
 490              		.p2align 1
 491              	.L24:
 127:main.c        ****             {
 128:main.c        ****                 case 0:
 129:main.c        ****                     if(rxData=='{' )
 492              		.loc 1 129 0
 493 0098 BB78     		ldrb	r3, [r7, #2]	@ zero_extendqisi2
 494 009a 7B2B     		cmp	r3, #123
 495 009c 40F0D180 		bne	.L47
 496              	.LBB6:
 130:main.c        ****                     {
 131:main.c        ****                         for(int pp=1;pp<20;pp++){
 497              		.loc 1 131 0
 498 00a0 0123     		movs	r3, #1
 499 00a2 7B60     		str	r3, [r7, #4]
 500 00a4 07E0     		b	.L32
 501              	.L33:
 132:main.c        ****                             temp[pp] = ' ';
 502              		.loc 1 132 0 discriminator 3
 503 00a6 744A     		ldr	r2, .L49+28
 504 00a8 7B68     		ldr	r3, [r7, #4]
 505 00aa 1344     		add	r3, r3, r2
 506 00ac 2022     		movs	r2, #32
 507 00ae 1A70     		strb	r2, [r3]
 131:main.c        ****                             temp[pp] = ' ';
 508              		.loc 1 131 0 discriminator 3
 509 00b0 7B68     		ldr	r3, [r7, #4]
 510 00b2 0133     		adds	r3, r3, #1
 511 00b4 7B60     		str	r3, [r7, #4]
 512              	.L32:
 131:main.c        ****                             temp[pp] = ' ';
 513              		.loc 1 131 0 is_stmt 0 discriminator 1
 514 00b6 7B68     		ldr	r3, [r7, #4]
 515 00b8 132B     		cmp	r3, #19
 516 00ba F4DD     		ble	.L33
 517              	.LBE6:
 133:main.c        ****                         }
 134:main.c        ****                         temp[0] = '\0';
 518              		.loc 1 134 0 is_stmt 1
 519 00bc 6E4B     		ldr	r3, .L49+28
 520 00be 0022     		movs	r2, #0
 521 00c0 1A70     		strb	r2, [r3]
 135:main.c        ****                         new_angle = 0;
 522              		.loc 1 135 0
 523 00c2 6E4B     		ldr	r3, .L49+32
 524 00c4 0022     		movs	r2, #0
 525 00c6 1A60     		str	r2, [r3]
 136:main.c        ****                         data_read_mode++;
 526              		.loc 1 136 0
 527 00c8 6A4B     		ldr	r3, .L49+24
 528 00ca 1B68     		ldr	r3, [r3]
 529 00cc 0133     		adds	r3, r3, #1
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccdG4o5x.s 			page 13


 530 00ce 694A     		ldr	r2, .L49+24
 531 00d0 1360     		str	r3, [r2]
 137:main.c        ****                     }
 138:main.c        ****                 break;
 532              		.loc 1 138 0
 533 00d2 B6E0     		b	.L47
 534              	.L26:
 139:main.c        ****                 case 1:
 140:main.c        ****                     if(rxData=='x'){
 535              		.loc 1 140 0
 536 00d4 BB78     		ldrb	r3, [r7, #2]	@ zero_extendqisi2
 537 00d6 782B     		cmp	r3, #120
 538 00d8 03D1     		bne	.L34
 141:main.c        ****                         data_read_mode = 2;}
 539              		.loc 1 141 0
 540 00da 664B     		ldr	r3, .L49+24
 541 00dc 0222     		movs	r2, #2
 542 00de 1A60     		str	r2, [r3]
 142:main.c        ****                     else if(rxData=='p'){
 143:main.c        ****                         data_read_mode = 3;}
 144:main.c        ****                     else if(rxData=='i'){
 145:main.c        ****                         data_read_mode = 4;}
 146:main.c        ****                     else if(rxData=='d'){
 147:main.c        ****                         data_read_mode = 5;}
 148:main.c        ****                 break;
 543              		.loc 1 148 0
 544 00e0 B1E0     		b	.L48
 545              	.L34:
 142:main.c        ****                     else if(rxData=='p'){
 546              		.loc 1 142 0
 547 00e2 BB78     		ldrb	r3, [r7, #2]	@ zero_extendqisi2
 548 00e4 702B     		cmp	r3, #112
 549 00e6 03D1     		bne	.L36
 143:main.c        ****                     else if(rxData=='i'){
 550              		.loc 1 143 0
 551 00e8 624B     		ldr	r3, .L49+24
 552 00ea 0322     		movs	r2, #3
 553 00ec 1A60     		str	r2, [r3]
 554              		.loc 1 148 0
 555 00ee AAE0     		b	.L48
 556              	.L36:
 144:main.c        ****                         data_read_mode = 4;}
 557              		.loc 1 144 0
 558 00f0 BB78     		ldrb	r3, [r7, #2]	@ zero_extendqisi2
 559 00f2 692B     		cmp	r3, #105
 560 00f4 03D1     		bne	.L37
 145:main.c        ****                     else if(rxData=='d'){
 561              		.loc 1 145 0
 562 00f6 5F4B     		ldr	r3, .L49+24
 563 00f8 0422     		movs	r2, #4
 564 00fa 1A60     		str	r2, [r3]
 565              		.loc 1 148 0
 566 00fc A3E0     		b	.L48
 567              	.L37:
 146:main.c        ****                         data_read_mode = 5;}
 568              		.loc 1 146 0
 569 00fe BB78     		ldrb	r3, [r7, #2]	@ zero_extendqisi2
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccdG4o5x.s 			page 14


 570 0100 642B     		cmp	r3, #100
 571 0102 40F0A080 		bne	.L48
 147:main.c        ****                 break;
 572              		.loc 1 147 0
 573 0106 5B4B     		ldr	r3, .L49+24
 574 0108 0522     		movs	r2, #5
 575 010a 1A60     		str	r2, [r3]
 576              		.loc 1 148 0
 577 010c 9BE0     		b	.L48
 578              	.L27:
 149:main.c        ****                 case 2:
 150:main.c        ****                     if(rxData != '}'){
 579              		.loc 1 150 0
 580 010e BB78     		ldrb	r3, [r7, #2]	@ zero_extendqisi2
 581 0110 7D2B     		cmp	r3, #125
 582 0112 0AD0     		beq	.L38
 151:main.c        ****                         temp[nn] = rxData;
 583              		.loc 1 151 0
 584 0114 5A4B     		ldr	r3, .L49+36
 585 0116 1B68     		ldr	r3, [r3]
 586 0118 5749     		ldr	r1, .L49+28
 587 011a BA78     		ldrb	r2, [r7, #2]
 588 011c CA54     		strb	r2, [r1, r3]
 152:main.c        ****                         nn++;
 589              		.loc 1 152 0
 590 011e 584B     		ldr	r3, .L49+36
 591 0120 1B68     		ldr	r3, [r3]
 592 0122 0133     		adds	r3, r3, #1
 593 0124 564A     		ldr	r2, .L49+36
 594 0126 1360     		str	r3, [r2]
 153:main.c        ****                     }
 154:main.c        ****                     else {
 155:main.c        ****                         new_pos = (int) strtol(temp, (char **)NULL, 10);
 156:main.c        ****                         new_pos_set = 1;
 157:main.c        ****                         nn=0; 
 158:main.c        ****                     
 159:main.c        ****                         sprintf(sendValue,"%08d\t%8.2f\t%8d",adcValue1,err,pulse_temp);
 160:main.c        ****                         UART_PutString(sendValue);
 161:main.c        ****                         temp[0] = '\0';
 162:main.c        ****                         
 163:main.c        ****                         data_read_mode = 0;
 164:main.c        ****                     }
 165:main.c        ****                   
 166:main.c        ****                 break;
 595              		.loc 1 166 0
 596 0128 8EE0     		b	.L20
 597              	.L38:
 155:main.c        ****                         new_pos_set = 1;
 598              		.loc 1 155 0
 599 012a 0A22     		movs	r2, #10
 600 012c 0021     		movs	r1, #0
 601 012e 5248     		ldr	r0, .L49+28
 602 0130 FFF7FEFF 		bl	strtol
 603 0134 0246     		mov	r2, r0
 604 0136 534B     		ldr	r3, .L49+40
 605 0138 1A60     		str	r2, [r3]
 156:main.c        ****                         nn=0; 
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccdG4o5x.s 			page 15


 606              		.loc 1 156 0
 607 013a 534B     		ldr	r3, .L49+44
 608 013c 0122     		movs	r2, #1
 609 013e 1A60     		str	r2, [r3]
 157:main.c        ****                     
 610              		.loc 1 157 0
 611 0140 4F4B     		ldr	r3, .L49+36
 612 0142 0022     		movs	r2, #0
 613 0144 1A60     		str	r2, [r3]
 159:main.c        ****                         UART_PutString(sendValue);
 614              		.loc 1 159 0
 615 0146 514B     		ldr	r3, .L49+48
 616 0148 1B88     		ldrh	r3, [r3]
 617 014a 1946     		mov	r1, r3
 618 014c 504B     		ldr	r3, .L49+52
 619 014e 18CB     		ldmia	r3, {r3-r4}
 620 0150 504A     		ldr	r2, .L49+56
 621 0152 B2F90020 		ldrsh	r2, [r2]
 622 0156 0292     		str	r2, [sp, #8]
 623 0158 CDE90034 		strd	r3, [sp]
 624 015c 0A46     		mov	r2, r1
 625 015e 4E49     		ldr	r1, .L49+60
 626 0160 4E48     		ldr	r0, .L49+64
 627 0162 FFF7FEFF 		bl	sprintf
 160:main.c        ****                         temp[0] = '\0';
 628              		.loc 1 160 0
 629 0166 4D48     		ldr	r0, .L49+64
 630 0168 FFF7FEFF 		bl	UART_PutString
 161:main.c        ****                         
 631              		.loc 1 161 0
 632 016c 424B     		ldr	r3, .L49+28
 633 016e 0022     		movs	r2, #0
 634 0170 1A70     		strb	r2, [r3]
 163:main.c        ****                     }
 635              		.loc 1 163 0
 636 0172 404B     		ldr	r3, .L49+24
 637 0174 0022     		movs	r2, #0
 638 0176 1A60     		str	r2, [r3]
 639              		.loc 1 166 0
 640 0178 66E0     		b	.L20
 641              	.L28:
 167:main.c        ****                 case 3:
 168:main.c        ****                     if(rxData != '}'){
 642              		.loc 1 168 0
 643 017a BB78     		ldrb	r3, [r7, #2]	@ zero_extendqisi2
 644 017c 7D2B     		cmp	r3, #125
 645 017e 0AD0     		beq	.L40
 169:main.c        ****                         temp[nn] = rxData;
 646              		.loc 1 169 0
 647 0180 3F4B     		ldr	r3, .L49+36
 648 0182 1B68     		ldr	r3, [r3]
 649 0184 3C49     		ldr	r1, .L49+28
 650 0186 BA78     		ldrb	r2, [r7, #2]
 651 0188 CA54     		strb	r2, [r1, r3]
 170:main.c        ****                         nn++;
 652              		.loc 1 170 0
 653 018a 3D4B     		ldr	r3, .L49+36
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccdG4o5x.s 			page 16


 654 018c 1B68     		ldr	r3, [r3]
 655 018e 0133     		adds	r3, r3, #1
 656 0190 3B4A     		ldr	r2, .L49+36
 657 0192 1360     		str	r3, [r2]
 171:main.c        ****                     }
 172:main.c        ****                     else {
 173:main.c        ****                         pid[0] = strtod(temp, NULL);
 174:main.c        ****                         nn=0;
 175:main.c        ****                         temp[0] = '\0';
 176:main.c        ****                         data_read_mode = 0;
 177:main.c        ****                     }
 178:main.c        ****                     
 179:main.c        ****                 break;
 658              		.loc 1 179 0
 659 0194 58E0     		b	.L20
 660              	.L40:
 173:main.c        ****                         nn=0;
 661              		.loc 1 173 0
 662 0196 0021     		movs	r1, #0
 663 0198 3748     		ldr	r0, .L49+28
 664 019a FFF7FEFF 		bl	strtod
 665 019e 0346     		mov	r3, r0
 666 01a0 0C46     		mov	r4, r1
 667 01a2 3F4A     		ldr	r2, .L49+68
 668 01a4 C2E90034 		strd	r3, [r2]
 174:main.c        ****                         temp[0] = '\0';
 669              		.loc 1 174 0
 670 01a8 354B     		ldr	r3, .L49+36
 671 01aa 0022     		movs	r2, #0
 672 01ac 1A60     		str	r2, [r3]
 175:main.c        ****                         data_read_mode = 0;
 673              		.loc 1 175 0
 674 01ae 324B     		ldr	r3, .L49+28
 675 01b0 0022     		movs	r2, #0
 676 01b2 1A70     		strb	r2, [r3]
 176:main.c        ****                     }
 677              		.loc 1 176 0
 678 01b4 2F4B     		ldr	r3, .L49+24
 679 01b6 0022     		movs	r2, #0
 680 01b8 1A60     		str	r2, [r3]
 681              		.loc 1 179 0
 682 01ba 45E0     		b	.L20
 683              	.L29:
 180:main.c        ****                 case 4:
 181:main.c        ****                     if(rxData != '}'){
 684              		.loc 1 181 0
 685 01bc BB78     		ldrb	r3, [r7, #2]	@ zero_extendqisi2
 686 01be 7D2B     		cmp	r3, #125
 687 01c0 0AD0     		beq	.L42
 182:main.c        ****                         temp[nn] = rxData;
 688              		.loc 1 182 0
 689 01c2 2F4B     		ldr	r3, .L49+36
 690 01c4 1B68     		ldr	r3, [r3]
 691 01c6 2C49     		ldr	r1, .L49+28
 692 01c8 BA78     		ldrb	r2, [r7, #2]
 693 01ca CA54     		strb	r2, [r1, r3]
 183:main.c        ****                         nn++;
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccdG4o5x.s 			page 17


 694              		.loc 1 183 0
 695 01cc 2C4B     		ldr	r3, .L49+36
 696 01ce 1B68     		ldr	r3, [r3]
 697 01d0 0133     		adds	r3, r3, #1
 698 01d2 2B4A     		ldr	r2, .L49+36
 699 01d4 1360     		str	r3, [r2]
 184:main.c        ****                     }
 185:main.c        ****                     else {
 186:main.c        ****                         pid[1] = strtod(temp, NULL);
 187:main.c        ****                         nn=0;
 188:main.c        ****                         temp[0] = '\0';
 189:main.c        ****                         data_read_mode = 0;
 190:main.c        ****                     }
 191:main.c        ****                     
 192:main.c        ****                 break;
 700              		.loc 1 192 0
 701 01d6 37E0     		b	.L20
 702              	.L42:
 186:main.c        ****                         nn=0;
 703              		.loc 1 186 0
 704 01d8 0021     		movs	r1, #0
 705 01da 2748     		ldr	r0, .L49+28
 706 01dc FFF7FEFF 		bl	strtod
 707 01e0 0346     		mov	r3, r0
 708 01e2 0C46     		mov	r4, r1
 709 01e4 2E4A     		ldr	r2, .L49+68
 710 01e6 C2E90234 		strd	r3, [r2, #8]
 187:main.c        ****                         temp[0] = '\0';
 711              		.loc 1 187 0
 712 01ea 254B     		ldr	r3, .L49+36
 713 01ec 0022     		movs	r2, #0
 714 01ee 1A60     		str	r2, [r3]
 188:main.c        ****                         data_read_mode = 0;
 715              		.loc 1 188 0
 716 01f0 214B     		ldr	r3, .L49+28
 717 01f2 0022     		movs	r2, #0
 718 01f4 1A70     		strb	r2, [r3]
 189:main.c        ****                     }
 719              		.loc 1 189 0
 720 01f6 1F4B     		ldr	r3, .L49+24
 721 01f8 0022     		movs	r2, #0
 722 01fa 1A60     		str	r2, [r3]
 723              		.loc 1 192 0
 724 01fc 24E0     		b	.L20
 725              	.L30:
 193:main.c        ****                 case 5:
 194:main.c        ****                     if(rxData != '}'){
 726              		.loc 1 194 0
 727 01fe BB78     		ldrb	r3, [r7, #2]	@ zero_extendqisi2
 728 0200 7D2B     		cmp	r3, #125
 729 0202 0AD0     		beq	.L44
 195:main.c        ****                         temp[nn] = rxData;
 730              		.loc 1 195 0
 731 0204 1E4B     		ldr	r3, .L49+36
 732 0206 1B68     		ldr	r3, [r3]
 733 0208 1B49     		ldr	r1, .L49+28
 734 020a BA78     		ldrb	r2, [r7, #2]
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccdG4o5x.s 			page 18


 735 020c CA54     		strb	r2, [r1, r3]
 196:main.c        ****                         nn++;
 736              		.loc 1 196 0
 737 020e 1C4B     		ldr	r3, .L49+36
 738 0210 1B68     		ldr	r3, [r3]
 739 0212 0133     		adds	r3, r3, #1
 740 0214 1A4A     		ldr	r2, .L49+36
 741 0216 1360     		str	r3, [r2]
 197:main.c        ****                     }
 198:main.c        ****                     else {
 199:main.c        ****                         pid[2] = strtod(temp, NULL);
 200:main.c        ****                         nn=0;
 201:main.c        ****                         temp[0] = '\0';
 202:main.c        ****                         data_read_mode = 0;
 203:main.c        ****                     }
 204:main.c        ****                     
 205:main.c        ****                 break;
 742              		.loc 1 205 0
 743 0218 16E0     		b	.L20
 744              	.L44:
 199:main.c        ****                         nn=0;
 745              		.loc 1 199 0
 746 021a 0021     		movs	r1, #0
 747 021c 1648     		ldr	r0, .L49+28
 748 021e FFF7FEFF 		bl	strtod
 749 0222 0346     		mov	r3, r0
 750 0224 0C46     		mov	r4, r1
 751 0226 1E4A     		ldr	r2, .L49+68
 752 0228 C2E90434 		strd	r3, [r2, #16]
 200:main.c        ****                         temp[0] = '\0';
 753              		.loc 1 200 0
 754 022c 144B     		ldr	r3, .L49+36
 755 022e 0022     		movs	r2, #0
 756 0230 1A60     		str	r2, [r3]
 201:main.c        ****                         data_read_mode = 0;
 757              		.loc 1 201 0
 758 0232 114B     		ldr	r3, .L49+28
 759 0234 0022     		movs	r2, #0
 760 0236 1A70     		strb	r2, [r3]
 202:main.c        ****                     }
 761              		.loc 1 202 0
 762 0238 0E4B     		ldr	r3, .L49+24
 763 023a 0022     		movs	r2, #0
 764 023c 1A60     		str	r2, [r3]
 765              		.loc 1 205 0
 766 023e 00BF     		nop
 767 0240 02E0     		b	.L20
 768              	.L47:
 138:main.c        ****                 case 1:
 769              		.loc 1 138 0
 770 0242 00BF     		nop
 771 0244 00E0     		b	.L20
 772              	.L48:
 148:main.c        ****                 case 2:
 773              		.loc 1 148 0
 774 0246 00BF     		nop
 775              	.L20:
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccdG4o5x.s 			page 19


 206:main.c        ****             }
 207:main.c        ****             
 208:main.c        ****             if(errorStatus == 0u)
 209:main.c        ****             {
 210:main.c        ****                 /* Send data backward */
 211:main.c        ****                 //UART_TXDATA_REG = rxData;
 212:main.c        ****             }
 213:main.c        ****         }
 214:main.c        ****     }while((rxStatus & UART_RX_STS_FIFO_NOTEMPTY) != 0u);
 776              		.loc 1 214 0
 777 0248 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 778 024a 03F02003 		and	r3, r3, #32
 779 024e 002B     		cmp	r3, #0
 780 0250 7FF4D9AE 		bne	.L46
 215:main.c        **** 
 216:main.c        **** }
 781              		.loc 1 216 0
 782 0254 00BF     		nop
 783 0256 0C37     		adds	r7, r7, #12
 784              		.cfi_def_cfa_offset 12
 785 0258 BD46     		mov	sp, r7
 786              		.cfi_def_cfa_register 13
 787              		@ sp needed
 788 025a 90BD     		pop	{r4, r7, pc}
 789              	.L50:
 790              		.align	2
 791              	.L49:
 792 025c 6A650040 		.word	1073767786
 793 0260 00000000 		.word	errorStatus
 794 0264 4A650040 		.word	1073767754
 795 0268 00000000 		.word	tt
 796 026c 00000000 		.word	help
 797 0270 00000000 		.word	start_calib
 798 0274 00000000 		.word	data_read_mode
 799 0278 00000000 		.word	temp
 800 027c 00000000 		.word	new_angle
 801 0280 00000000 		.word	nn
 802 0284 00000000 		.word	new_pos
 803 0288 00000000 		.word	new_pos_set
 804 028c 00000000 		.word	adcValue1
 805 0290 00000000 		.word	err
 806 0294 00000000 		.word	pulse_temp
 807 0298 00000000 		.word	.LC0
 808 029c 00000000 		.word	sendValue
 809 02a0 00000000 		.word	pid
 810              		.cfi_endproc
 811              	.LFE66:
 812              		.size	RxIsr, .-RxIsr
 813              		.global	led_switch
 814              		.bss
 815 0042 0000     		.align	2
 816              		.type	led_switch, %object
 817              		.size	led_switch, 4
 818              	led_switch:
 819 0044 00000000 		.space	4
 820              		.section	.rodata
 821 000f 00       		.align	2
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccdG4o5x.s 			page 20


 822              	.LC1:
 823 0010 25303864 		.ascii	"%08d\011%08.0f\011%8d\000"
 823      09253038 
 823      2E306609 
 823      25386400 
 824              		.global	__aeabi_i2d
 825              		.global	__aeabi_dsub
 826              		.global	__aeabi_d2iz
 827              		.global	__aeabi_ui2d
 828              		.section	.text.main,"ax",%progbits
 829              		.align	2
 830              		.global	main
 831              		.thumb
 832              		.thumb_func
 833              		.type	main, %function
 834              	main:
 835              	.LFB67:
 217:main.c        ****     
 218:main.c        **** 
 219:main.c        **** /*******************************************************************************
 220:main.c        **** * Function Name: main()
 221:main.c        **** ********************************************************************************
 222:main.c        **** * Summary:
 223:main.c        **** *  Main function for the project.
 224:main.c        **** *
 225:main.c        **** * Theory:
 226:main.c        **** *  The function starts UART and interrupt components.
 227:main.c        **** *
 228:main.c        **** *******************************************************************************/
 229:main.c        **** int led_switch = 0;
 230:main.c        **** int main()
 231:main.c        **** {
 836              		.loc 1 231 0
 837              		.cfi_startproc
 838              		@ args = 0, pretend = 0, frame = 64
 839              		@ frame_needed = 1, uses_anonymous_args = 0
 840 0000 B0B5     		push	{r4, r5, r7, lr}
 841              		.cfi_def_cfa_offset 16
 842              		.cfi_offset 4, -16
 843              		.cfi_offset 5, -12
 844              		.cfi_offset 7, -8
 845              		.cfi_offset 14, -4
 846 0002 94B0     		sub	sp, sp, #80
 847              		.cfi_def_cfa_offset 96
 848 0004 04AF     		add	r7, sp, #16
 849              		.cfi_def_cfa 7, 80
 232:main.c        ****     
 233:main.c        ****     
 234:main.c        ****     //PWM variables
 235:main.c        **** 
 236:main.c        ****     PWM_1_Start();
 850              		.loc 1 236 0
 851 0006 FFF7FEFF 		bl	PWM_1_Start
 237:main.c        ****     ADC_SAR_1_Start(); 
 852              		.loc 1 237 0
 853 000a FFF7FEFF 		bl	ADC_SAR_1_Start
 238:main.c        ****     
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccdG4o5x.s 			page 21


 239:main.c        ****     //ADC_SAR_1_StartConvert(); 
 240:main.c        ****     //ADC_SAR_2_Start(); 
 241:main.c        ****     //ADC_SAR_2_StartConvert(); 
 242:main.c        ****     
 243:main.c        ****     uint8 button = 0u;
 854              		.loc 1 243 0
 855 000e 0023     		movs	r3, #0
 856 0010 87F82730 		strb	r3, [r7, #39]
 244:main.c        ****     uint8 buttonPre = 0u;
 857              		.loc 1 244 0
 858 0014 0023     		movs	r3, #0
 859 0016 87F82630 		strb	r3, [r7, #38]
 245:main.c        ****     
 246:main.c        ****     LED_Write(LED_OFF);     /* Clear LED */
 860              		.loc 1 246 0
 861 001a 0020     		movs	r0, #0
 862 001c FFF7FEFF 		bl	LED_Write
 247:main.c        **** 
 248:main.c        ****     UART_Start();           /* Start communication component */
 863              		.loc 1 248 0
 864 0020 FFF7FEFF 		bl	UART_Start
 249:main.c        **** 
 250:main.c        **** #if(INTERRUPT_CODE_ENABLED == ENABLED)
 251:main.c        ****     isr_rx_StartEx(RxIsr);
 865              		.loc 1 251 0
 866 0024 A448     		ldr	r0, .L59+32
 867 0026 FFF7FEFF 		bl	isr_rx_StartEx
 252:main.c        ****     update_median_isr_StartEx(adc_update);
 868              		.loc 1 252 0
 869 002a A448     		ldr	r0, .L59+36
 870 002c FFF7FEFF 		bl	update_median_isr_StartEx
 253:main.c        **** #endif /* INTERRUPT_CODE_ENABLED == ENABLED */
 254:main.c        ****     
 255:main.c        ****     CyGlobalIntEnable;      /* Enable global interrupts. */
 871              		.loc 1 255 0
 872              		.syntax unified
 873              	@ 255 "main.c" 1
 874 0030 62B6     		CPSIE   i
 875              	@ 0 "" 2
 256:main.c        ****     
 257:main.c        **** 
 258:main.c        ****     angle = -89;
 876              		.loc 1 258 0
 877              		.thumb
 878              		.syntax unified
 879 0032 A34A     		ldr	r2, .L59+40
 880 0034 98A4     		adr	r4, .L59
 881 0036 D4E90034 		ldrd	r3, [r4]
 882 003a C2E90034 		strd	r3, [r2]
 259:main.c        ****     uint16 timercapture;
 260:main.c        ****     double der, prev_err, pid_integral,dt;
 261:main.c        ****     double time;
 262:main.c        ****     
 263:main.c        ****     der = 0; prev_err = 0; pid_integral = 0; 
 883              		.loc 1 263 0
 884 003e 4FF00003 		mov	r3, #0
 885 0042 4FF00004 		mov	r4, #0
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccdG4o5x.s 			page 22


 886 0046 C7E90634 		strd	r3, [r7, #24]
 887 004a 4FF00003 		mov	r3, #0
 888 004e 4FF00004 		mov	r4, #0
 889 0052 C7E90E34 		strd	r3, [r7, #56]
 890 0056 4FF00003 		mov	r3, #0
 891 005a 4FF00004 		mov	r4, #0
 892 005e C7E90C34 		strd	r3, [r7, #48]
 264:main.c        ****     dt = 0.025; //assumes cydelay = 10 below for a 100Hz frequency.
 893              		.loc 1 264 0
 894 0062 8FA4     		adr	r4, .L59+8
 895 0064 D4E90034 		ldrd	r3, [r4]
 896 0068 C7E90A34 		strd	r3, [r7, #40]
 265:main.c        **** 
 266:main.c        ****     sprintf(sendValue,"%08d\t%08.0f\t%8d",adcValue1,err,pulse_temp);
 897              		.loc 1 266 0
 898 006c 954B     		ldr	r3, .L59+44
 899 006e 1B88     		ldrh	r3, [r3]
 900 0070 1946     		mov	r1, r3
 901 0072 954B     		ldr	r3, .L59+48
 902 0074 18CB     		ldmia	r3, {r3-r4}
 903 0076 954A     		ldr	r2, .L59+52
 904 0078 B2F90020 		ldrsh	r2, [r2]
 905 007c 0292     		str	r2, [sp, #8]
 906 007e CDE90034 		strd	r3, [sp]
 907 0082 0A46     		mov	r2, r1
 908 0084 9249     		ldr	r1, .L59+56
 909 0086 9348     		ldr	r0, .L59+60
 910 0088 FFF7FEFF 		bl	sprintf
 267:main.c        ****     UART_PutString(sendValue);
 911              		.loc 1 267 0
 912 008c 9148     		ldr	r0, .L59+60
 913 008e FFF7FEFF 		bl	UART_PutString
 268:main.c        ****     uint16 moving_avg[5] = {0,0,0,0,0};
 914              		.loc 1 268 0
 915 0092 3B1D     		adds	r3, r7, #4
 916 0094 0022     		movs	r2, #0
 917 0096 1A60     		str	r2, [r3]
 918 0098 5A60     		str	r2, [r3, #4]
 919 009a 1A81     		strh	r2, [r3, #8]	@ movhi
 269:main.c        ****     median_timer_Start();
 920              		.loc 1 269 0
 921 009c FFF7FEFF 		bl	median_timer_Start
 270:main.c        ****     Timer_1_Start();
 922              		.loc 1 270 0
 923 00a0 FFF7FEFF 		bl	Timer_1_Start
 924              	.L58:
 271:main.c        ****     for(;;)
 272:main.c        ****     {
 273:main.c        ****         Timer_1_WriteCounter(65535);
 925              		.loc 1 273 0
 926 00a4 4FF6FF70 		movw	r0, #65535
 927 00a8 FFF7FEFF 		bl	Timer_1_WriteCounter
 274:main.c        ****        
 275:main.c        ****         
 276:main.c        ****         if(new_pos_set){
 928              		.loc 1 276 0
 929 00ac 8A4B     		ldr	r3, .L59+64
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccdG4o5x.s 			page 23


 930 00ae 1B68     		ldr	r3, [r3]
 931 00b0 002B     		cmp	r3, #0
 932 00b2 09D0     		beq	.L52
 277:main.c        ****             pos = new_pos;
 933              		.loc 1 277 0
 934 00b4 894B     		ldr	r3, .L59+68
 935 00b6 1B68     		ldr	r3, [r3]
 936 00b8 894A     		ldr	r2, .L59+72
 937 00ba 1360     		str	r3, [r2]
 278:main.c        ****             new_pos_set = 0;
 938              		.loc 1 278 0
 939 00bc 864B     		ldr	r3, .L59+64
 940 00be 0022     		movs	r2, #0
 941 00c0 1A60     		str	r2, [r3]
 279:main.c        ****             new_angle = 0;
 942              		.loc 1 279 0
 943 00c2 884B     		ldr	r3, .L59+76
 944 00c4 0022     		movs	r2, #0
 945 00c6 1A60     		str	r2, [r3]
 946              	.L52:
 280:main.c        ****             
 281:main.c        ****             /*
 282:main.c        ****             if(pos>45){pos=45;}
 283:main.c        ****             if(pos<-45){pos=-45;}
 284:main.c        ****             if(pos<46 & pos>-46){
 285:main.c        ****                 PWM_1_WriteCompare(dutycyclelength(pos));
 286:main.c        ****             }
 287:main.c        ****             */       
 288:main.c        ****         }
 289:main.c        ****         
 290:main.c        ****         /* START PID CODE */
 291:main.c        **** 
 292:main.c        ****         err = -pos + adcValue1;
 947              		.loc 1 292 0
 948 00c8 7E4B     		ldr	r3, .L59+44
 949 00ca 1B88     		ldrh	r3, [r3]
 950 00cc 1A46     		mov	r2, r3
 951 00ce 844B     		ldr	r3, .L59+72
 952 00d0 1B68     		ldr	r3, [r3]
 953 00d2 D31A     		subs	r3, r2, r3
 954 00d4 1846     		mov	r0, r3
 955 00d6 FFF7FEFF 		bl	__aeabi_i2d
 956 00da 0346     		mov	r3, r0
 957 00dc 0C46     		mov	r4, r1
 958 00de 7A4A     		ldr	r2, .L59+48
 959 00e0 C2E90034 		strd	r3, [r2]
 293:main.c        ****         der = err - prev_err;
 960              		.loc 1 293 0
 961 00e4 784B     		ldr	r3, .L59+48
 962 00e6 D3E90001 		ldrd	r0, [r3]
 963 00ea D7E90E23 		ldrd	r2, [r7, #56]
 964 00ee FFF7FEFF 		bl	__aeabi_dsub
 965 00f2 0346     		mov	r3, r0
 966 00f4 0C46     		mov	r4, r1
 967 00f6 C7E90634 		strd	r3, [r7, #24]
 294:main.c        ****         pid_integral = err + pid_integral;
 968              		.loc 1 294 0
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccdG4o5x.s 			page 24


 969 00fa 734B     		ldr	r3, .L59+48
 970 00fc 18CB     		ldmia	r3, {r3-r4}
 971 00fe 1A46     		mov	r2, r3
 972 0100 2346     		mov	r3, r4
 973 0102 D7E90C01 		ldrd	r0, [r7, #48]
 974 0106 FFF7FEFF 		bl	__aeabi_dadd
 975 010a 0346     		mov	r3, r0
 976 010c 0C46     		mov	r4, r1
 977 010e C7E90C34 		strd	r3, [r7, #48]
 295:main.c        ****         pulse_temp = pid[0] * err + ( pid[1] * pid_integral * dt) + ( pid[2] * der / dt );
 978              		.loc 1 295 0
 979 0112 754B     		ldr	r3, .L59+80
 980 0114 D3E90001 		ldrd	r0, [r3]
 981 0118 6B4B     		ldr	r3, .L59+48
 982 011a 18CB     		ldmia	r3, {r3-r4}
 983 011c 1A46     		mov	r2, r3
 984 011e 2346     		mov	r3, r4
 985 0120 FFF7FEFF 		bl	__aeabi_dmul
 986 0124 0346     		mov	r3, r0
 987 0126 0C46     		mov	r4, r1
 988 0128 2546     		mov	r5, r4
 989 012a 1C46     		mov	r4, r3
 990 012c 6E4B     		ldr	r3, .L59+80
 991 012e D3E90201 		ldrd	r0, [r3, #8]
 992 0132 D7E90C23 		ldrd	r2, [r7, #48]
 993 0136 FFF7FEFF 		bl	__aeabi_dmul
 994 013a 0246     		mov	r2, r0
 995 013c 0B46     		mov	r3, r1
 996 013e 1046     		mov	r0, r2
 997 0140 1946     		mov	r1, r3
 998 0142 D7E90A23 		ldrd	r2, [r7, #40]
 999 0146 FFF7FEFF 		bl	__aeabi_dmul
 1000 014a 0246     		mov	r2, r0
 1001 014c 0B46     		mov	r3, r1
 1002 014e 2046     		mov	r0, r4
 1003 0150 2946     		mov	r1, r5
 1004 0152 FFF7FEFF 		bl	__aeabi_dadd
 1005 0156 0346     		mov	r3, r0
 1006 0158 0C46     		mov	r4, r1
 1007 015a 2546     		mov	r5, r4
 1008 015c 1C46     		mov	r4, r3
 1009 015e 624B     		ldr	r3, .L59+80
 1010 0160 D3E90401 		ldrd	r0, [r3, #16]
 1011 0164 D7E90623 		ldrd	r2, [r7, #24]
 1012 0168 FFF7FEFF 		bl	__aeabi_dmul
 1013 016c 0246     		mov	r2, r0
 1014 016e 0B46     		mov	r3, r1
 1015 0170 1046     		mov	r0, r2
 1016 0172 1946     		mov	r1, r3
 1017 0174 D7E90A23 		ldrd	r2, [r7, #40]
 1018 0178 FFF7FEFF 		bl	__aeabi_ddiv
 1019 017c 0246     		mov	r2, r0
 1020 017e 0B46     		mov	r3, r1
 1021 0180 2046     		mov	r0, r4
 1022 0182 2946     		mov	r1, r5
 1023 0184 FFF7FEFF 		bl	__aeabi_dadd
 1024 0188 0346     		mov	r3, r0
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccdG4o5x.s 			page 25


 1025 018a 0C46     		mov	r4, r1
 1026 018c 1846     		mov	r0, r3
 1027 018e 2146     		mov	r1, r4
 1028 0190 FFF7FEFF 		bl	__aeabi_d2iz
 1029 0194 0346     		mov	r3, r0
 1030 0196 1AB2     		sxth	r2, r3
 1031 0198 4C4B     		ldr	r3, .L59+52
 1032 019a 1A80     		strh	r2, [r3]	@ movhi
 296:main.c        ****         pulse=pulse_temp;
 1033              		.loc 1 296 0
 1034 019c 4B4B     		ldr	r3, .L59+52
 1035 019e B3F90020 		ldrsh	r2, [r3]
 1036 01a2 524B     		ldr	r3, .L59+84
 1037 01a4 1A80     		strh	r2, [r3]	@ movhi
 297:main.c        ****         //Limit angles of proportional valve
 298:main.c        ****         if(pulse<0){pulse = pulse - 156;}
 1038              		.loc 1 298 0
 1039 01a6 514B     		ldr	r3, .L59+84
 1040 01a8 B3F90030 		ldrsh	r3, [r3]
 1041 01ac 002B     		cmp	r3, #0
 1042 01ae 08DA     		bge	.L53
 1043              		.loc 1 298 0 is_stmt 0 discriminator 1
 1044 01b0 4E4B     		ldr	r3, .L59+84
 1045 01b2 B3F90030 		ldrsh	r3, [r3]
 1046 01b6 9BB2     		uxth	r3, r3
 1047 01b8 9C3B     		subs	r3, r3, #156
 1048 01ba 9BB2     		uxth	r3, r3
 1049 01bc 1AB2     		sxth	r2, r3
 1050 01be 4B4B     		ldr	r3, .L59+84
 1051 01c0 1A80     		strh	r2, [r3]	@ movhi
 1052              	.L53:
 299:main.c        ****         if(pulse>0){pulse = pulse + 153;}
 1053              		.loc 1 299 0 is_stmt 1
 1054 01c2 4A4B     		ldr	r3, .L59+84
 1055 01c4 B3F90030 		ldrsh	r3, [r3]
 1056 01c8 002B     		cmp	r3, #0
 1057 01ca 08DD     		ble	.L54
 1058              		.loc 1 299 0 is_stmt 0 discriminator 1
 1059 01cc 474B     		ldr	r3, .L59+84
 1060 01ce B3F90030 		ldrsh	r3, [r3]
 1061 01d2 9BB2     		uxth	r3, r3
 1062 01d4 9933     		adds	r3, r3, #153
 1063 01d6 9BB2     		uxth	r3, r3
 1064 01d8 1AB2     		sxth	r2, r3
 1065 01da 444B     		ldr	r3, .L59+84
 1066 01dc 1A80     		strh	r2, [r3]	@ movhi
 1067              	.L54:
 300:main.c        ****         if(pulse<-500){pulse=-500;}
 1068              		.loc 1 300 0 is_stmt 1
 1069 01de 434B     		ldr	r3, .L59+84
 1070 01e0 B3F90030 		ldrsh	r3, [r3]
 1071 01e4 13F5FA7F 		cmn	r3, #500
 1072 01e8 03DA     		bge	.L55
 1073              		.loc 1 300 0 is_stmt 0 discriminator 1
 1074 01ea 404B     		ldr	r3, .L59+84
 1075 01ec 4FF60C62 		movw	r2, #65036
 1076 01f0 1A80     		strh	r2, [r3]	@ movhi
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccdG4o5x.s 			page 26


 1077              	.L55:
 301:main.c        ****         if(pulse>500){pulse=500;}
 1078              		.loc 1 301 0 is_stmt 1
 1079 01f2 3E4B     		ldr	r3, .L59+84
 1080 01f4 B3F90030 		ldrsh	r3, [r3]
 1081 01f8 B3F5FA7F 		cmp	r3, #500
 1082 01fc 03DD     		ble	.L56
 1083              		.loc 1 301 0 is_stmt 0 discriminator 1
 1084 01fe 3B4B     		ldr	r3, .L59+84
 1085 0200 4FF4FA72 		mov	r2, #500
 1086 0204 1A80     		strh	r2, [r3]	@ movhi
 1087              	.L56:
 302:main.c        ****         if(pulse>-501 & pulse<501){
 1088              		.loc 1 302 0 is_stmt 1
 1089 0206 394B     		ldr	r3, .L59+84
 1090 0208 B3F90030 		ldrsh	r3, [r3]
 1091 020c 13F5FA7F 		cmn	r3, #500
 1092 0210 ACBF     		ite	ge
 1093 0212 0123     		movge	r3, #1
 1094 0214 0023     		movlt	r3, #0
 1095 0216 DAB2     		uxtb	r2, r3
 1096 0218 344B     		ldr	r3, .L59+84
 1097 021a B3F90030 		ldrsh	r3, [r3]
 1098 021e B3F5FA7F 		cmp	r3, #500
 1099 0222 D4BF     		ite	le
 1100 0224 0123     		movle	r3, #1
 1101 0226 0023     		movgt	r3, #0
 1102 0228 DBB2     		uxtb	r3, r3
 1103 022a 1340     		ands	r3, r3, r2
 1104 022c DBB2     		uxtb	r3, r3
 1105 022e 002B     		cmp	r3, #0
 1106 0230 09D0     		beq	.L57
 303:main.c        ****             //PWM_1_WriteCompare(dutycyclelength(angle));
 304:main.c        ****             PWM_1_WriteCompare(pulse + 1500);//(uint16)One_ms + ((angle+45.0)/90.0) * One_ms;
 1107              		.loc 1 304 0
 1108 0232 2E4B     		ldr	r3, .L59+84
 1109 0234 B3F90030 		ldrsh	r3, [r3]
 1110 0238 9BB2     		uxth	r3, r3
 1111 023a 03F2DC53 		addw	r3, r3, #1500
 1112 023e 9BB2     		uxth	r3, r3
 1113 0240 1846     		mov	r0, r3
 1114 0242 FFF7FEFF 		bl	PWM_1_WriteCompare
 1115              	.L57:
 305:main.c        ****         }
 306:main.c        ****         prev_err = err;
 1116              		.loc 1 306 0
 1117 0246 204B     		ldr	r3, .L59+48
 1118 0248 18CB     		ldmia	r3, {r3-r4}
 1119 024a C7E90E34 		strd	r3, [r7, #56]
 307:main.c        ****         /* END PID CODE */
 308:main.c        ****         
 309:main.c        ****         
 310:main.c        ****         
 311:main.c        ****         CyDelay(10);
 1120              		.loc 1 311 0
 1121 024e 0A20     		movs	r0, #10
 1122 0250 FFF7FEFF 		bl	CyDelay
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccdG4o5x.s 			page 27


 312:main.c        ****         time = Timer_1_ReadCounter();
 1123              		.loc 1 312 0
 1124 0254 FFF7FEFF 		bl	Timer_1_ReadCounter
 1125 0258 0346     		mov	r3, r0
 1126 025a 1846     		mov	r0, r3
 1127 025c FFF7FEFF 		bl	__aeabi_ui2d
 1128 0260 0346     		mov	r3, r0
 1129 0262 0C46     		mov	r4, r1
 1130 0264 C7E90434 		strd	r3, [r7, #16]
 313:main.c        ****         dt=(double)(65535-time)/1000000;
 1131              		.loc 1 313 0
 1132 0268 D7E90423 		ldrd	r2, [r7, #16]
 1133 026c 0EA1     		adr	r1, .L59+16
 1134 026e D1E90001 		ldrd	r0, [r1]
 1135 0272 FFF7FEFF 		bl	__aeabi_dsub
 1136 0276 0346     		mov	r3, r0
 1137 0278 0C46     		mov	r4, r1
 1138 027a 1846     		mov	r0, r3
 1139 027c 2146     		mov	r1, r4
 1140 027e 0CA3     		adr	r3, .L59+24
 1141 0280 D3E90023 		ldrd	r2, [r3]
 1142 0284 FFF7FEFF 		bl	__aeabi_ddiv
 1143 0288 0346     		mov	r3, r0
 1144 028a 0C46     		mov	r4, r1
 1145 028c C7E90A34 		strd	r3, [r7, #40]
 314:main.c        **** 
 315:main.c        ****     }
 1146              		.loc 1 315 0
 1147 0290 08E7     		b	.L58
 1148              	.L60:
 1149 0292 00BFAFF3 		.align	3
 1149      0080
 1150              	.L59:
 1151 0298 00000000 		.word	0
 1152 029c 004056C0 		.word	-1068089344
 1153 02a0 9A999999 		.word	-1717986918
 1154 02a4 9999993F 		.word	1067030937
 1155 02a8 00000000 		.word	0
 1156 02ac E0FFEF40 		.word	1089470432
 1157 02b0 00000000 		.word	0
 1158 02b4 80842E41 		.word	1093567616
 1159 02b8 00000000 		.word	RxIsr
 1160 02bc 00000000 		.word	adc_update
 1161 02c0 00000000 		.word	angle
 1162 02c4 00000000 		.word	adcValue1
 1163 02c8 00000000 		.word	err
 1164 02cc 00000000 		.word	pulse_temp
 1165 02d0 10000000 		.word	.LC1
 1166 02d4 00000000 		.word	sendValue
 1167 02d8 00000000 		.word	new_pos_set
 1168 02dc 00000000 		.word	new_pos
 1169 02e0 00000000 		.word	pos
 1170 02e4 00000000 		.word	new_angle
 1171 02e8 00000000 		.word	pid
 1172 02ec 00000000 		.word	pulse
 1173              		.cfi_endproc
 1174              	.LFE67:
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccdG4o5x.s 			page 28


 1175              		.size	main, .-main
 1176              		.text
 1177              	.Letext0:
 1178              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 1179              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 1180              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 1181              		.file 5 "Generated_Source\\PSoC5/core_cm3.h"
 1182              		.section	.debug_info,"",%progbits
 1183              	.Ldebug_info0:
 1184 0000 74040000 		.4byte	0x474
 1185 0004 0400     		.2byte	0x4
 1186 0006 00000000 		.4byte	.Ldebug_abbrev0
 1187 000a 04       		.byte	0x4
 1188 000b 01       		.uleb128 0x1
 1189 000c 3D000000 		.4byte	.LASF52
 1190 0010 0C       		.byte	0xc
 1191 0011 5B020000 		.4byte	.LASF53
 1192 0015 D0010000 		.4byte	.LASF54
 1193 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1194 001d 00000000 		.4byte	0
 1195 0021 00000000 		.4byte	.Ldebug_line0
 1196 0025 02       		.uleb128 0x2
 1197 0026 01       		.byte	0x1
 1198 0027 06       		.byte	0x6
 1199 0028 82010000 		.4byte	.LASF0
 1200 002c 02       		.uleb128 0x2
 1201 002d 01       		.byte	0x1
 1202 002e 08       		.byte	0x8
 1203 002f 3E010000 		.4byte	.LASF1
 1204 0033 02       		.uleb128 0x2
 1205 0034 02       		.byte	0x2
 1206 0035 05       		.byte	0x5
 1207 0036 2A000000 		.4byte	.LASF2
 1208 003a 02       		.uleb128 0x2
 1209 003b 02       		.byte	0x2
 1210 003c 07       		.byte	0x7
 1211 003d BD010000 		.4byte	.LASF3
 1212 0041 03       		.uleb128 0x3
 1213 0042 91020000 		.4byte	.LASF9
 1214 0046 02       		.byte	0x2
 1215 0047 3F       		.byte	0x3f
 1216 0048 4C000000 		.4byte	0x4c
 1217 004c 02       		.uleb128 0x2
 1218 004d 04       		.byte	0x4
 1219 004e 05       		.byte	0x5
 1220 004f 21010000 		.4byte	.LASF4
 1221 0053 02       		.uleb128 0x2
 1222 0054 04       		.byte	0x4
 1223 0055 07       		.byte	0x7
 1224 0056 67020000 		.4byte	.LASF5
 1225 005a 02       		.uleb128 0x2
 1226 005b 08       		.byte	0x8
 1227 005c 05       		.byte	0x5
 1228 005d 13010000 		.4byte	.LASF6
 1229 0061 02       		.uleb128 0x2
 1230 0062 08       		.byte	0x8
 1231 0063 07       		.byte	0x7
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccdG4o5x.s 			page 29


 1232 0064 8E010000 		.4byte	.LASF7
 1233 0068 04       		.uleb128 0x4
 1234 0069 04       		.byte	0x4
 1235 006a 05       		.byte	0x5
 1236 006b 696E7400 		.ascii	"int\000"
 1237 006f 02       		.uleb128 0x2
 1238 0070 04       		.byte	0x4
 1239 0071 07       		.byte	0x7
 1240 0072 A5010000 		.4byte	.LASF8
 1241 0076 03       		.uleb128 0x3
 1242 0077 21020000 		.4byte	.LASF10
 1243 007b 03       		.byte	0x3
 1244 007c 2C       		.byte	0x2c
 1245 007d 41000000 		.4byte	0x41
 1246 0081 05       		.uleb128 0x5
 1247 0082 FB000000 		.4byte	.LASF11
 1248 0086 04       		.byte	0x4
 1249 0087 9201     		.2byte	0x192
 1250 0089 2C000000 		.4byte	0x2c
 1251 008d 05       		.uleb128 0x5
 1252 008e 4A020000 		.4byte	.LASF12
 1253 0092 04       		.byte	0x4
 1254 0093 9301     		.2byte	0x193
 1255 0095 3A000000 		.4byte	0x3a
 1256 0099 05       		.uleb128 0x5
 1257 009a F5000000 		.4byte	.LASF13
 1258 009e 04       		.byte	0x4
 1259 009f 9601     		.2byte	0x196
 1260 00a1 33000000 		.4byte	0x33
 1261 00a5 02       		.uleb128 0x2
 1262 00a6 04       		.byte	0x4
 1263 00a7 04       		.byte	0x4
 1264 00a8 0D010000 		.4byte	.LASF14
 1265 00ac 02       		.uleb128 0x2
 1266 00ad 08       		.byte	0x8
 1267 00ae 04       		.byte	0x4
 1268 00af CD020000 		.4byte	.LASF15
 1269 00b3 02       		.uleb128 0x2
 1270 00b4 01       		.byte	0x1
 1271 00b5 08       		.byte	0x8
 1272 00b6 1C020000 		.4byte	.LASF16
 1273 00ba 05       		.uleb128 0x5
 1274 00bb 62020000 		.4byte	.LASF17
 1275 00bf 04       		.byte	0x4
 1276 00c0 3C02     		.2byte	0x23c
 1277 00c2 C6000000 		.4byte	0xc6
 1278 00c6 06       		.uleb128 0x6
 1279 00c7 81000000 		.4byte	0x81
 1280 00cb 02       		.uleb128 0x2
 1281 00cc 08       		.byte	0x8
 1282 00cd 04       		.byte	0x4
 1283 00ce 65010000 		.4byte	.LASF18
 1284 00d2 02       		.uleb128 0x2
 1285 00d3 04       		.byte	0x4
 1286 00d4 07       		.byte	0x7
 1287 00d5 34000000 		.4byte	.LASF19
 1288 00d9 07       		.uleb128 0x7
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccdG4o5x.s 			page 30


 1289 00da E1020000 		.4byte	.LASF55
 1290 00de 01       		.byte	0x1
 1291 00df 14       		.byte	0x14
 1292 00e0 8D000000 		.4byte	0x8d
 1293 00e4 00000000 		.4byte	.LFB64
 1294 00e8 74000000 		.4byte	.LFE64-.LFB64
 1295 00ec 01       		.uleb128 0x1
 1296 00ed 9C       		.byte	0x9c
 1297 00ee 0F010000 		.4byte	0x10f
 1298 00f2 08       		.uleb128 0x8
 1299 00f3 13000000 		.4byte	.LASF37
 1300 00f7 01       		.byte	0x1
 1301 00f8 14       		.byte	0x14
 1302 00f9 AC000000 		.4byte	0xac
 1303 00fd 02       		.uleb128 0x2
 1304 00fe 91       		.byte	0x91
 1305 00ff 60       		.sleb128 -32
 1306 0100 09       		.uleb128 0x9
 1307 0101 29020000 		.4byte	.LASF20
 1308 0105 01       		.byte	0x1
 1309 0106 16       		.byte	0x16
 1310 0107 8D000000 		.4byte	0x8d
 1311 010b 02       		.uleb128 0x2
 1312 010c 91       		.byte	0x91
 1313 010d 6E       		.sleb128 -18
 1314 010e 00       		.byte	0
 1315 010f 0A       		.uleb128 0xa
 1316 0110 AE020000 		.4byte	.LASF21
 1317 0114 01       		.byte	0x1
 1318 0115 43       		.byte	0x43
 1319 0116 00000000 		.4byte	.LFB65
 1320 011a F8000000 		.4byte	.LFE65-.LFB65
 1321 011e 01       		.uleb128 0x1
 1322 011f 9C       		.byte	0x9c
 1323 0120 85010000 		.4byte	0x185
 1324 0124 0B       		.uleb128 0xb
 1325 0125 06000000 		.4byte	.LBB2
 1326 0129 24000000 		.4byte	.LBE2-.LBB2
 1327 012d 3E010000 		.4byte	0x13e
 1328 0131 0C       		.uleb128 0xc
 1329 0132 6A00     		.ascii	"j\000"
 1330 0134 01       		.byte	0x1
 1331 0135 44       		.byte	0x44
 1332 0136 68000000 		.4byte	0x68
 1333 013a 02       		.uleb128 0x2
 1334 013b 91       		.byte	0x91
 1335 013c 74       		.sleb128 -12
 1336 013d 00       		.byte	0
 1337 013e 0B       		.uleb128 0xb
 1338 013f 40000000 		.4byte	.LBB3
 1339 0143 22000000 		.4byte	.LBE3-.LBB3
 1340 0147 58010000 		.4byte	0x158
 1341 014b 0C       		.uleb128 0xc
 1342 014c 6A00     		.ascii	"j\000"
 1343 014e 01       		.byte	0x1
 1344 014f 4C       		.byte	0x4c
 1345 0150 68000000 		.4byte	0x68
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccdG4o5x.s 			page 31


 1346 0154 02       		.uleb128 0x2
 1347 0155 91       		.byte	0x91
 1348 0156 70       		.sleb128 -16
 1349 0157 00       		.byte	0
 1350 0158 0D       		.uleb128 0xd
 1351 0159 62000000 		.4byte	.LBB4
 1352 015d 60000000 		.4byte	.LBE4-.LBB4
 1353 0161 0C       		.uleb128 0xc
 1354 0162 6900     		.ascii	"i\000"
 1355 0164 01       		.byte	0x1
 1356 0165 4F       		.byte	0x4f
 1357 0166 68000000 		.4byte	0x68
 1358 016a 02       		.uleb128 0x2
 1359 016b 91       		.byte	0x91
 1360 016c 6C       		.sleb128 -20
 1361 016d 0D       		.uleb128 0xd
 1362 016e 68000000 		.4byte	.LBB5
 1363 0172 4E000000 		.4byte	.LBE5-.LBB5
 1364 0176 0C       		.uleb128 0xc
 1365 0177 6A00     		.ascii	"j\000"
 1366 0179 01       		.byte	0x1
 1367 017a 50       		.byte	0x50
 1368 017b 68000000 		.4byte	0x68
 1369 017f 02       		.uleb128 0x2
 1370 0180 91       		.byte	0x91
 1371 0181 68       		.sleb128 -24
 1372 0182 00       		.byte	0
 1373 0183 00       		.byte	0
 1374 0184 00       		.byte	0
 1375 0185 0A       		.uleb128 0xa
 1376 0186 B7010000 		.4byte	.LASF22
 1377 018a 01       		.byte	0x1
 1378 018b 64       		.byte	0x64
 1379 018c 00000000 		.4byte	.LFB66
 1380 0190 A4020000 		.4byte	.LFE66-.LFB66
 1381 0194 01       		.uleb128 0x1
 1382 0195 9C       		.byte	0x9c
 1383 0196 CE010000 		.4byte	0x1ce
 1384 019a 09       		.uleb128 0x9
 1385 019b 71010000 		.4byte	.LASF23
 1386 019f 01       		.byte	0x1
 1387 01a0 66       		.byte	0x66
 1388 01a1 81000000 		.4byte	0x81
 1389 01a5 02       		.uleb128 0x2
 1390 01a6 91       		.byte	0x91
 1391 01a7 6B       		.sleb128 -21
 1392 01a8 09       		.uleb128 0x9
 1393 01a9 A7020000 		.4byte	.LASF24
 1394 01ad 01       		.byte	0x1
 1395 01ae 67       		.byte	0x67
 1396 01af 81000000 		.4byte	0x81
 1397 01b3 02       		.uleb128 0x2
 1398 01b4 91       		.byte	0x91
 1399 01b5 6A       		.sleb128 -22
 1400 01b6 0D       		.uleb128 0xd
 1401 01b7 A0000000 		.4byte	.LBB6
 1402 01bb 1C000000 		.4byte	.LBE6-.LBB6
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccdG4o5x.s 			page 32


 1403 01bf 0C       		.uleb128 0xc
 1404 01c0 707000   		.ascii	"pp\000"
 1405 01c3 01       		.byte	0x1
 1406 01c4 83       		.byte	0x83
 1407 01c5 68000000 		.4byte	0x68
 1408 01c9 02       		.uleb128 0x2
 1409 01ca 91       		.byte	0x91
 1410 01cb 6C       		.sleb128 -20
 1411 01cc 00       		.byte	0
 1412 01cd 00       		.byte	0
 1413 01ce 0E       		.uleb128 0xe
 1414 01cf CB000000 		.4byte	.LASF25
 1415 01d3 01       		.byte	0x1
 1416 01d4 E6       		.byte	0xe6
 1417 01d5 68000000 		.4byte	0x68
 1418 01d9 00000000 		.4byte	.LFB67
 1419 01dd F0020000 		.4byte	.LFE67-.LFB67
 1420 01e1 01       		.uleb128 0x1
 1421 01e2 9C       		.byte	0x9c
 1422 01e3 6A020000 		.4byte	0x26a
 1423 01e7 09       		.uleb128 0x9
 1424 01e8 37010000 		.4byte	.LASF26
 1425 01ec 01       		.byte	0x1
 1426 01ed F3       		.byte	0xf3
 1427 01ee 81000000 		.4byte	0x81
 1428 01f2 02       		.uleb128 0x2
 1429 01f3 91       		.byte	0x91
 1430 01f4 57       		.sleb128 -41
 1431 01f5 09       		.uleb128 0x9
 1432 01f6 FB020000 		.4byte	.LASF27
 1433 01fa 01       		.byte	0x1
 1434 01fb F4       		.byte	0xf4
 1435 01fc 81000000 		.4byte	0x81
 1436 0200 02       		.uleb128 0x2
 1437 0201 91       		.byte	0x91
 1438 0202 56       		.sleb128 -42
 1439 0203 0F       		.uleb128 0xf
 1440 0204 2A010000 		.4byte	.LASF56
 1441 0208 01       		.byte	0x1
 1442 0209 0301     		.2byte	0x103
 1443 020b 8D000000 		.4byte	0x8d
 1444 020f 10       		.uleb128 0x10
 1445 0210 64657200 		.ascii	"der\000"
 1446 0214 01       		.byte	0x1
 1447 0215 0401     		.2byte	0x104
 1448 0217 AC000000 		.4byte	0xac
 1449 021b 02       		.uleb128 0x2
 1450 021c 91       		.byte	0x91
 1451 021d 48       		.sleb128 -56
 1452 021e 11       		.uleb128 0x11
 1453 021f 0A000000 		.4byte	.LASF28
 1454 0223 01       		.byte	0x1
 1455 0224 0401     		.2byte	0x104
 1456 0226 AC000000 		.4byte	0xac
 1457 022a 02       		.uleb128 0x2
 1458 022b 91       		.byte	0x91
 1459 022c 68       		.sleb128 -24
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccdG4o5x.s 			page 33


 1460 022d 11       		.uleb128 0x11
 1461 022e 84020000 		.4byte	.LASF29
 1462 0232 01       		.byte	0x1
 1463 0233 0401     		.2byte	0x104
 1464 0235 AC000000 		.4byte	0xac
 1465 0239 02       		.uleb128 0x2
 1466 023a 91       		.byte	0x91
 1467 023b 60       		.sleb128 -32
 1468 023c 10       		.uleb128 0x10
 1469 023d 647400   		.ascii	"dt\000"
 1470 0240 01       		.byte	0x1
 1471 0241 0401     		.2byte	0x104
 1472 0243 AC000000 		.4byte	0xac
 1473 0247 02       		.uleb128 0x2
 1474 0248 91       		.byte	0x91
 1475 0249 58       		.sleb128 -40
 1476 024a 11       		.uleb128 0x11
 1477 024b B2010000 		.4byte	.LASF30
 1478 024f 01       		.byte	0x1
 1479 0250 0501     		.2byte	0x105
 1480 0252 AC000000 		.4byte	0xac
 1481 0256 02       		.uleb128 0x2
 1482 0257 91       		.byte	0x91
 1483 0258 40       		.sleb128 -64
 1484 0259 11       		.uleb128 0x11
 1485 025a 3F020000 		.4byte	.LASF31
 1486 025e 01       		.byte	0x1
 1487 025f 0C01     		.2byte	0x10c
 1488 0261 6A020000 		.4byte	0x26a
 1489 0265 03       		.uleb128 0x3
 1490 0266 91       		.byte	0x91
 1491 0267 B47F     		.sleb128 -76
 1492 0269 00       		.byte	0
 1493 026a 12       		.uleb128 0x12
 1494 026b 8D000000 		.4byte	0x8d
 1495 026f 7A020000 		.4byte	0x27a
 1496 0273 13       		.uleb128 0x13
 1497 0274 D2000000 		.4byte	0xd2
 1498 0278 04       		.byte	0x4
 1499 0279 00       		.byte	0
 1500 027a 14       		.uleb128 0x14
 1501 027b D4020000 		.4byte	.LASF32
 1502 027f 05       		.byte	0x5
 1503 0280 1207     		.2byte	0x712
 1504 0282 86020000 		.4byte	0x286
 1505 0286 06       		.uleb128 0x6
 1506 0287 76000000 		.4byte	0x76
 1507 028b 15       		.uleb128 0x15
 1508 028c 01010000 		.4byte	.LASF33
 1509 0290 01       		.byte	0x1
 1510 0291 12       		.byte	0x12
 1511 0292 81000000 		.4byte	0x81
 1512 0296 05       		.uleb128 0x5
 1513 0297 03       		.byte	0x3
 1514 0298 00000000 		.4byte	errorStatus
 1515 029c 15       		.uleb128 0x15
 1516 029d E0000000 		.4byte	.LASF34
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccdG4o5x.s 			page 34


 1517 02a1 01       		.byte	0x1
 1518 02a2 28       		.byte	0x28
 1519 02a3 68000000 		.4byte	0x68
 1520 02a7 05       		.uleb128 0x5
 1521 02a8 03       		.byte	0x3
 1522 02a9 00000000 		.4byte	data_read_mode
 1523 02ad 15       		.uleb128 0x15
 1524 02ae 00000000 		.4byte	.LASF35
 1525 02b2 01       		.byte	0x1
 1526 02b3 29       		.byte	0x29
 1527 02b4 BE020000 		.4byte	0x2be
 1528 02b8 05       		.uleb128 0x5
 1529 02b9 03       		.byte	0x3
 1530 02ba 00000000 		.4byte	new_angle
 1531 02be 06       		.uleb128 0x6
 1532 02bf 68000000 		.4byte	0x68
 1533 02c3 15       		.uleb128 0x15
 1534 02c4 19000000 		.4byte	.LASF36
 1535 02c8 01       		.byte	0x1
 1536 02c9 2A       		.byte	0x2a
 1537 02ca BE020000 		.4byte	0x2be
 1538 02ce 05       		.uleb128 0x5
 1539 02cf 03       		.byte	0x3
 1540 02d0 00000000 		.4byte	new_pos_set
 1541 02d4 15       		.uleb128 0x15
 1542 02d5 13000000 		.4byte	.LASF37
 1543 02d9 01       		.byte	0x1
 1544 02da 2B       		.byte	0x2b
 1545 02db AC000000 		.4byte	0xac
 1546 02df 05       		.uleb128 0x5
 1547 02e0 03       		.byte	0x3
 1548 02e1 00000000 		.4byte	angle
 1549 02e5 15       		.uleb128 0x15
 1550 02e6 35020000 		.4byte	.LASF38
 1551 02ea 01       		.byte	0x1
 1552 02eb 2C       		.byte	0x2c
 1553 02ec AC000000 		.4byte	0xac
 1554 02f0 05       		.uleb128 0x5
 1555 02f1 03       		.byte	0x3
 1556 02f2 00000000 		.4byte	angletemp
 1557 02f6 15       		.uleb128 0x15
 1558 02f7 EF000000 		.4byte	.LASF39
 1559 02fb 01       		.byte	0x1
 1560 02fc 2D       		.byte	0x2d
 1561 02fd 99000000 		.4byte	0x99
 1562 0301 05       		.uleb128 0x5
 1563 0302 03       		.byte	0x3
 1564 0303 00000000 		.4byte	pulse
 1565 0307 15       		.uleb128 0x15
 1566 0308 5A010000 		.4byte	.LASF40
 1567 030c 01       		.byte	0x1
 1568 030d 2E       		.byte	0x2e
 1569 030e 99000000 		.4byte	0x99
 1570 0312 05       		.uleb128 0x5
 1571 0313 03       		.byte	0x3
 1572 0314 00000000 		.4byte	pulse_temp
 1573 0318 15       		.uleb128 0x15
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccdG4o5x.s 			page 35


 1574 0319 79020000 		.4byte	.LASF41
 1575 031d 01       		.byte	0x1
 1576 031e 2F       		.byte	0x2f
 1577 031f 68000000 		.4byte	0x68
 1578 0323 05       		.uleb128 0x5
 1579 0324 03       		.byte	0x3
 1580 0325 00000000 		.4byte	isNegative
 1581 0329 12       		.uleb128 0x12
 1582 032a B3000000 		.4byte	0xb3
 1583 032e 39030000 		.4byte	0x339
 1584 0332 13       		.uleb128 0x13
 1585 0333 D2000000 		.4byte	0xd2
 1586 0337 63       		.byte	0x63
 1587 0338 00       		.byte	0
 1588 0339 15       		.uleb128 0x15
 1589 033a C3020000 		.4byte	.LASF42
 1590 033e 01       		.byte	0x1
 1591 033f 30       		.byte	0x30
 1592 0340 29030000 		.4byte	0x329
 1593 0344 05       		.uleb128 0x5
 1594 0345 03       		.byte	0x3
 1595 0346 00000000 		.4byte	sendValue
 1596 034a 15       		.uleb128 0x15
 1597 034b F1020000 		.4byte	.LASF43
 1598 034f 01       		.byte	0x1
 1599 0350 31       		.byte	0x31
 1600 0351 8D000000 		.4byte	0x8d
 1601 0355 05       		.uleb128 0x5
 1602 0356 03       		.byte	0x3
 1603 0357 00000000 		.4byte	adcValue1
 1604 035b 15       		.uleb128 0x15
 1605 035c 51020000 		.4byte	.LASF44
 1606 0360 01       		.byte	0x1
 1607 0361 32       		.byte	0x32
 1608 0362 8D000000 		.4byte	0x8d
 1609 0366 05       		.uleb128 0x5
 1610 0367 03       		.byte	0x3
 1611 0368 00000000 		.4byte	adcValue2
 1612 036c 12       		.uleb128 0x12
 1613 036d B3000000 		.4byte	0xb3
 1614 0371 7C030000 		.4byte	0x37c
 1615 0375 13       		.uleb128 0x13
 1616 0376 D2000000 		.4byte	0xd2
 1617 037a 13       		.byte	0x13
 1618 037b 00       		.byte	0
 1619 037c 15       		.uleb128 0x15
 1620 037d 25000000 		.4byte	.LASF45
 1621 0381 01       		.byte	0x1
 1622 0382 33       		.byte	0x33
 1623 0383 6C030000 		.4byte	0x36c
 1624 0387 05       		.uleb128 0x5
 1625 0388 03       		.byte	0x3
 1626 0389 00000000 		.4byte	temp
 1627 038d 16       		.uleb128 0x16
 1628 038e 6E6E00   		.ascii	"nn\000"
 1629 0391 01       		.byte	0x1
 1630 0392 34       		.byte	0x34
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccdG4o5x.s 			page 36


 1631 0393 68000000 		.4byte	0x68
 1632 0397 05       		.uleb128 0x5
 1633 0398 03       		.byte	0x3
 1634 0399 00000000 		.4byte	nn
 1635 039d 12       		.uleb128 0x12
 1636 039e AC000000 		.4byte	0xac
 1637 03a2 AD030000 		.4byte	0x3ad
 1638 03a6 13       		.uleb128 0x13
 1639 03a7 D2000000 		.4byte	0xd2
 1640 03ab 02       		.byte	0x2
 1641 03ac 00       		.byte	0
 1642 03ad 16       		.uleb128 0x16
 1643 03ae 70696400 		.ascii	"pid\000"
 1644 03b2 01       		.byte	0x1
 1645 03b3 35       		.byte	0x35
 1646 03b4 9D030000 		.4byte	0x39d
 1647 03b8 05       		.uleb128 0x5
 1648 03b9 03       		.byte	0x3
 1649 03ba 00000000 		.4byte	pid
 1650 03be 15       		.uleb128 0x15
 1651 03bf D0000000 		.4byte	.LASF46
 1652 03c3 01       		.byte	0x1
 1653 03c4 37       		.byte	0x37
 1654 03c5 29030000 		.4byte	0x329
 1655 03c9 05       		.uleb128 0x5
 1656 03ca 03       		.byte	0x3
 1657 03cb 00000000 		.4byte	help
 1658 03cf 16       		.uleb128 0x16
 1659 03d0 747400   		.ascii	"tt\000"
 1660 03d3 01       		.byte	0x1
 1661 03d4 38       		.byte	0x38
 1662 03d5 68000000 		.4byte	0x68
 1663 03d9 05       		.uleb128 0x5
 1664 03da 03       		.byte	0x3
 1665 03db 00000000 		.4byte	tt
 1666 03df 16       		.uleb128 0x16
 1667 03e0 706F7300 		.ascii	"pos\000"
 1668 03e4 01       		.byte	0x1
 1669 03e5 39       		.byte	0x39
 1670 03e6 68000000 		.4byte	0x68
 1671 03ea 05       		.uleb128 0x5
 1672 03eb 03       		.byte	0x3
 1673 03ec 00000000 		.4byte	pos
 1674 03f0 15       		.uleb128 0x15
 1675 03f1 7A010000 		.4byte	.LASF47
 1676 03f5 01       		.byte	0x1
 1677 03f6 3A       		.byte	0x3a
 1678 03f7 68000000 		.4byte	0x68
 1679 03fb 05       		.uleb128 0x5
 1680 03fc 03       		.byte	0x3
 1681 03fd 00000000 		.4byte	new_pos
 1682 0401 16       		.uleb128 0x16
 1683 0402 65727200 		.ascii	"err\000"
 1684 0406 01       		.byte	0x1
 1685 0407 3B       		.byte	0x3b
 1686 0408 AC000000 		.4byte	0xac
 1687 040c 05       		.uleb128 0x5
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccdG4o5x.s 			page 37


 1688 040d 03       		.byte	0x3
 1689 040e 00000000 		.4byte	err
 1690 0412 15       		.uleb128 0x15
 1691 0413 9B020000 		.4byte	.LASF48
 1692 0417 01       		.byte	0x1
 1693 0418 3C       		.byte	0x3c
 1694 0419 68000000 		.4byte	0x68
 1695 041d 05       		.uleb128 0x5
 1696 041e 03       		.byte	0x3
 1697 041f 00000000 		.4byte	start_calib
 1698 0423 12       		.uleb128 0x12
 1699 0424 8D000000 		.4byte	0x8d
 1700 0428 33040000 		.4byte	0x433
 1701 042c 13       		.uleb128 0x13
 1702 042d D2000000 		.4byte	0xd2
 1703 0431 06       		.byte	0x6
 1704 0432 00       		.byte	0
 1705 0433 15       		.uleb128 0x15
 1706 0434 4C010000 		.4byte	.LASF49
 1707 0438 01       		.byte	0x1
 1708 0439 3F       		.byte	0x3f
 1709 043a 23040000 		.4byte	0x423
 1710 043e 05       		.uleb128 0x5
 1711 043f 03       		.byte	0x3
 1712 0440 00000000 		.4byte	moving_median
 1713 0444 15       		.uleb128 0x15
 1714 0445 B9020000 		.4byte	.LASF50
 1715 0449 01       		.byte	0x1
 1716 044a 40       		.byte	0x40
 1717 044b 23040000 		.4byte	0x423
 1718 044f 05       		.uleb128 0x5
 1719 0450 03       		.byte	0x3
 1720 0451 00000000 		.4byte	tempArray
 1721 0455 16       		.uleb128 0x16
 1722 0456 746D7000 		.ascii	"tmp\000"
 1723 045a 01       		.byte	0x1
 1724 045b 41       		.byte	0x41
 1725 045c 8D000000 		.4byte	0x8d
 1726 0460 05       		.uleb128 0x5
 1727 0461 03       		.byte	0x3
 1728 0462 00000000 		.4byte	tmp
 1729 0466 15       		.uleb128 0x15
 1730 0467 D5000000 		.4byte	.LASF51
 1731 046b 01       		.byte	0x1
 1732 046c E5       		.byte	0xe5
 1733 046d 68000000 		.4byte	0x68
 1734 0471 05       		.uleb128 0x5
 1735 0472 03       		.byte	0x3
 1736 0473 00000000 		.4byte	led_switch
 1737 0477 00       		.byte	0
 1738              		.section	.debug_abbrev,"",%progbits
 1739              	.Ldebug_abbrev0:
 1740 0000 01       		.uleb128 0x1
 1741 0001 11       		.uleb128 0x11
 1742 0002 01       		.byte	0x1
 1743 0003 25       		.uleb128 0x25
 1744 0004 0E       		.uleb128 0xe
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccdG4o5x.s 			page 38


 1745 0005 13       		.uleb128 0x13
 1746 0006 0B       		.uleb128 0xb
 1747 0007 03       		.uleb128 0x3
 1748 0008 0E       		.uleb128 0xe
 1749 0009 1B       		.uleb128 0x1b
 1750 000a 0E       		.uleb128 0xe
 1751 000b 55       		.uleb128 0x55
 1752 000c 17       		.uleb128 0x17
 1753 000d 11       		.uleb128 0x11
 1754 000e 01       		.uleb128 0x1
 1755 000f 10       		.uleb128 0x10
 1756 0010 17       		.uleb128 0x17
 1757 0011 00       		.byte	0
 1758 0012 00       		.byte	0
 1759 0013 02       		.uleb128 0x2
 1760 0014 24       		.uleb128 0x24
 1761 0015 00       		.byte	0
 1762 0016 0B       		.uleb128 0xb
 1763 0017 0B       		.uleb128 0xb
 1764 0018 3E       		.uleb128 0x3e
 1765 0019 0B       		.uleb128 0xb
 1766 001a 03       		.uleb128 0x3
 1767 001b 0E       		.uleb128 0xe
 1768 001c 00       		.byte	0
 1769 001d 00       		.byte	0
 1770 001e 03       		.uleb128 0x3
 1771 001f 16       		.uleb128 0x16
 1772 0020 00       		.byte	0
 1773 0021 03       		.uleb128 0x3
 1774 0022 0E       		.uleb128 0xe
 1775 0023 3A       		.uleb128 0x3a
 1776 0024 0B       		.uleb128 0xb
 1777 0025 3B       		.uleb128 0x3b
 1778 0026 0B       		.uleb128 0xb
 1779 0027 49       		.uleb128 0x49
 1780 0028 13       		.uleb128 0x13
 1781 0029 00       		.byte	0
 1782 002a 00       		.byte	0
 1783 002b 04       		.uleb128 0x4
 1784 002c 24       		.uleb128 0x24
 1785 002d 00       		.byte	0
 1786 002e 0B       		.uleb128 0xb
 1787 002f 0B       		.uleb128 0xb
 1788 0030 3E       		.uleb128 0x3e
 1789 0031 0B       		.uleb128 0xb
 1790 0032 03       		.uleb128 0x3
 1791 0033 08       		.uleb128 0x8
 1792 0034 00       		.byte	0
 1793 0035 00       		.byte	0
 1794 0036 05       		.uleb128 0x5
 1795 0037 16       		.uleb128 0x16
 1796 0038 00       		.byte	0
 1797 0039 03       		.uleb128 0x3
 1798 003a 0E       		.uleb128 0xe
 1799 003b 3A       		.uleb128 0x3a
 1800 003c 0B       		.uleb128 0xb
 1801 003d 3B       		.uleb128 0x3b
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccdG4o5x.s 			page 39


 1802 003e 05       		.uleb128 0x5
 1803 003f 49       		.uleb128 0x49
 1804 0040 13       		.uleb128 0x13
 1805 0041 00       		.byte	0
 1806 0042 00       		.byte	0
 1807 0043 06       		.uleb128 0x6
 1808 0044 35       		.uleb128 0x35
 1809 0045 00       		.byte	0
 1810 0046 49       		.uleb128 0x49
 1811 0047 13       		.uleb128 0x13
 1812 0048 00       		.byte	0
 1813 0049 00       		.byte	0
 1814 004a 07       		.uleb128 0x7
 1815 004b 2E       		.uleb128 0x2e
 1816 004c 01       		.byte	0x1
 1817 004d 3F       		.uleb128 0x3f
 1818 004e 19       		.uleb128 0x19
 1819 004f 03       		.uleb128 0x3
 1820 0050 0E       		.uleb128 0xe
 1821 0051 3A       		.uleb128 0x3a
 1822 0052 0B       		.uleb128 0xb
 1823 0053 3B       		.uleb128 0x3b
 1824 0054 0B       		.uleb128 0xb
 1825 0055 27       		.uleb128 0x27
 1826 0056 19       		.uleb128 0x19
 1827 0057 49       		.uleb128 0x49
 1828 0058 13       		.uleb128 0x13
 1829 0059 11       		.uleb128 0x11
 1830 005a 01       		.uleb128 0x1
 1831 005b 12       		.uleb128 0x12
 1832 005c 06       		.uleb128 0x6
 1833 005d 40       		.uleb128 0x40
 1834 005e 18       		.uleb128 0x18
 1835 005f 9642     		.uleb128 0x2116
 1836 0061 19       		.uleb128 0x19
 1837 0062 01       		.uleb128 0x1
 1838 0063 13       		.uleb128 0x13
 1839 0064 00       		.byte	0
 1840 0065 00       		.byte	0
 1841 0066 08       		.uleb128 0x8
 1842 0067 05       		.uleb128 0x5
 1843 0068 00       		.byte	0
 1844 0069 03       		.uleb128 0x3
 1845 006a 0E       		.uleb128 0xe
 1846 006b 3A       		.uleb128 0x3a
 1847 006c 0B       		.uleb128 0xb
 1848 006d 3B       		.uleb128 0x3b
 1849 006e 0B       		.uleb128 0xb
 1850 006f 49       		.uleb128 0x49
 1851 0070 13       		.uleb128 0x13
 1852 0071 02       		.uleb128 0x2
 1853 0072 18       		.uleb128 0x18
 1854 0073 00       		.byte	0
 1855 0074 00       		.byte	0
 1856 0075 09       		.uleb128 0x9
 1857 0076 34       		.uleb128 0x34
 1858 0077 00       		.byte	0
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccdG4o5x.s 			page 40


 1859 0078 03       		.uleb128 0x3
 1860 0079 0E       		.uleb128 0xe
 1861 007a 3A       		.uleb128 0x3a
 1862 007b 0B       		.uleb128 0xb
 1863 007c 3B       		.uleb128 0x3b
 1864 007d 0B       		.uleb128 0xb
 1865 007e 49       		.uleb128 0x49
 1866 007f 13       		.uleb128 0x13
 1867 0080 02       		.uleb128 0x2
 1868 0081 18       		.uleb128 0x18
 1869 0082 00       		.byte	0
 1870 0083 00       		.byte	0
 1871 0084 0A       		.uleb128 0xa
 1872 0085 2E       		.uleb128 0x2e
 1873 0086 01       		.byte	0x1
 1874 0087 3F       		.uleb128 0x3f
 1875 0088 19       		.uleb128 0x19
 1876 0089 03       		.uleb128 0x3
 1877 008a 0E       		.uleb128 0xe
 1878 008b 3A       		.uleb128 0x3a
 1879 008c 0B       		.uleb128 0xb
 1880 008d 3B       		.uleb128 0x3b
 1881 008e 0B       		.uleb128 0xb
 1882 008f 27       		.uleb128 0x27
 1883 0090 19       		.uleb128 0x19
 1884 0091 11       		.uleb128 0x11
 1885 0092 01       		.uleb128 0x1
 1886 0093 12       		.uleb128 0x12
 1887 0094 06       		.uleb128 0x6
 1888 0095 40       		.uleb128 0x40
 1889 0096 18       		.uleb128 0x18
 1890 0097 9642     		.uleb128 0x2116
 1891 0099 19       		.uleb128 0x19
 1892 009a 01       		.uleb128 0x1
 1893 009b 13       		.uleb128 0x13
 1894 009c 00       		.byte	0
 1895 009d 00       		.byte	0
 1896 009e 0B       		.uleb128 0xb
 1897 009f 0B       		.uleb128 0xb
 1898 00a0 01       		.byte	0x1
 1899 00a1 11       		.uleb128 0x11
 1900 00a2 01       		.uleb128 0x1
 1901 00a3 12       		.uleb128 0x12
 1902 00a4 06       		.uleb128 0x6
 1903 00a5 01       		.uleb128 0x1
 1904 00a6 13       		.uleb128 0x13
 1905 00a7 00       		.byte	0
 1906 00a8 00       		.byte	0
 1907 00a9 0C       		.uleb128 0xc
 1908 00aa 34       		.uleb128 0x34
 1909 00ab 00       		.byte	0
 1910 00ac 03       		.uleb128 0x3
 1911 00ad 08       		.uleb128 0x8
 1912 00ae 3A       		.uleb128 0x3a
 1913 00af 0B       		.uleb128 0xb
 1914 00b0 3B       		.uleb128 0x3b
 1915 00b1 0B       		.uleb128 0xb
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccdG4o5x.s 			page 41


 1916 00b2 49       		.uleb128 0x49
 1917 00b3 13       		.uleb128 0x13
 1918 00b4 02       		.uleb128 0x2
 1919 00b5 18       		.uleb128 0x18
 1920 00b6 00       		.byte	0
 1921 00b7 00       		.byte	0
 1922 00b8 0D       		.uleb128 0xd
 1923 00b9 0B       		.uleb128 0xb
 1924 00ba 01       		.byte	0x1
 1925 00bb 11       		.uleb128 0x11
 1926 00bc 01       		.uleb128 0x1
 1927 00bd 12       		.uleb128 0x12
 1928 00be 06       		.uleb128 0x6
 1929 00bf 00       		.byte	0
 1930 00c0 00       		.byte	0
 1931 00c1 0E       		.uleb128 0xe
 1932 00c2 2E       		.uleb128 0x2e
 1933 00c3 01       		.byte	0x1
 1934 00c4 3F       		.uleb128 0x3f
 1935 00c5 19       		.uleb128 0x19
 1936 00c6 03       		.uleb128 0x3
 1937 00c7 0E       		.uleb128 0xe
 1938 00c8 3A       		.uleb128 0x3a
 1939 00c9 0B       		.uleb128 0xb
 1940 00ca 3B       		.uleb128 0x3b
 1941 00cb 0B       		.uleb128 0xb
 1942 00cc 49       		.uleb128 0x49
 1943 00cd 13       		.uleb128 0x13
 1944 00ce 11       		.uleb128 0x11
 1945 00cf 01       		.uleb128 0x1
 1946 00d0 12       		.uleb128 0x12
 1947 00d1 06       		.uleb128 0x6
 1948 00d2 40       		.uleb128 0x40
 1949 00d3 18       		.uleb128 0x18
 1950 00d4 9642     		.uleb128 0x2116
 1951 00d6 19       		.uleb128 0x19
 1952 00d7 01       		.uleb128 0x1
 1953 00d8 13       		.uleb128 0x13
 1954 00d9 00       		.byte	0
 1955 00da 00       		.byte	0
 1956 00db 0F       		.uleb128 0xf
 1957 00dc 34       		.uleb128 0x34
 1958 00dd 00       		.byte	0
 1959 00de 03       		.uleb128 0x3
 1960 00df 0E       		.uleb128 0xe
 1961 00e0 3A       		.uleb128 0x3a
 1962 00e1 0B       		.uleb128 0xb
 1963 00e2 3B       		.uleb128 0x3b
 1964 00e3 05       		.uleb128 0x5
 1965 00e4 49       		.uleb128 0x49
 1966 00e5 13       		.uleb128 0x13
 1967 00e6 00       		.byte	0
 1968 00e7 00       		.byte	0
 1969 00e8 10       		.uleb128 0x10
 1970 00e9 34       		.uleb128 0x34
 1971 00ea 00       		.byte	0
 1972 00eb 03       		.uleb128 0x3
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccdG4o5x.s 			page 42


 1973 00ec 08       		.uleb128 0x8
 1974 00ed 3A       		.uleb128 0x3a
 1975 00ee 0B       		.uleb128 0xb
 1976 00ef 3B       		.uleb128 0x3b
 1977 00f0 05       		.uleb128 0x5
 1978 00f1 49       		.uleb128 0x49
 1979 00f2 13       		.uleb128 0x13
 1980 00f3 02       		.uleb128 0x2
 1981 00f4 18       		.uleb128 0x18
 1982 00f5 00       		.byte	0
 1983 00f6 00       		.byte	0
 1984 00f7 11       		.uleb128 0x11
 1985 00f8 34       		.uleb128 0x34
 1986 00f9 00       		.byte	0
 1987 00fa 03       		.uleb128 0x3
 1988 00fb 0E       		.uleb128 0xe
 1989 00fc 3A       		.uleb128 0x3a
 1990 00fd 0B       		.uleb128 0xb
 1991 00fe 3B       		.uleb128 0x3b
 1992 00ff 05       		.uleb128 0x5
 1993 0100 49       		.uleb128 0x49
 1994 0101 13       		.uleb128 0x13
 1995 0102 02       		.uleb128 0x2
 1996 0103 18       		.uleb128 0x18
 1997 0104 00       		.byte	0
 1998 0105 00       		.byte	0
 1999 0106 12       		.uleb128 0x12
 2000 0107 01       		.uleb128 0x1
 2001 0108 01       		.byte	0x1
 2002 0109 49       		.uleb128 0x49
 2003 010a 13       		.uleb128 0x13
 2004 010b 01       		.uleb128 0x1
 2005 010c 13       		.uleb128 0x13
 2006 010d 00       		.byte	0
 2007 010e 00       		.byte	0
 2008 010f 13       		.uleb128 0x13
 2009 0110 21       		.uleb128 0x21
 2010 0111 00       		.byte	0
 2011 0112 49       		.uleb128 0x49
 2012 0113 13       		.uleb128 0x13
 2013 0114 2F       		.uleb128 0x2f
 2014 0115 0B       		.uleb128 0xb
 2015 0116 00       		.byte	0
 2016 0117 00       		.byte	0
 2017 0118 14       		.uleb128 0x14
 2018 0119 34       		.uleb128 0x34
 2019 011a 00       		.byte	0
 2020 011b 03       		.uleb128 0x3
 2021 011c 0E       		.uleb128 0xe
 2022 011d 3A       		.uleb128 0x3a
 2023 011e 0B       		.uleb128 0xb
 2024 011f 3B       		.uleb128 0x3b
 2025 0120 05       		.uleb128 0x5
 2026 0121 49       		.uleb128 0x49
 2027 0122 13       		.uleb128 0x13
 2028 0123 3F       		.uleb128 0x3f
 2029 0124 19       		.uleb128 0x19
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccdG4o5x.s 			page 43


 2030 0125 3C       		.uleb128 0x3c
 2031 0126 19       		.uleb128 0x19
 2032 0127 00       		.byte	0
 2033 0128 00       		.byte	0
 2034 0129 15       		.uleb128 0x15
 2035 012a 34       		.uleb128 0x34
 2036 012b 00       		.byte	0
 2037 012c 03       		.uleb128 0x3
 2038 012d 0E       		.uleb128 0xe
 2039 012e 3A       		.uleb128 0x3a
 2040 012f 0B       		.uleb128 0xb
 2041 0130 3B       		.uleb128 0x3b
 2042 0131 0B       		.uleb128 0xb
 2043 0132 49       		.uleb128 0x49
 2044 0133 13       		.uleb128 0x13
 2045 0134 3F       		.uleb128 0x3f
 2046 0135 19       		.uleb128 0x19
 2047 0136 02       		.uleb128 0x2
 2048 0137 18       		.uleb128 0x18
 2049 0138 00       		.byte	0
 2050 0139 00       		.byte	0
 2051 013a 16       		.uleb128 0x16
 2052 013b 34       		.uleb128 0x34
 2053 013c 00       		.byte	0
 2054 013d 03       		.uleb128 0x3
 2055 013e 08       		.uleb128 0x8
 2056 013f 3A       		.uleb128 0x3a
 2057 0140 0B       		.uleb128 0xb
 2058 0141 3B       		.uleb128 0x3b
 2059 0142 0B       		.uleb128 0xb
 2060 0143 49       		.uleb128 0x49
 2061 0144 13       		.uleb128 0x13
 2062 0145 3F       		.uleb128 0x3f
 2063 0146 19       		.uleb128 0x19
 2064 0147 02       		.uleb128 0x2
 2065 0148 18       		.uleb128 0x18
 2066 0149 00       		.byte	0
 2067 014a 00       		.byte	0
 2068 014b 00       		.byte	0
 2069              		.section	.debug_aranges,"",%progbits
 2070 0000 34000000 		.4byte	0x34
 2071 0004 0200     		.2byte	0x2
 2072 0006 00000000 		.4byte	.Ldebug_info0
 2073 000a 04       		.byte	0x4
 2074 000b 00       		.byte	0
 2075 000c 0000     		.2byte	0
 2076 000e 0000     		.2byte	0
 2077 0010 00000000 		.4byte	.LFB64
 2078 0014 74000000 		.4byte	.LFE64-.LFB64
 2079 0018 00000000 		.4byte	.LFB65
 2080 001c F8000000 		.4byte	.LFE65-.LFB65
 2081 0020 00000000 		.4byte	.LFB66
 2082 0024 A4020000 		.4byte	.LFE66-.LFB66
 2083 0028 00000000 		.4byte	.LFB67
 2084 002c F0020000 		.4byte	.LFE67-.LFB67
 2085 0030 00000000 		.4byte	0
 2086 0034 00000000 		.4byte	0
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccdG4o5x.s 			page 44


 2087              		.section	.debug_ranges,"",%progbits
 2088              	.Ldebug_ranges0:
 2089 0000 00000000 		.4byte	.LFB64
 2090 0004 74000000 		.4byte	.LFE64
 2091 0008 00000000 		.4byte	.LFB65
 2092 000c F8000000 		.4byte	.LFE65
 2093 0010 00000000 		.4byte	.LFB66
 2094 0014 A4020000 		.4byte	.LFE66
 2095 0018 00000000 		.4byte	.LFB67
 2096 001c F0020000 		.4byte	.LFE67
 2097 0020 00000000 		.4byte	0
 2098 0024 00000000 		.4byte	0
 2099              		.section	.debug_line,"",%progbits
 2100              	.Ldebug_line0:
 2101 0000 AF020000 		.section	.debug_str,"MS",%progbits,1
 2101      02004C01 
 2101      00000201 
 2101      FB0E0D00 
 2101      01010101 
 2102              	.LASF35:
 2103 0000 6E65775F 		.ascii	"new_angle\000"
 2103      616E676C 
 2103      6500
 2104              	.LASF28:
 2105 000a 70726576 		.ascii	"prev_err\000"
 2105      5F657272 
 2105      00
 2106              	.LASF37:
 2107 0013 616E676C 		.ascii	"angle\000"
 2107      6500
 2108              	.LASF36:
 2109 0019 6E65775F 		.ascii	"new_pos_set\000"
 2109      706F735F 
 2109      73657400 
 2110              	.LASF45:
 2111 0025 74656D70 		.ascii	"temp\000"
 2111      00
 2112              	.LASF2:
 2113 002a 73686F72 		.ascii	"short int\000"
 2113      7420696E 
 2113      7400
 2114              	.LASF19:
 2115 0034 73697A65 		.ascii	"sizetype\000"
 2115      74797065 
 2115      00
 2116              	.LASF52:
 2117 003d 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 2117      43313120 
 2117      352E342E 
 2117      31203230 
 2117      31363036 
 2118 0070 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 2118      20726576 
 2118      6973696F 
 2118      6E203233 
 2118      37373135 
 2119 00a3 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccdG4o5x.s 			page 45


 2119      66756E63 
 2119      74696F6E 
 2119      2D736563 
 2119      74696F6E 
 2120              	.LASF25:
 2121 00cb 6D61696E 		.ascii	"main\000"
 2121      00
 2122              	.LASF46:
 2123 00d0 68656C70 		.ascii	"help\000"
 2123      00
 2124              	.LASF51:
 2125 00d5 6C65645F 		.ascii	"led_switch\000"
 2125      73776974 
 2125      636800
 2126              	.LASF34:
 2127 00e0 64617461 		.ascii	"data_read_mode\000"
 2127      5F726561 
 2127      645F6D6F 
 2127      646500
 2128              	.LASF39:
 2129 00ef 70756C73 		.ascii	"pulse\000"
 2129      6500
 2130              	.LASF13:
 2131 00f5 696E7431 		.ascii	"int16\000"
 2131      3600
 2132              	.LASF11:
 2133 00fb 75696E74 		.ascii	"uint8\000"
 2133      3800
 2134              	.LASF33:
 2135 0101 6572726F 		.ascii	"errorStatus\000"
 2135      72537461 
 2135      74757300 
 2136              	.LASF14:
 2137 010d 666C6F61 		.ascii	"float\000"
 2137      7400
 2138              	.LASF6:
 2139 0113 6C6F6E67 		.ascii	"long long int\000"
 2139      206C6F6E 
 2139      6720696E 
 2139      7400
 2140              	.LASF4:
 2141 0121 6C6F6E67 		.ascii	"long int\000"
 2141      20696E74 
 2141      00
 2142              	.LASF56:
 2143 012a 74696D65 		.ascii	"timercapture\000"
 2143      72636170 
 2143      74757265 
 2143      00
 2144              	.LASF26:
 2145 0137 62757474 		.ascii	"button\000"
 2145      6F6E00
 2146              	.LASF1:
 2147 013e 756E7369 		.ascii	"unsigned char\000"
 2147      676E6564 
 2147      20636861 
 2147      7200
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccdG4o5x.s 			page 46


 2148              	.LASF49:
 2149 014c 6D6F7669 		.ascii	"moving_median\000"
 2149      6E675F6D 
 2149      65646961 
 2149      6E00
 2150              	.LASF40:
 2151 015a 70756C73 		.ascii	"pulse_temp\000"
 2151      655F7465 
 2151      6D7000
 2152              	.LASF18:
 2153 0165 6C6F6E67 		.ascii	"long double\000"
 2153      20646F75 
 2153      626C6500 
 2154              	.LASF23:
 2155 0171 72785374 		.ascii	"rxStatus\000"
 2155      61747573 
 2155      00
 2156              	.LASF47:
 2157 017a 6E65775F 		.ascii	"new_pos\000"
 2157      706F7300 
 2158              	.LASF0:
 2159 0182 7369676E 		.ascii	"signed char\000"
 2159      65642063 
 2159      68617200 
 2160              	.LASF7:
 2161 018e 6C6F6E67 		.ascii	"long long unsigned int\000"
 2161      206C6F6E 
 2161      6720756E 
 2161      7369676E 
 2161      65642069 
 2162              	.LASF8:
 2163 01a5 756E7369 		.ascii	"unsigned int\000"
 2163      676E6564 
 2163      20696E74 
 2163      00
 2164              	.LASF30:
 2165 01b2 74696D65 		.ascii	"time\000"
 2165      00
 2166              	.LASF22:
 2167 01b7 52784973 		.ascii	"RxIsr\000"
 2167      7200
 2168              	.LASF3:
 2169 01bd 73686F72 		.ascii	"short unsigned int\000"
 2169      7420756E 
 2169      7369676E 
 2169      65642069 
 2169      6E7400
 2170              	.LASF54:
 2171 01d0 433A5C55 		.ascii	"C:\\Users\\Andrew\\Documents\\GitHub\\Hydraulic-Mim"
 2171      73657273 
 2171      5C416E64 
 2171      7265775C 
 2171      446F6375 
 2172 01fe 69632D41 		.ascii	"ic-Arm\\PSOC_arm_project.cydsn\000"
 2172      726D5C50 
 2172      534F435F 
 2172      61726D5F 
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccdG4o5x.s 			page 47


 2172      70726F6A 
 2173              	.LASF16:
 2174 021c 63686172 		.ascii	"char\000"
 2174      00
 2175              	.LASF10:
 2176 0221 696E7433 		.ascii	"int32_t\000"
 2176      325F7400 
 2177              	.LASF20:
 2178 0229 70756C73 		.ascii	"pulselength\000"
 2178      656C656E 
 2178      67746800 
 2179              	.LASF38:
 2180 0235 616E676C 		.ascii	"angletemp\000"
 2180      6574656D 
 2180      7000
 2181              	.LASF31:
 2182 023f 6D6F7669 		.ascii	"moving_avg\000"
 2182      6E675F61 
 2182      766700
 2183              	.LASF12:
 2184 024a 75696E74 		.ascii	"uint16\000"
 2184      313600
 2185              	.LASF44:
 2186 0251 61646356 		.ascii	"adcValue2\000"
 2186      616C7565 
 2186      3200
 2187              	.LASF53:
 2188 025b 6D61696E 		.ascii	"main.c\000"
 2188      2E6300
 2189              	.LASF17:
 2190 0262 72656738 		.ascii	"reg8\000"
 2190      00
 2191              	.LASF5:
 2192 0267 6C6F6E67 		.ascii	"long unsigned int\000"
 2192      20756E73 
 2192      69676E65 
 2192      6420696E 
 2192      7400
 2193              	.LASF41:
 2194 0279 69734E65 		.ascii	"isNegative\000"
 2194      67617469 
 2194      766500
 2195              	.LASF29:
 2196 0284 7069645F 		.ascii	"pid_integral\000"
 2196      696E7465 
 2196      6772616C 
 2196      00
 2197              	.LASF9:
 2198 0291 5F5F696E 		.ascii	"__int32_t\000"
 2198      7433325F 
 2198      7400
 2199              	.LASF48:
 2200 029b 73746172 		.ascii	"start_calib\000"
 2200      745F6361 
 2200      6C696200 
 2201              	.LASF24:
 2202 02a7 72784461 		.ascii	"rxData\000"
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccdG4o5x.s 			page 48


 2202      746100
 2203              	.LASF21:
 2204 02ae 6164635F 		.ascii	"adc_update\000"
 2204      75706461 
 2204      746500
 2205              	.LASF50:
 2206 02b9 74656D70 		.ascii	"tempArray\000"
 2206      41727261 
 2206      7900
 2207              	.LASF42:
 2208 02c3 73656E64 		.ascii	"sendValue\000"
 2208      56616C75 
 2208      6500
 2209              	.LASF15:
 2210 02cd 646F7562 		.ascii	"double\000"
 2210      6C6500
 2211              	.LASF32:
 2212 02d4 49544D5F 		.ascii	"ITM_RxBuffer\000"
 2212      52784275 
 2212      66666572 
 2212      00
 2213              	.LASF55:
 2214 02e1 64757479 		.ascii	"dutycyclelength\000"
 2214      6379636C 
 2214      656C656E 
 2214      67746800 
 2215              	.LASF43:
 2216 02f1 61646356 		.ascii	"adcValue1\000"
 2216      616C7565 
 2216      3100
 2217              	.LASF27:
 2218 02fb 62757474 		.ascii	"buttonPre\000"
 2218      6F6E5072 
 2218      6500
 2219              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
